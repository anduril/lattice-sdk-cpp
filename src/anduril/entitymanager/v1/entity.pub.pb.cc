// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/entity.pub.proto

#include "anduril/entitymanager/v1/entity.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {
      template <typename>
PROTOBUF_CONSTEXPR TeamStatus::TeamStatus(::_pbi::ConstantInitialized) {}
struct TeamStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TeamStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TeamStatusDefaultTypeInternal() {}
  union {
    TeamStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TeamStatusDefaultTypeInternal _TeamStatus_default_instance_;

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : platform_activity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        role_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;

inline constexpr OriginalData_TLE::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : line1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        line2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OriginalData_TLE::OriginalData_TLE(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OriginalData_TLEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OriginalData_TLEDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OriginalData_TLEDefaultTypeInternal() {}
  union {
    OriginalData_TLE _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OriginalData_TLEDefaultTypeInternal _OriginalData_TLE_default_instance_;

inline constexpr AlternateId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::anduril::entitymanager::v1::AltIdType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AlternateId::AlternateId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AlternateIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlternateIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlternateIdDefaultTypeInternal() {}
  union {
    AlternateId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlternateIdDefaultTypeInternal _AlternateId_default_instance_;

inline constexpr RangeRings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_distance_m_{nullptr},
        max_distance_m_{nullptr},
        ring_count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RangeRings::RangeRings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RangeRingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeRingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeRingsDefaultTypeInternal() {}
  union {
    RangeRings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeRingsDefaultTypeInternal _RangeRings_default_instance_;

inline constexpr Provenance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        integration_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_update_time_{nullptr},
        source_{static_cast< ::anduril::entitymanager::v1::Source >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Provenance::Provenance(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProvenanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProvenanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProvenanceDefaultTypeInternal() {}
  union {
    Provenance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProvenanceDefaultTypeInternal _Provenance_default_instance_;

inline constexpr OriginalData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tle_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OriginalData::OriginalData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OriginalDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OriginalDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OriginalDataDefaultTypeInternal() {}
  union {
    OriginalData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OriginalDataDefaultTypeInternal _OriginalData_default_instance_;

inline constexpr Indicators::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        simulated_{nullptr},
        exercise_{nullptr},
        emergency_{nullptr},
        c2_{nullptr},
        egressable_{nullptr},
        starred_{nullptr},
        deletable_{static_cast< ::anduril::entitymanager::v1::Deletable >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Indicators::Indicators(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IndicatorsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndicatorsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndicatorsDefaultTypeInternal() {}
  union {
    Indicators _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndicatorsDefaultTypeInternal _Indicators_default_instance_;

inline constexpr Aliases::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alternate_ids_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Aliases::Aliases(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AliasesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AliasesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AliasesDefaultTypeInternal() {}
  union {
    Aliases _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AliasesDefaultTypeInternal _Aliases_default_instance_;

inline constexpr VisualDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        range_rings_{nullptr},
        interactivity_mode_{static_cast< ::anduril::entitymanager::v1::InteractivityMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR VisualDetails::VisualDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisualDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisualDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisualDetailsDefaultTypeInternal() {}
  union {
    VisualDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisualDetailsDefaultTypeInternal _VisualDetails_default_instance_;

inline constexpr OverrideProvenance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        field_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        provenance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OverrideProvenance::OverrideProvenance(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OverrideProvenanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OverrideProvenanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OverrideProvenanceDefaultTypeInternal() {}
  union {
    OverrideProvenance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OverrideProvenanceDefaultTypeInternal _OverrideProvenance_default_instance_;

inline constexpr Tracked::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        track_quality_wrapper_{nullptr},
        sensor_hits_{nullptr},
        number_of_objects_{nullptr},
        sensor_details_{nullptr},
        radar_cross_section_{nullptr},
        last_measurement_time_{nullptr},
        line_of_bearing_{nullptr},
        track_quality_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Tracked::Tracked(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackedDefaultTypeInternal() {}
  union {
    Tracked _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackedDefaultTypeInternal _Tracked_default_instance_;

inline constexpr Entity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_time_{nullptr},
        expiry_time_{nullptr},
        location_{nullptr},
        aliases_{nullptr},
        tracked_{nullptr},
        correlated_{nullptr},
        mil_view_{nullptr},
        ontology_{nullptr},
        provenance_{nullptr},
        overrides_{nullptr},
        indicators_{nullptr},
        location_uncertainty_{nullptr},
        geopolygon_{nullptr},
        original_data_{nullptr},
        status_{nullptr},
        sensors_{nullptr},
        payloads_{nullptr},
        target_priority_{nullptr},
        geo_shape_{nullptr},
        geo_details_{nullptr},
        signal_{nullptr},
        transponder_codes_{nullptr},
        contact_{nullptr},
        data_classification_{nullptr},
        power_state_{nullptr},
        task_catalog_{nullptr},
        media_{nullptr},
        relationships_{nullptr},
        visual_details_{nullptr},
        prototype_extensions_{nullptr},
        dimensions_{nullptr},
        route_details_{nullptr},
        schedules_{nullptr},
        health_{nullptr},
        group_details_{nullptr},
        team_status_{nullptr},
        supplies_{nullptr},
        is_live_{false},
        no_expiry_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Entity::Entity(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EntityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityDefaultTypeInternal() {}
  union {
    Entity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityDefaultTypeInternal _Entity_default_instance_;

inline constexpr Override::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        field_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        masked_field_value_{nullptr},
        provenance_{nullptr},
        request_timestamp_{nullptr},
        status_{static_cast< ::anduril::entitymanager::v1::OverrideStatus >(0)},
        type_{static_cast< ::anduril::entitymanager::v1::OverrideType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Override::Override(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OverrideDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OverrideDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OverrideDefaultTypeInternal() {}
  union {
    Override _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OverrideDefaultTypeInternal _Override_default_instance_;

inline constexpr Overrides::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : provenance_{},
        override_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Overrides::Overrides(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OverridesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OverridesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OverridesDefaultTypeInternal() {}
  union {
    Overrides _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OverridesDefaultTypeInternal _Overrides_default_instance_;

inline constexpr Entities::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entities_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Entities::Entities(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EntitiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntitiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntitiesDefaultTypeInternal() {}
  union {
    Entities _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntitiesDefaultTypeInternal _Entities_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[16];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.entity_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.is_live_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.created_time_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.expiry_time_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.no_expiry_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.location_uncertainty_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.geopolygon_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.geo_shape_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.geo_details_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.aliases_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.tracked_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.correlated_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.mil_view_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.ontology_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.sensors_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.payloads_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.power_state_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.provenance_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.overrides_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.indicators_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.original_data_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.target_priority_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.signal_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.transponder_codes_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.contact_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.data_classification_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.task_catalog_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.media_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.relationships_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.visual_details_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.prototype_extensions_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.dimensions_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.route_details_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.schedules_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.health_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.group_details_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.team_status_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entity, _impl_.supplies_),
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    14,
    2,
    11,
    12,
    18,
    19,
    3,
    4,
    5,
    6,
    7,
    15,
    16,
    24,
    8,
    9,
    10,
    13,
    17,
    20,
    21,
    22,
    23,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    32,
    33,
    34,
    35,
    36,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entities, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Entities, _impl_.entities_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Status, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Status, _impl_.platform_activity_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Status, _impl_.role_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Aliases, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Aliases, _impl_.alternate_ids_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Aliases, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.track_quality_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.track_quality_wrapper_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.sensor_hits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.number_of_objects_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.sensor_details_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.radar_cross_section_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.last_measurement_time_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Tracked, _impl_.line_of_bearing_),
    ~0u,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _impl_.integration_name_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _impl_.data_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _impl_.source_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _impl_.source_update_time_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Provenance, _impl_.source_description_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_.simulated_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_.exercise_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_.emergency_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_.c2_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_.deletable_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_.egressable_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Indicators, _impl_.starred_),
    0,
    1,
    2,
    3,
    ~0u,
    4,
    5,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Overrides, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Overrides, _impl_.override_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Overrides, _impl_.provenance_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_.request_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_.field_path_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_.masked_field_value_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_.provenance_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Override, _impl_.request_timestamp_),
    ~0u,
    ~0u,
    0,
    ~0u,
    1,
    ~0u,
    2,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OverrideProvenance, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OverrideProvenance, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OverrideProvenance, _impl_.field_path_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OverrideProvenance, _impl_.source_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OverrideProvenance, _impl_.provenance_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OriginalData_TLE, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OriginalData_TLE, _impl_.line1_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OriginalData_TLE, _impl_.line2_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OriginalData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OriginalData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OriginalData, _impl_.url_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::OriginalData, _impl_.tle_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AlternateId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AlternateId, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AlternateId, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AlternateId, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::VisualDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::VisualDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::VisualDetails, _impl_.range_rings_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::VisualDetails, _impl_.interactivity_mode_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeRings, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeRings, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeRings, _impl_.min_distance_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeRings, _impl_.max_distance_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeRings, _impl_.ring_count_),
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TeamStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 49, -1, sizeof(::anduril::entitymanager::v1::Entity)},
        {90, -1, -1, sizeof(::anduril::entitymanager::v1::Entities)},
        {99, -1, -1, sizeof(::anduril::entitymanager::v1::Status)},
        {109, -1, -1, sizeof(::anduril::entitymanager::v1::Aliases)},
        {119, 135, -1, sizeof(::anduril::entitymanager::v1::Tracked)},
        {143, 157, -1, sizeof(::anduril::entitymanager::v1::Provenance)},
        {163, 178, -1, sizeof(::anduril::entitymanager::v1::Indicators)},
        {185, -1, -1, sizeof(::anduril::entitymanager::v1::Overrides)},
        {195, 210, -1, sizeof(::anduril::entitymanager::v1::Override)},
        {217, 228, -1, sizeof(::anduril::entitymanager::v1::OverrideProvenance)},
        {231, -1, -1, sizeof(::anduril::entitymanager::v1::OriginalData_TLE)},
        {241, 251, -1, sizeof(::anduril::entitymanager::v1::OriginalData)},
        {253, -1, -1, sizeof(::anduril::entitymanager::v1::AlternateId)},
        {264, 274, -1, sizeof(::anduril::entitymanager::v1::VisualDetails)},
        {276, 287, -1, sizeof(::anduril::entitymanager::v1::RangeRings)},
        {290, -1, -1, sizeof(::anduril::entitymanager::v1::TeamStatus)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_Entity_default_instance_._instance,
    &::anduril::entitymanager::v1::_Entities_default_instance_._instance,
    &::anduril::entitymanager::v1::_Status_default_instance_._instance,
    &::anduril::entitymanager::v1::_Aliases_default_instance_._instance,
    &::anduril::entitymanager::v1::_Tracked_default_instance_._instance,
    &::anduril::entitymanager::v1::_Provenance_default_instance_._instance,
    &::anduril::entitymanager::v1::_Indicators_default_instance_._instance,
    &::anduril::entitymanager::v1::_Overrides_default_instance_._instance,
    &::anduril::entitymanager::v1::_Override_default_instance_._instance,
    &::anduril::entitymanager::v1::_OverrideProvenance_default_instance_._instance,
    &::anduril::entitymanager::v1::_OriginalData_TLE_default_instance_._instance,
    &::anduril::entitymanager::v1::_OriginalData_default_instance_._instance,
    &::anduril::entitymanager::v1::_AlternateId_default_instance_._instance,
    &::anduril::entitymanager::v1::_VisualDetails_default_instance_._instance,
    &::anduril::entitymanager::v1::_RangeRings_default_instance_._instance,
    &::anduril::entitymanager::v1::_TeamStatus_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n)anduril/entitymanager/v1/entity.pub.pr"
    "oto\022\030anduril.entitymanager.v1\0321anduril/e"
    "ntitymanager/v1/classification.pub.proto"
    "\0322anduril/entitymanager/v1/contact_detai"
    "ls.pub.proto\032/anduril/entitymanager/v1/c"
    "orrelations.pub.proto\032-anduril/entityman"
    "ager/v1/dimensions.pub.proto\032,anduril/en"
    "titymanager/v1/geoentity.pub.proto\032(andu"
    "ril/entitymanager/v1/group.pub.proto\0320an"
    "duril/entitymanager/v1/health_status.pub"
    ".proto\032+anduril/entitymanager/v1/locatio"
    "n.pub.proto\032(anduril/entitymanager/v1/me"
    "dia.pub.proto\032+anduril/entitymanager/v1/"
    "ontology.pub.proto\032*anduril/entitymanage"
    "r/v1/options.pub.proto\032+anduril/entityma"
    "nager/v1/payloads.pub.proto\032(anduril/ent"
    "itymanager/v1/power.pub.proto\032,anduril/e"
    "ntitymanager/v1/prototype.pub.proto\032/and"
    "uril/entitymanager/v1/relationship.pub.p"
    "roto\0320anduril/entitymanager/v1/route_det"
    "ails.pub.proto\032+anduril/entitymanager/v1"
    "/schedule.pub.proto\032*anduril/entitymanag"
    "er/v1/sensors.pub.proto\032)anduril/entitym"
    "anager/v1/signal.pub.proto\032+anduril/enti"
    "tymanager/v1/supplies.pub.proto\0322anduril"
    "/entitymanager/v1/target_priority.pub.pr"
    "oto\0324anduril/entitymanager/v1/transponde"
    "r_codes.pub.proto\032(anduril/entitymanager"
    "/v1/types.pub.proto\032\"anduril/tasks/v2/ca"
    "talog.pub.proto\032\037google/protobuf/timesta"
    "mp.proto\032\036google/protobuf/wrappers.proto"
    "\"\264\025\n\006Entity\022\033\n\tentity_id\030\001 \001(\tR\010entityId"
    "\022 \n\013description\030\002 \001(\tR\013description\022\027\n\007is"
    "_live\030\003 \001(\010R\006isLive\022=\n\014created_time\030\004 \001("
    "\0132\032.google.protobuf.TimestampR\013createdTi"
    "me\022;\n\013expiry_time\030\005 \001(\0132\032.google.protobu"
    "f.TimestampR\nexpiryTime\022\033\n\tno_expiry\030+ \001"
    "(\010R\010noExpiry\0228\n\006status\030\023 \001(\0132 .anduril.e"
    "ntitymanager.v1.StatusR\006status\022>\n\010locati"
    "on\030\006 \001(\0132\".anduril.entitymanager.v1.Loca"
    "tionR\010location\022`\n\024location_uncertainty\030\017"
    " \001(\0132-.anduril.entitymanager.v1.Location"
    "UncertaintyR\023locationUncertainty\022H\n\ngeop"
    "olygon\030\021 \001(\0132$.anduril.entitymanager.v1."
    "GeoPolygonB\002\030\001R\ngeopolygon\022\?\n\tgeo_shape\030"
    "\027 \001(\0132\".anduril.entitymanager.v1.GeoShap"
    "eR\010geoShape\022E\n\013geo_details\030\030 \001(\0132$.andur"
    "il.entitymanager.v1.GeoDetailsR\ngeoDetai"
    "ls\022;\n\007aliases\030\007 \001(\0132!.anduril.entitymana"
    "ger.v1.AliasesR\007aliases\022;\n\007tracked\030\010 \001(\013"
    "2!.anduril.entitymanager.v1.TrackedR\007tra"
    "cked\022D\n\ncorrelated\030\t \001(\0132$.anduril.entit"
    "ymanager.v1.CorrelatedR\ncorrelated\022<\n\010mi"
    "l_view\030\n \001(\0132!.anduril.entitymanager.v1."
    "MilViewR\007milView\022>\n\010ontology\030\013 \001(\0132\".and"
    "uril.entitymanager.v1.OntologyR\010ontology"
    "\022;\n\007sensors\030\024 \001(\0132!.anduril.entitymanage"
    "r.v1.SensorsR\007sensors\022>\n\010payloads\030\025 \001(\0132"
    "\".anduril.entitymanager.v1.PayloadsR\010pay"
    "loads\022E\n\013power_state\030\036 \001(\0132$.anduril.ent"
    "itymanager.v1.PowerStateR\npowerState\022D\n\n"
    "provenance\030\014 \001(\0132$.anduril.entitymanager"
    ".v1.ProvenanceR\nprovenance\022A\n\toverrides\030"
    "\r \001(\0132#.anduril.entitymanager.v1.Overrid"
    "esR\toverrides\022D\n\nindicators\030\016 \001(\0132$.andu"
    "ril.entitymanager.v1.IndicatorsR\nindicat"
    "ors\022K\n\roriginal_data\030\022 \001(\0132&.anduril.ent"
    "itymanager.v1.OriginalDataR\014originalData"
    "\022Q\n\017target_priority\030\026 \001(\0132(.anduril.enti"
    "tymanager.v1.TargetPriorityR\016targetPrior"
    "ity\0228\n\006signal\030\031 \001(\0132 .anduril.entitymana"
    "ger.v1.SignalR\006signal\022W\n\021transponder_cod"
    "es\030\032 \001(\0132*.anduril.entitymanager.v1.Tran"
    "sponderCodesR\020transponderCodes\022B\n\007contac"
    "t\030\033 \001(\0132(.anduril.entitymanager.v1.Conta"
    "ctDetailsR\007contact\022Y\n\023data_classificatio"
    "n\030\035 \001(\0132(.anduril.entitymanager.v1.Class"
    "ificationR\022dataClassification\022@\n\014task_ca"
    "talog\030\037 \001(\0132\035.anduril.tasks.v2.TaskCatal"
    "ogR\013taskCatalog\0225\n\005media\030  \001(\0132\037.anduril"
    ".entitymanager.v1.MediaR\005media\022M\n\rrelati"
    "onships\030! \001(\0132\'.anduril.entitymanager.v1"
    ".RelationshipsR\rrelationships\022N\n\016visual_"
    "details\030\" \001(\0132\'.anduril.entitymanager.v1"
    ".VisualDetailsR\rvisualDetails\022`\n\024prototy"
    "pe_extensions\030# \001(\0132-.anduril.entitymana"
    "ger.v1.PrototypeExtensionsR\023prototypeExt"
    "ensions\022D\n\ndimensions\030$ \001(\0132$.anduril.en"
    "titymanager.v1.DimensionsR\ndimensions\022K\n"
    "\rroute_details\030% \001(\0132&.anduril.entityman"
    "ager.v1.RouteDetailsR\014routeDetails\022A\n\tsc"
    "hedules\030& \001(\0132#.anduril.entitymanager.v1"
    ".SchedulesR\tschedules\0228\n\006health\030\' \001(\0132 ."
    "anduril.entitymanager.v1.HealthR\006health\022"
    "K\n\rgroup_details\030( \001(\0132&.anduril.entitym"
    "anager.v1.GroupDetailsR\014groupDetails\022E\n\013"
    "team_status\030) \001(\0132$.anduril.entitymanage"
    "r.v1.TeamStatusR\nteamStatus\022>\n\010supplies\030"
    "* \001(\0132\".anduril.entitymanager.v1.Supplie"
    "sR\010suppliesJ\004\010\020\020\021J\004\010\034\020\035\"H\n\010Entities\022<\n\010e"
    "ntities\030\001 \003(\0132 .anduril.entitymanager.v1"
    ".EntityR\010entities\"I\n\006Status\022+\n\021platform_"
    "activity\030\001 \001(\tR\020platformActivity\022\022\n\004role"
    "\030\002 \001(\tR\004role\"s\n\007Aliases\022O\n\ralternate_ids"
    "\030\001 \003(\0132%.anduril.entitymanager.v1.Altern"
    "ateIdB\003\310>\001R\014alternateIds\022\027\n\004name\030\002 \001(\tB\003"
    "\310>\001R\004name\"\352\004\n\007Tracked\022\'\n\rtrack_quality\030\001"
    " \001(\rB\002\030\001R\014trackQuality\022O\n\025track_quality_"
    "wrapper\030\002 \001(\0132\033.google.protobuf.Int32Val"
    "ueR\023trackQualityWrapper\022<\n\013sensor_hits\030\003"
    " \001(\0132\033.google.protobuf.Int32ValueR\nsenso"
    "rHits\022Q\n\021number_of_objects\030\004 \001(\0132%.andur"
    "il.entitymanager.v1.UInt32RangeR\017numberO"
    "fObjects\022L\n\016sensor_details\030\005 \001(\0132!.andur"
    "il.entitymanager.v1.SensorsB\002\030\001R\rsensorD"
    "etails\022L\n\023radar_cross_section\030\006 \001(\0132\034.go"
    "ogle.protobuf.DoubleValueR\021radarCrossSec"
    "tion\022N\n\025last_measurement_time\030\007 \001(\0132\032.go"
    "ogle.protobuf.TimestampR\023lastMeasurement"
    "Time\022O\n\017line_of_bearing\030\t \001(\0132\'.anduril."
    "entitymanager.v1.LineOfBearingR\rlineOfBe"
    "aringJ\004\010\010\020\tR\021relative_position\"\244\002\n\nProve"
    "nance\022)\n\020integration_name\030\005 \001(\tR\017integra"
    "tionName\022\033\n\tdata_type\030\006 \001(\tR\010dataType\0228\n"
    "\006source\030\001 \001(\0162 .anduril.entitymanager.v1"
    ".SourceR\006source\022\033\n\tsource_id\030\003 \001(\tR\010sour"
    "ceId\022H\n\022source_update_time\030\002 \001(\0132\032.googl"
    "e.protobuf.TimestampR\020sourceUpdateTime\022-"
    "\n\022source_description\030\004 \001(\tR\021sourceDescri"
    "ption\"\243\003\n\nIndicators\0228\n\tsimulated\030\001 \001(\0132"
    "\032.google.protobuf.BoolValueR\tsimulated\0226"
    "\n\010exercise\030\002 \001(\0132\032.google.protobuf.BoolV"
    "alueR\010exercise\0228\n\temergency\030\003 \001(\0132\032.goog"
    "le.protobuf.BoolValueR\temergency\022*\n\002c2\030\004"
    " \001(\0132\032.google.protobuf.BoolValueR\002c2\022A\n\t"
    "deletable\030\005 \001(\0162#.anduril.entitymanager."
    "v1.DeletableR\tdeletable\022\?\n\negressable\030\006 "
    "\001(\0132\032.google.protobuf.BoolValueB\003\310>\001R\neg"
    "ressable\0229\n\007starred\030\007 \001(\0132\032.google.proto"
    "buf.BoolValueB\003\310>\001R\007starred\"\235\001\n\tOverride"
    "s\022>\n\010override\030\002 \003(\0132\".anduril.entitymana"
    "ger.v1.OverrideR\010override\022P\n\nprovenance\030"
    "\001 \003(\0132,.anduril.entitymanager.v1.Overrid"
    "eProvenanceB\002\030\001R\nprovenance\"\245\003\n\010Override"
    "\022\035\n\nrequest_id\030\001 \001(\tR\trequestId\022\035\n\nfield"
    "_path\030\002 \001(\tR\tfieldPath\022N\n\022masked_field_v"
    "alue\030\003 \001(\0132 .anduril.entitymanager.v1.En"
    "tityR\020maskedFieldValue\022@\n\006status\030\004 \001(\0162("
    ".anduril.entitymanager.v1.OverrideStatus"
    "R\006status\022D\n\nprovenance\030\005 \001(\0132$.anduril.e"
    "ntitymanager.v1.ProvenanceR\nprovenance\022:"
    "\n\004type\030\006 \001(\0162&.anduril.entitymanager.v1."
    "OverrideTypeR\004type\022G\n\021request_timestamp\030"
    "\007 \001(\0132\032.google.protobuf.TimestampR\020reque"
    "stTimestamp\"\236\001\n\022OverrideProvenance\022\035\n\nfi"
    "eld_path\030\001 \001(\tR\tfieldPath\022\037\n\tsource_id\030\002"
    " \001(\tB\002\030\001R\010sourceId\022D\n\nprovenance\030\003 \001(\0132$"
    ".anduril.entitymanager.v1.ProvenanceR\npr"
    "ovenance:\002\030\001\"\221\001\n\014OriginalData\022\020\n\003url\030\001 \001"
    "(\tR\003url\022<\n\003tle\030\002 \001(\0132*.anduril.entityman"
    "ager.v1.OriginalData.TLER\003tle\0321\n\003TLE\022\024\n\005"
    "line1\030\001 \001(\tR\005line1\022\024\n\005line2\030\002 \001(\tR\005line2"
    "\"w\n\013AlternateId\022\032\n\006source\030\001 \001(\tB\002\030\001R\006sou"
    "rce\022\016\n\002id\030\002 \001(\tR\002id\022<\n\004type\030\003 \001(\0162#.andu"
    "ril.entitymanager.v1.AltIdTypeB\003\320>\001R\004typ"
    "e\"\267\001\n\rVisualDetails\022J\n\013range_rings\030\001 \001(\013"
    "2$.anduril.entitymanager.v1.RangeRingsB\003"
    "\310>\001R\nrangeRings\022Z\n\022interactivity_mode\030\002 "
    "\001(\0162+.anduril.entitymanager.v1.Interacti"
    "vityModeR\021interactivityMode\"\263\001\n\nRangeRin"
    "gs\022B\n\016min_distance_m\030\001 \001(\0132\034.google.prot"
    "obuf.DoubleValueR\014minDistanceM\022B\n\016max_di"
    "stance_m\030\002 \001(\0132\034.google.protobuf.DoubleV"
    "alueR\014maxDistanceM\022\035\n\nring_count\030\003 \001(\rR\t"
    "ringCount\"\014\n\nTeamStatus*b\n\tDeletable\022\025\n\021"
    "DELETABLE_INVALID\020\000\022\022\n\016DELETABLE_TRUE\020\001\022"
    "\023\n\017DELETABLE_FALSE\020\002\022\025\n\021DELETABLE_REQUES"
    "T\020\003*{\n\021InteractivityMode\022\036\n\032INTERACTIVIT"
    "Y_MODE_INVALID\020\000\022\036\n\032INTERACTIVITY_MODE_D"
    "EFAULT\020\001\022&\n\"INTERACTIVITY_MODE_DISABLED_"
    "ON_MAP\020\002B\377\001\n\034com.anduril.entitymanager.v"
    "1B\016EntityPubProtoP\001ZMghe.anduril.dev/and"
    "uril/andurilapis-go/anduril/entitymanage"
    "r/v1;entitymanager\242\002\003AEX\252\002\030Anduril.Entit"
    "ymanager.V1\312\002\030Anduril\\Entitymanager\\V1\342\002"
    "$Anduril\\Entitymanager\\V1\\GPBMetadata\352\002\032"
    "Anduril::Entitymanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_deps[26] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fcontact_5fdetails_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fcorrelations_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fdimensions_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2foptions_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fprototype_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2frelationship_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2froute_5fdetails_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fschedule_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ftransponder_5fcodes_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
        &::descriptor_table_anduril_2ftasks_2fv2_2fcatalog_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto = {
    false,
    false,
    7474,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto,
    "anduril/entitymanager/v1/entity.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_deps,
    26,
    16,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto(&descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto);
namespace anduril {
namespace entitymanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Deletable_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Deletable_internal_data_[] = {
    262144u, 0u, };
bool Deletable_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* InteractivityMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t InteractivityMode_internal_data_[] = {
    196608u, 0u, };
bool InteractivityMode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Entity::_Internal {
 public:
  using HasBits = decltype(std::declval<Entity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Entity, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& created_time(const Entity* msg);
  static void set_has_created_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& expiry_time(const Entity* msg);
  static void set_has_expiry_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::entitymanager::v1::Status& status(const Entity* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::anduril::entitymanager::v1::Location& location(const Entity* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::anduril::entitymanager::v1::LocationUncertainty& location_uncertainty(const Entity* msg);
  static void set_has_location_uncertainty(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::anduril::entitymanager::v1::GeoPolygon& geopolygon(const Entity* msg);
  static void set_has_geopolygon(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::anduril::entitymanager::v1::GeoShape& geo_shape(const Entity* msg);
  static void set_has_geo_shape(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::anduril::entitymanager::v1::GeoDetails& geo_details(const Entity* msg);
  static void set_has_geo_details(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::anduril::entitymanager::v1::Aliases& aliases(const Entity* msg);
  static void set_has_aliases(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::anduril::entitymanager::v1::Tracked& tracked(const Entity* msg);
  static void set_has_tracked(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::anduril::entitymanager::v1::Correlated& correlated(const Entity* msg);
  static void set_has_correlated(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::anduril::entitymanager::v1::MilView& mil_view(const Entity* msg);
  static void set_has_mil_view(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::anduril::entitymanager::v1::Ontology& ontology(const Entity* msg);
  static void set_has_ontology(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::anduril::entitymanager::v1::Sensors& sensors(const Entity* msg);
  static void set_has_sensors(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::anduril::entitymanager::v1::Payloads& payloads(const Entity* msg);
  static void set_has_payloads(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::anduril::entitymanager::v1::PowerState& power_state(const Entity* msg);
  static void set_has_power_state(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::anduril::entitymanager::v1::Provenance& provenance(const Entity* msg);
  static void set_has_provenance(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::anduril::entitymanager::v1::Overrides& overrides(const Entity* msg);
  static void set_has_overrides(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::anduril::entitymanager::v1::Indicators& indicators(const Entity* msg);
  static void set_has_indicators(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::anduril::entitymanager::v1::OriginalData& original_data(const Entity* msg);
  static void set_has_original_data(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::anduril::entitymanager::v1::TargetPriority& target_priority(const Entity* msg);
  static void set_has_target_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::anduril::entitymanager::v1::Signal& signal(const Entity* msg);
  static void set_has_signal(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::anduril::entitymanager::v1::TransponderCodes& transponder_codes(const Entity* msg);
  static void set_has_transponder_codes(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::anduril::entitymanager::v1::ContactDetails& contact(const Entity* msg);
  static void set_has_contact(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::anduril::entitymanager::v1::Classification& data_classification(const Entity* msg);
  static void set_has_data_classification(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::anduril::tasks::v2::TaskCatalog& task_catalog(const Entity* msg);
  static void set_has_task_catalog(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::anduril::entitymanager::v1::Media& media(const Entity* msg);
  static void set_has_media(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::anduril::entitymanager::v1::Relationships& relationships(const Entity* msg);
  static void set_has_relationships(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::anduril::entitymanager::v1::VisualDetails& visual_details(const Entity* msg);
  static void set_has_visual_details(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::anduril::entitymanager::v1::PrototypeExtensions& prototype_extensions(const Entity* msg);
  static void set_has_prototype_extensions(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::anduril::entitymanager::v1::Dimensions& dimensions(const Entity* msg);
  static void set_has_dimensions(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::anduril::entitymanager::v1::RouteDetails& route_details(const Entity* msg);
  static void set_has_route_details(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::anduril::entitymanager::v1::Schedules& schedules(const Entity* msg);
  static void set_has_schedules(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Health& health(const Entity* msg);
  static void set_has_health(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::anduril::entitymanager::v1::GroupDetails& group_details(const Entity* msg);
  static void set_has_group_details(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::anduril::entitymanager::v1::TeamStatus& team_status(const Entity* msg);
  static void set_has_team_status(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::anduril::entitymanager::v1::Supplies& supplies(const Entity* msg);
  static void set_has_supplies(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
};

const ::google::protobuf::Timestamp& Entity::_Internal::created_time(const Entity* msg) {
  return *msg->_impl_.created_time_;
}
const ::google::protobuf::Timestamp& Entity::_Internal::expiry_time(const Entity* msg) {
  return *msg->_impl_.expiry_time_;
}
const ::anduril::entitymanager::v1::Status& Entity::_Internal::status(const Entity* msg) {
  return *msg->_impl_.status_;
}
const ::anduril::entitymanager::v1::Location& Entity::_Internal::location(const Entity* msg) {
  return *msg->_impl_.location_;
}
const ::anduril::entitymanager::v1::LocationUncertainty& Entity::_Internal::location_uncertainty(const Entity* msg) {
  return *msg->_impl_.location_uncertainty_;
}
const ::anduril::entitymanager::v1::GeoPolygon& Entity::_Internal::geopolygon(const Entity* msg) {
  return *msg->_impl_.geopolygon_;
}
const ::anduril::entitymanager::v1::GeoShape& Entity::_Internal::geo_shape(const Entity* msg) {
  return *msg->_impl_.geo_shape_;
}
const ::anduril::entitymanager::v1::GeoDetails& Entity::_Internal::geo_details(const Entity* msg) {
  return *msg->_impl_.geo_details_;
}
const ::anduril::entitymanager::v1::Aliases& Entity::_Internal::aliases(const Entity* msg) {
  return *msg->_impl_.aliases_;
}
const ::anduril::entitymanager::v1::Tracked& Entity::_Internal::tracked(const Entity* msg) {
  return *msg->_impl_.tracked_;
}
const ::anduril::entitymanager::v1::Correlated& Entity::_Internal::correlated(const Entity* msg) {
  return *msg->_impl_.correlated_;
}
const ::anduril::entitymanager::v1::MilView& Entity::_Internal::mil_view(const Entity* msg) {
  return *msg->_impl_.mil_view_;
}
const ::anduril::entitymanager::v1::Ontology& Entity::_Internal::ontology(const Entity* msg) {
  return *msg->_impl_.ontology_;
}
const ::anduril::entitymanager::v1::Sensors& Entity::_Internal::sensors(const Entity* msg) {
  return *msg->_impl_.sensors_;
}
const ::anduril::entitymanager::v1::Payloads& Entity::_Internal::payloads(const Entity* msg) {
  return *msg->_impl_.payloads_;
}
const ::anduril::entitymanager::v1::PowerState& Entity::_Internal::power_state(const Entity* msg) {
  return *msg->_impl_.power_state_;
}
const ::anduril::entitymanager::v1::Provenance& Entity::_Internal::provenance(const Entity* msg) {
  return *msg->_impl_.provenance_;
}
const ::anduril::entitymanager::v1::Overrides& Entity::_Internal::overrides(const Entity* msg) {
  return *msg->_impl_.overrides_;
}
const ::anduril::entitymanager::v1::Indicators& Entity::_Internal::indicators(const Entity* msg) {
  return *msg->_impl_.indicators_;
}
const ::anduril::entitymanager::v1::OriginalData& Entity::_Internal::original_data(const Entity* msg) {
  return *msg->_impl_.original_data_;
}
const ::anduril::entitymanager::v1::TargetPriority& Entity::_Internal::target_priority(const Entity* msg) {
  return *msg->_impl_.target_priority_;
}
const ::anduril::entitymanager::v1::Signal& Entity::_Internal::signal(const Entity* msg) {
  return *msg->_impl_.signal_;
}
const ::anduril::entitymanager::v1::TransponderCodes& Entity::_Internal::transponder_codes(const Entity* msg) {
  return *msg->_impl_.transponder_codes_;
}
const ::anduril::entitymanager::v1::ContactDetails& Entity::_Internal::contact(const Entity* msg) {
  return *msg->_impl_.contact_;
}
const ::anduril::entitymanager::v1::Classification& Entity::_Internal::data_classification(const Entity* msg) {
  return *msg->_impl_.data_classification_;
}
const ::anduril::tasks::v2::TaskCatalog& Entity::_Internal::task_catalog(const Entity* msg) {
  return *msg->_impl_.task_catalog_;
}
const ::anduril::entitymanager::v1::Media& Entity::_Internal::media(const Entity* msg) {
  return *msg->_impl_.media_;
}
const ::anduril::entitymanager::v1::Relationships& Entity::_Internal::relationships(const Entity* msg) {
  return *msg->_impl_.relationships_;
}
const ::anduril::entitymanager::v1::VisualDetails& Entity::_Internal::visual_details(const Entity* msg) {
  return *msg->_impl_.visual_details_;
}
const ::anduril::entitymanager::v1::PrototypeExtensions& Entity::_Internal::prototype_extensions(const Entity* msg) {
  return *msg->_impl_.prototype_extensions_;
}
const ::anduril::entitymanager::v1::Dimensions& Entity::_Internal::dimensions(const Entity* msg) {
  return *msg->_impl_.dimensions_;
}
const ::anduril::entitymanager::v1::RouteDetails& Entity::_Internal::route_details(const Entity* msg) {
  return *msg->_impl_.route_details_;
}
const ::anduril::entitymanager::v1::Schedules& Entity::_Internal::schedules(const Entity* msg) {
  return *msg->_impl_.schedules_;
}
const ::anduril::entitymanager::v1::Health& Entity::_Internal::health(const Entity* msg) {
  return *msg->_impl_.health_;
}
const ::anduril::entitymanager::v1::GroupDetails& Entity::_Internal::group_details(const Entity* msg) {
  return *msg->_impl_.group_details_;
}
const ::anduril::entitymanager::v1::TeamStatus& Entity::_Internal::team_status(const Entity* msg) {
  return *msg->_impl_.team_status_;
}
const ::anduril::entitymanager::v1::Supplies& Entity::_Internal::supplies(const Entity* msg) {
  return *msg->_impl_.supplies_;
}
void Entity::clear_created_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.created_time_ != nullptr) _impl_.created_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Entity::clear_expiry_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expiry_time_ != nullptr) _impl_.expiry_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Entity::clear_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Entity::clear_location_uncertainty() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_uncertainty_ != nullptr) _impl_.location_uncertainty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void Entity::clear_geopolygon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.geopolygon_ != nullptr) _impl_.geopolygon_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void Entity::clear_geo_shape() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.geo_shape_ != nullptr) _impl_.geo_shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void Entity::clear_geo_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.geo_details_ != nullptr) _impl_.geo_details_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void Entity::clear_correlated() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.correlated_ != nullptr) _impl_.correlated_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void Entity::clear_mil_view() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.mil_view_ != nullptr) _impl_.mil_view_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void Entity::clear_ontology() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.ontology_ != nullptr) _impl_.ontology_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void Entity::clear_sensors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.sensors_ != nullptr) _impl_.sensors_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void Entity::clear_payloads() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.payloads_ != nullptr) _impl_.payloads_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void Entity::clear_power_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.power_state_ != nullptr) _impl_.power_state_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void Entity::clear_target_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.target_priority_ != nullptr) _impl_.target_priority_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void Entity::clear_signal() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.signal_ != nullptr) _impl_.signal_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void Entity::clear_transponder_codes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.transponder_codes_ != nullptr) _impl_.transponder_codes_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void Entity::clear_contact() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.contact_ != nullptr) _impl_.contact_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void Entity::clear_data_classification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.data_classification_ != nullptr) _impl_.data_classification_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void Entity::clear_task_catalog() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.task_catalog_ != nullptr) _impl_.task_catalog_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void Entity::clear_media() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.media_ != nullptr) _impl_.media_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void Entity::clear_relationships() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.relationships_ != nullptr) _impl_.relationships_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void Entity::clear_prototype_extensions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.prototype_extensions_ != nullptr) _impl_.prototype_extensions_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
void Entity::clear_dimensions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.dimensions_ != nullptr) _impl_.dimensions_->Clear();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
void Entity::clear_route_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.route_details_ != nullptr) _impl_.route_details_->Clear();
  _impl_._has_bits_[0] &= ~0x80000000u;
}
void Entity::clear_schedules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.schedules_ != nullptr) _impl_.schedules_->Clear();
  _impl_._has_bits_[1] &= ~0x00000001u;
}
void Entity::clear_health() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.health_ != nullptr) _impl_.health_->Clear();
  _impl_._has_bits_[1] &= ~0x00000002u;
}
void Entity::clear_group_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.group_details_ != nullptr) _impl_.group_details_->Clear();
  _impl_._has_bits_[1] &= ~0x00000004u;
}
void Entity::clear_supplies() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.supplies_ != nullptr) _impl_.supplies_->Clear();
  _impl_._has_bits_[1] &= ~0x00000010u;
}
Entity::Entity(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Entity)
}
inline PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_id_(arena, from.entity_id_),
        description_(arena, from.description_) {}

Entity::Entity(
    ::google::protobuf::Arena* arena,
    const Entity& from)
    : ::google::protobuf::Message(arena) {
  Entity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.created_time_)
                : nullptr;
  _impl_.expiry_time_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.expiry_time_)
                : nullptr;
  _impl_.location_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Location>(arena, *from._impl_.location_)
                : nullptr;
  _impl_.aliases_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Aliases>(arena, *from._impl_.aliases_)
                : nullptr;
  _impl_.tracked_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Tracked>(arena, *from._impl_.tracked_)
                : nullptr;
  _impl_.correlated_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Correlated>(arena, *from._impl_.correlated_)
                : nullptr;
  _impl_.mil_view_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::MilView>(arena, *from._impl_.mil_view_)
                : nullptr;
  _impl_.ontology_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Ontology>(arena, *from._impl_.ontology_)
                : nullptr;
  _impl_.provenance_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Provenance>(arena, *from._impl_.provenance_)
                : nullptr;
  _impl_.overrides_ = (cached_has_bits & 0x00000200u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Overrides>(arena, *from._impl_.overrides_)
                : nullptr;
  _impl_.indicators_ = (cached_has_bits & 0x00000400u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Indicators>(arena, *from._impl_.indicators_)
                : nullptr;
  _impl_.location_uncertainty_ = (cached_has_bits & 0x00000800u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::LocationUncertainty>(arena, *from._impl_.location_uncertainty_)
                : nullptr;
  _impl_.geopolygon_ = (cached_has_bits & 0x00001000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::GeoPolygon>(arena, *from._impl_.geopolygon_)
                : nullptr;
  _impl_.original_data_ = (cached_has_bits & 0x00002000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::OriginalData>(arena, *from._impl_.original_data_)
                : nullptr;
  _impl_.status_ = (cached_has_bits & 0x00004000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.sensors_ = (cached_has_bits & 0x00008000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Sensors>(arena, *from._impl_.sensors_)
                : nullptr;
  _impl_.payloads_ = (cached_has_bits & 0x00010000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Payloads>(arena, *from._impl_.payloads_)
                : nullptr;
  _impl_.target_priority_ = (cached_has_bits & 0x00020000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::TargetPriority>(arena, *from._impl_.target_priority_)
                : nullptr;
  _impl_.geo_shape_ = (cached_has_bits & 0x00040000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::GeoShape>(arena, *from._impl_.geo_shape_)
                : nullptr;
  _impl_.geo_details_ = (cached_has_bits & 0x00080000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::GeoDetails>(arena, *from._impl_.geo_details_)
                : nullptr;
  _impl_.signal_ = (cached_has_bits & 0x00100000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Signal>(arena, *from._impl_.signal_)
                : nullptr;
  _impl_.transponder_codes_ = (cached_has_bits & 0x00200000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::TransponderCodes>(arena, *from._impl_.transponder_codes_)
                : nullptr;
  _impl_.contact_ = (cached_has_bits & 0x00400000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::ContactDetails>(arena, *from._impl_.contact_)
                : nullptr;
  _impl_.data_classification_ = (cached_has_bits & 0x00800000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Classification>(arena, *from._impl_.data_classification_)
                : nullptr;
  _impl_.power_state_ = (cached_has_bits & 0x01000000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::PowerState>(arena, *from._impl_.power_state_)
                : nullptr;
  _impl_.task_catalog_ = (cached_has_bits & 0x02000000u)
                ? CreateMaybeMessage<::anduril::tasks::v2::TaskCatalog>(arena, *from._impl_.task_catalog_)
                : nullptr;
  _impl_.media_ = (cached_has_bits & 0x04000000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Media>(arena, *from._impl_.media_)
                : nullptr;
  _impl_.relationships_ = (cached_has_bits & 0x08000000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Relationships>(arena, *from._impl_.relationships_)
                : nullptr;
  _impl_.visual_details_ = (cached_has_bits & 0x10000000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::VisualDetails>(arena, *from._impl_.visual_details_)
                : nullptr;
  _impl_.prototype_extensions_ = (cached_has_bits & 0x20000000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::PrototypeExtensions>(arena, *from._impl_.prototype_extensions_)
                : nullptr;
  _impl_.dimensions_ = (cached_has_bits & 0x40000000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Dimensions>(arena, *from._impl_.dimensions_)
                : nullptr;
  _impl_.route_details_ = (cached_has_bits & 0x80000000u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::RouteDetails>(arena, *from._impl_.route_details_)
                : nullptr;
  cached_has_bits = _impl_._has_bits_[1];
  _impl_.schedules_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Schedules>(arena, *from._impl_.schedules_)
                : nullptr;
  _impl_.health_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Health>(arena, *from._impl_.health_)
                : nullptr;
  _impl_.group_details_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::GroupDetails>(arena, *from._impl_.group_details_)
                : nullptr;
  _impl_.team_status_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::TeamStatus>(arena, *from._impl_.team_status_)
                : nullptr;
  _impl_.supplies_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Supplies>(arena, *from._impl_.supplies_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_live_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_live_),
           offsetof(Impl_, no_expiry_) -
               offsetof(Impl_, is_live_) +
               sizeof(Impl_::no_expiry_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Entity)
}
inline PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_id_(arena),
        description_(arena) {}

inline void Entity::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_time_),
           0,
           offsetof(Impl_, no_expiry_) -
               offsetof(Impl_, created_time_) +
               sizeof(Impl_::no_expiry_));
}
Entity::~Entity() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Entity)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Entity::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.entity_id_.Destroy();
  _impl_.description_.Destroy();
  delete _impl_.created_time_;
  delete _impl_.expiry_time_;
  delete _impl_.location_;
  delete _impl_.aliases_;
  delete _impl_.tracked_;
  delete _impl_.correlated_;
  delete _impl_.mil_view_;
  delete _impl_.ontology_;
  delete _impl_.provenance_;
  delete _impl_.overrides_;
  delete _impl_.indicators_;
  delete _impl_.location_uncertainty_;
  delete _impl_.geopolygon_;
  delete _impl_.original_data_;
  delete _impl_.status_;
  delete _impl_.sensors_;
  delete _impl_.payloads_;
  delete _impl_.target_priority_;
  delete _impl_.geo_shape_;
  delete _impl_.geo_details_;
  delete _impl_.signal_;
  delete _impl_.transponder_codes_;
  delete _impl_.contact_;
  delete _impl_.data_classification_;
  delete _impl_.power_state_;
  delete _impl_.task_catalog_;
  delete _impl_.media_;
  delete _impl_.relationships_;
  delete _impl_.visual_details_;
  delete _impl_.prototype_extensions_;
  delete _impl_.dimensions_;
  delete _impl_.route_details_;
  delete _impl_.schedules_;
  delete _impl_.health_;
  delete _impl_.group_details_;
  delete _impl_.team_status_;
  delete _impl_.supplies_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Entity)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_id_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.created_time_ != nullptr);
      _impl_.created_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.expiry_time_ != nullptr);
      _impl_.expiry_time_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.aliases_ != nullptr);
      _impl_.aliases_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.tracked_ != nullptr);
      _impl_.tracked_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.correlated_ != nullptr);
      _impl_.correlated_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.mil_view_ != nullptr);
      _impl_.mil_view_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.ontology_ != nullptr);
      _impl_.ontology_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.provenance_ != nullptr);
      _impl_.provenance_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.overrides_ != nullptr);
      _impl_.overrides_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.indicators_ != nullptr);
      _impl_.indicators_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.location_uncertainty_ != nullptr);
      _impl_.location_uncertainty_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.geopolygon_ != nullptr);
      _impl_.geopolygon_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.original_data_ != nullptr);
      _impl_.original_data_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(_impl_.sensors_ != nullptr);
      _impl_.sensors_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(_impl_.payloads_ != nullptr);
      _impl_.payloads_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(_impl_.target_priority_ != nullptr);
      _impl_.target_priority_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(_impl_.geo_shape_ != nullptr);
      _impl_.geo_shape_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(_impl_.geo_details_ != nullptr);
      _impl_.geo_details_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(_impl_.signal_ != nullptr);
      _impl_.signal_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      ABSL_DCHECK(_impl_.transponder_codes_ != nullptr);
      _impl_.transponder_codes_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      ABSL_DCHECK(_impl_.contact_ != nullptr);
      _impl_.contact_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      ABSL_DCHECK(_impl_.data_classification_ != nullptr);
      _impl_.data_classification_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      ABSL_DCHECK(_impl_.power_state_ != nullptr);
      _impl_.power_state_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      ABSL_DCHECK(_impl_.task_catalog_ != nullptr);
      _impl_.task_catalog_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      ABSL_DCHECK(_impl_.media_ != nullptr);
      _impl_.media_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      ABSL_DCHECK(_impl_.relationships_ != nullptr);
      _impl_.relationships_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      ABSL_DCHECK(_impl_.visual_details_ != nullptr);
      _impl_.visual_details_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      ABSL_DCHECK(_impl_.prototype_extensions_ != nullptr);
      _impl_.prototype_extensions_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      ABSL_DCHECK(_impl_.dimensions_ != nullptr);
      _impl_.dimensions_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      ABSL_DCHECK(_impl_.route_details_ != nullptr);
      _impl_.route_details_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.schedules_ != nullptr);
      _impl_.schedules_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.health_ != nullptr);
      _impl_.health_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.group_details_ != nullptr);
      _impl_.group_details_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.team_status_ != nullptr);
      _impl_.team_status_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.supplies_ != nullptr);
      _impl_.supplies_->Clear();
    }
  }
  ::memset(&_impl_.is_live_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.no_expiry_) -
      reinterpret_cast<char*>(&_impl_.is_live_)) + sizeof(_impl_.no_expiry_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Entity::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 41, 37, 100, 7> Entity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Entity, _impl_._has_bits_),
    0, // no _extensions_
    43, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    134250496,  // skipmap
    offsetof(decltype(_table_), field_entries),
    41,  // num_field_entries
    37,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Entity_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.entity_id_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.description_)}},
    // bool is_live = 3 [json_name = "isLive"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Entity, _impl_.is_live_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.is_live_)}},
    // .google.protobuf.Timestamp created_time = 4 [json_name = "createdTime"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.created_time_)}},
    // .google.protobuf.Timestamp expiry_time = 5 [json_name = "expiryTime"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Entity, _impl_.expiry_time_)}},
    // .anduril.entitymanager.v1.Location location = 6 [json_name = "location"];
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(Entity, _impl_.location_)}},
    // .anduril.entitymanager.v1.Aliases aliases = 7 [json_name = "aliases"];
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 3, PROTOBUF_FIELD_OFFSET(Entity, _impl_.aliases_)}},
    // .anduril.entitymanager.v1.Tracked tracked = 8 [json_name = "tracked"];
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(Entity, _impl_.tracked_)}},
    // .anduril.entitymanager.v1.Correlated correlated = 9 [json_name = "correlated"];
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 5, PROTOBUF_FIELD_OFFSET(Entity, _impl_.correlated_)}},
    // .anduril.entitymanager.v1.MilView mil_view = 10 [json_name = "milView"];
    {::_pbi::TcParser::FastMtS1,
     {82, 6, 6, PROTOBUF_FIELD_OFFSET(Entity, _impl_.mil_view_)}},
    // .anduril.entitymanager.v1.Ontology ontology = 11 [json_name = "ontology"];
    {::_pbi::TcParser::FastMtS1,
     {90, 7, 7, PROTOBUF_FIELD_OFFSET(Entity, _impl_.ontology_)}},
    // .anduril.entitymanager.v1.Provenance provenance = 12 [json_name = "provenance"];
    {::_pbi::TcParser::FastMtS1,
     {98, 8, 8, PROTOBUF_FIELD_OFFSET(Entity, _impl_.provenance_)}},
    // .anduril.entitymanager.v1.Overrides overrides = 13 [json_name = "overrides"];
    {::_pbi::TcParser::FastMtS1,
     {106, 9, 9, PROTOBUF_FIELD_OFFSET(Entity, _impl_.overrides_)}},
    // .anduril.entitymanager.v1.Indicators indicators = 14 [json_name = "indicators"];
    {::_pbi::TcParser::FastMtS1,
     {114, 10, 10, PROTOBUF_FIELD_OFFSET(Entity, _impl_.indicators_)}},
    // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 15 [json_name = "locationUncertainty"];
    {::_pbi::TcParser::FastMtS1,
     {122, 11, 11, PROTOBUF_FIELD_OFFSET(Entity, _impl_.location_uncertainty_)}},
    // .anduril.entitymanager.v1.Media media = 32 [json_name = "media"];
    {::_pbi::TcParser::FastMtS2,
     {642, 26, 26, PROTOBUF_FIELD_OFFSET(Entity, _impl_.media_)}},
    // .anduril.entitymanager.v1.GeoPolygon geopolygon = 17 [json_name = "geopolygon", deprecated = true];
    {::_pbi::TcParser::FastMtS2,
     {394, 12, 12, PROTOBUF_FIELD_OFFSET(Entity, _impl_.geopolygon_)}},
    // .anduril.entitymanager.v1.OriginalData original_data = 18 [json_name = "originalData"];
    {::_pbi::TcParser::FastMtS2,
     {402, 13, 13, PROTOBUF_FIELD_OFFSET(Entity, _impl_.original_data_)}},
    // .anduril.entitymanager.v1.Status status = 19 [json_name = "status"];
    {::_pbi::TcParser::FastMtS2,
     {410, 14, 14, PROTOBUF_FIELD_OFFSET(Entity, _impl_.status_)}},
    // .anduril.entitymanager.v1.Sensors sensors = 20 [json_name = "sensors"];
    {::_pbi::TcParser::FastMtS2,
     {418, 15, 15, PROTOBUF_FIELD_OFFSET(Entity, _impl_.sensors_)}},
    // .anduril.entitymanager.v1.Payloads payloads = 21 [json_name = "payloads"];
    {::_pbi::TcParser::FastMtS2,
     {426, 16, 16, PROTOBUF_FIELD_OFFSET(Entity, _impl_.payloads_)}},
    // .anduril.entitymanager.v1.TargetPriority target_priority = 22 [json_name = "targetPriority"];
    {::_pbi::TcParser::FastMtS2,
     {434, 17, 17, PROTOBUF_FIELD_OFFSET(Entity, _impl_.target_priority_)}},
    // .anduril.entitymanager.v1.GeoShape geo_shape = 23 [json_name = "geoShape"];
    {::_pbi::TcParser::FastMtS2,
     {442, 18, 18, PROTOBUF_FIELD_OFFSET(Entity, _impl_.geo_shape_)}},
    // .anduril.entitymanager.v1.GeoDetails geo_details = 24 [json_name = "geoDetails"];
    {::_pbi::TcParser::FastMtS2,
     {450, 19, 19, PROTOBUF_FIELD_OFFSET(Entity, _impl_.geo_details_)}},
    // .anduril.entitymanager.v1.Signal signal = 25 [json_name = "signal"];
    {::_pbi::TcParser::FastMtS2,
     {458, 20, 20, PROTOBUF_FIELD_OFFSET(Entity, _impl_.signal_)}},
    // .anduril.entitymanager.v1.TransponderCodes transponder_codes = 26 [json_name = "transponderCodes"];
    {::_pbi::TcParser::FastMtS2,
     {466, 21, 21, PROTOBUF_FIELD_OFFSET(Entity, _impl_.transponder_codes_)}},
    // .anduril.entitymanager.v1.ContactDetails contact = 27 [json_name = "contact"];
    {::_pbi::TcParser::FastMtS2,
     {474, 22, 22, PROTOBUF_FIELD_OFFSET(Entity, _impl_.contact_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.Classification data_classification = 29 [json_name = "dataClassification"];
    {::_pbi::TcParser::FastMtS2,
     {490, 23, 23, PROTOBUF_FIELD_OFFSET(Entity, _impl_.data_classification_)}},
    // .anduril.entitymanager.v1.PowerState power_state = 30 [json_name = "powerState"];
    {::_pbi::TcParser::FastMtS2,
     {498, 24, 24, PROTOBUF_FIELD_OFFSET(Entity, _impl_.power_state_)}},
    // .anduril.tasks.v2.TaskCatalog task_catalog = 31 [json_name = "taskCatalog"];
    {::_pbi::TcParser::FastMtS2,
     {506, 25, 25, PROTOBUF_FIELD_OFFSET(Entity, _impl_.task_catalog_)}},
  }}, {{
    33, 0, 1,
    63488, 30,
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.entity_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_live = 3 [json_name = "isLive"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.is_live_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.Timestamp created_time = 4 [json_name = "createdTime"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.created_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp expiry_time = 5 [json_name = "expiryTime"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.expiry_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Location location = 6 [json_name = "location"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.location_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Aliases aliases = 7 [json_name = "aliases"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.aliases_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Tracked tracked = 8 [json_name = "tracked"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.tracked_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Correlated correlated = 9 [json_name = "correlated"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.correlated_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.MilView mil_view = 10 [json_name = "milView"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.mil_view_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Ontology ontology = 11 [json_name = "ontology"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.ontology_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Provenance provenance = 12 [json_name = "provenance"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.provenance_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Overrides overrides = 13 [json_name = "overrides"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.overrides_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Indicators indicators = 14 [json_name = "indicators"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.indicators_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 15 [json_name = "locationUncertainty"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.location_uncertainty_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoPolygon geopolygon = 17 [json_name = "geopolygon", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.geopolygon_), _Internal::kHasBitsOffset + 12, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.OriginalData original_data = 18 [json_name = "originalData"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.original_data_), _Internal::kHasBitsOffset + 13, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Status status = 19 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.status_), _Internal::kHasBitsOffset + 14, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Sensors sensors = 20 [json_name = "sensors"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.sensors_), _Internal::kHasBitsOffset + 15, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Payloads payloads = 21 [json_name = "payloads"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.payloads_), _Internal::kHasBitsOffset + 16, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.TargetPriority target_priority = 22 [json_name = "targetPriority"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.target_priority_), _Internal::kHasBitsOffset + 17, 17,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoShape geo_shape = 23 [json_name = "geoShape"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.geo_shape_), _Internal::kHasBitsOffset + 18, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoDetails geo_details = 24 [json_name = "geoDetails"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.geo_details_), _Internal::kHasBitsOffset + 19, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Signal signal = 25 [json_name = "signal"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.signal_), _Internal::kHasBitsOffset + 20, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.TransponderCodes transponder_codes = 26 [json_name = "transponderCodes"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.transponder_codes_), _Internal::kHasBitsOffset + 21, 21,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.ContactDetails contact = 27 [json_name = "contact"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.contact_), _Internal::kHasBitsOffset + 22, 22,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Classification data_classification = 29 [json_name = "dataClassification"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.data_classification_), _Internal::kHasBitsOffset + 23, 23,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.PowerState power_state = 30 [json_name = "powerState"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.power_state_), _Internal::kHasBitsOffset + 24, 24,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.TaskCatalog task_catalog = 31 [json_name = "taskCatalog"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.task_catalog_), _Internal::kHasBitsOffset + 25, 25,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Media media = 32 [json_name = "media"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.media_), _Internal::kHasBitsOffset + 26, 26,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Relationships relationships = 33 [json_name = "relationships"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.relationships_), _Internal::kHasBitsOffset + 27, 27,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.VisualDetails visual_details = 34 [json_name = "visualDetails"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.visual_details_), _Internal::kHasBitsOffset + 28, 28,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.PrototypeExtensions prototype_extensions = 35 [json_name = "prototypeExtensions"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.prototype_extensions_), _Internal::kHasBitsOffset + 29, 29,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Dimensions dimensions = 36 [json_name = "dimensions"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.dimensions_), _Internal::kHasBitsOffset + 30, 30,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.RouteDetails route_details = 37 [json_name = "routeDetails"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.route_details_), _Internal::kHasBitsOffset + 31, 31,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Schedules schedules = 38 [json_name = "schedules"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.schedules_), _Internal::kHasBitsOffset + 32, 32,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Health health = 39 [json_name = "health"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.health_), _Internal::kHasBitsOffset + 33, 33,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GroupDetails group_details = 40 [json_name = "groupDetails"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.group_details_), _Internal::kHasBitsOffset + 34, 34,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.TeamStatus team_status = 41 [json_name = "teamStatus"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.team_status_), _Internal::kHasBitsOffset + 35, 35,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .anduril.entitymanager.v1.Supplies supplies = 42 [json_name = "supplies"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.supplies_), _Internal::kHasBitsOffset + 36, 36,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool no_expiry = 43 [json_name = "noExpiry"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.no_expiry_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Location>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Aliases>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Tracked>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Correlated>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::MilView>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Ontology>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Provenance>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Overrides>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Indicators>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::LocationUncertainty>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoPolygon>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::OriginalData>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Status>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Sensors>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Payloads>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::TargetPriority>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoShape>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Signal>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::TransponderCodes>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ContactDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Classification>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::PowerState>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::TaskCatalog>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Media>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Relationships>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::VisualDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::PrototypeExtensions>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Dimensions>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::RouteDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Schedules>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Health>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GroupDetails>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::anduril::entitymanager::v1::_TeamStatus_default_instance_},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Supplies>()},
  }}, {{
    "\37\11\13\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "anduril.entitymanager.v1.Entity"
    "entity_id"
    "description"
  }},
};

::uint8_t* Entity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Entity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    const std::string& _s = this->_internal_entity_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Entity.entity_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Entity.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool is_live = 3 [json_name = "isLive"];
  if (this->_internal_is_live() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_live(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp created_time = 4 [json_name = "createdTime"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::created_time(this),
        _Internal::created_time(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp expiry_time = 5 [json_name = "expiryTime"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::expiry_time(this),
        _Internal::expiry_time(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Location location = 6 [json_name = "location"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Aliases aliases = 7 [json_name = "aliases"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::aliases(this),
        _Internal::aliases(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Tracked tracked = 8 [json_name = "tracked"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::tracked(this),
        _Internal::tracked(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Correlated correlated = 9 [json_name = "correlated"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::correlated(this),
        _Internal::correlated(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.MilView mil_view = 10 [json_name = "milView"];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::mil_view(this),
        _Internal::mil_view(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Ontology ontology = 11 [json_name = "ontology"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::ontology(this),
        _Internal::ontology(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Provenance provenance = 12 [json_name = "provenance"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, _Internal::provenance(this),
        _Internal::provenance(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Overrides overrides = 13 [json_name = "overrides"];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, _Internal::overrides(this),
        _Internal::overrides(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Indicators indicators = 14 [json_name = "indicators"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, _Internal::indicators(this),
        _Internal::indicators(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 15 [json_name = "locationUncertainty"];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, _Internal::location_uncertainty(this),
        _Internal::location_uncertainty(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.GeoPolygon geopolygon = 17 [json_name = "geopolygon", deprecated = true];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        17, _Internal::geopolygon(this),
        _Internal::geopolygon(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.OriginalData original_data = 18 [json_name = "originalData"];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, _Internal::original_data(this),
        _Internal::original_data(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Status status = 19 [json_name = "status"];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Sensors sensors = 20 [json_name = "sensors"];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        20, _Internal::sensors(this),
        _Internal::sensors(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Payloads payloads = 21 [json_name = "payloads"];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, _Internal::payloads(this),
        _Internal::payloads(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.TargetPriority target_priority = 22 [json_name = "targetPriority"];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        22, _Internal::target_priority(this),
        _Internal::target_priority(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.GeoShape geo_shape = 23 [json_name = "geoShape"];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        23, _Internal::geo_shape(this),
        _Internal::geo_shape(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.GeoDetails geo_details = 24 [json_name = "geoDetails"];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        24, _Internal::geo_details(this),
        _Internal::geo_details(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Signal signal = 25 [json_name = "signal"];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        25, _Internal::signal(this),
        _Internal::signal(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.TransponderCodes transponder_codes = 26 [json_name = "transponderCodes"];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        26, _Internal::transponder_codes(this),
        _Internal::transponder_codes(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.ContactDetails contact = 27 [json_name = "contact"];
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, _Internal::contact(this),
        _Internal::contact(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Classification data_classification = 29 [json_name = "dataClassification"];
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        29, _Internal::data_classification(this),
        _Internal::data_classification(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.PowerState power_state = 30 [json_name = "powerState"];
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        30, _Internal::power_state(this),
        _Internal::power_state(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.TaskCatalog task_catalog = 31 [json_name = "taskCatalog"];
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        31, _Internal::task_catalog(this),
        _Internal::task_catalog(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Media media = 32 [json_name = "media"];
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        32, _Internal::media(this),
        _Internal::media(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Relationships relationships = 33 [json_name = "relationships"];
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        33, _Internal::relationships(this),
        _Internal::relationships(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.VisualDetails visual_details = 34 [json_name = "visualDetails"];
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        34, _Internal::visual_details(this),
        _Internal::visual_details(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.PrototypeExtensions prototype_extensions = 35 [json_name = "prototypeExtensions"];
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        35, _Internal::prototype_extensions(this),
        _Internal::prototype_extensions(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Dimensions dimensions = 36 [json_name = "dimensions"];
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        36, _Internal::dimensions(this),
        _Internal::dimensions(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.RouteDetails route_details = 37 [json_name = "routeDetails"];
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        37, _Internal::route_details(this),
        _Internal::route_details(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // .anduril.entitymanager.v1.Schedules schedules = 38 [json_name = "schedules"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        38, _Internal::schedules(this),
        _Internal::schedules(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Health health = 39 [json_name = "health"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        39, _Internal::health(this),
        _Internal::health(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.GroupDetails group_details = 40 [json_name = "groupDetails"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        40, _Internal::group_details(this),
        _Internal::group_details(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.TeamStatus team_status = 41 [json_name = "teamStatus"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        41, _Internal::team_status(this),
        _Internal::team_status(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Supplies supplies = 42 [json_name = "supplies"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        42, _Internal::supplies(this),
        _Internal::supplies(this).GetCachedSize(), target, stream);
  }

  // bool no_expiry = 43 [json_name = "noExpiry"];
  if (this->_internal_no_expiry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        43, this->_internal_no_expiry(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Entity)
  return target;
}

::size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Entity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_entity_id());
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .google.protobuf.Timestamp created_time = 4 [json_name = "createdTime"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.created_time_);
    }

    // .google.protobuf.Timestamp expiry_time = 5 [json_name = "expiryTime"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expiry_time_);
    }

    // .anduril.entitymanager.v1.Location location = 6 [json_name = "location"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_);
    }

    // .anduril.entitymanager.v1.Aliases aliases = 7 [json_name = "aliases"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.aliases_);
    }

    // .anduril.entitymanager.v1.Tracked tracked = 8 [json_name = "tracked"];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tracked_);
    }

    // .anduril.entitymanager.v1.Correlated correlated = 9 [json_name = "correlated"];
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.correlated_);
    }

    // .anduril.entitymanager.v1.MilView mil_view = 10 [json_name = "milView"];
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mil_view_);
    }

    // .anduril.entitymanager.v1.Ontology ontology = 11 [json_name = "ontology"];
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ontology_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // .anduril.entitymanager.v1.Provenance provenance = 12 [json_name = "provenance"];
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.provenance_);
    }

    // .anduril.entitymanager.v1.Overrides overrides = 13 [json_name = "overrides"];
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.overrides_);
    }

    // .anduril.entitymanager.v1.Indicators indicators = 14 [json_name = "indicators"];
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.indicators_);
    }

    // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 15 [json_name = "locationUncertainty"];
    if (cached_has_bits & 0x00000800u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_uncertainty_);
    }

    // .anduril.entitymanager.v1.GeoPolygon geopolygon = 17 [json_name = "geopolygon", deprecated = true];
    if (cached_has_bits & 0x00001000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.geopolygon_);
    }

    // .anduril.entitymanager.v1.OriginalData original_data = 18 [json_name = "originalData"];
    if (cached_has_bits & 0x00002000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.original_data_);
    }

    // .anduril.entitymanager.v1.Status status = 19 [json_name = "status"];
    if (cached_has_bits & 0x00004000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .anduril.entitymanager.v1.Sensors sensors = 20 [json_name = "sensors"];
    if (cached_has_bits & 0x00008000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sensors_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // .anduril.entitymanager.v1.Payloads payloads = 21 [json_name = "payloads"];
    if (cached_has_bits & 0x00010000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payloads_);
    }

    // .anduril.entitymanager.v1.TargetPriority target_priority = 22 [json_name = "targetPriority"];
    if (cached_has_bits & 0x00020000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.target_priority_);
    }

    // .anduril.entitymanager.v1.GeoShape geo_shape = 23 [json_name = "geoShape"];
    if (cached_has_bits & 0x00040000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.geo_shape_);
    }

    // .anduril.entitymanager.v1.GeoDetails geo_details = 24 [json_name = "geoDetails"];
    if (cached_has_bits & 0x00080000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.geo_details_);
    }

    // .anduril.entitymanager.v1.Signal signal = 25 [json_name = "signal"];
    if (cached_has_bits & 0x00100000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.signal_);
    }

    // .anduril.entitymanager.v1.TransponderCodes transponder_codes = 26 [json_name = "transponderCodes"];
    if (cached_has_bits & 0x00200000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transponder_codes_);
    }

    // .anduril.entitymanager.v1.ContactDetails contact = 27 [json_name = "contact"];
    if (cached_has_bits & 0x00400000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.contact_);
    }

    // .anduril.entitymanager.v1.Classification data_classification = 29 [json_name = "dataClassification"];
    if (cached_has_bits & 0x00800000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_classification_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // .anduril.entitymanager.v1.PowerState power_state = 30 [json_name = "powerState"];
    if (cached_has_bits & 0x01000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.power_state_);
    }

    // .anduril.tasks.v2.TaskCatalog task_catalog = 31 [json_name = "taskCatalog"];
    if (cached_has_bits & 0x02000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_catalog_);
    }

    // .anduril.entitymanager.v1.Media media = 32 [json_name = "media"];
    if (cached_has_bits & 0x04000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.media_);
    }

    // .anduril.entitymanager.v1.Relationships relationships = 33 [json_name = "relationships"];
    if (cached_has_bits & 0x08000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.relationships_);
    }

    // .anduril.entitymanager.v1.VisualDetails visual_details = 34 [json_name = "visualDetails"];
    if (cached_has_bits & 0x10000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.visual_details_);
    }

    // .anduril.entitymanager.v1.PrototypeExtensions prototype_extensions = 35 [json_name = "prototypeExtensions"];
    if (cached_has_bits & 0x20000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.prototype_extensions_);
    }

    // .anduril.entitymanager.v1.Dimensions dimensions = 36 [json_name = "dimensions"];
    if (cached_has_bits & 0x40000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dimensions_);
    }

    // .anduril.entitymanager.v1.RouteDetails route_details = 37 [json_name = "routeDetails"];
    if (cached_has_bits & 0x80000000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.route_details_);
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x0000001fu) {
    // .anduril.entitymanager.v1.Schedules schedules = 38 [json_name = "schedules"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.schedules_);
    }

    // .anduril.entitymanager.v1.Health health = 39 [json_name = "health"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.health_);
    }

    // .anduril.entitymanager.v1.GroupDetails group_details = 40 [json_name = "groupDetails"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.group_details_);
    }

    // .anduril.entitymanager.v1.TeamStatus team_status = 41 [json_name = "teamStatus"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.team_status_);
    }

    // .anduril.entitymanager.v1.Supplies supplies = 42 [json_name = "supplies"];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.supplies_);
    }

  }
  // bool is_live = 3 [json_name = "isLive"];
  if (this->_internal_is_live() != 0) {
    total_size += 2;
  }

  // bool no_expiry = 43 [json_name = "noExpiry"];
  if (this->_internal_no_expiry() != 0) {
    total_size += 3;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Entity::_class_data_ = {
    Entity::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Entity::GetClassData() const {
  return &_class_data_;
}

void Entity::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Entity*>(&to_msg);
  auto& from = static_cast<const Entity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Entity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_entity_id().empty()) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_created_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_created_time());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_expiry_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_expiry_time());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_location()->::anduril::entitymanager::v1::Location::MergeFrom(
          from._internal_location());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_aliases()->::anduril::entitymanager::v1::Aliases::MergeFrom(
          from._internal_aliases());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_tracked()->::anduril::entitymanager::v1::Tracked::MergeFrom(
          from._internal_tracked());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_correlated()->::anduril::entitymanager::v1::Correlated::MergeFrom(
          from._internal_correlated());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_mil_view()->::anduril::entitymanager::v1::MilView::MergeFrom(
          from._internal_mil_view());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_ontology()->::anduril::entitymanager::v1::Ontology::MergeFrom(
          from._internal_ontology());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_provenance()->::anduril::entitymanager::v1::Provenance::MergeFrom(
          from._internal_provenance());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_overrides()->::anduril::entitymanager::v1::Overrides::MergeFrom(
          from._internal_overrides());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_indicators()->::anduril::entitymanager::v1::Indicators::MergeFrom(
          from._internal_indicators());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_location_uncertainty()->::anduril::entitymanager::v1::LocationUncertainty::MergeFrom(
          from._internal_location_uncertainty());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_geopolygon()->::anduril::entitymanager::v1::GeoPolygon::MergeFrom(
          from._internal_geopolygon());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_original_data()->::anduril::entitymanager::v1::OriginalData::MergeFrom(
          from._internal_original_data());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_status()->::anduril::entitymanager::v1::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_sensors()->::anduril::entitymanager::v1::Sensors::MergeFrom(
          from._internal_sensors());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_payloads()->::anduril::entitymanager::v1::Payloads::MergeFrom(
          from._internal_payloads());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_target_priority()->::anduril::entitymanager::v1::TargetPriority::MergeFrom(
          from._internal_target_priority());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_geo_shape()->::anduril::entitymanager::v1::GeoShape::MergeFrom(
          from._internal_geo_shape());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_geo_details()->::anduril::entitymanager::v1::GeoDetails::MergeFrom(
          from._internal_geo_details());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_signal()->::anduril::entitymanager::v1::Signal::MergeFrom(
          from._internal_signal());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_transponder_codes()->::anduril::entitymanager::v1::TransponderCodes::MergeFrom(
          from._internal_transponder_codes());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_contact()->::anduril::entitymanager::v1::ContactDetails::MergeFrom(
          from._internal_contact());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_data_classification()->::anduril::entitymanager::v1::Classification::MergeFrom(
          from._internal_data_classification());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_power_state()->::anduril::entitymanager::v1::PowerState::MergeFrom(
          from._internal_power_state());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_task_catalog()->::anduril::tasks::v2::TaskCatalog::MergeFrom(
          from._internal_task_catalog());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_media()->::anduril::entitymanager::v1::Media::MergeFrom(
          from._internal_media());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_relationships()->::anduril::entitymanager::v1::Relationships::MergeFrom(
          from._internal_relationships());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_visual_details()->::anduril::entitymanager::v1::VisualDetails::MergeFrom(
          from._internal_visual_details());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_prototype_extensions()->::anduril::entitymanager::v1::PrototypeExtensions::MergeFrom(
          from._internal_prototype_extensions());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_dimensions()->::anduril::entitymanager::v1::Dimensions::MergeFrom(
          from._internal_dimensions());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_route_details()->::anduril::entitymanager::v1::RouteDetails::MergeFrom(
          from._internal_route_details());
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_schedules()->::anduril::entitymanager::v1::Schedules::MergeFrom(
          from._internal_schedules());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_health()->::anduril::entitymanager::v1::Health::MergeFrom(
          from._internal_health());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_group_details()->::anduril::entitymanager::v1::GroupDetails::MergeFrom(
          from._internal_group_details());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_team_status()->::anduril::entitymanager::v1::TeamStatus::MergeFrom(
          from._internal_team_status());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_supplies()->::anduril::entitymanager::v1::Supplies::MergeFrom(
          from._internal_supplies());
    }
  }
  if (from._internal_is_live() != 0) {
    _this->_internal_set_is_live(from._internal_is_live());
  }
  if (from._internal_no_expiry() != 0) {
    _this->_internal_set_no_expiry(from._internal_no_expiry());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Entity::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Entity::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Entity::InternalSwap(Entity* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Entity, _impl_.no_expiry_)
      + sizeof(Entity::_impl_.no_expiry_)
      - PROTOBUF_FIELD_OFFSET(Entity, _impl_.created_time_)>(
          reinterpret_cast<char*>(&_impl_.created_time_),
          reinterpret_cast<char*>(&other->_impl_.created_time_));
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[0]);
}
// ===================================================================

class Entities::_Internal {
 public:
};

Entities::Entities(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Entities)
}
inline PROTOBUF_NDEBUG_INLINE Entities::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entities_{visibility, arena, from.entities_},
        _cached_size_{0} {}

Entities::Entities(
    ::google::protobuf::Arena* arena,
    const Entities& from)
    : ::google::protobuf::Message(arena) {
  Entities* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Entities)
}
inline PROTOBUF_NDEBUG_INLINE Entities::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entities_{visibility, arena},
        _cached_size_{0} {}

inline void Entities::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Entities::~Entities() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Entities)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Entities::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Entities::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Entities)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entities_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Entities::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Entities::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Entities_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entitymanager.v1.Entity entities = 1 [json_name = "entities"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Entities, _impl_.entities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.Entity entities = 1 [json_name = "entities"];
    {PROTOBUF_FIELD_OFFSET(Entities, _impl_.entities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Entity>()},
  }}, {{
  }},
};

::uint8_t* Entities::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Entities)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.Entity entities = 1 [json_name = "entities"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entities_size()); i < n; i++) {
    const auto& repfield = this->_internal_entities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Entities)
  return target;
}

::size_t Entities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Entities)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.Entity entities = 1 [json_name = "entities"];
  total_size += 1UL * this->_internal_entities_size();
  for (const auto& msg : this->_internal_entities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Entities::_class_data_ = {
    Entities::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Entities::GetClassData() const {
  return &_class_data_;
}

void Entities::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Entities*>(&to_msg);
  auto& from = static_cast<const Entities&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Entities)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entities()->MergeFrom(
      from._internal_entities());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Entities::CopyFrom(const Entities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Entities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Entities::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Entities::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Entities::InternalSwap(Entities* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entities_.InternalSwap(&other->_impl_.entities_);
}

::google::protobuf::Metadata Entities::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[1]);
}
// ===================================================================

class Status::_Internal {
 public:
};

Status::Status(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : platform_activity_(arena, from.platform_activity_),
        role_(arena, from.role_),
        _cached_size_{0} {}

Status::Status(
    ::google::protobuf::Arena* arena,
    const Status& from)
    : ::google::protobuf::Message(arena) {
  Status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : platform_activity_(arena),
        role_(arena),
        _cached_size_{0} {}

inline void Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Status)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Status::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.platform_activity_.Destroy();
  _impl_.role_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.platform_activity_.ClearToEmpty();
  _impl_.role_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Status::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> Status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Status_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string role = 2 [json_name = "role"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.role_)}},
    // string platform_activity = 1 [json_name = "platformActivity"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.platform_activity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string platform_activity = 1 [json_name = "platformActivity"];
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.platform_activity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string role = 2 [json_name = "role"];
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.role_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\21\4\0\0\0\0\0"
    "anduril.entitymanager.v1.Status"
    "platform_activity"
    "role"
  }},
};

::uint8_t* Status::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string platform_activity = 1 [json_name = "platformActivity"];
  if (!this->_internal_platform_activity().empty()) {
    const std::string& _s = this->_internal_platform_activity();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Status.platform_activity");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string role = 2 [json_name = "role"];
  if (!this->_internal_role().empty()) {
    const std::string& _s = this->_internal_role();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Status.role");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Status)
  return target;
}

::size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string platform_activity = 1 [json_name = "platformActivity"];
  if (!this->_internal_platform_activity().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_platform_activity());
  }

  // string role = 2 [json_name = "role"];
  if (!this->_internal_role().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_role());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Status::_class_data_ = {
    Status::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Status::GetClassData() const {
  return &_class_data_;
}

void Status::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_platform_activity().empty()) {
    _this->_internal_set_platform_activity(from._internal_platform_activity());
  }
  if (!from._internal_role().empty()) {
    _this->_internal_set_role(from._internal_role());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Status::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Status::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Status::InternalSwap(Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.platform_activity_, &other->_impl_.platform_activity_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.role_, &other->_impl_.role_, arena);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[2]);
}
// ===================================================================

class Aliases::_Internal {
 public:
};

Aliases::Aliases(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Aliases)
}
inline PROTOBUF_NDEBUG_INLINE Aliases::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : alternate_ids_{visibility, arena, from.alternate_ids_},
        name_(arena, from.name_),
        _cached_size_{0} {}

Aliases::Aliases(
    ::google::protobuf::Arena* arena,
    const Aliases& from)
    : ::google::protobuf::Message(arena) {
  Aliases* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Aliases)
}
inline PROTOBUF_NDEBUG_INLINE Aliases::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alternate_ids_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void Aliases::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Aliases::~Aliases() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Aliases)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Aliases::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Aliases::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Aliases)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alternate_ids_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Aliases::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 45, 2> Aliases::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Aliases_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 2 [json_name = "name", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Aliases, _impl_.name_)}},
    // repeated .anduril.entitymanager.v1.AlternateId alternate_ids = 1 [json_name = "alternateIds", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Aliases, _impl_.alternate_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.AlternateId alternate_ids = 1 [json_name = "alternateIds", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Aliases, _impl_.alternate_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string name = 2 [json_name = "name", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Aliases, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::AlternateId>()},
  }}, {{
    "\40\0\4\0\0\0\0\0"
    "anduril.entitymanager.v1.Aliases"
    "name"
  }},
};

::uint8_t* Aliases::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Aliases)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.AlternateId alternate_ids = 1 [json_name = "alternateIds", (.anduril.entitymanager.v1.overridable) = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_alternate_ids_size()); i < n; i++) {
    const auto& repfield = this->_internal_alternate_ids().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string name = 2 [json_name = "name", (.anduril.entitymanager.v1.overridable) = true];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Aliases.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Aliases)
  return target;
}

::size_t Aliases::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Aliases)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.AlternateId alternate_ids = 1 [json_name = "alternateIds", (.anduril.entitymanager.v1.overridable) = true];
  total_size += 1UL * this->_internal_alternate_ids_size();
  for (const auto& msg : this->_internal_alternate_ids()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 2 [json_name = "name", (.anduril.entitymanager.v1.overridable) = true];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Aliases::_class_data_ = {
    Aliases::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Aliases::GetClassData() const {
  return &_class_data_;
}

void Aliases::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Aliases*>(&to_msg);
  auto& from = static_cast<const Aliases&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Aliases)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alternate_ids()->MergeFrom(
      from._internal_alternate_ids());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Aliases::CopyFrom(const Aliases& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Aliases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Aliases::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Aliases::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Aliases::InternalSwap(Aliases* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.alternate_ids_.InternalSwap(&other->_impl_.alternate_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata Aliases::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[3]);
}
// ===================================================================

class Tracked::_Internal {
 public:
  using HasBits = decltype(std::declval<Tracked>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Tracked, _impl_._has_bits_);
  static const ::google::protobuf::Int32Value& track_quality_wrapper(const Tracked* msg);
  static void set_has_track_quality_wrapper(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Int32Value& sensor_hits(const Tracked* msg);
  static void set_has_sensor_hits(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::entitymanager::v1::UInt32Range& number_of_objects(const Tracked* msg);
  static void set_has_number_of_objects(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::anduril::entitymanager::v1::Sensors& sensor_details(const Tracked* msg);
  static void set_has_sensor_details(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::google::protobuf::DoubleValue& radar_cross_section(const Tracked* msg);
  static void set_has_radar_cross_section(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::google::protobuf::Timestamp& last_measurement_time(const Tracked* msg);
  static void set_has_last_measurement_time(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::anduril::entitymanager::v1::LineOfBearing& line_of_bearing(const Tracked* msg);
  static void set_has_line_of_bearing(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::google::protobuf::Int32Value& Tracked::_Internal::track_quality_wrapper(const Tracked* msg) {
  return *msg->_impl_.track_quality_wrapper_;
}
const ::google::protobuf::Int32Value& Tracked::_Internal::sensor_hits(const Tracked* msg) {
  return *msg->_impl_.sensor_hits_;
}
const ::anduril::entitymanager::v1::UInt32Range& Tracked::_Internal::number_of_objects(const Tracked* msg) {
  return *msg->_impl_.number_of_objects_;
}
const ::anduril::entitymanager::v1::Sensors& Tracked::_Internal::sensor_details(const Tracked* msg) {
  return *msg->_impl_.sensor_details_;
}
const ::google::protobuf::DoubleValue& Tracked::_Internal::radar_cross_section(const Tracked* msg) {
  return *msg->_impl_.radar_cross_section_;
}
const ::google::protobuf::Timestamp& Tracked::_Internal::last_measurement_time(const Tracked* msg) {
  return *msg->_impl_.last_measurement_time_;
}
const ::anduril::entitymanager::v1::LineOfBearing& Tracked::_Internal::line_of_bearing(const Tracked* msg) {
  return *msg->_impl_.line_of_bearing_;
}
void Tracked::clear_track_quality_wrapper() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.track_quality_wrapper_ != nullptr) _impl_.track_quality_wrapper_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Tracked::clear_sensor_hits() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.sensor_hits_ != nullptr) _impl_.sensor_hits_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Tracked::clear_number_of_objects() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.number_of_objects_ != nullptr) _impl_.number_of_objects_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Tracked::clear_sensor_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.sensor_details_ != nullptr) _impl_.sensor_details_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Tracked::clear_radar_cross_section() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.radar_cross_section_ != nullptr) _impl_.radar_cross_section_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Tracked::clear_last_measurement_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.last_measurement_time_ != nullptr) _impl_.last_measurement_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void Tracked::clear_line_of_bearing() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.line_of_bearing_ != nullptr) _impl_.line_of_bearing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
Tracked::Tracked(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Tracked)
}
inline PROTOBUF_NDEBUG_INLINE Tracked::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Tracked::Tracked(
    ::google::protobuf::Arena* arena,
    const Tracked& from)
    : ::google::protobuf::Message(arena) {
  Tracked* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.track_quality_wrapper_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Int32Value>(arena, *from._impl_.track_quality_wrapper_)
                : nullptr;
  _impl_.sensor_hits_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Int32Value>(arena, *from._impl_.sensor_hits_)
                : nullptr;
  _impl_.number_of_objects_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::UInt32Range>(arena, *from._impl_.number_of_objects_)
                : nullptr;
  _impl_.sensor_details_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Sensors>(arena, *from._impl_.sensor_details_)
                : nullptr;
  _impl_.radar_cross_section_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.radar_cross_section_)
                : nullptr;
  _impl_.last_measurement_time_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.last_measurement_time_)
                : nullptr;
  _impl_.line_of_bearing_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::LineOfBearing>(arena, *from._impl_.line_of_bearing_)
                : nullptr;
  _impl_.track_quality_ = from._impl_.track_quality_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Tracked)
}
inline PROTOBUF_NDEBUG_INLINE Tracked::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Tracked::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, track_quality_wrapper_),
           0,
           offsetof(Impl_, track_quality_) -
               offsetof(Impl_, track_quality_wrapper_) +
               sizeof(Impl_::track_quality_));
}
Tracked::~Tracked() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Tracked)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Tracked::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.track_quality_wrapper_;
  delete _impl_.sensor_hits_;
  delete _impl_.number_of_objects_;
  delete _impl_.sensor_details_;
  delete _impl_.radar_cross_section_;
  delete _impl_.last_measurement_time_;
  delete _impl_.line_of_bearing_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Tracked::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Tracked)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.track_quality_wrapper_ != nullptr);
      _impl_.track_quality_wrapper_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.sensor_hits_ != nullptr);
      _impl_.sensor_hits_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.number_of_objects_ != nullptr);
      _impl_.number_of_objects_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.sensor_details_ != nullptr);
      _impl_.sensor_details_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.radar_cross_section_ != nullptr);
      _impl_.radar_cross_section_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.last_measurement_time_ != nullptr);
      _impl_.last_measurement_time_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.line_of_bearing_ != nullptr);
      _impl_.line_of_bearing_->Clear();
    }
  }
  _impl_.track_quality_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Tracked::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 7, 0, 2> Tracked::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Tracked, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Tracked_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 track_quality = 1 [json_name = "trackQuality", deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Tracked, _impl_.track_quality_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.track_quality_)}},
    // .google.protobuf.Int32Value track_quality_wrapper = 2 [json_name = "trackQualityWrapper"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.track_quality_wrapper_)}},
    // .google.protobuf.Int32Value sensor_hits = 3 [json_name = "sensorHits"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.sensor_hits_)}},
    // .anduril.entitymanager.v1.UInt32Range number_of_objects = 4 [json_name = "numberOfObjects"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.number_of_objects_)}},
    // .anduril.entitymanager.v1.Sensors sensor_details = 5 [json_name = "sensorDetails", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.sensor_details_)}},
    // .google.protobuf.DoubleValue radar_cross_section = 6 [json_name = "radarCrossSection"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 4, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.radar_cross_section_)}},
    // .google.protobuf.Timestamp last_measurement_time = 7 [json_name = "lastMeasurementTime"];
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 5, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.last_measurement_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.LineOfBearing line_of_bearing = 9 [json_name = "lineOfBearing"];
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 6, PROTOBUF_FIELD_OFFSET(Tracked, _impl_.line_of_bearing_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 track_quality = 1 [json_name = "trackQuality", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.track_quality_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .google.protobuf.Int32Value track_quality_wrapper = 2 [json_name = "trackQualityWrapper"];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.track_quality_wrapper_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int32Value sensor_hits = 3 [json_name = "sensorHits"];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.sensor_hits_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.UInt32Range number_of_objects = 4 [json_name = "numberOfObjects"];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.number_of_objects_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Sensors sensor_details = 5 [json_name = "sensorDetails", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.sensor_details_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue radar_cross_section = 6 [json_name = "radarCrossSection"];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.radar_cross_section_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp last_measurement_time = 7 [json_name = "lastMeasurementTime"];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.last_measurement_time_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.LineOfBearing line_of_bearing = 9 [json_name = "lineOfBearing"];
    {PROTOBUF_FIELD_OFFSET(Tracked, _impl_.line_of_bearing_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int32Value>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int32Value>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::UInt32Range>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Sensors>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::LineOfBearing>()},
  }}, {{
  }},
};

::uint8_t* Tracked::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Tracked)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 track_quality = 1 [json_name = "trackQuality", deprecated = true];
  if (this->_internal_track_quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_track_quality(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Int32Value track_quality_wrapper = 2 [json_name = "trackQualityWrapper"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::track_quality_wrapper(this),
        _Internal::track_quality_wrapper(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int32Value sensor_hits = 3 [json_name = "sensorHits"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::sensor_hits(this),
        _Internal::sensor_hits(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.UInt32Range number_of_objects = 4 [json_name = "numberOfObjects"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::number_of_objects(this),
        _Internal::number_of_objects(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Sensors sensor_details = 5 [json_name = "sensorDetails", deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::sensor_details(this),
        _Internal::sensor_details(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue radar_cross_section = 6 [json_name = "radarCrossSection"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::radar_cross_section(this),
        _Internal::radar_cross_section(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_measurement_time = 7 [json_name = "lastMeasurementTime"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::last_measurement_time(this),
        _Internal::last_measurement_time(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.LineOfBearing line_of_bearing = 9 [json_name = "lineOfBearing"];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::line_of_bearing(this),
        _Internal::line_of_bearing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Tracked)
  return target;
}

::size_t Tracked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Tracked)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // .google.protobuf.Int32Value track_quality_wrapper = 2 [json_name = "trackQualityWrapper"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.track_quality_wrapper_);
    }

    // .google.protobuf.Int32Value sensor_hits = 3 [json_name = "sensorHits"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sensor_hits_);
    }

    // .anduril.entitymanager.v1.UInt32Range number_of_objects = 4 [json_name = "numberOfObjects"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.number_of_objects_);
    }

    // .anduril.entitymanager.v1.Sensors sensor_details = 5 [json_name = "sensorDetails", deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sensor_details_);
    }

    // .google.protobuf.DoubleValue radar_cross_section = 6 [json_name = "radarCrossSection"];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.radar_cross_section_);
    }

    // .google.protobuf.Timestamp last_measurement_time = 7 [json_name = "lastMeasurementTime"];
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.last_measurement_time_);
    }

    // .anduril.entitymanager.v1.LineOfBearing line_of_bearing = 9 [json_name = "lineOfBearing"];
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.line_of_bearing_);
    }

  }
  // uint32 track_quality = 1 [json_name = "trackQuality", deprecated = true];
  if (this->_internal_track_quality() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_track_quality());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Tracked::_class_data_ = {
    Tracked::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Tracked::GetClassData() const {
  return &_class_data_;
}

void Tracked::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Tracked*>(&to_msg);
  auto& from = static_cast<const Tracked&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Tracked)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_track_quality_wrapper()->::google::protobuf::Int32Value::MergeFrom(
          from._internal_track_quality_wrapper());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_sensor_hits()->::google::protobuf::Int32Value::MergeFrom(
          from._internal_sensor_hits());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_number_of_objects()->::anduril::entitymanager::v1::UInt32Range::MergeFrom(
          from._internal_number_of_objects());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_sensor_details()->::anduril::entitymanager::v1::Sensors::MergeFrom(
          from._internal_sensor_details());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_radar_cross_section()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_radar_cross_section());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_last_measurement_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_last_measurement_time());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_line_of_bearing()->::anduril::entitymanager::v1::LineOfBearing::MergeFrom(
          from._internal_line_of_bearing());
    }
  }
  if (from._internal_track_quality() != 0) {
    _this->_internal_set_track_quality(from._internal_track_quality());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Tracked::CopyFrom(const Tracked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Tracked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Tracked::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Tracked::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Tracked::InternalSwap(Tracked* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tracked, _impl_.track_quality_)
      + sizeof(Tracked::_impl_.track_quality_)
      - PROTOBUF_FIELD_OFFSET(Tracked, _impl_.track_quality_wrapper_)>(
          reinterpret_cast<char*>(&_impl_.track_quality_wrapper_),
          reinterpret_cast<char*>(&other->_impl_.track_quality_wrapper_));
}

::google::protobuf::Metadata Tracked::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[4]);
}
// ===================================================================

class Provenance::_Internal {
 public:
  using HasBits = decltype(std::declval<Provenance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Provenance, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& source_update_time(const Provenance* msg);
  static void set_has_source_update_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& Provenance::_Internal::source_update_time(const Provenance* msg) {
  return *msg->_impl_.source_update_time_;
}
void Provenance::clear_source_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.source_update_time_ != nullptr) _impl_.source_update_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Provenance::Provenance(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Provenance)
}
inline PROTOBUF_NDEBUG_INLINE Provenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        source_id_(arena, from.source_id_),
        source_description_(arena, from.source_description_),
        integration_name_(arena, from.integration_name_),
        data_type_(arena, from.data_type_) {}

Provenance::Provenance(
    ::google::protobuf::Arena* arena,
    const Provenance& from)
    : ::google::protobuf::Message(arena) {
  Provenance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.source_update_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.source_update_time_)
                : nullptr;
  _impl_.source_ = from._impl_.source_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Provenance)
}
inline PROTOBUF_NDEBUG_INLINE Provenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        source_id_(arena),
        source_description_(arena),
        integration_name_(arena),
        data_type_(arena) {}

inline void Provenance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, source_update_time_),
           0,
           offsetof(Impl_, source_) -
               offsetof(Impl_, source_update_time_) +
               sizeof(Impl_::source_));
}
Provenance::~Provenance() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Provenance)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Provenance::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.source_id_.Destroy();
  _impl_.source_description_.Destroy();
  _impl_.integration_name_.Destroy();
  _impl_.data_type_.Destroy();
  delete _impl_.source_update_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Provenance::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Provenance)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_id_.ClearToEmpty();
  _impl_.source_description_.ClearToEmpty();
  _impl_.integration_name_.ClearToEmpty();
  _impl_.data_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.source_update_time_ != nullptr);
    _impl_.source_update_time_->Clear();
  }
  _impl_.source_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Provenance::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 96, 2> Provenance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Provenance, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Provenance_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.Source source = 1 [json_name = "source"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Provenance, _impl_.source_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_)}},
    // .google.protobuf.Timestamp source_update_time = 2 [json_name = "sourceUpdateTime"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_update_time_)}},
    // string source_id = 3 [json_name = "sourceId"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_id_)}},
    // string source_description = 4 [json_name = "sourceDescription"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_description_)}},
    // string integration_name = 5 [json_name = "integrationName"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Provenance, _impl_.integration_name_)}},
    // string data_type = 6 [json_name = "dataType"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Provenance, _impl_.data_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Source source = 1 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp source_update_time = 2 [json_name = "sourceUpdateTime"];
    {PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_update_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string source_id = 3 [json_name = "sourceId"];
    {PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_description = 4 [json_name = "sourceDescription"];
    {PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string integration_name = 5 [json_name = "integrationName"];
    {PROTOBUF_FIELD_OFFSET(Provenance, _impl_.integration_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string data_type = 6 [json_name = "dataType"];
    {PROTOBUF_FIELD_OFFSET(Provenance, _impl_.data_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\43\0\0\11\22\20\11\0"
    "anduril.entitymanager.v1.Provenance"
    "source_id"
    "source_description"
    "integration_name"
    "data_type"
  }},
};

::uint8_t* Provenance::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Provenance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.Source source = 1 [json_name = "source"];
  if (this->_internal_source() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_source(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp source_update_time = 2 [json_name = "sourceUpdateTime"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::source_update_time(this),
        _Internal::source_update_time(this).GetCachedSize(), target, stream);
  }

  // string source_id = 3 [json_name = "sourceId"];
  if (!this->_internal_source_id().empty()) {
    const std::string& _s = this->_internal_source_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Provenance.source_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string source_description = 4 [json_name = "sourceDescription"];
  if (!this->_internal_source_description().empty()) {
    const std::string& _s = this->_internal_source_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Provenance.source_description");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string integration_name = 5 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    const std::string& _s = this->_internal_integration_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Provenance.integration_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string data_type = 6 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    const std::string& _s = this->_internal_data_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Provenance.data_type");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Provenance)
  return target;
}

::size_t Provenance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Provenance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source_id = 3 [json_name = "sourceId"];
  if (!this->_internal_source_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_source_id());
  }

  // string source_description = 4 [json_name = "sourceDescription"];
  if (!this->_internal_source_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_source_description());
  }

  // string integration_name = 5 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_integration_name());
  }

  // string data_type = 6 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data_type());
  }

  // .google.protobuf.Timestamp source_update_time = 2 [json_name = "sourceUpdateTime"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_update_time_);
  }

  // .anduril.entitymanager.v1.Source source = 1 [json_name = "source"];
  if (this->_internal_source() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_source());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Provenance::_class_data_ = {
    Provenance::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Provenance::GetClassData() const {
  return &_class_data_;
}

void Provenance::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Provenance*>(&to_msg);
  auto& from = static_cast<const Provenance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Provenance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_source_id().empty()) {
    _this->_internal_set_source_id(from._internal_source_id());
  }
  if (!from._internal_source_description().empty()) {
    _this->_internal_set_source_description(from._internal_source_description());
  }
  if (!from._internal_integration_name().empty()) {
    _this->_internal_set_integration_name(from._internal_integration_name());
  }
  if (!from._internal_data_type().empty()) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_source_update_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_source_update_time());
  }
  if (from._internal_source() != 0) {
    _this->_internal_set_source(from._internal_source());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Provenance::CopyFrom(const Provenance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Provenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Provenance::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Provenance::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Provenance::InternalSwap(Provenance* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_id_, &other->_impl_.source_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_description_, &other->_impl_.source_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.integration_name_, &other->_impl_.integration_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_type_, &other->_impl_.data_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_)
      + sizeof(Provenance::_impl_.source_)
      - PROTOBUF_FIELD_OFFSET(Provenance, _impl_.source_update_time_)>(
          reinterpret_cast<char*>(&_impl_.source_update_time_),
          reinterpret_cast<char*>(&other->_impl_.source_update_time_));
}

::google::protobuf::Metadata Provenance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[5]);
}
// ===================================================================

class Indicators::_Internal {
 public:
  using HasBits = decltype(std::declval<Indicators>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Indicators, _impl_._has_bits_);
  static const ::google::protobuf::BoolValue& simulated(const Indicators* msg);
  static void set_has_simulated(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::BoolValue& exercise(const Indicators* msg);
  static void set_has_exercise(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::BoolValue& emergency(const Indicators* msg);
  static void set_has_emergency(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::BoolValue& c2(const Indicators* msg);
  static void set_has_c2(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::google::protobuf::BoolValue& egressable(const Indicators* msg);
  static void set_has_egressable(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::google::protobuf::BoolValue& starred(const Indicators* msg);
  static void set_has_starred(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::google::protobuf::BoolValue& Indicators::_Internal::simulated(const Indicators* msg) {
  return *msg->_impl_.simulated_;
}
const ::google::protobuf::BoolValue& Indicators::_Internal::exercise(const Indicators* msg) {
  return *msg->_impl_.exercise_;
}
const ::google::protobuf::BoolValue& Indicators::_Internal::emergency(const Indicators* msg) {
  return *msg->_impl_.emergency_;
}
const ::google::protobuf::BoolValue& Indicators::_Internal::c2(const Indicators* msg) {
  return *msg->_impl_.c2_;
}
const ::google::protobuf::BoolValue& Indicators::_Internal::egressable(const Indicators* msg) {
  return *msg->_impl_.egressable_;
}
const ::google::protobuf::BoolValue& Indicators::_Internal::starred(const Indicators* msg) {
  return *msg->_impl_.starred_;
}
void Indicators::clear_simulated() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.simulated_ != nullptr) _impl_.simulated_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Indicators::clear_exercise() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.exercise_ != nullptr) _impl_.exercise_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Indicators::clear_emergency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.emergency_ != nullptr) _impl_.emergency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Indicators::clear_c2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.c2_ != nullptr) _impl_.c2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Indicators::clear_egressable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.egressable_ != nullptr) _impl_.egressable_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Indicators::clear_starred() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.starred_ != nullptr) _impl_.starred_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
Indicators::Indicators(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Indicators)
}
inline PROTOBUF_NDEBUG_INLINE Indicators::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Indicators::Indicators(
    ::google::protobuf::Arena* arena,
    const Indicators& from)
    : ::google::protobuf::Message(arena) {
  Indicators* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.simulated_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.simulated_)
                : nullptr;
  _impl_.exercise_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.exercise_)
                : nullptr;
  _impl_.emergency_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.emergency_)
                : nullptr;
  _impl_.c2_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.c2_)
                : nullptr;
  _impl_.egressable_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.egressable_)
                : nullptr;
  _impl_.starred_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.starred_)
                : nullptr;
  _impl_.deletable_ = from._impl_.deletable_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Indicators)
}
inline PROTOBUF_NDEBUG_INLINE Indicators::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Indicators::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, simulated_),
           0,
           offsetof(Impl_, deletable_) -
               offsetof(Impl_, simulated_) +
               sizeof(Impl_::deletable_));
}
Indicators::~Indicators() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Indicators)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Indicators::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.simulated_;
  delete _impl_.exercise_;
  delete _impl_.emergency_;
  delete _impl_.c2_;
  delete _impl_.egressable_;
  delete _impl_.starred_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Indicators::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Indicators)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.simulated_ != nullptr);
      _impl_.simulated_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.exercise_ != nullptr);
      _impl_.exercise_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.emergency_ != nullptr);
      _impl_.emergency_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.c2_ != nullptr);
      _impl_.c2_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.egressable_ != nullptr);
      _impl_.egressable_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.starred_ != nullptr);
      _impl_.starred_->Clear();
    }
  }
  _impl_.deletable_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Indicators::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2> Indicators::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Indicators, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Indicators_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.BoolValue simulated = 1 [json_name = "simulated"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Indicators, _impl_.simulated_)}},
    // .google.protobuf.BoolValue exercise = 2 [json_name = "exercise"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Indicators, _impl_.exercise_)}},
    // .google.protobuf.BoolValue emergency = 3 [json_name = "emergency"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Indicators, _impl_.emergency_)}},
    // .google.protobuf.BoolValue c2 = 4 [json_name = "c2"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Indicators, _impl_.c2_)}},
    // .anduril.entitymanager.v1.Deletable deletable = 5 [json_name = "deletable"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Indicators, _impl_.deletable_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Indicators, _impl_.deletable_)}},
    // .google.protobuf.BoolValue egressable = 6 [json_name = "egressable", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 4, PROTOBUF_FIELD_OFFSET(Indicators, _impl_.egressable_)}},
    // .google.protobuf.BoolValue starred = 7 [json_name = "starred", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 5, PROTOBUF_FIELD_OFFSET(Indicators, _impl_.starred_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.BoolValue simulated = 1 [json_name = "simulated"];
    {PROTOBUF_FIELD_OFFSET(Indicators, _impl_.simulated_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.BoolValue exercise = 2 [json_name = "exercise"];
    {PROTOBUF_FIELD_OFFSET(Indicators, _impl_.exercise_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.BoolValue emergency = 3 [json_name = "emergency"];
    {PROTOBUF_FIELD_OFFSET(Indicators, _impl_.emergency_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.BoolValue c2 = 4 [json_name = "c2"];
    {PROTOBUF_FIELD_OFFSET(Indicators, _impl_.c2_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Deletable deletable = 5 [json_name = "deletable"];
    {PROTOBUF_FIELD_OFFSET(Indicators, _impl_.deletable_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.BoolValue egressable = 6 [json_name = "egressable", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Indicators, _impl_.egressable_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.BoolValue starred = 7 [json_name = "starred", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Indicators, _impl_.starred_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
  }}, {{
  }},
};

::uint8_t* Indicators::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Indicators)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.BoolValue simulated = 1 [json_name = "simulated"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::simulated(this),
        _Internal::simulated(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue exercise = 2 [json_name = "exercise"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::exercise(this),
        _Internal::exercise(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue emergency = 3 [json_name = "emergency"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::emergency(this),
        _Internal::emergency(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue c2 = 4 [json_name = "c2"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::c2(this),
        _Internal::c2(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Deletable deletable = 5 [json_name = "deletable"];
  if (this->_internal_deletable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_deletable(), target);
  }

  // .google.protobuf.BoolValue egressable = 6 [json_name = "egressable", (.anduril.entitymanager.v1.overridable) = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::egressable(this),
        _Internal::egressable(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue starred = 7 [json_name = "starred", (.anduril.entitymanager.v1.overridable) = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::starred(this),
        _Internal::starred(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Indicators)
  return target;
}

::size_t Indicators::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Indicators)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // .google.protobuf.BoolValue simulated = 1 [json_name = "simulated"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.simulated_);
    }

    // .google.protobuf.BoolValue exercise = 2 [json_name = "exercise"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.exercise_);
    }

    // .google.protobuf.BoolValue emergency = 3 [json_name = "emergency"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.emergency_);
    }

    // .google.protobuf.BoolValue c2 = 4 [json_name = "c2"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.c2_);
    }

    // .google.protobuf.BoolValue egressable = 6 [json_name = "egressable", (.anduril.entitymanager.v1.overridable) = true];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.egressable_);
    }

    // .google.protobuf.BoolValue starred = 7 [json_name = "starred", (.anduril.entitymanager.v1.overridable) = true];
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.starred_);
    }

  }
  // .anduril.entitymanager.v1.Deletable deletable = 5 [json_name = "deletable"];
  if (this->_internal_deletable() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_deletable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Indicators::_class_data_ = {
    Indicators::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Indicators::GetClassData() const {
  return &_class_data_;
}

void Indicators::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Indicators*>(&to_msg);
  auto& from = static_cast<const Indicators&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Indicators)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_simulated()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_simulated());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_exercise()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_exercise());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_emergency()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_emergency());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_c2()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_c2());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_egressable()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_egressable());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_starred()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_starred());
    }
  }
  if (from._internal_deletable() != 0) {
    _this->_internal_set_deletable(from._internal_deletable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Indicators::CopyFrom(const Indicators& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Indicators)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Indicators::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Indicators::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Indicators::InternalSwap(Indicators* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Indicators, _impl_.deletable_)
      + sizeof(Indicators::_impl_.deletable_)
      - PROTOBUF_FIELD_OFFSET(Indicators, _impl_.simulated_)>(
          reinterpret_cast<char*>(&_impl_.simulated_),
          reinterpret_cast<char*>(&other->_impl_.simulated_));
}

::google::protobuf::Metadata Indicators::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[6]);
}
// ===================================================================

class Overrides::_Internal {
 public:
};

Overrides::Overrides(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Overrides)
}
inline PROTOBUF_NDEBUG_INLINE Overrides::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : provenance_{visibility, arena, from.provenance_},
        override_{visibility, arena, from.override_},
        _cached_size_{0} {}

Overrides::Overrides(
    ::google::protobuf::Arena* arena,
    const Overrides& from)
    : ::google::protobuf::Message(arena) {
  Overrides* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Overrides)
}
inline PROTOBUF_NDEBUG_INLINE Overrides::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : provenance_{visibility, arena},
        override_{visibility, arena},
        _cached_size_{0} {}

inline void Overrides::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Overrides::~Overrides() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Overrides)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Overrides::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Overrides::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Overrides)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.provenance_.Clear();
  _impl_.override_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Overrides::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Overrides::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Overrides_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entitymanager.v1.Override override = 2 [json_name = "override"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Overrides, _impl_.override_)}},
    // repeated .anduril.entitymanager.v1.OverrideProvenance provenance = 1 [json_name = "provenance", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Overrides, _impl_.provenance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.OverrideProvenance provenance = 1 [json_name = "provenance", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Overrides, _impl_.provenance_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entitymanager.v1.Override override = 2 [json_name = "override"];
    {PROTOBUF_FIELD_OFFSET(Overrides, _impl_.override_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::OverrideProvenance>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Override>()},
  }}, {{
  }},
};

::uint8_t* Overrides::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Overrides)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.OverrideProvenance provenance = 1 [json_name = "provenance", deprecated = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_provenance_size()); i < n; i++) {
    const auto& repfield = this->_internal_provenance().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.entitymanager.v1.Override override = 2 [json_name = "override"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_override_size()); i < n; i++) {
    const auto& repfield = this->_internal_override().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Overrides)
  return target;
}

::size_t Overrides::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Overrides)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.OverrideProvenance provenance = 1 [json_name = "provenance", deprecated = true];
  total_size += 1UL * this->_internal_provenance_size();
  for (const auto& msg : this->_internal_provenance()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.entitymanager.v1.Override override = 2 [json_name = "override"];
  total_size += 1UL * this->_internal_override_size();
  for (const auto& msg : this->_internal_override()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Overrides::_class_data_ = {
    Overrides::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Overrides::GetClassData() const {
  return &_class_data_;
}

void Overrides::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Overrides*>(&to_msg);
  auto& from = static_cast<const Overrides&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Overrides)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_provenance()->MergeFrom(
      from._internal_provenance());
  _this->_internal_mutable_override()->MergeFrom(
      from._internal_override());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Overrides::CopyFrom(const Overrides& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Overrides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Overrides::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Overrides::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Overrides::InternalSwap(Overrides* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.provenance_.InternalSwap(&other->_impl_.provenance_);
  _impl_.override_.InternalSwap(&other->_impl_.override_);
}

::google::protobuf::Metadata Overrides::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[7]);
}
// ===================================================================

class Override::_Internal {
 public:
  using HasBits = decltype(std::declval<Override>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Override, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Entity& masked_field_value(const Override* msg);
  static void set_has_masked_field_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Provenance& provenance(const Override* msg);
  static void set_has_provenance(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::Timestamp& request_timestamp(const Override* msg);
  static void set_has_request_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::entitymanager::v1::Entity& Override::_Internal::masked_field_value(const Override* msg) {
  return *msg->_impl_.masked_field_value_;
}
const ::anduril::entitymanager::v1::Provenance& Override::_Internal::provenance(const Override* msg) {
  return *msg->_impl_.provenance_;
}
const ::google::protobuf::Timestamp& Override::_Internal::request_timestamp(const Override* msg) {
  return *msg->_impl_.request_timestamp_;
}
void Override::clear_request_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.request_timestamp_ != nullptr) _impl_.request_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Override::Override(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Override)
}
inline PROTOBUF_NDEBUG_INLINE Override::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        request_id_(arena, from.request_id_),
        field_path_(arena, from.field_path_) {}

Override::Override(
    ::google::protobuf::Arena* arena,
    const Override& from)
    : ::google::protobuf::Message(arena) {
  Override* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.masked_field_value_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Entity>(arena, *from._impl_.masked_field_value_)
                : nullptr;
  _impl_.provenance_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Provenance>(arena, *from._impl_.provenance_)
                : nullptr;
  _impl_.request_timestamp_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.request_timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Override)
}
inline PROTOBUF_NDEBUG_INLINE Override::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        request_id_(arena),
        field_path_(arena) {}

inline void Override::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, masked_field_value_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, masked_field_value_) +
               sizeof(Impl_::type_));
}
Override::~Override() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Override)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Override::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.request_id_.Destroy();
  _impl_.field_path_.Destroy();
  delete _impl_.masked_field_value_;
  delete _impl_.provenance_;
  delete _impl_.request_timestamp_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Override::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Override)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_.ClearToEmpty();
  _impl_.field_path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.masked_field_value_ != nullptr);
      _impl_.masked_field_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.provenance_ != nullptr);
      _impl_.provenance_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.request_timestamp_ != nullptr);
      _impl_.request_timestamp_->Clear();
    }
  }
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Override::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 62, 2> Override::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Override, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Override_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string request_id = 1 [json_name = "requestId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Override, _impl_.request_id_)}},
    // string field_path = 2 [json_name = "fieldPath"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Override, _impl_.field_path_)}},
    // .anduril.entitymanager.v1.Entity masked_field_value = 3 [json_name = "maskedFieldValue"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Override, _impl_.masked_field_value_)}},
    // .anduril.entitymanager.v1.OverrideStatus status = 4 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Override, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Override, _impl_.status_)}},
    // .anduril.entitymanager.v1.Provenance provenance = 5 [json_name = "provenance"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Override, _impl_.provenance_)}},
    // .anduril.entitymanager.v1.OverrideType type = 6 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Override, _impl_.type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Override, _impl_.type_)}},
    // .google.protobuf.Timestamp request_timestamp = 7 [json_name = "requestTimestamp"];
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(Override, _impl_.request_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1 [json_name = "requestId"];
    {PROTOBUF_FIELD_OFFSET(Override, _impl_.request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string field_path = 2 [json_name = "fieldPath"];
    {PROTOBUF_FIELD_OFFSET(Override, _impl_.field_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.Entity masked_field_value = 3 [json_name = "maskedFieldValue"];
    {PROTOBUF_FIELD_OFFSET(Override, _impl_.masked_field_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.OverrideStatus status = 4 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Override, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.entitymanager.v1.Provenance provenance = 5 [json_name = "provenance"];
    {PROTOBUF_FIELD_OFFSET(Override, _impl_.provenance_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.OverrideType type = 6 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Override, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp request_timestamp = 7 [json_name = "requestTimestamp"];
    {PROTOBUF_FIELD_OFFSET(Override, _impl_.request_timestamp_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Entity>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Provenance>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\41\12\12\0\0\0\0\0"
    "anduril.entitymanager.v1.Override"
    "request_id"
    "field_path"
  }},
};

::uint8_t* Override::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Override)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string request_id = 1 [json_name = "requestId"];
  if (!this->_internal_request_id().empty()) {
    const std::string& _s = this->_internal_request_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Override.request_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string field_path = 2 [json_name = "fieldPath"];
  if (!this->_internal_field_path().empty()) {
    const std::string& _s = this->_internal_field_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Override.field_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Entity masked_field_value = 3 [json_name = "maskedFieldValue"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::masked_field_value(this),
        _Internal::masked_field_value(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.OverrideStatus status = 4 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_status(), target);
  }

  // .anduril.entitymanager.v1.Provenance provenance = 5 [json_name = "provenance"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::provenance(this),
        _Internal::provenance(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.OverrideType type = 6 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_type(), target);
  }

  // .google.protobuf.Timestamp request_timestamp = 7 [json_name = "requestTimestamp"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::request_timestamp(this),
        _Internal::request_timestamp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Override)
  return target;
}

::size_t Override::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Override)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_id = 1 [json_name = "requestId"];
  if (!this->_internal_request_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_request_id());
  }

  // string field_path = 2 [json_name = "fieldPath"];
  if (!this->_internal_field_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field_path());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.entitymanager.v1.Entity masked_field_value = 3 [json_name = "maskedFieldValue"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.masked_field_value_);
    }

    // .anduril.entitymanager.v1.Provenance provenance = 5 [json_name = "provenance"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.provenance_);
    }

    // .google.protobuf.Timestamp request_timestamp = 7 [json_name = "requestTimestamp"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_timestamp_);
    }

  }
  // .anduril.entitymanager.v1.OverrideStatus status = 4 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // .anduril.entitymanager.v1.OverrideType type = 6 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Override::_class_data_ = {
    Override::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Override::GetClassData() const {
  return &_class_data_;
}

void Override::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Override*>(&to_msg);
  auto& from = static_cast<const Override&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Override)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_field_path().empty()) {
    _this->_internal_set_field_path(from._internal_field_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_masked_field_value()->::anduril::entitymanager::v1::Entity::MergeFrom(
          from._internal_masked_field_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_provenance()->::anduril::entitymanager::v1::Provenance::MergeFrom(
          from._internal_provenance());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_request_timestamp()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_request_timestamp());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Override::CopyFrom(const Override& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Override)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Override::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Override::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Override::InternalSwap(Override* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_path_, &other->_impl_.field_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Override, _impl_.type_)
      + sizeof(Override::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Override, _impl_.masked_field_value_)>(
          reinterpret_cast<char*>(&_impl_.masked_field_value_),
          reinterpret_cast<char*>(&other->_impl_.masked_field_value_));
}

::google::protobuf::Metadata Override::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[8]);
}
// ===================================================================

class OverrideProvenance::_Internal {
 public:
  using HasBits = decltype(std::declval<OverrideProvenance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Provenance& provenance(const OverrideProvenance* msg);
  static void set_has_provenance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::entitymanager::v1::Provenance& OverrideProvenance::_Internal::provenance(const OverrideProvenance* msg) {
  return *msg->_impl_.provenance_;
}
OverrideProvenance::OverrideProvenance(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.OverrideProvenance)
}
inline PROTOBUF_NDEBUG_INLINE OverrideProvenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        field_path_(arena, from.field_path_),
        source_id_(arena, from.source_id_) {}

OverrideProvenance::OverrideProvenance(
    ::google::protobuf::Arena* arena,
    const OverrideProvenance& from)
    : ::google::protobuf::Message(arena) {
  OverrideProvenance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.provenance_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Provenance>(arena, *from._impl_.provenance_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.OverrideProvenance)
}
inline PROTOBUF_NDEBUG_INLINE OverrideProvenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        field_path_(arena),
        source_id_(arena) {}

inline void OverrideProvenance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.provenance_ = {};
}
OverrideProvenance::~OverrideProvenance() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.OverrideProvenance)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OverrideProvenance::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.field_path_.Destroy();
  _impl_.source_id_.Destroy();
  delete _impl_.provenance_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OverrideProvenance::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.OverrideProvenance)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_path_.ClearToEmpty();
  _impl_.source_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.provenance_ != nullptr);
    _impl_.provenance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OverrideProvenance::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 71, 2> OverrideProvenance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OverrideProvenance_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string field_path = 1 [json_name = "fieldPath"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_.field_path_)}},
    // string source_id = 2 [json_name = "sourceId", deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_.source_id_)}},
    // .anduril.entitymanager.v1.Provenance provenance = 3 [json_name = "provenance"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_.provenance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string field_path = 1 [json_name = "fieldPath"];
    {PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_.field_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_id = 2 [json_name = "sourceId", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_.source_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.Provenance provenance = 3 [json_name = "provenance"];
    {PROTOBUF_FIELD_OFFSET(OverrideProvenance, _impl_.provenance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Provenance>()},
  }}, {{
    "\53\12\11\0\0\0\0\0"
    "anduril.entitymanager.v1.OverrideProvenance"
    "field_path"
    "source_id"
  }},
};

::uint8_t* OverrideProvenance::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.OverrideProvenance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string field_path = 1 [json_name = "fieldPath"];
  if (!this->_internal_field_path().empty()) {
    const std::string& _s = this->_internal_field_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.OverrideProvenance.field_path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string source_id = 2 [json_name = "sourceId", deprecated = true];
  if (!this->_internal_source_id().empty()) {
    const std::string& _s = this->_internal_source_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.OverrideProvenance.source_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Provenance provenance = 3 [json_name = "provenance"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::provenance(this),
        _Internal::provenance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.OverrideProvenance)
  return target;
}

::size_t OverrideProvenance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.OverrideProvenance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field_path = 1 [json_name = "fieldPath"];
  if (!this->_internal_field_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field_path());
  }

  // string source_id = 2 [json_name = "sourceId", deprecated = true];
  if (!this->_internal_source_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_source_id());
  }

  // .anduril.entitymanager.v1.Provenance provenance = 3 [json_name = "provenance"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.provenance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OverrideProvenance::_class_data_ = {
    OverrideProvenance::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OverrideProvenance::GetClassData() const {
  return &_class_data_;
}

void OverrideProvenance::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OverrideProvenance*>(&to_msg);
  auto& from = static_cast<const OverrideProvenance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.OverrideProvenance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field_path().empty()) {
    _this->_internal_set_field_path(from._internal_field_path());
  }
  if (!from._internal_source_id().empty()) {
    _this->_internal_set_source_id(from._internal_source_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_provenance()->::anduril::entitymanager::v1::Provenance::MergeFrom(
        from._internal_provenance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OverrideProvenance::CopyFrom(const OverrideProvenance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.OverrideProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OverrideProvenance::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OverrideProvenance::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OverrideProvenance::InternalSwap(OverrideProvenance* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_path_, &other->_impl_.field_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_id_, &other->_impl_.source_id_, arena);
  swap(_impl_.provenance_, other->_impl_.provenance_);
}

::google::protobuf::Metadata OverrideProvenance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[9]);
}
// ===================================================================

class OriginalData_TLE::_Internal {
 public:
};

OriginalData_TLE::OriginalData_TLE(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.OriginalData.TLE)
}
inline PROTOBUF_NDEBUG_INLINE OriginalData_TLE::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : line1_(arena, from.line1_),
        line2_(arena, from.line2_),
        _cached_size_{0} {}

OriginalData_TLE::OriginalData_TLE(
    ::google::protobuf::Arena* arena,
    const OriginalData_TLE& from)
    : ::google::protobuf::Message(arena) {
  OriginalData_TLE* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.OriginalData.TLE)
}
inline PROTOBUF_NDEBUG_INLINE OriginalData_TLE::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : line1_(arena),
        line2_(arena),
        _cached_size_{0} {}

inline void OriginalData_TLE::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OriginalData_TLE::~OriginalData_TLE() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.OriginalData.TLE)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OriginalData_TLE::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.line1_.Destroy();
  _impl_.line2_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OriginalData_TLE::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.OriginalData.TLE)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.line1_.ClearToEmpty();
  _impl_.line2_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OriginalData_TLE::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> OriginalData_TLE::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OriginalData_TLE_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string line2 = 2 [json_name = "line2"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OriginalData_TLE, _impl_.line2_)}},
    // string line1 = 1 [json_name = "line1"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OriginalData_TLE, _impl_.line1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string line1 = 1 [json_name = "line1"];
    {PROTOBUF_FIELD_OFFSET(OriginalData_TLE, _impl_.line1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string line2 = 2 [json_name = "line2"];
    {PROTOBUF_FIELD_OFFSET(OriginalData_TLE, _impl_.line2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\5\5\0\0\0\0\0"
    "anduril.entitymanager.v1.OriginalData.TLE"
    "line1"
    "line2"
  }},
};

::uint8_t* OriginalData_TLE::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.OriginalData.TLE)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string line1 = 1 [json_name = "line1"];
  if (!this->_internal_line1().empty()) {
    const std::string& _s = this->_internal_line1();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.OriginalData.TLE.line1");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string line2 = 2 [json_name = "line2"];
  if (!this->_internal_line2().empty()) {
    const std::string& _s = this->_internal_line2();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.OriginalData.TLE.line2");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.OriginalData.TLE)
  return target;
}

::size_t OriginalData_TLE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.OriginalData.TLE)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string line1 = 1 [json_name = "line1"];
  if (!this->_internal_line1().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_line1());
  }

  // string line2 = 2 [json_name = "line2"];
  if (!this->_internal_line2().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_line2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OriginalData_TLE::_class_data_ = {
    OriginalData_TLE::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OriginalData_TLE::GetClassData() const {
  return &_class_data_;
}

void OriginalData_TLE::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OriginalData_TLE*>(&to_msg);
  auto& from = static_cast<const OriginalData_TLE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.OriginalData.TLE)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_line1().empty()) {
    _this->_internal_set_line1(from._internal_line1());
  }
  if (!from._internal_line2().empty()) {
    _this->_internal_set_line2(from._internal_line2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OriginalData_TLE::CopyFrom(const OriginalData_TLE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.OriginalData.TLE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OriginalData_TLE::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OriginalData_TLE::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OriginalData_TLE::InternalSwap(OriginalData_TLE* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.line1_, &other->_impl_.line1_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.line2_, &other->_impl_.line2_, arena);
}

::google::protobuf::Metadata OriginalData_TLE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[10]);
}
// ===================================================================

class OriginalData::_Internal {
 public:
  using HasBits = decltype(std::declval<OriginalData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OriginalData, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::OriginalData_TLE& tle(const OriginalData* msg);
  static void set_has_tle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::entitymanager::v1::OriginalData_TLE& OriginalData::_Internal::tle(const OriginalData* msg) {
  return *msg->_impl_.tle_;
}
OriginalData::OriginalData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.OriginalData)
}
inline PROTOBUF_NDEBUG_INLINE OriginalData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        url_(arena, from.url_) {}

OriginalData::OriginalData(
    ::google::protobuf::Arena* arena,
    const OriginalData& from)
    : ::google::protobuf::Message(arena) {
  OriginalData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tle_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::OriginalData_TLE>(arena, *from._impl_.tle_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.OriginalData)
}
inline PROTOBUF_NDEBUG_INLINE OriginalData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        url_(arena) {}

inline void OriginalData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tle_ = {};
}
OriginalData::~OriginalData() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.OriginalData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OriginalData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  delete _impl_.tle_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OriginalData::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.OriginalData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tle_ != nullptr);
    _impl_.tle_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OriginalData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2> OriginalData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OriginalData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OriginalData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.OriginalData.TLE tle = 2 [json_name = "tle"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OriginalData, _impl_.tle_)}},
    // string url = 1 [json_name = "url"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OriginalData, _impl_.url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url = 1 [json_name = "url"];
    {PROTOBUF_FIELD_OFFSET(OriginalData, _impl_.url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.OriginalData.TLE tle = 2 [json_name = "tle"];
    {PROTOBUF_FIELD_OFFSET(OriginalData, _impl_.tle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::OriginalData_TLE>()},
  }}, {{
    "\45\3\0\0\0\0\0\0"
    "anduril.entitymanager.v1.OriginalData"
    "url"
  }},
};

::uint8_t* OriginalData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.OriginalData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.OriginalData.url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.OriginalData.TLE tle = 2 [json_name = "tle"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::tle(this),
        _Internal::tle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.OriginalData)
  return target;
}

::size_t OriginalData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.OriginalData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  // .anduril.entitymanager.v1.OriginalData.TLE tle = 2 [json_name = "tle"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OriginalData::_class_data_ = {
    OriginalData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OriginalData::GetClassData() const {
  return &_class_data_;
}

void OriginalData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OriginalData*>(&to_msg);
  auto& from = static_cast<const OriginalData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.OriginalData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_tle()->::anduril::entitymanager::v1::OriginalData_TLE::MergeFrom(
        from._internal_tle());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OriginalData::CopyFrom(const OriginalData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.OriginalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OriginalData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OriginalData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OriginalData::InternalSwap(OriginalData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  swap(_impl_.tle_, other->_impl_.tle_);
}

::google::protobuf::Metadata OriginalData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[11]);
}
// ===================================================================

class AlternateId::_Internal {
 public:
};

AlternateId::AlternateId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.AlternateId)
}
inline PROTOBUF_NDEBUG_INLINE AlternateId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : source_(arena, from.source_),
        id_(arena, from.id_),
        _cached_size_{0} {}

AlternateId::AlternateId(
    ::google::protobuf::Arena* arena,
    const AlternateId& from)
    : ::google::protobuf::Message(arena) {
  AlternateId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.AlternateId)
}
inline PROTOBUF_NDEBUG_INLINE AlternateId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : source_(arena),
        id_(arena),
        _cached_size_{0} {}

inline void AlternateId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
AlternateId::~AlternateId() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.AlternateId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AlternateId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.source_.Destroy();
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AlternateId::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.AlternateId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AlternateId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 53, 2> AlternateId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AlternateId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string source = 1 [json_name = "source", deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AlternateId, _impl_.source_)}},
    // string id = 2 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AlternateId, _impl_.id_)}},
    // .anduril.entitymanager.v1.AltIdType type = 3 [json_name = "type", (.anduril.entitymanager.v1.componentIdentifier) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AlternateId, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AlternateId, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string source = 1 [json_name = "source", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(AlternateId, _impl_.source_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 2 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(AlternateId, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.AltIdType type = 3 [json_name = "type", (.anduril.entitymanager.v1.componentIdentifier) = true];
    {PROTOBUF_FIELD_OFFSET(AlternateId, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\44\6\2\0\0\0\0\0"
    "anduril.entitymanager.v1.AlternateId"
    "source"
    "id"
  }},
};

::uint8_t* AlternateId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.AlternateId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string source = 1 [json_name = "source", deprecated = true];
  if (!this->_internal_source().empty()) {
    const std::string& _s = this->_internal_source();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.AlternateId.source");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.AlternateId.id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .anduril.entitymanager.v1.AltIdType type = 3 [json_name = "type", (.anduril.entitymanager.v1.componentIdentifier) = true];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.AlternateId)
  return target;
}

::size_t AlternateId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.AlternateId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source = 1 [json_name = "source", deprecated = true];
  if (!this->_internal_source().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_source());
  }

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // .anduril.entitymanager.v1.AltIdType type = 3 [json_name = "type", (.anduril.entitymanager.v1.componentIdentifier) = true];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AlternateId::_class_data_ = {
    AlternateId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AlternateId::GetClassData() const {
  return &_class_data_;
}

void AlternateId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AlternateId*>(&to_msg);
  auto& from = static_cast<const AlternateId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.AlternateId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_source().empty()) {
    _this->_internal_set_source(from._internal_source());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AlternateId::CopyFrom(const AlternateId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.AlternateId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AlternateId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AlternateId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AlternateId::InternalSwap(AlternateId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata AlternateId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[12]);
}
// ===================================================================

class VisualDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<VisualDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::RangeRings& range_rings(const VisualDetails* msg);
  static void set_has_range_rings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::entitymanager::v1::RangeRings& VisualDetails::_Internal::range_rings(const VisualDetails* msg) {
  return *msg->_impl_.range_rings_;
}
VisualDetails::VisualDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.VisualDetails)
}
inline PROTOBUF_NDEBUG_INLINE VisualDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VisualDetails::VisualDetails(
    ::google::protobuf::Arena* arena,
    const VisualDetails& from)
    : ::google::protobuf::Message(arena) {
  VisualDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.range_rings_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::RangeRings>(arena, *from._impl_.range_rings_)
                : nullptr;
  _impl_.interactivity_mode_ = from._impl_.interactivity_mode_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.VisualDetails)
}
inline PROTOBUF_NDEBUG_INLINE VisualDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VisualDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, range_rings_),
           0,
           offsetof(Impl_, interactivity_mode_) -
               offsetof(Impl_, range_rings_) +
               sizeof(Impl_::interactivity_mode_));
}
VisualDetails::~VisualDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.VisualDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisualDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.range_rings_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VisualDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.VisualDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.range_rings_ != nullptr);
    _impl_.range_rings_->Clear();
  }
  _impl_.interactivity_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisualDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> VisualDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VisualDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.InteractivityMode interactivity_mode = 2 [json_name = "interactivityMode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisualDetails, _impl_.interactivity_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_.interactivity_mode_)}},
    // .anduril.entitymanager.v1.RangeRings range_rings = 1 [json_name = "rangeRings", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_.range_rings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.RangeRings range_rings = 1 [json_name = "rangeRings", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_.range_rings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.InteractivityMode interactivity_mode = 2 [json_name = "interactivityMode"];
    {PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_.interactivity_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::RangeRings>()},
  }}, {{
  }},
};

::uint8_t* VisualDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.VisualDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.RangeRings range_rings = 1 [json_name = "rangeRings", (.anduril.entitymanager.v1.overridable) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::range_rings(this),
        _Internal::range_rings(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.InteractivityMode interactivity_mode = 2 [json_name = "interactivityMode"];
  if (this->_internal_interactivity_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_interactivity_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.VisualDetails)
  return target;
}

::size_t VisualDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.VisualDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.entitymanager.v1.RangeRings range_rings = 1 [json_name = "rangeRings", (.anduril.entitymanager.v1.overridable) = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.range_rings_);
  }

  // .anduril.entitymanager.v1.InteractivityMode interactivity_mode = 2 [json_name = "interactivityMode"];
  if (this->_internal_interactivity_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_interactivity_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisualDetails::_class_data_ = {
    VisualDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VisualDetails::GetClassData() const {
  return &_class_data_;
}

void VisualDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisualDetails*>(&to_msg);
  auto& from = static_cast<const VisualDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.VisualDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_range_rings()->::anduril::entitymanager::v1::RangeRings::MergeFrom(
        from._internal_range_rings());
  }
  if (from._internal_interactivity_mode() != 0) {
    _this->_internal_set_interactivity_mode(from._internal_interactivity_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisualDetails::CopyFrom(const VisualDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.VisualDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisualDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VisualDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VisualDetails::InternalSwap(VisualDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_.interactivity_mode_)
      + sizeof(VisualDetails::_impl_.interactivity_mode_)
      - PROTOBUF_FIELD_OFFSET(VisualDetails, _impl_.range_rings_)>(
          reinterpret_cast<char*>(&_impl_.range_rings_),
          reinterpret_cast<char*>(&other->_impl_.range_rings_));
}

::google::protobuf::Metadata VisualDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[13]);
}
// ===================================================================

class RangeRings::_Internal {
 public:
  using HasBits = decltype(std::declval<RangeRings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RangeRings, _impl_._has_bits_);
  static const ::google::protobuf::DoubleValue& min_distance_m(const RangeRings* msg);
  static void set_has_min_distance_m(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::DoubleValue& max_distance_m(const RangeRings* msg);
  static void set_has_max_distance_m(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::DoubleValue& RangeRings::_Internal::min_distance_m(const RangeRings* msg) {
  return *msg->_impl_.min_distance_m_;
}
const ::google::protobuf::DoubleValue& RangeRings::_Internal::max_distance_m(const RangeRings* msg) {
  return *msg->_impl_.max_distance_m_;
}
void RangeRings::clear_min_distance_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.min_distance_m_ != nullptr) _impl_.min_distance_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RangeRings::clear_max_distance_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.max_distance_m_ != nullptr) _impl_.max_distance_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RangeRings::RangeRings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.RangeRings)
}
inline PROTOBUF_NDEBUG_INLINE RangeRings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RangeRings::RangeRings(
    ::google::protobuf::Arena* arena,
    const RangeRings& from)
    : ::google::protobuf::Message(arena) {
  RangeRings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.min_distance_m_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.min_distance_m_)
                : nullptr;
  _impl_.max_distance_m_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.max_distance_m_)
                : nullptr;
  _impl_.ring_count_ = from._impl_.ring_count_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.RangeRings)
}
inline PROTOBUF_NDEBUG_INLINE RangeRings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RangeRings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_distance_m_),
           0,
           offsetof(Impl_, ring_count_) -
               offsetof(Impl_, min_distance_m_) +
               sizeof(Impl_::ring_count_));
}
RangeRings::~RangeRings() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.RangeRings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RangeRings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.min_distance_m_;
  delete _impl_.max_distance_m_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RangeRings::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.RangeRings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.min_distance_m_ != nullptr);
      _impl_.min_distance_m_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.max_distance_m_ != nullptr);
      _impl_.max_distance_m_->Clear();
    }
  }
  _impl_.ring_count_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RangeRings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> RangeRings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RangeRings, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RangeRings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.min_distance_m_)}},
    // .google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.max_distance_m_)}},
    // uint32 ring_count = 3 [json_name = "ringCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangeRings, _impl_.ring_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.ring_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];
    {PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.min_distance_m_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];
    {PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.max_distance_m_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 ring_count = 3 [json_name = "ringCount"];
    {PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.ring_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

::uint8_t* RangeRings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.RangeRings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::min_distance_m(this),
        _Internal::min_distance_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::max_distance_m(this),
        _Internal::max_distance_m(this).GetCachedSize(), target, stream);
  }

  // uint32 ring_count = 3 [json_name = "ringCount"];
  if (this->_internal_ring_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_ring_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.RangeRings)
  return target;
}

::size_t RangeRings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.RangeRings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.min_distance_m_);
    }

    // .google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.max_distance_m_);
    }

  }
  // uint32 ring_count = 3 [json_name = "ringCount"];
  if (this->_internal_ring_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ring_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RangeRings::_class_data_ = {
    RangeRings::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RangeRings::GetClassData() const {
  return &_class_data_;
}

void RangeRings::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RangeRings*>(&to_msg);
  auto& from = static_cast<const RangeRings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.RangeRings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_min_distance_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_min_distance_m());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_max_distance_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_max_distance_m());
    }
  }
  if (from._internal_ring_count() != 0) {
    _this->_internal_set_ring_count(from._internal_ring_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeRings::CopyFrom(const RangeRings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.RangeRings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RangeRings::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RangeRings::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RangeRings::InternalSwap(RangeRings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.ring_count_)
      + sizeof(RangeRings::_impl_.ring_count_)
      - PROTOBUF_FIELD_OFFSET(RangeRings, _impl_.min_distance_m_)>(
          reinterpret_cast<char*>(&_impl_.min_distance_m_),
          reinterpret_cast<char*>(&other->_impl_.min_distance_m_));
}

::google::protobuf::Metadata RangeRings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[14]);
}
// ===================================================================

class TeamStatus::_Internal {
 public:
};

TeamStatus::TeamStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.TeamStatus)
}
TeamStatus::TeamStatus(
    ::google::protobuf::Arena* arena,
    const TeamStatus& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  TeamStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.TeamStatus)
}









::google::protobuf::Metadata TeamStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto[15]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
