// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/filter_dynamic.pub.proto

#include "anduril/entitymanager/v1/filter_dynamic.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {
      template <typename>
PROTOBUF_CONSTEXPR WithinComparison::WithinComparison(::_pbi::ConstantInitialized) {}
struct WithinComparisonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WithinComparisonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WithinComparisonDefaultTypeInternal() {}
  union {
    WithinComparison _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WithinComparisonDefaultTypeInternal _WithinComparison_default_instance_;

inline constexpr IntersectionComparator::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : comparison_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR IntersectionComparator::IntersectionComparator(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IntersectionComparatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntersectionComparatorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntersectionComparatorDefaultTypeInternal() {}
  union {
    IntersectionComparator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntersectionComparatorDefaultTypeInternal _IntersectionComparator_default_instance_;

inline constexpr DynamicStatement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filter_{nullptr},
        selector_{nullptr},
        comparator_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DynamicStatement::DynamicStatement(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DynamicStatementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DynamicStatementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DynamicStatementDefaultTypeInternal() {}
  union {
    DynamicStatement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DynamicStatementDefaultTypeInternal _DynamicStatement_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::DynamicStatement, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::DynamicStatement, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::DynamicStatement, _impl_.filter_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::DynamicStatement, _impl_.selector_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::DynamicStatement, _impl_.comparator_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::IntersectionComparator, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::IntersectionComparator, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::IntersectionComparator, _impl_.comparison_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::WithinComparison, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::anduril::entitymanager::v1::DynamicStatement)},
        {14, -1, -1, sizeof(::anduril::entitymanager::v1::IntersectionComparator)},
        {24, -1, -1, sizeof(::anduril::entitymanager::v1::WithinComparison)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_DynamicStatement_default_instance_._instance,
    &::anduril::entitymanager::v1::_IntersectionComparator_default_instance_._instance,
    &::anduril::entitymanager::v1::_WithinComparison_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n1anduril/entitymanager/v1/filter_dynami"
    "c.pub.proto\022\030anduril.entitymanager.v1\032)a"
    "nduril/entitymanager/v1/filter.pub.proto"
    "\"\342\001\n\020DynamicStatement\022;\n\006filter\030\001 \001(\0132#."
    "anduril.entitymanager.v1.StatementR\006filt"
    "er\022\?\n\010selector\030\002 \001(\0132#.anduril.entityman"
    "ager.v1.StatementR\010selector\022P\n\ncomparato"
    "r\030\003 \001(\01320.anduril.entitymanager.v1.Inter"
    "sectionComparatorR\ncomparator\"\201\001\n\026Inters"
    "ectionComparator\022Y\n\021within_comparison\030\001 "
    "\001(\0132*.anduril.entitymanager.v1.WithinCom"
    "parisonH\000R\020withinComparisonB\014\n\ncompariso"
    "n\"\022\n\020WithinComparisonB\206\002\n\034com.anduril.en"
    "titymanager.v1B\025FilterDynamicPubProtoP\001Z"
    "Mghe.anduril.dev/anduril/andurilapis-go/"
    "anduril/entitymanager/v1;entitymanager\242\002"
    "\003AEX\252\002\030Anduril.Entitymanager.V1\312\002\030Anduri"
    "l\\Entitymanager\\V1\342\002$Anduril\\Entitymanag"
    "er\\V1\\GPBMetadata\352\002\032Anduril::Entitymanag"
    "er::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_deps[1] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_2epub_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto = {
    false,
    false,
    774,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto,
    "anduril/entitymanager/v1/filter_dynamic.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto(&descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto);
namespace anduril {
namespace entitymanager {
namespace v1 {
// ===================================================================

class DynamicStatement::_Internal {
 public:
  using HasBits = decltype(std::declval<DynamicStatement>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Statement& filter(const DynamicStatement* msg);
  static void set_has_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Statement& selector(const DynamicStatement* msg);
  static void set_has_selector(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::entitymanager::v1::IntersectionComparator& comparator(const DynamicStatement* msg);
  static void set_has_comparator(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::entitymanager::v1::Statement& DynamicStatement::_Internal::filter(const DynamicStatement* msg) {
  return *msg->_impl_.filter_;
}
const ::anduril::entitymanager::v1::Statement& DynamicStatement::_Internal::selector(const DynamicStatement* msg) {
  return *msg->_impl_.selector_;
}
const ::anduril::entitymanager::v1::IntersectionComparator& DynamicStatement::_Internal::comparator(const DynamicStatement* msg) {
  return *msg->_impl_.comparator_;
}
void DynamicStatement::clear_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.filter_ != nullptr) _impl_.filter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DynamicStatement::clear_selector() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.selector_ != nullptr) _impl_.selector_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DynamicStatement::DynamicStatement(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.DynamicStatement)
}
inline PROTOBUF_NDEBUG_INLINE DynamicStatement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DynamicStatement::DynamicStatement(
    ::google::protobuf::Arena* arena,
    const DynamicStatement& from)
    : ::google::protobuf::Message(arena) {
  DynamicStatement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.filter_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Statement>(arena, *from._impl_.filter_)
                : nullptr;
  _impl_.selector_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Statement>(arena, *from._impl_.selector_)
                : nullptr;
  _impl_.comparator_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::IntersectionComparator>(arena, *from._impl_.comparator_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.DynamicStatement)
}
inline PROTOBUF_NDEBUG_INLINE DynamicStatement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DynamicStatement::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filter_),
           0,
           offsetof(Impl_, comparator_) -
               offsetof(Impl_, filter_) +
               sizeof(Impl_::comparator_));
}
DynamicStatement::~DynamicStatement() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.DynamicStatement)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DynamicStatement::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.filter_;
  delete _impl_.selector_;
  delete _impl_.comparator_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DynamicStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.DynamicStatement)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.filter_ != nullptr);
      _impl_.filter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.selector_ != nullptr);
      _impl_.selector_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.comparator_ != nullptr);
      _impl_.comparator_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DynamicStatement::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> DynamicStatement::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DynamicStatement_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.Statement filter = 1 [json_name = "filter"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.filter_)}},
    // .anduril.entitymanager.v1.Statement selector = 2 [json_name = "selector"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.selector_)}},
    // .anduril.entitymanager.v1.IntersectionComparator comparator = 3 [json_name = "comparator"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.comparator_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Statement filter = 1 [json_name = "filter"];
    {PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.filter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Statement selector = 2 [json_name = "selector"];
    {PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.selector_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.IntersectionComparator comparator = 3 [json_name = "comparator"];
    {PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.comparator_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Statement>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Statement>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::IntersectionComparator>()},
  }}, {{
  }},
};

::uint8_t* DynamicStatement::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.DynamicStatement)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Statement filter = 1 [json_name = "filter"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::filter(this),
        _Internal::filter(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Statement selector = 2 [json_name = "selector"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::selector(this),
        _Internal::selector(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.IntersectionComparator comparator = 3 [json_name = "comparator"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::comparator(this),
        _Internal::comparator(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.DynamicStatement)
  return target;
}

::size_t DynamicStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.DynamicStatement)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.entitymanager.v1.Statement filter = 1 [json_name = "filter"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.filter_);
    }

    // .anduril.entitymanager.v1.Statement selector = 2 [json_name = "selector"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.selector_);
    }

    // .anduril.entitymanager.v1.IntersectionComparator comparator = 3 [json_name = "comparator"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.comparator_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DynamicStatement::_class_data_ = {
    DynamicStatement::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DynamicStatement::GetClassData() const {
  return &_class_data_;
}

void DynamicStatement::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DynamicStatement*>(&to_msg);
  auto& from = static_cast<const DynamicStatement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.DynamicStatement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_filter()->::anduril::entitymanager::v1::Statement::MergeFrom(
          from._internal_filter());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_selector()->::anduril::entitymanager::v1::Statement::MergeFrom(
          from._internal_selector());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_comparator()->::anduril::entitymanager::v1::IntersectionComparator::MergeFrom(
          from._internal_comparator());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DynamicStatement::CopyFrom(const DynamicStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.DynamicStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DynamicStatement::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DynamicStatement::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DynamicStatement::InternalSwap(DynamicStatement* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.comparator_)
      + sizeof(DynamicStatement::_impl_.comparator_)
      - PROTOBUF_FIELD_OFFSET(DynamicStatement, _impl_.filter_)>(
          reinterpret_cast<char*>(&_impl_.filter_),
          reinterpret_cast<char*>(&other->_impl_.filter_));
}

::google::protobuf::Metadata DynamicStatement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto[0]);
}
// ===================================================================

class IntersectionComparator::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::IntersectionComparator, _impl_._oneof_case_);
  static const ::anduril::entitymanager::v1::WithinComparison& within_comparison(const IntersectionComparator* msg);
};

const ::anduril::entitymanager::v1::WithinComparison& IntersectionComparator::_Internal::within_comparison(const IntersectionComparator* msg) {
  return *msg->_impl_.comparison_.within_comparison_;
}
void IntersectionComparator::set_allocated_within_comparison(::anduril::entitymanager::v1::WithinComparison* within_comparison) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_comparison();
  if (within_comparison) {
    ::google::protobuf::Arena* submessage_arena = within_comparison->GetArena();
    if (message_arena != submessage_arena) {
      within_comparison = ::google::protobuf::internal::GetOwnedMessage(message_arena, within_comparison, submessage_arena);
    }
    set_has_within_comparison();
    _impl_.comparison_.within_comparison_ = within_comparison;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.IntersectionComparator.within_comparison)
}
IntersectionComparator::IntersectionComparator(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.IntersectionComparator)
}
inline PROTOBUF_NDEBUG_INLINE IntersectionComparator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : comparison_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

IntersectionComparator::IntersectionComparator(
    ::google::protobuf::Arena* arena,
    const IntersectionComparator& from)
    : ::google::protobuf::Message(arena) {
  IntersectionComparator* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (comparison_case()) {
    case COMPARISON_NOT_SET:
      break;
      case kWithinComparison:
        _impl_.comparison_.within_comparison_ = CreateMaybeMessage<::anduril::entitymanager::v1::WithinComparison>(arena, *from._impl_.comparison_.within_comparison_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.IntersectionComparator)
}
inline PROTOBUF_NDEBUG_INLINE IntersectionComparator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : comparison_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void IntersectionComparator::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IntersectionComparator::~IntersectionComparator() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.IntersectionComparator)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IntersectionComparator::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_comparison()) {
    clear_comparison();
  }
  _impl_.~Impl_();
}

void IntersectionComparator::clear_comparison() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entitymanager.v1.IntersectionComparator)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (comparison_case()) {
    case kWithinComparison: {
      if (GetArena() == nullptr) {
        delete _impl_.comparison_.within_comparison_;
      }
      break;
    }
    case COMPARISON_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMPARISON_NOT_SET;
}


PROTOBUF_NOINLINE void IntersectionComparator::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.IntersectionComparator)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_comparison();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IntersectionComparator::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> IntersectionComparator::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IntersectionComparator_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.WithinComparison within_comparison = 1 [json_name = "withinComparison"];
    {PROTOBUF_FIELD_OFFSET(IntersectionComparator, _impl_.comparison_.within_comparison_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::anduril::entitymanager::v1::_WithinComparison_default_instance_},
  }}, {{
  }},
};

::uint8_t* IntersectionComparator::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.IntersectionComparator)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.WithinComparison within_comparison = 1 [json_name = "withinComparison"];
  if (comparison_case() == kWithinComparison) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::within_comparison(this),
        _Internal::within_comparison(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.IntersectionComparator)
  return target;
}

::size_t IntersectionComparator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.IntersectionComparator)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (comparison_case()) {
    // .anduril.entitymanager.v1.WithinComparison within_comparison = 1 [json_name = "withinComparison"];
    case kWithinComparison: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.comparison_.within_comparison_);
      break;
    }
    case COMPARISON_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IntersectionComparator::_class_data_ = {
    IntersectionComparator::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IntersectionComparator::GetClassData() const {
  return &_class_data_;
}

void IntersectionComparator::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IntersectionComparator*>(&to_msg);
  auto& from = static_cast<const IntersectionComparator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.IntersectionComparator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.comparison_case()) {
    case kWithinComparison: {
      _this->_internal_mutable_within_comparison()->::anduril::entitymanager::v1::WithinComparison::MergeFrom(
          from._internal_within_comparison());
      break;
    }
    case COMPARISON_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IntersectionComparator::CopyFrom(const IntersectionComparator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.IntersectionComparator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IntersectionComparator::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IntersectionComparator::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IntersectionComparator::InternalSwap(IntersectionComparator* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.comparison_, other->_impl_.comparison_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata IntersectionComparator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto[1]);
}
// ===================================================================

class WithinComparison::_Internal {
 public:
};

WithinComparison::WithinComparison(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.WithinComparison)
}
WithinComparison::WithinComparison(
    ::google::protobuf::Arena* arena,
    const WithinComparison& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  WithinComparison* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.WithinComparison)
}









::google::protobuf::Metadata WithinComparison::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
