// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/supplies.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/entitymanager/v1/supplies.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr Fuel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fuel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reported_date_{nullptr},
        data_classification_{nullptr},
        amount_gallons_{0u},
        max_authorized_capacity_gallons_{0u},
        operational_requirement_gallons_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Fuel::Fuel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FuelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FuelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FuelDefaultTypeInternal() {}
  union {
    Fuel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FuelDefaultTypeInternal _Fuel_default_instance_;

inline constexpr Supplies::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fuel_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Supplies::Supplies(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SuppliesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SuppliesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SuppliesDefaultTypeInternal() {}
  union {
    Supplies _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SuppliesDefaultTypeInternal _Supplies_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Supplies, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Supplies, _impl_.fuel_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.fuel_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.reported_date_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.amount_gallons_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.max_authorized_capacity_gallons_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.operational_requirement_gallons_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.data_classification_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fuel, _impl_.data_source_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::entitymanager::v1::Supplies)},
        {9, 25, -1, sizeof(::anduril::entitymanager::v1::Fuel)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_Supplies_default_instance_._instance,
    &::anduril::entitymanager::v1::_Fuel_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n+anduril/entitymanager/v1/supplies.pub."
    "proto\022\030anduril.entitymanager.v1\0321anduril"
    "/entitymanager/v1/classification.pub.pro"
    "to\032*anduril/entitymanager/v1/options.pub"
    ".proto\032\037google/protobuf/timestamp.proto\""
    "C\n\010Supplies\0227\n\004fuel\030\002 \003(\0132\036.anduril.enti"
    "tymanager.v1.FuelB\003\310>\001R\004fuel\"\246\003\n\004Fuel\022\027\n"
    "\007fuel_id\030\001 \001(\tR\006fuelId\022\022\n\004name\030\002 \001(\tR\004na"
    "me\022\?\n\rreported_date\030\003 \001(\0132\032.google.proto"
    "buf.TimestampR\014reportedDate\022%\n\016amount_ga"
    "llons\030\004 \001(\rR\ramountGallons\022E\n\037max_author"
    "ized_capacity_gallons\030\005 \001(\rR\034maxAuthoriz"
    "edCapacityGallons\022F\n\037operational_require"
    "ment_gallons\030\006 \001(\rR\035operationalRequireme"
    "ntGallons\022Y\n\023data_classification\030\007 \001(\0132("
    ".anduril.entitymanager.v1.Classification"
    "R\022dataClassification\022\037\n\013data_source\030\010 \001("
    "\tR\ndataSourceB\201\002\n\034com.anduril.entitymana"
    "ger.v1B\020SuppliesPubProtoP\001ZMghe.anduril."
    "dev/anduril/andurilapis-go/anduril/entit"
    "ymanager/v1;entitymanager\242\002\003AEX\252\002\030Anduri"
    "l.Entitymanager.V1\312\002\030Anduril\\Entitymanag"
    "er\\V1\342\002$Anduril\\Entitymanager\\V1\\GPBMeta"
    "data\352\002\032Anduril::Entitymanager::V1b\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto_deps[3] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2foptions_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto = {
    false,
    false,
    961,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto,
    "anduril/entitymanager/v1/supplies.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto,
};
namespace anduril {
namespace entitymanager {
namespace v1 {
// ===================================================================

class Supplies::_Internal {
 public:
};

Supplies::Supplies(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Supplies)
}
inline PROTOBUF_NDEBUG_INLINE Supplies::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Supplies& from_msg)
      : fuel_{visibility, arena, from.fuel_},
        _cached_size_{0} {}

Supplies::Supplies(
    ::google::protobuf::Arena* arena,
    const Supplies& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Supplies* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Supplies)
}
inline PROTOBUF_NDEBUG_INLINE Supplies::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : fuel_{visibility, arena},
        _cached_size_{0} {}

inline void Supplies::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Supplies::~Supplies() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Supplies)
  SharedDtor(*this);
}
inline void Supplies::SharedDtor(MessageLite& self) {
  Supplies& this_ = static_cast<Supplies&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Supplies::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Supplies(arena);
}
constexpr auto Supplies::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Supplies, _impl_.fuel_) +
          decltype(Supplies::_impl_.fuel_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Supplies), alignof(Supplies), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Supplies::PlacementNew_,
                                 sizeof(Supplies),
                                 alignof(Supplies));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Supplies::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Supplies_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Supplies::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Supplies>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Supplies::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Supplies>(), &Supplies::ByteSizeLong,
            &Supplies::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Supplies, _impl_._cached_size_),
        false,
    },
    &Supplies::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Supplies::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Supplies::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Supplies>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.entitymanager.v1.Fuel fuel = 2 [json_name = "fuel", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Supplies, _impl_.fuel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.Fuel fuel = 2 [json_name = "fuel", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Supplies, _impl_.fuel_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Fuel>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Supplies::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Supplies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fuel_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Supplies::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Supplies& this_ = static_cast<const Supplies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Supplies::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Supplies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Supplies)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.entitymanager.v1.Fuel fuel = 2 [json_name = "fuel", (.anduril.entitymanager.v1.overridable) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_fuel_size());
               i < n; i++) {
            const auto& repfield = this_._internal_fuel().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Supplies)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Supplies::ByteSizeLong(const MessageLite& base) {
          const Supplies& this_ = static_cast<const Supplies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Supplies::ByteSizeLong() const {
          const Supplies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Supplies)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.entitymanager.v1.Fuel fuel = 2 [json_name = "fuel", (.anduril.entitymanager.v1.overridable) = true];
            {
              total_size += 1UL * this_._internal_fuel_size();
              for (const auto& msg : this_._internal_fuel()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Supplies::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Supplies*>(&to_msg);
  auto& from = static_cast<const Supplies&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Supplies)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_fuel()->MergeFrom(
      from._internal_fuel());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Supplies::CopyFrom(const Supplies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Supplies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Supplies::InternalSwap(Supplies* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fuel_.InternalSwap(&other->_impl_.fuel_);
}

::google::protobuf::Metadata Supplies::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Fuel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Fuel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Fuel, _impl_._has_bits_);
};

void Fuel::clear_reported_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reported_date_ != nullptr) _impl_.reported_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Fuel::clear_data_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_classification_ != nullptr) _impl_.data_classification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Fuel::Fuel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Fuel)
}
inline PROTOBUF_NDEBUG_INLINE Fuel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Fuel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        fuel_id_(arena, from.fuel_id_),
        name_(arena, from.name_),
        data_source_(arena, from.data_source_) {}

Fuel::Fuel(
    ::google::protobuf::Arena* arena,
    const Fuel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Fuel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.reported_date_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.reported_date_)
                        : nullptr;
  _impl_.data_classification_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Classification>(
                              arena, *from._impl_.data_classification_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_gallons_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amount_gallons_),
           offsetof(Impl_, operational_requirement_gallons_) -
               offsetof(Impl_, amount_gallons_) +
               sizeof(Impl_::operational_requirement_gallons_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Fuel)
}
inline PROTOBUF_NDEBUG_INLINE Fuel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        fuel_id_(arena),
        name_(arena),
        data_source_(arena) {}

inline void Fuel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reported_date_),
           0,
           offsetof(Impl_, operational_requirement_gallons_) -
               offsetof(Impl_, reported_date_) +
               sizeof(Impl_::operational_requirement_gallons_));
}
Fuel::~Fuel() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Fuel)
  SharedDtor(*this);
}
inline void Fuel::SharedDtor(MessageLite& self) {
  Fuel& this_ = static_cast<Fuel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.fuel_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.data_source_.Destroy();
  delete this_._impl_.reported_date_;
  delete this_._impl_.data_classification_;
  this_._impl_.~Impl_();
}

inline void* Fuel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Fuel(arena);
}
constexpr auto Fuel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Fuel),
                                            alignof(Fuel));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Fuel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Fuel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Fuel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Fuel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Fuel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Fuel>(), &Fuel::ByteSizeLong,
            &Fuel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Fuel, _impl_._cached_size_),
        false,
    },
    &Fuel::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Fuel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 68, 2> Fuel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Fuel, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Fuel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string data_source = 8 [json_name = "dataSource"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.data_source_)}},
    // string fuel_id = 1 [json_name = "fuelId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.fuel_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.name_)}},
    // .google.protobuf.Timestamp reported_date = 3 [json_name = "reportedDate"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.reported_date_)}},
    // uint32 amount_gallons = 4 [json_name = "amountGallons"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Fuel, _impl_.amount_gallons_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.amount_gallons_)}},
    // uint32 max_authorized_capacity_gallons = 5 [json_name = "maxAuthorizedCapacityGallons"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Fuel, _impl_.max_authorized_capacity_gallons_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.max_authorized_capacity_gallons_)}},
    // uint32 operational_requirement_gallons = 6 [json_name = "operationalRequirementGallons"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Fuel, _impl_.operational_requirement_gallons_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.operational_requirement_gallons_)}},
    // .anduril.entitymanager.v1.Classification data_classification = 7 [json_name = "dataClassification"];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(Fuel, _impl_.data_classification_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string fuel_id = 1 [json_name = "fuelId"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.fuel_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp reported_date = 3 [json_name = "reportedDate"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.reported_date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 amount_gallons = 4 [json_name = "amountGallons"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.amount_gallons_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_authorized_capacity_gallons = 5 [json_name = "maxAuthorizedCapacityGallons"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.max_authorized_capacity_gallons_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 operational_requirement_gallons = 6 [json_name = "operationalRequirementGallons"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.operational_requirement_gallons_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .anduril.entitymanager.v1.Classification data_classification = 7 [json_name = "dataClassification"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.data_classification_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string data_source = 8 [json_name = "dataSource"];
    {PROTOBUF_FIELD_OFFSET(Fuel, _impl_.data_source_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Classification>()},
  }}, {{
    "\35\7\4\0\0\0\0\0\13\0\0\0\0\0\0\0"
    "anduril.entitymanager.v1.Fuel"
    "fuel_id"
    "name"
    "data_source"
  }},
};

PROTOBUF_NOINLINE void Fuel::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Fuel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fuel_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.data_source_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.reported_date_ != nullptr);
      _impl_.reported_date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.data_classification_ != nullptr);
      _impl_.data_classification_->Clear();
    }
  }
  ::memset(&_impl_.amount_gallons_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.operational_requirement_gallons_) -
      reinterpret_cast<char*>(&_impl_.amount_gallons_)) + sizeof(_impl_.operational_requirement_gallons_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Fuel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Fuel& this_ = static_cast<const Fuel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Fuel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Fuel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Fuel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string fuel_id = 1 [json_name = "fuelId"];
          if (!this_._internal_fuel_id().empty()) {
            const std::string& _s = this_._internal_fuel_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Fuel.fuel_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Fuel.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp reported_date = 3 [json_name = "reportedDate"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.reported_date_, this_._impl_.reported_date_->GetCachedSize(), target,
                stream);
          }

          // uint32 amount_gallons = 4 [json_name = "amountGallons"];
          if (this_._internal_amount_gallons() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_amount_gallons(), target);
          }

          // uint32 max_authorized_capacity_gallons = 5 [json_name = "maxAuthorizedCapacityGallons"];
          if (this_._internal_max_authorized_capacity_gallons() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_max_authorized_capacity_gallons(), target);
          }

          // uint32 operational_requirement_gallons = 6 [json_name = "operationalRequirementGallons"];
          if (this_._internal_operational_requirement_gallons() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_operational_requirement_gallons(), target);
          }

          // .anduril.entitymanager.v1.Classification data_classification = 7 [json_name = "dataClassification"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.data_classification_, this_._impl_.data_classification_->GetCachedSize(), target,
                stream);
          }

          // string data_source = 8 [json_name = "dataSource"];
          if (!this_._internal_data_source().empty()) {
            const std::string& _s = this_._internal_data_source();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Fuel.data_source");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Fuel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Fuel::ByteSizeLong(const MessageLite& base) {
          const Fuel& this_ = static_cast<const Fuel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Fuel::ByteSizeLong() const {
          const Fuel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Fuel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string fuel_id = 1 [json_name = "fuelId"];
            if (!this_._internal_fuel_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fuel_id());
            }
            // string name = 2 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string data_source = 8 [json_name = "dataSource"];
            if (!this_._internal_data_source().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data_source());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp reported_date = 3 [json_name = "reportedDate"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.reported_date_);
            }
            // .anduril.entitymanager.v1.Classification data_classification = 7 [json_name = "dataClassification"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_classification_);
            }
          }
           {
            // uint32 amount_gallons = 4 [json_name = "amountGallons"];
            if (this_._internal_amount_gallons() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_amount_gallons());
            }
            // uint32 max_authorized_capacity_gallons = 5 [json_name = "maxAuthorizedCapacityGallons"];
            if (this_._internal_max_authorized_capacity_gallons() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_authorized_capacity_gallons());
            }
            // uint32 operational_requirement_gallons = 6 [json_name = "operationalRequirementGallons"];
            if (this_._internal_operational_requirement_gallons() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_operational_requirement_gallons());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Fuel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Fuel*>(&to_msg);
  auto& from = static_cast<const Fuel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Fuel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fuel_id().empty()) {
    _this->_internal_set_fuel_id(from._internal_fuel_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_data_source().empty()) {
    _this->_internal_set_data_source(from._internal_data_source());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.reported_date_ != nullptr);
      if (_this->_impl_.reported_date_ == nullptr) {
        _this->_impl_.reported_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.reported_date_);
      } else {
        _this->_impl_.reported_date_->MergeFrom(*from._impl_.reported_date_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.data_classification_ != nullptr);
      if (_this->_impl_.data_classification_ == nullptr) {
        _this->_impl_.data_classification_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Classification>(arena, *from._impl_.data_classification_);
      } else {
        _this->_impl_.data_classification_->MergeFrom(*from._impl_.data_classification_);
      }
    }
  }
  if (from._internal_amount_gallons() != 0) {
    _this->_impl_.amount_gallons_ = from._impl_.amount_gallons_;
  }
  if (from._internal_max_authorized_capacity_gallons() != 0) {
    _this->_impl_.max_authorized_capacity_gallons_ = from._impl_.max_authorized_capacity_gallons_;
  }
  if (from._internal_operational_requirement_gallons() != 0) {
    _this->_impl_.operational_requirement_gallons_ = from._impl_.operational_requirement_gallons_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Fuel::CopyFrom(const Fuel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Fuel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Fuel::InternalSwap(Fuel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fuel_id_, &other->_impl_.fuel_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_source_, &other->_impl_.data_source_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Fuel, _impl_.operational_requirement_gallons_)
      + sizeof(Fuel::_impl_.operational_requirement_gallons_)
      - PROTOBUF_FIELD_OFFSET(Fuel, _impl_.reported_date_)>(
          reinterpret_cast<char*>(&_impl_.reported_date_),
          reinterpret_cast<char*>(&other->_impl_.reported_date_));
}

::google::protobuf::Metadata Fuel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fsupplies_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
