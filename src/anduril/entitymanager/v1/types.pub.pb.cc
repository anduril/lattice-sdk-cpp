// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/types.pub.proto
// Protobuf C++ Version: 5.27.3

#include "anduril/entitymanager/v1/types.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr UInt32Range::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lower_bound_{0u},
        upper_bound_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UInt32Range::UInt32Range(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UInt32RangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UInt32RangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UInt32RangeDefaultTypeInternal() {}
  union {
    UInt32Range _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UInt32RangeDefaultTypeInternal _UInt32Range_default_instance_;

inline constexpr FloatRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lower_bound_{0},
        upper_bound_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FloatRange::FloatRange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FloatRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatRangeDefaultTypeInternal() {}
  union {
    FloatRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatRangeDefaultTypeInternal _FloatRange_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::UInt32Range, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::UInt32Range, _impl_.lower_bound_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::UInt32Range, _impl_.upper_bound_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FloatRange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FloatRange, _impl_.lower_bound_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FloatRange, _impl_.upper_bound_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::entitymanager::v1::UInt32Range)},
        {10, -1, -1, sizeof(::anduril::entitymanager::v1::FloatRange)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_UInt32Range_default_instance_._instance,
    &::anduril::entitymanager::v1::_FloatRange_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(anduril/entitymanager/v1/types.pub.pro"
    "to\022\030anduril.entitymanager.v1\"O\n\013UInt32Ra"
    "nge\022\037\n\013lower_bound\030\001 \001(\rR\nlowerBound\022\037\n\013"
    "upper_bound\030\002 \001(\rR\nupperBound\"N\n\nFloatRa"
    "nge\022\037\n\013lower_bound\030\001 \001(\002R\nlowerBound\022\037\n\013"
    "upper_bound\030\002 \001(\002R\nupperBound*\344\004\n\tAltIdT"
    "ype\022\027\n\023ALT_ID_TYPE_INVALID\020\000\022\032\n\026ALT_ID_T"
    "YPE_TRACK_ID_2\020\001\022\032\n\026ALT_ID_TYPE_TRACK_ID"
    "_1\020\014\022\026\n\022ALT_ID_TYPE_SPI_ID\020\002\022\037\n\033ALT_ID_T"
    "YPE_NITF_FILE_TITLE\020\003\022#\n\037ALT_ID_TYPE_TRA"
    "CK_REPO_ALERT_ID\020\004\022\030\n\024ALT_ID_TYPE_ASSET_"
    "ID\020\005\022\'\n\037ALT_ID_TYPE_LINK16_TRACK_NUMBER\020"
    "\006\032\002\010\001\022\031\n\025ALT_ID_TYPE_LINK16_JU\020\007\022\037\n\033ALT_"
    "ID_TYPE_NCCT_MESSAGE_ID\020\010\022\030\n\024ALT_ID_TYPE"
    "_CALLSIGN\020\t\022\027\n\023ALT_ID_TYPE_MMSI_ID\020\n\022\027\n\023"
    "ALT_ID_TYPE_VMF_URN\020\013\022\026\n\022ALT_ID_TYPE_IMO"
    "_ID\020\r\022!\n\035ALT_ID_TYPE_VMF_TARGET_NUMBER\020\016"
    "\022\035\n\031ALT_ID_TYPE_SERIAL_NUMBER\020\017\022\037\n\033ALT_I"
    "D_TYPE_REGISTRATION_ID\020\020\022\027\n\023ALT_ID_TYPE_"
    "IBS_GID\020\021\022\026\n\022ALT_ID_TYPE_DODAAC\020\022\022\023\n\017ALT"
    "_ID_TYPE_UIC\020\023\022\034\n\030ALT_ID_TYPE_NORAD_CAT_"
    "ID\020\024*\242\001\n\010Template\022\024\n\020TEMPLATE_INVALID\020\000\022"
    "\022\n\016TEMPLATE_TRACK\020\001\022%\n!TEMPLATE_SENSOR_P"
    "OINT_OF_INTEREST\020\002\022\022\n\016TEMPLATE_ASSET\020\003\022\020"
    "\n\014TEMPLATE_GEO\020\004\022\037\n\033TEMPLATE_SIGNAL_OF_I"
    "NTEREST\020\005*\254\006\n\006Source\022\022\n\016SOURCE_INVALID\020\000"
    "\022\022\n\016SOURCE_ANDURIL\020\001\022\022\n\016SOURCE_LINK_16\020\002"
    "\022\016\n\nSOURCE_VMF\020\003\022\017\n\013SOURCE_ADSB\020\004\022\033\n\027SOU"
    "RCE_CURSOR_ON_TARGET\020\005\022\020\n\014SOURCE_MAXAR\020\006"
    "\022\021\n\rSOURCE_MARTAC\020\007\022\024\n\020SOURCE_SAILDRONE\020"
    "\010\022\021\n\rSOURCE_HE_360\020\t\022\016\n\nSOURCE_OFX\020\n\022\020\n\014"
    "SOURCE_BAS_T\020\013\022\023\n\017SOURCE_KINETICA\020\014\022\017\n\013S"
    "OURCE_USER\020\r\022\017\n\013SOURCE_NCCT\020\016\022\016\n\nSOURCE_"
    "AIS\020\017\022\016\n\nSOURCE_KLV\020\020\022\017\n\013SOURCE_NITF\020\021\022\016"
    "\n\nSOURCE_TAK\020\022\022\024\n\020SOURCE_SPIRE_AIS\020\023\022\017\n\013"
    "SOURCE_SEFI\020\024\022\030\n\024SOURCE_ADSB_EXCHANGE\020\025\022"
    "\026\n\022SOURCE_LIVE_UA_MAP\020\026\022\023\n\017SOURCE_CRUCIB"
    "LE\020\027\022\016\n\nSOURCE_IBS\020\030\022\021\n\rSOURCE_ADVANA\020\031\022"
    "\023\n\017SOURCE_THRESHER\020\032\022\024\n\020SOURCE_SEATRACKS"
    "\020\033\022\017\n\013SOURCE_TASS\020\034\022\027\n\023SOURCE_SMART_SENS"
    "OR\020\036\022\026\n\022SOURCE_STRIVEWORKS\020\037\022\024\n\020SOURCE_L"
    "3H_THEIA\020 \022\033\n\027SOURCE_TALON_POWDERHORN\020!\022"
    "\033\n\027SOURCE_IDT_VIRTUAL_TWIN\020\"\022\033\n\027SOURCE_M"
    "ISSION_AUTONOMY\020#\022\017\n\013SOURCE_GCCS\020$\022\022\n\016SO"
    "URCE_FOUNDRY\020%\022\017\n\013SOURCE_MIDB\020&\022\016\n\nSOURC"
    "E_FOM\020\'\022\017\n\013SOURCE_GALE\020(*\310\001\n\016OverrideSta"
    "tus\022\033\n\027OVERRIDE_STATUS_INVALID\020\000\022\033\n\027OVER"
    "RIDE_STATUS_APPLIED\020\001\022\033\n\027OVERRIDE_STATUS"
    "_PENDING\020\002\022\033\n\027OVERRIDE_STATUS_TIMEOUT\020\003\022"
    "\034\n\030OVERRIDE_STATUS_REJECTED\020\004\022$\n OVERRID"
    "E_STATUS_DELETION_PENDING\020\005*`\n\014OverrideT"
    "ype\022\031\n\025OVERRIDE_TYPE_INVALID\020\000\022\026\n\022OVERRI"
    "DE_TYPE_LIVE\020\001\022\035\n\031OVERRIDE_TYPE_POST_EXP"
    "IRY\020\002B\376\001\n\034com.anduril.entitymanager.v1B\r"
    "TypesPubProtoP\001ZMghe.anduril.dev/anduril"
    "/andurilapis-go/anduril/entitymanager/v1"
    ";entitymanager\242\002\003AEX\252\002\030Anduril.Entityman"
    "ager.V1\312\002\030Anduril\\Entitymanager\\V1\342\002$And"
    "uril\\Entitymanager\\V1\\GPBMetadata\352\002\032Andu"
    "ril::Entitymanager::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto = {
    false,
    false,
    2390,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
    "anduril/entitymanager/v1/types.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
};
namespace anduril {
namespace entitymanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* AltIdType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AltIdType_internal_data_[] = {
    1376256u, 0u, };
bool AltIdType_IsValid(int value) {
  return 0 <= value && value <= 20;
}
const ::google::protobuf::EnumDescriptor* Template_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Template_internal_data_[] = {
    393216u, 0u, };
bool Template_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* Source_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Source_internal_data_[] = {
    1900544u, 32u, 4094u, };
bool Source_IsValid(int value) {
  return 0 <= value && value <= 40 && ((2198486384639u >> value) & 1) != 0;
}
const ::google::protobuf::EnumDescriptor* OverrideStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t OverrideStatus_internal_data_[] = {
    393216u, 0u, };
bool OverrideStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* OverrideType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t OverrideType_internal_data_[] = {
    196608u, 0u, };
bool OverrideType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class UInt32Range::_Internal {
 public:
};

UInt32Range::UInt32Range(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.UInt32Range)
}
UInt32Range::UInt32Range(
    ::google::protobuf::Arena* arena, const UInt32Range& from)
    : UInt32Range(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UInt32Range::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UInt32Range::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lower_bound_),
           0,
           offsetof(Impl_, upper_bound_) -
               offsetof(Impl_, lower_bound_) +
               sizeof(Impl_::upper_bound_));
}
UInt32Range::~UInt32Range() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.UInt32Range)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UInt32Range::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UInt32Range::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UInt32Range, _impl_._cached_size_),
              false,
          },
          &UInt32Range::MergeImpl,
          &UInt32Range::kDescriptorMethods,
          &descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> UInt32Range::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UInt32Range_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::UInt32Range>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 upper_bound = 2 [json_name = "upperBound"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Range, _impl_.upper_bound_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UInt32Range, _impl_.upper_bound_)}},
    // uint32 lower_bound = 1 [json_name = "lowerBound"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Range, _impl_.lower_bound_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UInt32Range, _impl_.lower_bound_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 lower_bound = 1 [json_name = "lowerBound"];
    {PROTOBUF_FIELD_OFFSET(UInt32Range, _impl_.lower_bound_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 upper_bound = 2 [json_name = "upperBound"];
    {PROTOBUF_FIELD_OFFSET(UInt32Range, _impl_.upper_bound_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UInt32Range::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.UInt32Range)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lower_bound_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.upper_bound_) -
      reinterpret_cast<char*>(&_impl_.lower_bound_)) + sizeof(_impl_.upper_bound_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UInt32Range::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.UInt32Range)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 lower_bound = 1 [json_name = "lowerBound"];
  if (this->_internal_lower_bound() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_lower_bound(), target);
  }

  // uint32 upper_bound = 2 [json_name = "upperBound"];
  if (this->_internal_upper_bound() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_upper_bound(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.UInt32Range)
  return target;
}

::size_t UInt32Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.UInt32Range)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 lower_bound = 1 [json_name = "lowerBound"];
  if (this->_internal_lower_bound() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_lower_bound());
  }

  // uint32 upper_bound = 2 [json_name = "upperBound"];
  if (this->_internal_upper_bound() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_upper_bound());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UInt32Range::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UInt32Range*>(&to_msg);
  auto& from = static_cast<const UInt32Range&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.UInt32Range)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lower_bound() != 0) {
    _this->_impl_.lower_bound_ = from._impl_.lower_bound_;
  }
  if (from._internal_upper_bound() != 0) {
    _this->_impl_.upper_bound_ = from._impl_.upper_bound_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UInt32Range::CopyFrom(const UInt32Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.UInt32Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UInt32Range::InternalSwap(UInt32Range* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UInt32Range, _impl_.upper_bound_)
      + sizeof(UInt32Range::_impl_.upper_bound_)
      - PROTOBUF_FIELD_OFFSET(UInt32Range, _impl_.lower_bound_)>(
          reinterpret_cast<char*>(&_impl_.lower_bound_),
          reinterpret_cast<char*>(&other->_impl_.lower_bound_));
}

::google::protobuf::Metadata UInt32Range::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FloatRange::_Internal {
 public:
};

FloatRange::FloatRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.FloatRange)
}
FloatRange::FloatRange(
    ::google::protobuf::Arena* arena, const FloatRange& from)
    : FloatRange(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FloatRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FloatRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lower_bound_),
           0,
           offsetof(Impl_, upper_bound_) -
               offsetof(Impl_, lower_bound_) +
               sizeof(Impl_::upper_bound_));
}
FloatRange::~FloatRange() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.FloatRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FloatRange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FloatRange::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(FloatRange, _impl_._cached_size_),
              false,
          },
          &FloatRange::MergeImpl,
          &FloatRange::kDescriptorMethods,
          &descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> FloatRange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FloatRange_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FloatRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float upper_bound = 2 [json_name = "upperBound"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(FloatRange, _impl_.upper_bound_)}},
    // float lower_bound = 1 [json_name = "lowerBound"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(FloatRange, _impl_.lower_bound_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float lower_bound = 1 [json_name = "lowerBound"];
    {PROTOBUF_FIELD_OFFSET(FloatRange, _impl_.lower_bound_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float upper_bound = 2 [json_name = "upperBound"];
    {PROTOBUF_FIELD_OFFSET(FloatRange, _impl_.upper_bound_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void FloatRange::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.FloatRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lower_bound_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.upper_bound_) -
      reinterpret_cast<char*>(&_impl_.lower_bound_)) + sizeof(_impl_.upper_bound_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* FloatRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.FloatRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float lower_bound = 1 [json_name = "lowerBound"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lower_bound = this->_internal_lower_bound();
  ::uint32_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_lower_bound(), target);
  }

  // float upper_bound = 2 [json_name = "upperBound"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_upper_bound = this->_internal_upper_bound();
  ::uint32_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_upper_bound(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.FloatRange)
  return target;
}

::size_t FloatRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.FloatRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // float lower_bound = 1 [json_name = "lowerBound"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lower_bound = this->_internal_lower_bound();
  ::uint32_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    total_size += 5;
  }

  // float upper_bound = 2 [json_name = "upperBound"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_upper_bound = this->_internal_upper_bound();
  ::uint32_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FloatRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FloatRange*>(&to_msg);
  auto& from = static_cast<const FloatRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.FloatRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lower_bound = from._internal_lower_bound();
  ::uint32_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    _this->_impl_.lower_bound_ = from._impl_.lower_bound_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_upper_bound = from._internal_upper_bound();
  ::uint32_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    _this->_impl_.upper_bound_ = from._impl_.upper_bound_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FloatRange::CopyFrom(const FloatRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.FloatRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FloatRange::InternalSwap(FloatRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FloatRange, _impl_.upper_bound_)
      + sizeof(FloatRange::_impl_.upper_bound_)
      - PROTOBUF_FIELD_OFFSET(FloatRange, _impl_.lower_bound_)>(
          reinterpret_cast<char*>(&_impl_.lower_bound_),
          reinterpret_cast<char*>(&other->_impl_.lower_bound_));
}

::google::protobuf::Metadata FloatRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
