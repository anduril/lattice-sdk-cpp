// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/target_priority.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto_2epb_2eh
#define anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "anduril/entitymanager/v1/options.pub.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class HighValueTarget;
struct HighValueTargetDefaultTypeInternal;
extern HighValueTargetDefaultTypeInternal _HighValueTarget_default_instance_;
class HighValueTargetMatch;
struct HighValueTargetMatchDefaultTypeInternal;
extern HighValueTargetMatchDefaultTypeInternal _HighValueTargetMatch_default_instance_;
class TargetPriority;
struct TargetPriorityDefaultTypeInternal;
extern TargetPriorityDefaultTypeInternal _TargetPriority_default_instance_;
class Threat;
struct ThreatDefaultTypeInternal;
extern ThreatDefaultTypeInternal _Threat_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Threat final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Threat) */ {
 public:
  inline Threat() : Threat(nullptr) {}
  ~Threat() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Threat* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Threat));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Threat(
      ::google::protobuf::internal::ConstantInitialized);

  inline Threat(const Threat& from) : Threat(nullptr, from) {}
  inline Threat(Threat&& from) noexcept
      : Threat(nullptr, std::move(from)) {}
  inline Threat& operator=(const Threat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Threat& operator=(Threat&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Threat& default_instance() {
    return *internal_default_instance();
  }
  static inline const Threat* internal_default_instance() {
    return reinterpret_cast<const Threat*>(
        &_Threat_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Threat& a, Threat& b) { a.Swap(&b); }
  inline void Swap(Threat* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Threat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Threat* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Threat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Threat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Threat& from) { Threat::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Threat* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Threat"; }

 protected:
  explicit Threat(::google::protobuf::Arena* arena);
  Threat(::google::protobuf::Arena* arena, const Threat& from);
  Threat(::google::protobuf::Arena* arena, Threat&& from) noexcept
      : Threat(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsThreatFieldNumber = 1,
  };
  // bool is_threat = 1 [json_name = "isThreat"];
  void clear_is_threat() ;
  bool is_threat() const;
  void set_is_threat(bool value);

  private:
  bool _internal_is_threat() const;
  void _internal_set_is_threat(bool value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Threat)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Threat& from_msg);
    bool is_threat_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto;
};
// -------------------------------------------------------------------

class HighValueTargetMatch final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.HighValueTargetMatch) */ {
 public:
  inline HighValueTargetMatch() : HighValueTargetMatch(nullptr) {}
  ~HighValueTargetMatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HighValueTargetMatch* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HighValueTargetMatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HighValueTargetMatch(
      ::google::protobuf::internal::ConstantInitialized);

  inline HighValueTargetMatch(const HighValueTargetMatch& from) : HighValueTargetMatch(nullptr, from) {}
  inline HighValueTargetMatch(HighValueTargetMatch&& from) noexcept
      : HighValueTargetMatch(nullptr, std::move(from)) {}
  inline HighValueTargetMatch& operator=(const HighValueTargetMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline HighValueTargetMatch& operator=(HighValueTargetMatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HighValueTargetMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const HighValueTargetMatch* internal_default_instance() {
    return reinterpret_cast<const HighValueTargetMatch*>(
        &_HighValueTargetMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(HighValueTargetMatch& a, HighValueTargetMatch& b) { a.Swap(&b); }
  inline void Swap(HighValueTargetMatch* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HighValueTargetMatch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HighValueTargetMatch* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HighValueTargetMatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HighValueTargetMatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HighValueTargetMatch& from) { HighValueTargetMatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HighValueTargetMatch* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.HighValueTargetMatch"; }

 protected:
  explicit HighValueTargetMatch(::google::protobuf::Arena* arena);
  HighValueTargetMatch(::google::protobuf::Arena* arena, const HighValueTargetMatch& from);
  HighValueTargetMatch(::google::protobuf::Arena* arena, HighValueTargetMatch&& from) noexcept
      : HighValueTargetMatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHighValueTargetListIdFieldNumber = 1,
    kHighValueTargetDescriptionIdFieldNumber = 2,
  };
  // string high_value_target_list_id = 1 [json_name = "highValueTargetListId"];
  void clear_high_value_target_list_id() ;
  const std::string& high_value_target_list_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_high_value_target_list_id(Arg_&& arg, Args_... args);
  std::string* mutable_high_value_target_list_id();
  PROTOBUF_NODISCARD std::string* release_high_value_target_list_id();
  void set_allocated_high_value_target_list_id(std::string* value);

  private:
  const std::string& _internal_high_value_target_list_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_high_value_target_list_id(
      const std::string& value);
  std::string* _internal_mutable_high_value_target_list_id();

  public:
  // string high_value_target_description_id = 2 [json_name = "highValueTargetDescriptionId"];
  void clear_high_value_target_description_id() ;
  const std::string& high_value_target_description_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_high_value_target_description_id(Arg_&& arg, Args_... args);
  std::string* mutable_high_value_target_description_id();
  PROTOBUF_NODISCARD std::string* release_high_value_target_description_id();
  void set_allocated_high_value_target_description_id(std::string* value);

  private:
  const std::string& _internal_high_value_target_description_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_high_value_target_description_id(
      const std::string& value);
  std::string* _internal_mutable_high_value_target_description_id();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.HighValueTargetMatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      111, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HighValueTargetMatch& from_msg);
    ::google::protobuf::internal::ArenaStringPtr high_value_target_list_id_;
    ::google::protobuf::internal::ArenaStringPtr high_value_target_description_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto;
};
// -------------------------------------------------------------------

class HighValueTarget final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.HighValueTarget) */ {
 public:
  inline HighValueTarget() : HighValueTarget(nullptr) {}
  ~HighValueTarget() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HighValueTarget* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HighValueTarget));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HighValueTarget(
      ::google::protobuf::internal::ConstantInitialized);

  inline HighValueTarget(const HighValueTarget& from) : HighValueTarget(nullptr, from) {}
  inline HighValueTarget(HighValueTarget&& from) noexcept
      : HighValueTarget(nullptr, std::move(from)) {}
  inline HighValueTarget& operator=(const HighValueTarget& from) {
    CopyFrom(from);
    return *this;
  }
  inline HighValueTarget& operator=(HighValueTarget&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HighValueTarget& default_instance() {
    return *internal_default_instance();
  }
  static inline const HighValueTarget* internal_default_instance() {
    return reinterpret_cast<const HighValueTarget*>(
        &_HighValueTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(HighValueTarget& a, HighValueTarget& b) { a.Swap(&b); }
  inline void Swap(HighValueTarget* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HighValueTarget* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HighValueTarget* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HighValueTarget>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HighValueTarget& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HighValueTarget& from) { HighValueTarget::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HighValueTarget* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.HighValueTarget"; }

 protected:
  explicit HighValueTarget(::google::protobuf::Arena* arena);
  HighValueTarget(::google::protobuf::Arena* arena, const HighValueTarget& from);
  HighValueTarget(::google::protobuf::Arena* arena, HighValueTarget&& from) noexcept
      : HighValueTarget(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetMatchesFieldNumber = 3,
    kTargetPriorityFieldNumber = 2,
    kIsHighValueTargetFieldNumber = 1,
    kIsHighPayoffTargetFieldNumber = 4,
  };
  // repeated .anduril.entitymanager.v1.HighValueTargetMatch target_matches = 3 [json_name = "targetMatches"];
  int target_matches_size() const;
  private:
  int _internal_target_matches_size() const;

  public:
  void clear_target_matches() ;
  ::anduril::entitymanager::v1::HighValueTargetMatch* mutable_target_matches(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>* mutable_target_matches();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>& _internal_target_matches() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>* _internal_mutable_target_matches();
  public:
  const ::anduril::entitymanager::v1::HighValueTargetMatch& target_matches(int index) const;
  ::anduril::entitymanager::v1::HighValueTargetMatch* add_target_matches();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>& target_matches() const;
  // uint32 target_priority = 2 [json_name = "targetPriority"];
  void clear_target_priority() ;
  ::uint32_t target_priority() const;
  void set_target_priority(::uint32_t value);

  private:
  ::uint32_t _internal_target_priority() const;
  void _internal_set_target_priority(::uint32_t value);

  public:
  // bool is_high_value_target = 1 [json_name = "isHighValueTarget"];
  void clear_is_high_value_target() ;
  bool is_high_value_target() const;
  void set_is_high_value_target(bool value);

  private:
  bool _internal_is_high_value_target() const;
  void _internal_set_is_high_value_target(bool value);

  public:
  // bool is_high_payoff_target = 4 [json_name = "isHighPayoffTarget"];
  void clear_is_high_payoff_target() ;
  bool is_high_payoff_target() const;
  void set_is_high_payoff_target(bool value);

  private:
  bool _internal_is_high_payoff_target() const;
  void _internal_set_is_high_payoff_target(bool value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.HighValueTarget)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HighValueTarget& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::HighValueTargetMatch > target_matches_;
    ::uint32_t target_priority_;
    bool is_high_value_target_;
    bool is_high_payoff_target_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto;
};
// -------------------------------------------------------------------

class TargetPriority final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.TargetPriority) */ {
 public:
  inline TargetPriority() : TargetPriority(nullptr) {}
  ~TargetPriority() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TargetPriority* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TargetPriority));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TargetPriority(
      ::google::protobuf::internal::ConstantInitialized);

  inline TargetPriority(const TargetPriority& from) : TargetPriority(nullptr, from) {}
  inline TargetPriority(TargetPriority&& from) noexcept
      : TargetPriority(nullptr, std::move(from)) {}
  inline TargetPriority& operator=(const TargetPriority& from) {
    CopyFrom(from);
    return *this;
  }
  inline TargetPriority& operator=(TargetPriority&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TargetPriority& default_instance() {
    return *internal_default_instance();
  }
  static inline const TargetPriority* internal_default_instance() {
    return reinterpret_cast<const TargetPriority*>(
        &_TargetPriority_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TargetPriority& a, TargetPriority& b) { a.Swap(&b); }
  inline void Swap(TargetPriority* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TargetPriority* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TargetPriority* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TargetPriority>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TargetPriority& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TargetPriority& from) { TargetPriority::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TargetPriority* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.TargetPriority"; }

 protected:
  explicit TargetPriority(::google::protobuf::Arena* arena);
  TargetPriority(::google::protobuf::Arena* arena, const TargetPriority& from);
  TargetPriority(::google::protobuf::Arena* arena, TargetPriority&& from) noexcept
      : TargetPriority(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHighValueTargetFieldNumber = 1,
    kThreatFieldNumber = 2,
  };
  // .anduril.entitymanager.v1.HighValueTarget high_value_target = 1 [json_name = "highValueTarget", (.anduril.entitymanager.v1.overridable) = true];
  bool has_high_value_target() const;
  void clear_high_value_target() ;
  const ::anduril::entitymanager::v1::HighValueTarget& high_value_target() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::HighValueTarget* release_high_value_target();
  ::anduril::entitymanager::v1::HighValueTarget* mutable_high_value_target();
  void set_allocated_high_value_target(::anduril::entitymanager::v1::HighValueTarget* value);
  void unsafe_arena_set_allocated_high_value_target(::anduril::entitymanager::v1::HighValueTarget* value);
  ::anduril::entitymanager::v1::HighValueTarget* unsafe_arena_release_high_value_target();

  private:
  const ::anduril::entitymanager::v1::HighValueTarget& _internal_high_value_target() const;
  ::anduril::entitymanager::v1::HighValueTarget* _internal_mutable_high_value_target();

  public:
  // .anduril.entitymanager.v1.Threat threat = 2 [json_name = "threat"];
  bool has_threat() const;
  void clear_threat() ;
  const ::anduril::entitymanager::v1::Threat& threat() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Threat* release_threat();
  ::anduril::entitymanager::v1::Threat* mutable_threat();
  void set_allocated_threat(::anduril::entitymanager::v1::Threat* value);
  void unsafe_arena_set_allocated_threat(::anduril::entitymanager::v1::Threat* value);
  ::anduril::entitymanager::v1::Threat* unsafe_arena_release_threat();

  private:
  const ::anduril::entitymanager::v1::Threat& _internal_threat() const;
  ::anduril::entitymanager::v1::Threat* _internal_mutable_threat();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.TargetPriority)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TargetPriority& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::HighValueTarget* high_value_target_;
    ::anduril::entitymanager::v1::Threat* threat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TargetPriority

// .anduril.entitymanager.v1.HighValueTarget high_value_target = 1 [json_name = "highValueTarget", (.anduril.entitymanager.v1.overridable) = true];
inline bool TargetPriority::has_high_value_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.high_value_target_ != nullptr);
  return value;
}
inline void TargetPriority::clear_high_value_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.high_value_target_ != nullptr) _impl_.high_value_target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::HighValueTarget& TargetPriority::_internal_high_value_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::HighValueTarget* p = _impl_.high_value_target_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::HighValueTarget&>(::anduril::entitymanager::v1::_HighValueTarget_default_instance_);
}
inline const ::anduril::entitymanager::v1::HighValueTarget& TargetPriority::high_value_target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.TargetPriority.high_value_target)
  return _internal_high_value_target();
}
inline void TargetPriority::unsafe_arena_set_allocated_high_value_target(::anduril::entitymanager::v1::HighValueTarget* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.high_value_target_);
  }
  _impl_.high_value_target_ = reinterpret_cast<::anduril::entitymanager::v1::HighValueTarget*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.TargetPriority.high_value_target)
}
inline ::anduril::entitymanager::v1::HighValueTarget* TargetPriority::release_high_value_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::HighValueTarget* released = _impl_.high_value_target_;
  _impl_.high_value_target_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::HighValueTarget* TargetPriority::unsafe_arena_release_high_value_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.TargetPriority.high_value_target)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::HighValueTarget* temp = _impl_.high_value_target_;
  _impl_.high_value_target_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::HighValueTarget* TargetPriority::_internal_mutable_high_value_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.high_value_target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::HighValueTarget>(GetArena());
    _impl_.high_value_target_ = reinterpret_cast<::anduril::entitymanager::v1::HighValueTarget*>(p);
  }
  return _impl_.high_value_target_;
}
inline ::anduril::entitymanager::v1::HighValueTarget* TargetPriority::mutable_high_value_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::HighValueTarget* _msg = _internal_mutable_high_value_target();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.TargetPriority.high_value_target)
  return _msg;
}
inline void TargetPriority::set_allocated_high_value_target(::anduril::entitymanager::v1::HighValueTarget* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.high_value_target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.high_value_target_ = reinterpret_cast<::anduril::entitymanager::v1::HighValueTarget*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.TargetPriority.high_value_target)
}

// .anduril.entitymanager.v1.Threat threat = 2 [json_name = "threat"];
inline bool TargetPriority::has_threat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.threat_ != nullptr);
  return value;
}
inline void TargetPriority::clear_threat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.threat_ != nullptr) _impl_.threat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::anduril::entitymanager::v1::Threat& TargetPriority::_internal_threat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Threat* p = _impl_.threat_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Threat&>(::anduril::entitymanager::v1::_Threat_default_instance_);
}
inline const ::anduril::entitymanager::v1::Threat& TargetPriority::threat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.TargetPriority.threat)
  return _internal_threat();
}
inline void TargetPriority::unsafe_arena_set_allocated_threat(::anduril::entitymanager::v1::Threat* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.threat_);
  }
  _impl_.threat_ = reinterpret_cast<::anduril::entitymanager::v1::Threat*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.TargetPriority.threat)
}
inline ::anduril::entitymanager::v1::Threat* TargetPriority::release_threat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Threat* released = _impl_.threat_;
  _impl_.threat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Threat* TargetPriority::unsafe_arena_release_threat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.TargetPriority.threat)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Threat* temp = _impl_.threat_;
  _impl_.threat_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Threat* TargetPriority::_internal_mutable_threat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.threat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Threat>(GetArena());
    _impl_.threat_ = reinterpret_cast<::anduril::entitymanager::v1::Threat*>(p);
  }
  return _impl_.threat_;
}
inline ::anduril::entitymanager::v1::Threat* TargetPriority::mutable_threat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Threat* _msg = _internal_mutable_threat();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.TargetPriority.threat)
  return _msg;
}
inline void TargetPriority::set_allocated_threat(::anduril::entitymanager::v1::Threat* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.threat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.threat_ = reinterpret_cast<::anduril::entitymanager::v1::Threat*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.TargetPriority.threat)
}

// -------------------------------------------------------------------

// HighValueTarget

// bool is_high_value_target = 1 [json_name = "isHighValueTarget"];
inline void HighValueTarget::clear_is_high_value_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_high_value_target_ = false;
}
inline bool HighValueTarget::is_high_value_target() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.HighValueTarget.is_high_value_target)
  return _internal_is_high_value_target();
}
inline void HighValueTarget::set_is_high_value_target(bool value) {
  _internal_set_is_high_value_target(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.HighValueTarget.is_high_value_target)
}
inline bool HighValueTarget::_internal_is_high_value_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_high_value_target_;
}
inline void HighValueTarget::_internal_set_is_high_value_target(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_high_value_target_ = value;
}

// uint32 target_priority = 2 [json_name = "targetPriority"];
inline void HighValueTarget::clear_target_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_priority_ = 0u;
}
inline ::uint32_t HighValueTarget::target_priority() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.HighValueTarget.target_priority)
  return _internal_target_priority();
}
inline void HighValueTarget::set_target_priority(::uint32_t value) {
  _internal_set_target_priority(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.HighValueTarget.target_priority)
}
inline ::uint32_t HighValueTarget::_internal_target_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_priority_;
}
inline void HighValueTarget::_internal_set_target_priority(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_priority_ = value;
}

// repeated .anduril.entitymanager.v1.HighValueTargetMatch target_matches = 3 [json_name = "targetMatches"];
inline int HighValueTarget::_internal_target_matches_size() const {
  return _internal_target_matches().size();
}
inline int HighValueTarget::target_matches_size() const {
  return _internal_target_matches_size();
}
inline void HighValueTarget::clear_target_matches() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_matches_.Clear();
}
inline ::anduril::entitymanager::v1::HighValueTargetMatch* HighValueTarget::mutable_target_matches(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.HighValueTarget.target_matches)
  return _internal_mutable_target_matches()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>* HighValueTarget::mutable_target_matches()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.HighValueTarget.target_matches)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_target_matches();
}
inline const ::anduril::entitymanager::v1::HighValueTargetMatch& HighValueTarget::target_matches(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.HighValueTarget.target_matches)
  return _internal_target_matches().Get(index);
}
inline ::anduril::entitymanager::v1::HighValueTargetMatch* HighValueTarget::add_target_matches() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::HighValueTargetMatch* _add = _internal_mutable_target_matches()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.HighValueTarget.target_matches)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>& HighValueTarget::target_matches() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.HighValueTarget.target_matches)
  return _internal_target_matches();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>&
HighValueTarget::_internal_target_matches() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_matches_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::HighValueTargetMatch>*
HighValueTarget::_internal_mutable_target_matches() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.target_matches_;
}

// bool is_high_payoff_target = 4 [json_name = "isHighPayoffTarget"];
inline void HighValueTarget::clear_is_high_payoff_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_high_payoff_target_ = false;
}
inline bool HighValueTarget::is_high_payoff_target() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.HighValueTarget.is_high_payoff_target)
  return _internal_is_high_payoff_target();
}
inline void HighValueTarget::set_is_high_payoff_target(bool value) {
  _internal_set_is_high_payoff_target(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.HighValueTarget.is_high_payoff_target)
}
inline bool HighValueTarget::_internal_is_high_payoff_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_high_payoff_target_;
}
inline void HighValueTarget::_internal_set_is_high_payoff_target(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_high_payoff_target_ = value;
}

// -------------------------------------------------------------------

// HighValueTargetMatch

// string high_value_target_list_id = 1 [json_name = "highValueTargetListId"];
inline void HighValueTargetMatch::clear_high_value_target_list_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_list_id_.ClearToEmpty();
}
inline const std::string& HighValueTargetMatch::high_value_target_list_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_list_id)
  return _internal_high_value_target_list_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HighValueTargetMatch::set_high_value_target_list_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_list_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_list_id)
}
inline std::string* HighValueTargetMatch::mutable_high_value_target_list_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_high_value_target_list_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_list_id)
  return _s;
}
inline const std::string& HighValueTargetMatch::_internal_high_value_target_list_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.high_value_target_list_id_.Get();
}
inline void HighValueTargetMatch::_internal_set_high_value_target_list_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_list_id_.Set(value, GetArena());
}
inline std::string* HighValueTargetMatch::_internal_mutable_high_value_target_list_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.high_value_target_list_id_.Mutable( GetArena());
}
inline std::string* HighValueTargetMatch::release_high_value_target_list_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_list_id)
  return _impl_.high_value_target_list_id_.Release();
}
inline void HighValueTargetMatch::set_allocated_high_value_target_list_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_list_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.high_value_target_list_id_.IsDefault()) {
    _impl_.high_value_target_list_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_list_id)
}

// string high_value_target_description_id = 2 [json_name = "highValueTargetDescriptionId"];
inline void HighValueTargetMatch::clear_high_value_target_description_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_description_id_.ClearToEmpty();
}
inline const std::string& HighValueTargetMatch::high_value_target_description_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_description_id)
  return _internal_high_value_target_description_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HighValueTargetMatch::set_high_value_target_description_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_description_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_description_id)
}
inline std::string* HighValueTargetMatch::mutable_high_value_target_description_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_high_value_target_description_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_description_id)
  return _s;
}
inline const std::string& HighValueTargetMatch::_internal_high_value_target_description_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.high_value_target_description_id_.Get();
}
inline void HighValueTargetMatch::_internal_set_high_value_target_description_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_description_id_.Set(value, GetArena());
}
inline std::string* HighValueTargetMatch::_internal_mutable_high_value_target_description_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.high_value_target_description_id_.Mutable( GetArena());
}
inline std::string* HighValueTargetMatch::release_high_value_target_description_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_description_id)
  return _impl_.high_value_target_description_id_.Release();
}
inline void HighValueTargetMatch::set_allocated_high_value_target_description_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_value_target_description_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.high_value_target_description_id_.IsDefault()) {
    _impl_.high_value_target_description_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.HighValueTargetMatch.high_value_target_description_id)
}

// -------------------------------------------------------------------

// Threat

// bool is_threat = 1 [json_name = "isThreat"];
inline void Threat::clear_is_threat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_threat_ = false;
}
inline bool Threat::is_threat() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Threat.is_threat)
  return _internal_is_threat();
}
inline void Threat::set_is_threat(bool value) {
  _internal_set_is_threat(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.Threat.is_threat)
}
inline bool Threat::_internal_is_threat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_threat_;
}
inline void Threat::_internal_set_is_threat(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_threat_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2fentitymanager_2fv1_2ftarget_5fpriority_2epub_2eproto_2epb_2eh
