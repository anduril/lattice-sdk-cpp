// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/location.pub.proto

#include "anduril/entitymanager/v1/location.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr TMat3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mxx_{0},
        mxy_{0},
        mxz_{0},
        myy_{0},
        myz_{0},
        mzz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TMat3::TMat3(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TMat3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TMat3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TMat3DefaultTypeInternal() {}
  union {
    TMat3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TMat3DefaultTypeInternal _TMat3_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        altitude_hae_meters_{nullptr},
        altitude_agl_meters_{nullptr},
        altitude_asf_meters_{nullptr},
        pressure_depth_meters_{nullptr},
        latitude_degrees_{0},
        longitude_degrees_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;

inline constexpr ErrorEllipse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        probability_{nullptr},
        semi_major_axis_m_{nullptr},
        semi_minor_axis_m_{nullptr},
        orientation_d_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ErrorEllipse::ErrorEllipse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ErrorEllipseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorEllipseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorEllipseDefaultTypeInternal() {}
  union {
    ErrorEllipse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorEllipseDefaultTypeInternal _ErrorEllipse_default_instance_;

inline constexpr Pose::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        orientation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Pose::Pose(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PoseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PoseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PoseDefaultTypeInternal() {}
  union {
    Pose _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PoseDefaultTypeInternal _Pose_default_instance_;

inline constexpr LocationUncertainty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_enu_cov_{nullptr},
        velocity_enu_cov_{nullptr},
        position_error_ellipse_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LocationUncertainty::LocationUncertainty(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LocationUncertaintyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationUncertaintyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationUncertaintyDefaultTypeInternal() {}
  union {
    LocationUncertainty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationUncertaintyDefaultTypeInternal _LocationUncertainty_default_instance_;

inline constexpr Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        velocity_enu_{nullptr},
        attitude_enu_{nullptr},
        acceleration_{nullptr},
        speed_mps_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Location::Location(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Location, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Location, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Location, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Location, _impl_.velocity_enu_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Location, _impl_.speed_mps_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Location, _impl_.acceleration_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Location, _impl_.attitude_enu_),
    0,
    1,
    4,
    3,
    2,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _impl_.latitude_degrees_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _impl_.longitude_degrees_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _impl_.altitude_hae_meters_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _impl_.altitude_agl_meters_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _impl_.altitude_asf_meters_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Position, _impl_.pressure_depth_meters_),
    ~0u,
    ~0u,
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LocationUncertainty, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LocationUncertainty, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LocationUncertainty, _impl_.position_enu_cov_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LocationUncertainty, _impl_.velocity_enu_cov_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LocationUncertainty, _impl_.position_error_ellipse_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ErrorEllipse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ErrorEllipse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ErrorEllipse, _impl_.probability_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ErrorEllipse, _impl_.semi_major_axis_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ErrorEllipse, _impl_.semi_minor_axis_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ErrorEllipse, _impl_.orientation_d_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Pose, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Pose, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Pose, _impl_.pos_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Pose, _impl_.orientation_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TMat3, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TMat3, _impl_.mxx_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TMat3, _impl_.mxy_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TMat3, _impl_.mxz_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TMat3, _impl_.myy_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TMat3, _impl_.myz_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::TMat3, _impl_.mzz_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::anduril::entitymanager::v1::Location)},
        {18, 32, -1, sizeof(::anduril::entitymanager::v1::Position)},
        {38, 49, -1, sizeof(::anduril::entitymanager::v1::LocationUncertainty)},
        {52, 64, -1, sizeof(::anduril::entitymanager::v1::ErrorEllipse)},
        {68, 78, -1, sizeof(::anduril::entitymanager::v1::Pose)},
        {80, -1, -1, sizeof(::anduril::entitymanager::v1::TMat3)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_Location_default_instance_._instance,
    &::anduril::entitymanager::v1::_Position_default_instance_._instance,
    &::anduril::entitymanager::v1::_LocationUncertainty_default_instance_._instance,
    &::anduril::entitymanager::v1::_ErrorEllipse_default_instance_._instance,
    &::anduril::entitymanager::v1::_Pose_default_instance_._instance,
    &::anduril::entitymanager::v1::_TMat3_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n+anduril/entitymanager/v1/location.pub."
    "proto\022\030anduril.entitymanager.v1\032\035anduril"
    "/type/coords.pub.proto\032\036google/protobuf/"
    "wrappers.proto\"\257\002\n\010Location\022>\n\010position\030"
    "\001 \001(\0132\".anduril.entitymanager.v1.Positio"
    "nR\010position\0224\n\014velocity_enu\030\002 \001(\0132\021.andu"
    "ril.type.ENUR\013velocityEnu\0229\n\tspeed_mps\030\005"
    " \001(\0132\034.google.protobuf.DoubleValueR\010spee"
    "dMps\0225\n\014acceleration\030\004 \001(\0132\021.anduril.typ"
    "e.ENUR\014acceleration\022;\n\014attitude_enu\030\003 \001("
    "\0132\030.anduril.type.QuaternionR\013attitudeEnu"
    "\"\236\003\n\010Position\022)\n\020latitude_degrees\030\001 \001(\001R"
    "\017latitudeDegrees\022+\n\021longitude_degrees\030\002 "
    "\001(\001R\020longitudeDegrees\022L\n\023altitude_hae_me"
    "ters\030\003 \001(\0132\034.google.protobuf.DoubleValue"
    "R\021altitudeHaeMeters\022L\n\023altitude_agl_mete"
    "rs\030\004 \001(\0132\034.google.protobuf.DoubleValueR\021"
    "altitudeAglMeters\022L\n\023altitude_asf_meters"
    "\030\005 \001(\0132\034.google.protobuf.DoubleValueR\021al"
    "titudeAsfMeters\022P\n\025pressure_depth_meters"
    "\030\006 \001(\0132\034.google.protobuf.DoubleValueR\023pr"
    "essureDepthMeters\"\211\002\n\023LocationUncertaint"
    "y\022I\n\020position_enu_cov\030\001 \001(\0132\037.anduril.en"
    "titymanager.v1.TMat3R\016positionEnuCov\022I\n\020"
    "velocity_enu_cov\030\002 \001(\0132\037.anduril.entitym"
    "anager.v1.TMat3R\016velocityEnuCov\022\\\n\026posit"
    "ion_error_ellipse\030\003 \001(\0132&.anduril.entity"
    "manager.v1.ErrorEllipseR\024positionErrorEl"
    "lipse\"\243\002\n\014ErrorEllipse\022>\n\013probability\030\001 "
    "\001(\0132\034.google.protobuf.DoubleValueR\013proba"
    "bility\022G\n\021semi_major_axis_m\030\002 \001(\0132\034.goog"
    "le.protobuf.DoubleValueR\016semiMajorAxisM\022"
    "G\n\021semi_minor_axis_m\030\003 \001(\0132\034.google.prot"
    "obuf.DoubleValueR\016semiMinorAxisM\022A\n\rorie"
    "ntation_d\030\004 \001(\0132\034.google.protobuf.Double"
    "ValueR\014orientationD\"x\n\004Pose\0224\n\003pos\030\001 \001(\013"
    "2\".anduril.entitymanager.v1.PositionR\003po"
    "s\022:\n\013orientation\030\002 \001(\0132\030.anduril.type.Qu"
    "aternionR\013orientation\"s\n\005TMat3\022\020\n\003mxx\030\001 "
    "\001(\002R\003mxx\022\020\n\003mxy\030\002 \001(\002R\003mxy\022\020\n\003mxz\030\003 \001(\002R"
    "\003mxz\022\020\n\003myy\030\004 \001(\002R\003myy\022\020\n\003myz\030\005 \001(\002R\003myz"
    "\022\020\n\003mzz\030\006 \001(\002R\003mzzB\201\002\n\034com.anduril.entit"
    "ymanager.v1B\020LocationPubProtoP\001ZMghe.and"
    "uril.dev/anduril/andurilapis-go/anduril/"
    "entitymanager/v1;entitymanager\242\002\003AEX\252\002\030A"
    "nduril.Entitymanager.V1\312\002\030Anduril\\Entity"
    "manager\\V1\342\002$Anduril\\Entitymanager\\V1\\GP"
    "BMetadata\352\002\032Anduril::Entitymanager::V1b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_deps[2] =
    {
        &::descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto = {
    false,
    false,
    1926,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
    "anduril/entitymanager/v1/location.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_deps,
    2,
    6,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto(&descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto);
namespace anduril {
namespace entitymanager {
namespace v1 {
// ===================================================================

class Location::_Internal {
 public:
  using HasBits = decltype(std::declval<Location>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Location, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Position& position(const Location* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::type::ENU& velocity_enu(const Location* msg);
  static void set_has_velocity_enu(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::DoubleValue& speed_mps(const Location* msg);
  static void set_has_speed_mps(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::anduril::type::ENU& acceleration(const Location* msg);
  static void set_has_acceleration(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::anduril::type::Quaternion& attitude_enu(const Location* msg);
  static void set_has_attitude_enu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::entitymanager::v1::Position& Location::_Internal::position(const Location* msg) {
  return *msg->_impl_.position_;
}
const ::anduril::type::ENU& Location::_Internal::velocity_enu(const Location* msg) {
  return *msg->_impl_.velocity_enu_;
}
const ::google::protobuf::DoubleValue& Location::_Internal::speed_mps(const Location* msg) {
  return *msg->_impl_.speed_mps_;
}
const ::anduril::type::ENU& Location::_Internal::acceleration(const Location* msg) {
  return *msg->_impl_.acceleration_;
}
const ::anduril::type::Quaternion& Location::_Internal::attitude_enu(const Location* msg) {
  return *msg->_impl_.attitude_enu_;
}
void Location::clear_velocity_enu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.velocity_enu_ != nullptr) _impl_.velocity_enu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Location::clear_speed_mps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.speed_mps_ != nullptr) _impl_.speed_mps_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Location::clear_acceleration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.acceleration_ != nullptr) _impl_.acceleration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Location::clear_attitude_enu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.attitude_enu_ != nullptr) _impl_.attitude_enu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Location::Location(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Location)
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Location::Location(
    ::google::protobuf::Arena* arena,
    const Location& from)
    : ::google::protobuf::Message(arena) {
  Location* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.velocity_enu_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::type::ENU>(arena, *from._impl_.velocity_enu_)
                : nullptr;
  _impl_.attitude_enu_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::type::Quaternion>(arena, *from._impl_.attitude_enu_)
                : nullptr;
  _impl_.acceleration_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::anduril::type::ENU>(arena, *from._impl_.acceleration_)
                : nullptr;
  _impl_.speed_mps_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.speed_mps_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Location)
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, speed_mps_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::speed_mps_));
}
Location::~Location() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Location)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Location::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  delete _impl_.velocity_enu_;
  delete _impl_.attitude_enu_;
  delete _impl_.acceleration_;
  delete _impl_.speed_mps_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Location)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.velocity_enu_ != nullptr);
      _impl_.velocity_enu_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.attitude_enu_ != nullptr);
      _impl_.attitude_enu_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.acceleration_ != nullptr);
      _impl_.acceleration_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.speed_mps_ != nullptr);
      _impl_.speed_mps_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Location::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> Location::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Location, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Location_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.position_)}},
    // .anduril.type.ENU velocity_enu = 2 [json_name = "velocityEnu"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Location, _impl_.velocity_enu_)}},
    // .anduril.type.Quaternion attitude_enu = 3 [json_name = "attitudeEnu"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Location, _impl_.attitude_enu_)}},
    // .anduril.type.ENU acceleration = 4 [json_name = "acceleration"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Location, _impl_.acceleration_)}},
    // .google.protobuf.DoubleValue speed_mps = 5 [json_name = "speedMps"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_mps_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.ENU velocity_enu = 2 [json_name = "velocityEnu"];
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.velocity_enu_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.Quaternion attitude_enu = 3 [json_name = "attitudeEnu"];
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.attitude_enu_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.ENU acceleration = 4 [json_name = "acceleration"];
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.acceleration_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue speed_mps = 5 [json_name = "speedMps"];
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_mps_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::type::ENU>()},
    {::_pbi::TcParser::GetTable<::anduril::type::Quaternion>()},
    {::_pbi::TcParser::GetTable<::anduril::type::ENU>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

::uint8_t* Location::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Location)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .anduril.type.ENU velocity_enu = 2 [json_name = "velocityEnu"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::velocity_enu(this),
        _Internal::velocity_enu(this).GetCachedSize(), target, stream);
  }

  // .anduril.type.Quaternion attitude_enu = 3 [json_name = "attitudeEnu"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::attitude_enu(this),
        _Internal::attitude_enu(this).GetCachedSize(), target, stream);
  }

  // .anduril.type.ENU acceleration = 4 [json_name = "acceleration"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::acceleration(this),
        _Internal::acceleration(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue speed_mps = 5 [json_name = "speedMps"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::speed_mps(this),
        _Internal::speed_mps(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Location)
  return target;
}

::size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Location)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // .anduril.type.ENU velocity_enu = 2 [json_name = "velocityEnu"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_enu_);
    }

    // .anduril.type.Quaternion attitude_enu = 3 [json_name = "attitudeEnu"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.attitude_enu_);
    }

    // .anduril.type.ENU acceleration = 4 [json_name = "acceleration"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.acceleration_);
    }

    // .google.protobuf.DoubleValue speed_mps = 5 [json_name = "speedMps"];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.speed_mps_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Location::_class_data_ = {
    Location::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Location::GetClassData() const {
  return &_class_data_;
}

void Location::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Location*>(&to_msg);
  auto& from = static_cast<const Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_velocity_enu()->::anduril::type::ENU::MergeFrom(
          from._internal_velocity_enu());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_attitude_enu()->::anduril::type::Quaternion::MergeFrom(
          from._internal_attitude_enu());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_acceleration()->::anduril::type::ENU::MergeFrom(
          from._internal_acceleration());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_speed_mps()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_speed_mps());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Location::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Location::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Location::InternalSwap(Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_mps_)
      + sizeof(Location::_impl_.speed_mps_)
      - PROTOBUF_FIELD_OFFSET(Location, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[0]);
}
// ===================================================================

class Position::_Internal {
 public:
  using HasBits = decltype(std::declval<Position>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_);
  static const ::google::protobuf::DoubleValue& altitude_hae_meters(const Position* msg);
  static void set_has_altitude_hae_meters(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::DoubleValue& altitude_agl_meters(const Position* msg);
  static void set_has_altitude_agl_meters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::DoubleValue& altitude_asf_meters(const Position* msg);
  static void set_has_altitude_asf_meters(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::DoubleValue& pressure_depth_meters(const Position* msg);
  static void set_has_pressure_depth_meters(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::google::protobuf::DoubleValue& Position::_Internal::altitude_hae_meters(const Position* msg) {
  return *msg->_impl_.altitude_hae_meters_;
}
const ::google::protobuf::DoubleValue& Position::_Internal::altitude_agl_meters(const Position* msg) {
  return *msg->_impl_.altitude_agl_meters_;
}
const ::google::protobuf::DoubleValue& Position::_Internal::altitude_asf_meters(const Position* msg) {
  return *msg->_impl_.altitude_asf_meters_;
}
const ::google::protobuf::DoubleValue& Position::_Internal::pressure_depth_meters(const Position* msg) {
  return *msg->_impl_.pressure_depth_meters_;
}
void Position::clear_altitude_hae_meters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.altitude_hae_meters_ != nullptr) _impl_.altitude_hae_meters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Position::clear_altitude_agl_meters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.altitude_agl_meters_ != nullptr) _impl_.altitude_agl_meters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Position::clear_altitude_asf_meters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.altitude_asf_meters_ != nullptr) _impl_.altitude_asf_meters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Position::clear_pressure_depth_meters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pressure_depth_meters_ != nullptr) _impl_.pressure_depth_meters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
Position::Position(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Position)
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Position::Position(
    ::google::protobuf::Arena* arena,
    const Position& from)
    : ::google::protobuf::Message(arena) {
  Position* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.altitude_hae_meters_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.altitude_hae_meters_)
                : nullptr;
  _impl_.altitude_agl_meters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.altitude_agl_meters_)
                : nullptr;
  _impl_.altitude_asf_meters_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.altitude_asf_meters_)
                : nullptr;
  _impl_.pressure_depth_meters_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.pressure_depth_meters_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_degrees_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, latitude_degrees_),
           offsetof(Impl_, longitude_degrees_) -
               offsetof(Impl_, latitude_degrees_) +
               sizeof(Impl_::longitude_degrees_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Position)
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, altitude_hae_meters_),
           0,
           offsetof(Impl_, longitude_degrees_) -
               offsetof(Impl_, altitude_hae_meters_) +
               sizeof(Impl_::longitude_degrees_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Position)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Position::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.altitude_hae_meters_;
  delete _impl_.altitude_agl_meters_;
  delete _impl_.altitude_asf_meters_;
  delete _impl_.pressure_depth_meters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Position)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.altitude_hae_meters_ != nullptr);
      _impl_.altitude_hae_meters_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.altitude_agl_meters_ != nullptr);
      _impl_.altitude_agl_meters_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.altitude_asf_meters_ != nullptr);
      _impl_.altitude_asf_meters_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.pressure_depth_meters_ != nullptr);
      _impl_.pressure_depth_meters_->Clear();
    }
  }
  ::memset(&_impl_.latitude_degrees_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.longitude_degrees_) -
      reinterpret_cast<char*>(&_impl_.latitude_degrees_)) + sizeof(_impl_.longitude_degrees_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Position::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 0, 2> Position::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Position_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double latitude_degrees = 1 [json_name = "latitudeDegrees"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_degrees_)}},
    // double longitude_degrees = 2 [json_name = "longitudeDegrees"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_degrees_)}},
    // .google.protobuf.DoubleValue altitude_hae_meters = 3 [json_name = "altitudeHaeMeters"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.altitude_hae_meters_)}},
    // .google.protobuf.DoubleValue altitude_agl_meters = 4 [json_name = "altitudeAglMeters"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Position, _impl_.altitude_agl_meters_)}},
    // .google.protobuf.DoubleValue altitude_asf_meters = 5 [json_name = "altitudeAsfMeters"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(Position, _impl_.altitude_asf_meters_)}},
    // .google.protobuf.DoubleValue pressure_depth_meters = 6 [json_name = "pressureDepthMeters"];
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(Position, _impl_.pressure_depth_meters_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_degrees = 1 [json_name = "latitudeDegrees"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_degrees_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_degrees = 2 [json_name = "longitudeDegrees"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_degrees_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .google.protobuf.DoubleValue altitude_hae_meters = 3 [json_name = "altitudeHaeMeters"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.altitude_hae_meters_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue altitude_agl_meters = 4 [json_name = "altitudeAglMeters"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.altitude_agl_meters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue altitude_asf_meters = 5 [json_name = "altitudeAsfMeters"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.altitude_asf_meters_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue pressure_depth_meters = 6 [json_name = "pressureDepthMeters"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.pressure_depth_meters_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

::uint8_t* Position::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double latitude_degrees = 1 [json_name = "latitudeDegrees"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_degrees = this->_internal_latitude_degrees();
  ::uint64_t raw_latitude_degrees;
  memcpy(&raw_latitude_degrees, &tmp_latitude_degrees, sizeof(tmp_latitude_degrees));
  if (raw_latitude_degrees != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_latitude_degrees(), target);
  }

  // double longitude_degrees = 2 [json_name = "longitudeDegrees"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_degrees = this->_internal_longitude_degrees();
  ::uint64_t raw_longitude_degrees;
  memcpy(&raw_longitude_degrees, &tmp_longitude_degrees, sizeof(tmp_longitude_degrees));
  if (raw_longitude_degrees != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_longitude_degrees(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.DoubleValue altitude_hae_meters = 3 [json_name = "altitudeHaeMeters"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::altitude_hae_meters(this),
        _Internal::altitude_hae_meters(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue altitude_agl_meters = 4 [json_name = "altitudeAglMeters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::altitude_agl_meters(this),
        _Internal::altitude_agl_meters(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue altitude_asf_meters = 5 [json_name = "altitudeAsfMeters"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::altitude_asf_meters(this),
        _Internal::altitude_asf_meters(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue pressure_depth_meters = 6 [json_name = "pressureDepthMeters"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::pressure_depth_meters(this),
        _Internal::pressure_depth_meters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Position)
  return target;
}

::size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Position)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .google.protobuf.DoubleValue altitude_hae_meters = 3 [json_name = "altitudeHaeMeters"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.altitude_hae_meters_);
    }

    // .google.protobuf.DoubleValue altitude_agl_meters = 4 [json_name = "altitudeAglMeters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.altitude_agl_meters_);
    }

    // .google.protobuf.DoubleValue altitude_asf_meters = 5 [json_name = "altitudeAsfMeters"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.altitude_asf_meters_);
    }

    // .google.protobuf.DoubleValue pressure_depth_meters = 6 [json_name = "pressureDepthMeters"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pressure_depth_meters_);
    }

  }
  // double latitude_degrees = 1 [json_name = "latitudeDegrees"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_degrees = this->_internal_latitude_degrees();
  ::uint64_t raw_latitude_degrees;
  memcpy(&raw_latitude_degrees, &tmp_latitude_degrees, sizeof(tmp_latitude_degrees));
  if (raw_latitude_degrees != 0) {
    total_size += 9;
  }

  // double longitude_degrees = 2 [json_name = "longitudeDegrees"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_degrees = this->_internal_longitude_degrees();
  ::uint64_t raw_longitude_degrees;
  memcpy(&raw_longitude_degrees, &tmp_longitude_degrees, sizeof(tmp_longitude_degrees));
  if (raw_longitude_degrees != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Position::_class_data_ = {
    Position::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Position::GetClassData() const {
  return &_class_data_;
}

void Position::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_altitude_hae_meters()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_altitude_hae_meters());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_altitude_agl_meters()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_altitude_agl_meters());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_altitude_asf_meters()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_altitude_asf_meters());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_pressure_depth_meters()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_pressure_depth_meters());
    }
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_degrees = from._internal_latitude_degrees();
  ::uint64_t raw_latitude_degrees;
  memcpy(&raw_latitude_degrees, &tmp_latitude_degrees, sizeof(tmp_latitude_degrees));
  if (raw_latitude_degrees != 0) {
    _this->_internal_set_latitude_degrees(from._internal_latitude_degrees());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_degrees = from._internal_longitude_degrees();
  ::uint64_t raw_longitude_degrees;
  memcpy(&raw_longitude_degrees, &tmp_longitude_degrees, sizeof(tmp_longitude_degrees));
  if (raw_longitude_degrees != 0) {
    _this->_internal_set_longitude_degrees(from._internal_longitude_degrees());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Position::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Position::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Position::InternalSwap(Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_degrees_)
      + sizeof(Position::_impl_.longitude_degrees_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.altitude_hae_meters_)>(
          reinterpret_cast<char*>(&_impl_.altitude_hae_meters_),
          reinterpret_cast<char*>(&other->_impl_.altitude_hae_meters_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[1]);
}
// ===================================================================

class LocationUncertainty::_Internal {
 public:
  using HasBits = decltype(std::declval<LocationUncertainty>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::TMat3& position_enu_cov(const LocationUncertainty* msg);
  static void set_has_position_enu_cov(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::TMat3& velocity_enu_cov(const LocationUncertainty* msg);
  static void set_has_velocity_enu_cov(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::entitymanager::v1::ErrorEllipse& position_error_ellipse(const LocationUncertainty* msg);
  static void set_has_position_error_ellipse(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::entitymanager::v1::TMat3& LocationUncertainty::_Internal::position_enu_cov(const LocationUncertainty* msg) {
  return *msg->_impl_.position_enu_cov_;
}
const ::anduril::entitymanager::v1::TMat3& LocationUncertainty::_Internal::velocity_enu_cov(const LocationUncertainty* msg) {
  return *msg->_impl_.velocity_enu_cov_;
}
const ::anduril::entitymanager::v1::ErrorEllipse& LocationUncertainty::_Internal::position_error_ellipse(const LocationUncertainty* msg) {
  return *msg->_impl_.position_error_ellipse_;
}
LocationUncertainty::LocationUncertainty(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.LocationUncertainty)
}
inline PROTOBUF_NDEBUG_INLINE LocationUncertainty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LocationUncertainty::LocationUncertainty(
    ::google::protobuf::Arena* arena,
    const LocationUncertainty& from)
    : ::google::protobuf::Message(arena) {
  LocationUncertainty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_enu_cov_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::TMat3>(arena, *from._impl_.position_enu_cov_)
                : nullptr;
  _impl_.velocity_enu_cov_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::TMat3>(arena, *from._impl_.velocity_enu_cov_)
                : nullptr;
  _impl_.position_error_ellipse_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::ErrorEllipse>(arena, *from._impl_.position_error_ellipse_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.LocationUncertainty)
}
inline PROTOBUF_NDEBUG_INLINE LocationUncertainty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LocationUncertainty::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_enu_cov_),
           0,
           offsetof(Impl_, position_error_ellipse_) -
               offsetof(Impl_, position_enu_cov_) +
               sizeof(Impl_::position_error_ellipse_));
}
LocationUncertainty::~LocationUncertainty() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.LocationUncertainty)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocationUncertainty::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_enu_cov_;
  delete _impl_.velocity_enu_cov_;
  delete _impl_.position_error_ellipse_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LocationUncertainty::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.LocationUncertainty)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_enu_cov_ != nullptr);
      _impl_.position_enu_cov_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.velocity_enu_cov_ != nullptr);
      _impl_.velocity_enu_cov_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.position_error_ellipse_ != nullptr);
      _impl_.position_error_ellipse_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocationUncertainty::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> LocationUncertainty::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocationUncertainty_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.TMat3 position_enu_cov = 1 [json_name = "positionEnuCov"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.position_enu_cov_)}},
    // .anduril.entitymanager.v1.TMat3 velocity_enu_cov = 2 [json_name = "velocityEnuCov"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.velocity_enu_cov_)}},
    // .anduril.entitymanager.v1.ErrorEllipse position_error_ellipse = 3 [json_name = "positionErrorEllipse"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.position_error_ellipse_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.TMat3 position_enu_cov = 1 [json_name = "positionEnuCov"];
    {PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.position_enu_cov_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.TMat3 velocity_enu_cov = 2 [json_name = "velocityEnuCov"];
    {PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.velocity_enu_cov_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.ErrorEllipse position_error_ellipse = 3 [json_name = "positionErrorEllipse"];
    {PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.position_error_ellipse_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::TMat3>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::TMat3>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ErrorEllipse>()},
  }}, {{
  }},
};

::uint8_t* LocationUncertainty::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.LocationUncertainty)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.TMat3 position_enu_cov = 1 [json_name = "positionEnuCov"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position_enu_cov(this),
        _Internal::position_enu_cov(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.TMat3 velocity_enu_cov = 2 [json_name = "velocityEnuCov"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::velocity_enu_cov(this),
        _Internal::velocity_enu_cov(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.ErrorEllipse position_error_ellipse = 3 [json_name = "positionErrorEllipse"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::position_error_ellipse(this),
        _Internal::position_error_ellipse(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.LocationUncertainty)
  return target;
}

::size_t LocationUncertainty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.LocationUncertainty)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.entitymanager.v1.TMat3 position_enu_cov = 1 [json_name = "positionEnuCov"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_enu_cov_);
    }

    // .anduril.entitymanager.v1.TMat3 velocity_enu_cov = 2 [json_name = "velocityEnuCov"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_enu_cov_);
    }

    // .anduril.entitymanager.v1.ErrorEllipse position_error_ellipse = 3 [json_name = "positionErrorEllipse"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_error_ellipse_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocationUncertainty::_class_data_ = {
    LocationUncertainty::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LocationUncertainty::GetClassData() const {
  return &_class_data_;
}

void LocationUncertainty::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocationUncertainty*>(&to_msg);
  auto& from = static_cast<const LocationUncertainty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.LocationUncertainty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position_enu_cov()->::anduril::entitymanager::v1::TMat3::MergeFrom(
          from._internal_position_enu_cov());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_velocity_enu_cov()->::anduril::entitymanager::v1::TMat3::MergeFrom(
          from._internal_velocity_enu_cov());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_position_error_ellipse()->::anduril::entitymanager::v1::ErrorEllipse::MergeFrom(
          from._internal_position_error_ellipse());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocationUncertainty::CopyFrom(const LocationUncertainty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.LocationUncertainty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocationUncertainty::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LocationUncertainty::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LocationUncertainty::InternalSwap(LocationUncertainty* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.position_error_ellipse_)
      + sizeof(LocationUncertainty::_impl_.position_error_ellipse_)
      - PROTOBUF_FIELD_OFFSET(LocationUncertainty, _impl_.position_enu_cov_)>(
          reinterpret_cast<char*>(&_impl_.position_enu_cov_),
          reinterpret_cast<char*>(&other->_impl_.position_enu_cov_));
}

::google::protobuf::Metadata LocationUncertainty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[2]);
}
// ===================================================================

class ErrorEllipse::_Internal {
 public:
  using HasBits = decltype(std::declval<ErrorEllipse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_._has_bits_);
  static const ::google::protobuf::DoubleValue& probability(const ErrorEllipse* msg);
  static void set_has_probability(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::DoubleValue& semi_major_axis_m(const ErrorEllipse* msg);
  static void set_has_semi_major_axis_m(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::DoubleValue& semi_minor_axis_m(const ErrorEllipse* msg);
  static void set_has_semi_minor_axis_m(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::DoubleValue& orientation_d(const ErrorEllipse* msg);
  static void set_has_orientation_d(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::google::protobuf::DoubleValue& ErrorEllipse::_Internal::probability(const ErrorEllipse* msg) {
  return *msg->_impl_.probability_;
}
const ::google::protobuf::DoubleValue& ErrorEllipse::_Internal::semi_major_axis_m(const ErrorEllipse* msg) {
  return *msg->_impl_.semi_major_axis_m_;
}
const ::google::protobuf::DoubleValue& ErrorEllipse::_Internal::semi_minor_axis_m(const ErrorEllipse* msg) {
  return *msg->_impl_.semi_minor_axis_m_;
}
const ::google::protobuf::DoubleValue& ErrorEllipse::_Internal::orientation_d(const ErrorEllipse* msg) {
  return *msg->_impl_.orientation_d_;
}
void ErrorEllipse::clear_probability() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.probability_ != nullptr) _impl_.probability_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ErrorEllipse::clear_semi_major_axis_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.semi_major_axis_m_ != nullptr) _impl_.semi_major_axis_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ErrorEllipse::clear_semi_minor_axis_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.semi_minor_axis_m_ != nullptr) _impl_.semi_minor_axis_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ErrorEllipse::clear_orientation_d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.orientation_d_ != nullptr) _impl_.orientation_d_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ErrorEllipse::ErrorEllipse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.ErrorEllipse)
}
inline PROTOBUF_NDEBUG_INLINE ErrorEllipse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ErrorEllipse::ErrorEllipse(
    ::google::protobuf::Arena* arena,
    const ErrorEllipse& from)
    : ::google::protobuf::Message(arena) {
  ErrorEllipse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.probability_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.probability_)
                : nullptr;
  _impl_.semi_major_axis_m_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.semi_major_axis_m_)
                : nullptr;
  _impl_.semi_minor_axis_m_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.semi_minor_axis_m_)
                : nullptr;
  _impl_.orientation_d_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.orientation_d_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.ErrorEllipse)
}
inline PROTOBUF_NDEBUG_INLINE ErrorEllipse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ErrorEllipse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, probability_),
           0,
           offsetof(Impl_, orientation_d_) -
               offsetof(Impl_, probability_) +
               sizeof(Impl_::orientation_d_));
}
ErrorEllipse::~ErrorEllipse() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.ErrorEllipse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ErrorEllipse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.probability_;
  delete _impl_.semi_major_axis_m_;
  delete _impl_.semi_minor_axis_m_;
  delete _impl_.orientation_d_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ErrorEllipse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.ErrorEllipse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.probability_ != nullptr);
      _impl_.probability_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.semi_major_axis_m_ != nullptr);
      _impl_.semi_major_axis_m_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.semi_minor_axis_m_ != nullptr);
      _impl_.semi_minor_axis_m_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.orientation_d_ != nullptr);
      _impl_.orientation_d_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ErrorEllipse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> ErrorEllipse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ErrorEllipse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.orientation_d_)}},
    // .google.protobuf.DoubleValue probability = 1 [json_name = "probability"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.probability_)}},
    // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.semi_major_axis_m_)}},
    // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.semi_minor_axis_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue probability = 1 [json_name = "probability"];
    {PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.probability_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
    {PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.semi_major_axis_m_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
    {PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.semi_minor_axis_m_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
    {PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.orientation_d_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

::uint8_t* ErrorEllipse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.ErrorEllipse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.DoubleValue probability = 1 [json_name = "probability"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::probability(this),
        _Internal::probability(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::semi_major_axis_m(this),
        _Internal::semi_major_axis_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::semi_minor_axis_m(this),
        _Internal::semi_minor_axis_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::orientation_d(this),
        _Internal::orientation_d(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.ErrorEllipse)
  return target;
}

::size_t ErrorEllipse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.ErrorEllipse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .google.protobuf.DoubleValue probability = 1 [json_name = "probability"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.probability_);
    }

    // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.semi_major_axis_m_);
    }

    // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.semi_minor_axis_m_);
    }

    // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.orientation_d_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ErrorEllipse::_class_data_ = {
    ErrorEllipse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ErrorEllipse::GetClassData() const {
  return &_class_data_;
}

void ErrorEllipse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ErrorEllipse*>(&to_msg);
  auto& from = static_cast<const ErrorEllipse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.ErrorEllipse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_probability()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_probability());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_semi_major_axis_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_semi_major_axis_m());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_semi_minor_axis_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_semi_minor_axis_m());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_orientation_d()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_orientation_d());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ErrorEllipse::CopyFrom(const ErrorEllipse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.ErrorEllipse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ErrorEllipse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ErrorEllipse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ErrorEllipse::InternalSwap(ErrorEllipse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.orientation_d_)
      + sizeof(ErrorEllipse::_impl_.orientation_d_)
      - PROTOBUF_FIELD_OFFSET(ErrorEllipse, _impl_.probability_)>(
          reinterpret_cast<char*>(&_impl_.probability_),
          reinterpret_cast<char*>(&other->_impl_.probability_));
}

::google::protobuf::Metadata ErrorEllipse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[3]);
}
// ===================================================================

class Pose::_Internal {
 public:
  using HasBits = decltype(std::declval<Pose>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Pose, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Position& pos(const Pose* msg);
  static void set_has_pos(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::type::Quaternion& orientation(const Pose* msg);
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::entitymanager::v1::Position& Pose::_Internal::pos(const Pose* msg) {
  return *msg->_impl_.pos_;
}
const ::anduril::type::Quaternion& Pose::_Internal::orientation(const Pose* msg) {
  return *msg->_impl_.orientation_;
}
void Pose::clear_orientation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.orientation_ != nullptr) _impl_.orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Pose::Pose(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Pose)
}
inline PROTOBUF_NDEBUG_INLINE Pose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Pose::Pose(
    ::google::protobuf::Arena* arena,
    const Pose& from)
    : ::google::protobuf::Message(arena) {
  Pose* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.pos_)
                : nullptr;
  _impl_.orientation_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::type::Quaternion>(arena, *from._impl_.orientation_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Pose)
}
inline PROTOBUF_NDEBUG_INLINE Pose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Pose::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, orientation_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::orientation_));
}
Pose::~Pose() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Pose)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Pose::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pos_;
  delete _impl_.orientation_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Pose)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Pose::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Pose::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Pose, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Pose_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.type.Quaternion orientation = 2 [json_name = "orientation"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Pose, _impl_.orientation_)}},
    // .anduril.entitymanager.v1.Position pos = 1 [json_name = "pos"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Pose, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Position pos = 1 [json_name = "pos"];
    {PROTOBUF_FIELD_OFFSET(Pose, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.Quaternion orientation = 2 [json_name = "orientation"];
    {PROTOBUF_FIELD_OFFSET(Pose, _impl_.orientation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::type::Quaternion>()},
  }}, {{
  }},
};

::uint8_t* Pose::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Pose)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Position pos = 1 [json_name = "pos"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::pos(this),
        _Internal::pos(this).GetCachedSize(), target, stream);
  }

  // .anduril.type.Quaternion orientation = 2 [json_name = "orientation"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Pose)
  return target;
}

::size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Pose)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.entitymanager.v1.Position pos = 1 [json_name = "pos"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pos_);
    }

    // .anduril.type.Quaternion orientation = 2 [json_name = "orientation"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.orientation_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Pose::_class_data_ = {
    Pose::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Pose::GetClassData() const {
  return &_class_data_;
}

void Pose::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Pose*>(&to_msg);
  auto& from = static_cast<const Pose&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Pose)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pos()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_pos());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_orientation()->::anduril::type::Quaternion::MergeFrom(
          from._internal_orientation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Pose::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Pose::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Pose::InternalSwap(Pose* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pose, _impl_.orientation_)
      + sizeof(Pose::_impl_.orientation_)
      - PROTOBUF_FIELD_OFFSET(Pose, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[4]);
}
// ===================================================================

class TMat3::_Internal {
 public:
};

TMat3::TMat3(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.TMat3)
}
TMat3::TMat3(
    ::google::protobuf::Arena* arena, const TMat3& from)
    : TMat3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TMat3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TMat3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mxx_),
           0,
           offsetof(Impl_, mzz_) -
               offsetof(Impl_, mxx_) +
               sizeof(Impl_::mzz_));
}
TMat3::~TMat3() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.TMat3)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TMat3::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TMat3::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.TMat3)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.mxx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mzz_) -
      reinterpret_cast<char*>(&_impl_.mxx_)) + sizeof(_impl_.mzz_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TMat3::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> TMat3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TMat3_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float mxx = 1 [json_name = "mxx"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxx_)}},
    // float mxy = 2 [json_name = "mxy"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxy_)}},
    // float mxz = 3 [json_name = "mxz"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxz_)}},
    // float myy = 4 [json_name = "myy"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myy_)}},
    // float myz = 5 [json_name = "myz"];
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myz_)}},
    // float mzz = 6 [json_name = "mzz"];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mzz_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float mxx = 1 [json_name = "mxx"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float mxy = 2 [json_name = "mxy"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float mxz = 3 [json_name = "mxz"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float myy = 4 [json_name = "myy"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float myz = 5 [json_name = "myz"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float mzz = 6 [json_name = "mzz"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mzz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TMat3::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.TMat3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float mxx = 1 [json_name = "mxx"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxx = this->_internal_mxx();
  ::uint32_t raw_mxx;
  memcpy(&raw_mxx, &tmp_mxx, sizeof(tmp_mxx));
  if (raw_mxx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_mxx(), target);
  }

  // float mxy = 2 [json_name = "mxy"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxy = this->_internal_mxy();
  ::uint32_t raw_mxy;
  memcpy(&raw_mxy, &tmp_mxy, sizeof(tmp_mxy));
  if (raw_mxy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_mxy(), target);
  }

  // float mxz = 3 [json_name = "mxz"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxz = this->_internal_mxz();
  ::uint32_t raw_mxz;
  memcpy(&raw_mxz, &tmp_mxz, sizeof(tmp_mxz));
  if (raw_mxz != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_mxz(), target);
  }

  // float myy = 4 [json_name = "myy"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_myy = this->_internal_myy();
  ::uint32_t raw_myy;
  memcpy(&raw_myy, &tmp_myy, sizeof(tmp_myy));
  if (raw_myy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_myy(), target);
  }

  // float myz = 5 [json_name = "myz"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_myz = this->_internal_myz();
  ::uint32_t raw_myz;
  memcpy(&raw_myz, &tmp_myz, sizeof(tmp_myz));
  if (raw_myz != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_myz(), target);
  }

  // float mzz = 6 [json_name = "mzz"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mzz = this->_internal_mzz();
  ::uint32_t raw_mzz;
  memcpy(&raw_mzz, &tmp_mzz, sizeof(tmp_mzz));
  if (raw_mzz != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_mzz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.TMat3)
  return target;
}

::size_t TMat3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.TMat3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float mxx = 1 [json_name = "mxx"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxx = this->_internal_mxx();
  ::uint32_t raw_mxx;
  memcpy(&raw_mxx, &tmp_mxx, sizeof(tmp_mxx));
  if (raw_mxx != 0) {
    total_size += 5;
  }

  // float mxy = 2 [json_name = "mxy"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxy = this->_internal_mxy();
  ::uint32_t raw_mxy;
  memcpy(&raw_mxy, &tmp_mxy, sizeof(tmp_mxy));
  if (raw_mxy != 0) {
    total_size += 5;
  }

  // float mxz = 3 [json_name = "mxz"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxz = this->_internal_mxz();
  ::uint32_t raw_mxz;
  memcpy(&raw_mxz, &tmp_mxz, sizeof(tmp_mxz));
  if (raw_mxz != 0) {
    total_size += 5;
  }

  // float myy = 4 [json_name = "myy"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_myy = this->_internal_myy();
  ::uint32_t raw_myy;
  memcpy(&raw_myy, &tmp_myy, sizeof(tmp_myy));
  if (raw_myy != 0) {
    total_size += 5;
  }

  // float myz = 5 [json_name = "myz"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_myz = this->_internal_myz();
  ::uint32_t raw_myz;
  memcpy(&raw_myz, &tmp_myz, sizeof(tmp_myz));
  if (raw_myz != 0) {
    total_size += 5;
  }

  // float mzz = 6 [json_name = "mzz"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mzz = this->_internal_mzz();
  ::uint32_t raw_mzz;
  memcpy(&raw_mzz, &tmp_mzz, sizeof(tmp_mzz));
  if (raw_mzz != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TMat3::_class_data_ = {
    TMat3::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TMat3::GetClassData() const {
  return &_class_data_;
}

void TMat3::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TMat3*>(&to_msg);
  auto& from = static_cast<const TMat3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.TMat3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxx = from._internal_mxx();
  ::uint32_t raw_mxx;
  memcpy(&raw_mxx, &tmp_mxx, sizeof(tmp_mxx));
  if (raw_mxx != 0) {
    _this->_internal_set_mxx(from._internal_mxx());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxy = from._internal_mxy();
  ::uint32_t raw_mxy;
  memcpy(&raw_mxy, &tmp_mxy, sizeof(tmp_mxy));
  if (raw_mxy != 0) {
    _this->_internal_set_mxy(from._internal_mxy());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mxz = from._internal_mxz();
  ::uint32_t raw_mxz;
  memcpy(&raw_mxz, &tmp_mxz, sizeof(tmp_mxz));
  if (raw_mxz != 0) {
    _this->_internal_set_mxz(from._internal_mxz());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_myy = from._internal_myy();
  ::uint32_t raw_myy;
  memcpy(&raw_myy, &tmp_myy, sizeof(tmp_myy));
  if (raw_myy != 0) {
    _this->_internal_set_myy(from._internal_myy());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_myz = from._internal_myz();
  ::uint32_t raw_myz;
  memcpy(&raw_myz, &tmp_myz, sizeof(tmp_myz));
  if (raw_myz != 0) {
    _this->_internal_set_myz(from._internal_myz());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mzz = from._internal_mzz();
  ::uint32_t raw_mzz;
  memcpy(&raw_mzz, &tmp_mzz, sizeof(tmp_mzz));
  if (raw_mzz != 0) {
    _this->_internal_set_mzz(from._internal_mzz());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TMat3::CopyFrom(const TMat3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.TMat3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TMat3::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TMat3::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TMat3::InternalSwap(TMat3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mzz_)
      + sizeof(TMat3::_impl_.mzz_)
      - PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxx_)>(
          reinterpret_cast<char*>(&_impl_.mxx_),
          reinterpret_cast<char*>(&other->_impl_.mxx_));
}

::google::protobuf::Metadata TMat3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
