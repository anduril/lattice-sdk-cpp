// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/signal.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/entitymanager/v1/signal.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {
              template <typename>
PROTOBUF_CONSTEXPR Fixed::Fixed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct FixedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FixedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FixedDefaultTypeInternal() {}
  union {
    Fixed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FixedDefaultTypeInternal _Fixed_default_instance_;

inline constexpr ScanCharacteristics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scan_period_s_{nullptr},
        scan_type_{static_cast< ::anduril::entitymanager::v1::ScanType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ScanCharacteristics::ScanCharacteristics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScanCharacteristicsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanCharacteristicsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanCharacteristicsDefaultTypeInternal() {}
  union {
    ScanCharacteristics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanCharacteristicsDefaultTypeInternal _ScanCharacteristics_default_instance_;

inline constexpr Measurement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_{nullptr},
        sigma_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Measurement::Measurement(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeasurementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeasurementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeasurementDefaultTypeInternal() {}
  union {
    Measurement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeasurementDefaultTypeInternal _Measurement_default_instance_;

inline constexpr Encoding::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        chip_hop_rate_num_sec_{nullptr},
        hop_dwell_time_sec_{nullptr},
        baud_rate_num_sec_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Encoding::Encoding(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncodingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncodingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncodingDefaultTypeInternal() {}
  union {
    Encoding _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncodingDefaultTypeInternal _Encoding_default_instance_;

inline constexpr EmitterNotation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        emitter_notation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        confidence_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EmitterNotation::EmitterNotation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EmitterNotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmitterNotationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmitterNotationDefaultTypeInternal() {}
  union {
    EmitterNotation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmitterNotationDefaultTypeInternal _EmitterNotation_default_instance_;

inline constexpr RangeBearing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        range_m_{nullptr},
        range_angle_d_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RangeBearing::RangeBearing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RangeBearingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeBearingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeBearingDefaultTypeInternal() {}
  union {
    RangeBearing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeBearingDefaultTypeInternal _RangeBearing_default_instance_;

inline constexpr PulseRepetitionInterval::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pulse_repetition_interval_s_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PulseRepetitionInterval::PulseRepetitionInterval(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PulseRepetitionIntervalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PulseRepetitionIntervalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PulseRepetitionIntervalDefaultTypeInternal() {}
  union {
    PulseRepetitionInterval _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PulseRepetitionIntervalDefaultTypeInternal _PulseRepetitionInterval_default_instance_;

inline constexpr Modulation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interpulse_modulation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbols_{nullptr},
        encoding_{nullptr},
        modulation_type_{static_cast< ::anduril::entitymanager::v1::ModulationType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Modulation::Modulation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModulationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModulationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModulationDefaultTypeInternal() {}
  union {
    Modulation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModulationDefaultTypeInternal _Modulation_default_instance_;

inline constexpr Frequency::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        frequency_hz_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Frequency::Frequency(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrequencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrequencyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrequencyDefaultTypeInternal() {}
  union {
    Frequency _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrequencyDefaultTypeInternal _Frequency_default_instance_;

inline constexpr AngleOfArrival::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        relative_pose_{nullptr},
        bearing_elevation_covariance_rad2_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AngleOfArrival::AngleOfArrival(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AngleOfArrivalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AngleOfArrivalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AngleOfArrivalDefaultTypeInternal() {}
  union {
    AngleOfArrival _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AngleOfArrivalDefaultTypeInternal _AngleOfArrival_default_instance_;

inline constexpr LineOfBearing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        range_bearing_{nullptr},
        angle_of_arrival_{nullptr},
        detection_range_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR LineOfBearing::LineOfBearing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LineOfBearingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LineOfBearingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LineOfBearingDefaultTypeInternal() {}
  union {
    LineOfBearing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LineOfBearingDefaultTypeInternal _LineOfBearing_default_instance_;

inline constexpr FrequencyRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        minimum_frequency_hz_{nullptr},
        maximum_frequency_hz_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FrequencyRange::FrequencyRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrequencyRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrequencyRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrequencyRangeDefaultTypeInternal() {}
  union {
    FrequencyRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrequencyRangeDefaultTypeInternal _FrequencyRange_default_instance_;

inline constexpr Signal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        emitter_notations_{},
        bandwidth_hz_{nullptr},
        signal_to_noise_ratio_{nullptr},
        pulse_width_s_{nullptr},
        pulse_repetition_interval_{nullptr},
        modulation_{nullptr},
        scan_characteristics_{nullptr},
        frequency_measurement_{},
        report_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Signal::Signal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignalDefaultTypeInternal() {}
  union {
    Signal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignalDefaultTypeInternal _Signal_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.bandwidth_hz_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.signal_to_noise_ratio_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.emitter_notations_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.pulse_width_s_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.pulse_repetition_interval_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.modulation_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.scan_characteristics_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.frequency_measurement_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_.report_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::EmitterNotation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::EmitterNotation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::EmitterNotation, _impl_.emitter_notation_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::EmitterNotation, _impl_.confidence_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Measurement, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Measurement, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Measurement, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Measurement, _impl_.sigma_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Frequency, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Frequency, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Frequency, _impl_.frequency_hz_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FrequencyRange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FrequencyRange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FrequencyRange, _impl_.minimum_frequency_hz_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FrequencyRange, _impl_.maximum_frequency_hz_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _impl_.range_bearing_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _impl_.angle_of_arrival_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _impl_.detection_range_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AngleOfArrival, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AngleOfArrival, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AngleOfArrival, _impl_.relative_pose_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::AngleOfArrival, _impl_.bearing_elevation_covariance_rad2_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Fixed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeBearing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeBearing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeBearing, _impl_.range_m_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RangeBearing, _impl_.range_angle_d_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::PulseRepetitionInterval, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::PulseRepetitionInterval, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::PulseRepetitionInterval, _impl_.pulse_repetition_interval_s_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Modulation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Modulation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Modulation, _impl_.modulation_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Modulation, _impl_.symbols_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Modulation, _impl_.interpulse_modulation_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Modulation, _impl_.encoding_),
        ~0u,
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Encoding, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Encoding, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Encoding, _impl_.chip_hop_rate_num_sec_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Encoding, _impl_.hop_dwell_time_sec_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Encoding, _impl_.baud_rate_num_sec_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ScanCharacteristics, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ScanCharacteristics, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ScanCharacteristics, _impl_.scan_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ScanCharacteristics, _impl_.scan_period_s_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 21, -1, sizeof(::anduril::entitymanager::v1::Signal)},
        {32, 42, -1, sizeof(::anduril::entitymanager::v1::EmitterNotation)},
        {44, 54, -1, sizeof(::anduril::entitymanager::v1::Measurement)},
        {56, 65, -1, sizeof(::anduril::entitymanager::v1::Frequency)},
        {66, 76, -1, sizeof(::anduril::entitymanager::v1::FrequencyRange)},
        {78, 92, -1, sizeof(::anduril::entitymanager::v1::LineOfBearing)},
        {97, 107, -1, sizeof(::anduril::entitymanager::v1::AngleOfArrival)},
        {109, -1, -1, sizeof(::anduril::entitymanager::v1::Fixed)},
        {117, 127, -1, sizeof(::anduril::entitymanager::v1::RangeBearing)},
        {129, 138, -1, sizeof(::anduril::entitymanager::v1::PulseRepetitionInterval)},
        {139, 151, -1, sizeof(::anduril::entitymanager::v1::Modulation)},
        {155, 166, -1, sizeof(::anduril::entitymanager::v1::Encoding)},
        {169, 179, -1, sizeof(::anduril::entitymanager::v1::ScanCharacteristics)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_Signal_default_instance_._instance,
    &::anduril::entitymanager::v1::_EmitterNotation_default_instance_._instance,
    &::anduril::entitymanager::v1::_Measurement_default_instance_._instance,
    &::anduril::entitymanager::v1::_Frequency_default_instance_._instance,
    &::anduril::entitymanager::v1::_FrequencyRange_default_instance_._instance,
    &::anduril::entitymanager::v1::_LineOfBearing_default_instance_._instance,
    &::anduril::entitymanager::v1::_AngleOfArrival_default_instance_._instance,
    &::anduril::entitymanager::v1::_Fixed_default_instance_._instance,
    &::anduril::entitymanager::v1::_RangeBearing_default_instance_._instance,
    &::anduril::entitymanager::v1::_PulseRepetitionInterval_default_instance_._instance,
    &::anduril::entitymanager::v1::_Modulation_default_instance_._instance,
    &::anduril::entitymanager::v1::_Encoding_default_instance_._instance,
    &::anduril::entitymanager::v1::_ScanCharacteristics_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n)anduril/entitymanager/v1/signal.pub.pr"
    "oto\022\030anduril.entitymanager.v1\032+anduril/e"
    "ntitymanager/v1/location.pub.proto\032\035andu"
    "ril/type/coords.pub.proto\032\036google/protob"
    "uf/wrappers.proto\"\241\007\n\006Signal\022P\n\020frequenc"
    "y_center\030\001 \001(\0132#.anduril.entitymanager.v"
    "1.FrequencyH\000R\017frequencyCenter\022S\n\017freque"
    "ncy_range\030\002 \001(\0132(.anduril.entitymanager."
    "v1.FrequencyRangeH\000R\016frequencyRange\022\?\n\014b"
    "andwidth_hz\030\003 \001(\0132\034.google.protobuf.Doub"
    "leValueR\013bandwidthHz\022O\n\025signal_to_noise_"
    "ratio\030\004 \001(\0132\034.google.protobuf.DoubleValu"
    "eR\022signalToNoiseRatio\022Q\n\017line_of_bearing"
    "\030\005 \001(\0132\'.anduril.entitymanager.v1.LineOf"
    "BearingH\001R\rlineOfBearing\0227\n\005fixed\030\006 \001(\0132"
    "\037.anduril.entitymanager.v1.FixedH\001R\005fixe"
    "d\022V\n\021emitter_notations\030\007 \003(\0132).anduril.e"
    "ntitymanager.v1.EmitterNotationR\020emitter"
    "Notations\022@\n\rpulse_width_s\030\010 \001(\0132\034.googl"
    "e.protobuf.DoubleValueR\013pulseWidthS\022m\n\031p"
    "ulse_repetition_interval\030\t \001(\01321.anduril"
    ".entitymanager.v1.PulseRepetitionInterva"
    "lR\027pulseRepetitionInterval\022D\n\nmodulation"
    "\030\n \001(\0132$.anduril.entitymanager.v1.Modula"
    "tionR\nmodulation\022`\n\024scan_characteristics"
    "\030\013 \001(\0132-.anduril.entitymanager.v1.ScanCh"
    "aracteristicsR\023scanCharacteristicsB\027\n\025fr"
    "equency_measurementB\010\n\006report\"z\n\017Emitter"
    "Notation\022)\n\020emitter_notation\030\001 \001(\tR\017emit"
    "terNotation\022<\n\nconfidence\030\002 \001(\0132\034.google"
    ".protobuf.DoubleValueR\nconfidence\"u\n\013Mea"
    "surement\0222\n\005value\030\001 \001(\0132\034.google.protobu"
    "f.DoubleValueR\005value\0222\n\005sigma\030\002 \001(\0132\034.go"
    "ogle.protobuf.DoubleValueR\005sigma\"U\n\tFreq"
    "uency\022H\n\014frequency_hz\030\001 \001(\0132%.anduril.en"
    "titymanager.v1.MeasurementR\013frequencyHz\""
    "\276\001\n\016FrequencyRange\022U\n\024minimum_frequency_"
    "hz\030\001 \001(\0132#.anduril.entitymanager.v1.Freq"
    "uencyR\022minimumFrequencyHz\022U\n\024maximum_fre"
    "quency_hz\030\002 \001(\0132#.anduril.entitymanager."
    "v1.FrequencyR\022maximumFrequencyHz\"\243\003\n\rLin"
    "eOfBearing\022>\n\006origin\030\001 \001(\0132\".anduril.ent"
    "itymanager.v1.PositionB\002\030\001R\006origin\022O\n\rra"
    "nge_bearing\030\002 \001(\0132&.anduril.entitymanage"
    "r.v1.RangeBearingB\002\030\001R\014rangeBearing\022R\n\020a"
    "ngle_of_arrival\030\003 \001(\0132(.anduril.entityma"
    "nager.v1.AngleOfArrivalR\016angleOfArrival\022"
    "Q\n\020range_estimate_m\030\004 \001(\0132%.anduril.enti"
    "tymanager.v1.MeasurementH\000R\016rangeEstimat"
    "eM\022G\n\013max_range_m\030\005 \001(\0132%.anduril.entity"
    "manager.v1.MeasurementH\000R\tmaxRangeMB\021\n\017d"
    "etection_range\"\251\001\n\016AngleOfArrival\0227\n\rrel"
    "ative_pose\030\001 \001(\0132\022.anduril.type.PoseR\014re"
    "lativePose\022^\n!bearing_elevation_covarian"
    "ce_rad2\030\002 \001(\0132\023.anduril.type.TMat2R\036bear"
    "ingElevationCovarianceRad2\"\007\n\005Fixed\"\231\001\n\014"
    "RangeBearing\022>\n\007range_m\030\001 \001(\0132%.anduril."
    "entitymanager.v1.MeasurementR\006rangeM\022I\n\r"
    "range_angle_d\030\002 \001(\0132%.anduril.entitymana"
    "ger.v1.MeasurementR\013rangeAngleD\"\177\n\027Pulse"
    "RepetitionInterval\022d\n\033pulse_repetition_i"
    "nterval_s\030\001 \001(\0132%.anduril.entitymanager."
    "v1.MeasurementR\030pulseRepetitionIntervalS"
    "\"\213\002\n\nModulation\022Q\n\017modulation_type\030\001 \001(\016"
    "2(.anduril.entitymanager.v1.ModulationTy"
    "peR\016modulationType\0225\n\007symbols\030\002 \001(\0132\033.go"
    "ogle.protobuf.Int32ValueR\007symbols\0223\n\025int"
    "erpulse_modulation\030\003 \001(\tR\024interpulseModu"
    "lation\022>\n\010encoding\030\004 \001(\0132\".anduril.entit"
    "ymanager.v1.EncodingR\010encoding\"\356\001\n\010Encod"
    "ing\022N\n\025chip_hop_rate_num_sec\030\001 \001(\0132\034.goo"
    "gle.protobuf.DoubleValueR\021chipHopRateNum"
    "Sec\022I\n\022hop_dwell_time_sec\030\002 \001(\0132\034.google"
    ".protobuf.DoubleValueR\017hopDwellTimeSec\022G"
    "\n\021baud_rate_num_sec\030\003 \001(\0132\034.google.proto"
    "buf.DoubleValueR\016baudRateNumSec\"\230\001\n\023Scan"
    "Characteristics\022\?\n\tscan_type\030\001 \001(\0162\".and"
    "uril.entitymanager.v1.ScanTypeR\010scanType"
    "\022@\n\rscan_period_s\030\002 \001(\0132\034.google.protobu"
    "f.DoubleValueR\013scanPeriodS*\360\017\n\016Modulatio"
    "nType\022\033\n\027MODULATION_TYPE_INVALID\020\000\022\035\n\031MO"
    "DULATION_TYPE_AMPLITUDE\020\001\022\035\n\031MODULATION_"
    "TYPE_FREQUENCY\020\002\022\031\n\025MODULATION_TYPE_PHAS"
    "E\020\003\022\032\n\026MODULATION_TYPE_SPACED\020\004\022*\n&MODUL"
    "ATION_TYPE_AMPLITUDE_SHIFT_KEYING\020\005\022*\n&M"
    "ODULATION_TYPE_FREQUENCY_SHIFT_KEYING\020\006\022"
    "&\n\"MODULATION_TYPE_PHASE_SHIFT_KEYING\020\007\022"
    "(\n$MODULATION_TYPE_MINIMUM_SHIFT_KEYING\020"
    "\010\0221\n-MODULATION_TYPE_MINIMUM_SHIFT_KEYIN"
    "G_GAUSSIAN\020\t\022*\n&MODULATION_TYPE_SINGLE_S"
    "IDE_BAND_UPPER\020\n\022*\n&MODULATION_TYPE_SING"
    "LE_SIDE_BAND_LOWER\020\013\0221\n-MODULATION_TYPE_"
    "SINGLE_SIDE_BAND_FULL_CARRIER\020\014\0227\n3MODUL"
    "ATION_TYPE_SINGLE_SIDE_BAND_SUPPRESSED_C"
    "ARRIER\020\r\0224\n0MODULATION_TYPE_SINGLE_SIDE_"
    "BAND_REDUCED_CARRIER\020\016\0224\n0MODULATION_TYP"
    "E_SINGLE_SIDE_BAND_WITHOUT_CARRIER\020\017\022/\n+"
    "MODULATION_TYPE_DUAL_SIDE_BAND_FULL_CARR"
    "IER\020\020\0225\n1MODULATION_TYPE_DUAL_SIDE_BAND_"
    "SUPPRESSED_CARRIER\020\021\0222\n.MODULATION_TYPE_"
    "DUAL_SIDE_BAND_REDUCED_CARRIER\020\022\0222\n.MODU"
    "LATION_TYPE_DUAL_SIDE_BAND_WITHOUT_CARRI"
    "ER\020\023\022)\n%MODULATION_TYPE_INDEPENDENT_SIDE"
    "_BAND\020\024\022\'\n#MODULATION_TYPE_VESTIGIAL_SID"
    "E_BAND\020\025\022!\n\035MODULATION_TYPE_ON_OFF_KEYIN"
    "G\020\026\0220\n,MODULATION_TYPE_MULTI_FREQUENCY_S"
    "HIFT_KEYING\020\027\0220\n,MODULATION_TYPE_AUDIO_F"
    "REQUENCY_SHIFT_KEYING\020\030\022;\n7MODULATION_TY"
    "PE_CONTINUOUS_PHASE_FREQUENCY_SHIFT_KEYI"
    "NG\020\031\022(\n$MODULATION_TYPE_C_PHASE_SHIFT_KE"
    "YING\020\032\022D\n@MODULATION_TYPE_DIFFERENTIALLY"
    "_ENCODED_BINARY_PHASE_SHIFT_KEYING\020\033\022H\nD"
    "MODULATION_TYPE_DIFFERENTIALLY_ENCODED_Q"
    "UADRATURE_PHASE_SHIFT_KEYING\020\034\0228\n4MODULA"
    "TION_TYPE_OFFSET_QUADRATURE_PHASE_SHIFT_"
    "KEYING\020\035\0223\n/MODULATION_TYPE_DIFFERENTIAL"
    "_PHASE_SHIFT_KEYING\020\036\0226\n2MODULATION_TYPE"
    "_PI_4_QUADRATURE_PHASE_SHIFT_KEYING\020\037\022E\n"
    "AMODULATION_TYPE_STACKED_OVERLAPPING_QUA"
    "DRATURE_PHASE_SHIFT_KEYING\020 \0223\n/MODULATI"
    "ON_TYPE_F_QUADRATURE_PHASE_SHIFT_KEYING\020"
    "!\022/\n+MODULATION_TYPE_QUADRATURE_AMPLITUD"
    "E_ANALOG\020\"\0220\n,MODULATION_TYPE_QUADRATURE"
    "_AMPLITUDE_DIGITAL\020#\022$\n MODULATION_TYPE_"
    "CONTINUOUS_PHASE\020$\022\"\n\036MODULATION_TYPE_PU"
    "LSE_POSITION\020%\022 \n\034MODULATION_TYPE_TRELLI"
    "S_CODE\020&\022>\n:MODULATION_TYPE_ORTHOGONAL_F"
    "REQUENCY_DIVISION_MULTIPLEXING\020\'\0225\n1MODU"
    "LATION_TYPE_FREQUENCY_HOPPING_SPREAD_SPE"
    "CTRUM\020(\0224\n0MODULATION_TYPE_DIGITAL_SEQUE"
    "NCE_SPREAD_SPECTRUM\020)*\274\004\n\010ScanType\022\025\n\021SC"
    "AN_TYPE_INVALID\020\000\022\026\n\022SCAN_TYPE_CIRCULAR\020"
    "\001\022-\n)SCAN_TYPE_BIDIRECTIONAL_HORIZONTAL_"
    "SECTOR\020\002\022+\n\'SCAN_TYPE_BIDIRECTIONAL_VERT"
    "ICAL_SECTOR\020\003\022\032\n\026SCAN_TYPE_NON_SCANNING\020"
    "\004\022\027\n\023SCAN_TYPE_IRREGULAR\020\005\022\025\n\021SCAN_TYPE_"
    "CONICAL\020\006\022\034\n\030SCAN_TYPE_LOBE_SWITCHING\020\007\022"
    "\024\n\020SCAN_TYPE_RASTER\020\010\022&\n\"SCAN_TYPE_CIRCU"
    "LAR_VERTICAL_SECTOR\020\t\022\036\n\032SCAN_TYPE_CIRCU"
    "LAR_CONICAL\020\n\022\034\n\030SCAN_TYPE_SECTOR_CONICA"
    "L\020\013\022\030\n\024SCAN_TYPE_AGILE_BEAM\020\014\022,\n(SCAN_TY"
    "PE_UNIDIRECTIONAL_VERTICAL_SECTOR\020\r\022.\n*S"
    "CAN_TYPE_UNIDIRECTIONAL_HORIZONTAL_SECTO"
    "R\020\016\022#\n\037SCAN_TYPE_UNIDIRECTIONAL_SECTOR\020\017"
    "\022\"\n\036SCAN_TYPE_BIDIRECTIONAL_SECTOR\020\020B\377\001\n"
    "\034com.anduril.entitymanager.v1B\016SignalPub"
    "ProtoP\001ZMghe.anduril.dev/anduril/anduril"
    "apis-go/anduril/entitymanager/v1;entitym"
    "anager\242\002\003AEX\252\002\030Anduril.Entitymanager.V1\312"
    "\002\030Anduril\\Entitymanager\\V1\342\002$Anduril\\Ent"
    "itymanager\\V1\\GPBMetadata\352\002\032Anduril::Ent"
    "itymanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto_deps[3] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
        &::descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto = {
    false,
    false,
    6062,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    "anduril/entitymanager/v1/signal.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto_deps,
    3,
    13,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
};
namespace anduril {
namespace entitymanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* ModulationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ModulationType_internal_data_[] = {
    2752512u, 0u, };
bool ModulationType_IsValid(int value) {
  return 0 <= value && value <= 41;
}
const ::google::protobuf::EnumDescriptor* ScanType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ScanType_internal_data_[] = {
    1114112u, 0u, };
bool ScanType_IsValid(int value) {
  return 0 <= value && value <= 16;
}
// ===================================================================

class Signal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Signal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Signal, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Signal, _impl_._oneof_case_);
};

void Signal::set_allocated_frequency_center(::anduril::entitymanager::v1::Frequency* frequency_center) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_frequency_measurement();
  if (frequency_center) {
    ::google::protobuf::Arena* submessage_arena = frequency_center->GetArena();
    if (message_arena != submessage_arena) {
      frequency_center = ::google::protobuf::internal::GetOwnedMessage(message_arena, frequency_center, submessage_arena);
    }
    set_has_frequency_center();
    _impl_.frequency_measurement_.frequency_center_ = frequency_center;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Signal.frequency_center)
}
void Signal::set_allocated_frequency_range(::anduril::entitymanager::v1::FrequencyRange* frequency_range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_frequency_measurement();
  if (frequency_range) {
    ::google::protobuf::Arena* submessage_arena = frequency_range->GetArena();
    if (message_arena != submessage_arena) {
      frequency_range = ::google::protobuf::internal::GetOwnedMessage(message_arena, frequency_range, submessage_arena);
    }
    set_has_frequency_range();
    _impl_.frequency_measurement_.frequency_range_ = frequency_range;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Signal.frequency_range)
}
void Signal::clear_bandwidth_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bandwidth_hz_ != nullptr) _impl_.bandwidth_hz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Signal::clear_signal_to_noise_ratio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signal_to_noise_ratio_ != nullptr) _impl_.signal_to_noise_ratio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Signal::set_allocated_line_of_bearing(::anduril::entitymanager::v1::LineOfBearing* line_of_bearing) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_report();
  if (line_of_bearing) {
    ::google::protobuf::Arena* submessage_arena = line_of_bearing->GetArena();
    if (message_arena != submessage_arena) {
      line_of_bearing = ::google::protobuf::internal::GetOwnedMessage(message_arena, line_of_bearing, submessage_arena);
    }
    set_has_line_of_bearing();
    _impl_.report_.line_of_bearing_ = line_of_bearing;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Signal.line_of_bearing)
}
void Signal::set_allocated_fixed(::anduril::entitymanager::v1::Fixed* fixed) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_report();
  if (fixed) {
    ::google::protobuf::Arena* submessage_arena = fixed->GetArena();
    if (message_arena != submessage_arena) {
      fixed = ::google::protobuf::internal::GetOwnedMessage(message_arena, fixed, submessage_arena);
    }
    set_has_fixed();
    _impl_.report_.fixed_ = fixed;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Signal.fixed)
}
void Signal::clear_pulse_width_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pulse_width_s_ != nullptr) _impl_.pulse_width_s_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Signal::Signal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Signal)
}
inline PROTOBUF_NDEBUG_INLINE Signal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Signal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        emitter_notations_{visibility, arena, from.emitter_notations_},
        frequency_measurement_{},
        report_{},
        _oneof_case_{from._oneof_case_[0], from._oneof_case_[1]} {}

Signal::Signal(
    ::google::protobuf::Arena* arena,
    const Signal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Signal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bandwidth_hz_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.bandwidth_hz_)
                        : nullptr;
  _impl_.signal_to_noise_ratio_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.signal_to_noise_ratio_)
                        : nullptr;
  _impl_.pulse_width_s_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.pulse_width_s_)
                        : nullptr;
  _impl_.pulse_repetition_interval_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::PulseRepetitionInterval>(
                              arena, *from._impl_.pulse_repetition_interval_)
                        : nullptr;
  _impl_.modulation_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Modulation>(
                              arena, *from._impl_.modulation_)
                        : nullptr;
  _impl_.scan_characteristics_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::ScanCharacteristics>(
                              arena, *from._impl_.scan_characteristics_)
                        : nullptr;
  switch (frequency_measurement_case()) {
    case FREQUENCY_MEASUREMENT_NOT_SET:
      break;
      case kFrequencyCenter:
        _impl_.frequency_measurement_.frequency_center_ = ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Frequency>(arena, *from._impl_.frequency_measurement_.frequency_center_);
        break;
      case kFrequencyRange:
        _impl_.frequency_measurement_.frequency_range_ = ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::FrequencyRange>(arena, *from._impl_.frequency_measurement_.frequency_range_);
        break;
  }
  switch (report_case()) {
    case REPORT_NOT_SET:
      break;
      case kLineOfBearing:
        _impl_.report_.line_of_bearing_ = ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::LineOfBearing>(arena, *from._impl_.report_.line_of_bearing_);
        break;
      case kFixed:
        _impl_.report_.fixed_ = ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Fixed>(arena, *from._impl_.report_.fixed_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Signal)
}
inline PROTOBUF_NDEBUG_INLINE Signal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        emitter_notations_{visibility, arena},
        frequency_measurement_{},
        report_{},
        _oneof_case_{} {}

inline void Signal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bandwidth_hz_),
           0,
           offsetof(Impl_, scan_characteristics_) -
               offsetof(Impl_, bandwidth_hz_) +
               sizeof(Impl_::scan_characteristics_));
}
Signal::~Signal() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Signal)
  SharedDtor(*this);
}
inline void Signal::SharedDtor(MessageLite& self) {
  Signal& this_ = static_cast<Signal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.bandwidth_hz_;
  delete this_._impl_.signal_to_noise_ratio_;
  delete this_._impl_.pulse_width_s_;
  delete this_._impl_.pulse_repetition_interval_;
  delete this_._impl_.modulation_;
  delete this_._impl_.scan_characteristics_;
  if (this_.has_frequency_measurement()) {
    this_.clear_frequency_measurement();
  }
  if (this_.has_report()) {
    this_.clear_report();
  }
  this_._impl_.~Impl_();
}

void Signal::clear_frequency_measurement() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entitymanager.v1.Signal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (frequency_measurement_case()) {
    case kFrequencyCenter: {
      if (GetArena() == nullptr) {
        delete _impl_.frequency_measurement_.frequency_center_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.frequency_measurement_.frequency_center_);
      }
      break;
    }
    case kFrequencyRange: {
      if (GetArena() == nullptr) {
        delete _impl_.frequency_measurement_.frequency_range_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.frequency_measurement_.frequency_range_);
      }
      break;
    }
    case FREQUENCY_MEASUREMENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FREQUENCY_MEASUREMENT_NOT_SET;
}

void Signal::clear_report() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entitymanager.v1.Signal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (report_case()) {
    case kLineOfBearing: {
      if (GetArena() == nullptr) {
        delete _impl_.report_.line_of_bearing_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.report_.line_of_bearing_);
      }
      break;
    }
    case kFixed: {
      if (GetArena() == nullptr) {
        delete _impl_.report_.fixed_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.report_.fixed_);
      }
      break;
    }
    case REPORT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = REPORT_NOT_SET;
}


inline void* Signal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Signal(arena);
}
constexpr auto Signal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Signal, _impl_.emitter_notations_) +
          decltype(Signal::_impl_.emitter_notations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Signal), alignof(Signal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Signal::PlacementNew_,
                                 sizeof(Signal),
                                 alignof(Signal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Signal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Signal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Signal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Signal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Signal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Signal>(), &Signal::ByteSizeLong,
            &Signal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Signal, _impl_._cached_size_),
        false,
    },
    &Signal::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Signal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 11, 0, 2> Signal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Signal, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Signal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.DoubleValue bandwidth_hz = 3 [json_name = "bandwidthHz"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(Signal, _impl_.bandwidth_hz_)}},
    // .google.protobuf.DoubleValue signal_to_noise_ratio = 4 [json_name = "signalToNoiseRatio"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 3, PROTOBUF_FIELD_OFFSET(Signal, _impl_.signal_to_noise_ratio_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .anduril.entitymanager.v1.EmitterNotation emitter_notations = 7 [json_name = "emitterNotations"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 6, PROTOBUF_FIELD_OFFSET(Signal, _impl_.emitter_notations_)}},
    // .google.protobuf.DoubleValue pulse_width_s = 8 [json_name = "pulseWidthS"];
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 7, PROTOBUF_FIELD_OFFSET(Signal, _impl_.pulse_width_s_)}},
    // .anduril.entitymanager.v1.PulseRepetitionInterval pulse_repetition_interval = 9 [json_name = "pulseRepetitionInterval"];
    {::_pbi::TcParser::FastMtS1,
     {74, 3, 8, PROTOBUF_FIELD_OFFSET(Signal, _impl_.pulse_repetition_interval_)}},
    // .anduril.entitymanager.v1.Modulation modulation = 10 [json_name = "modulation"];
    {::_pbi::TcParser::FastMtS1,
     {82, 4, 9, PROTOBUF_FIELD_OFFSET(Signal, _impl_.modulation_)}},
    // .anduril.entitymanager.v1.ScanCharacteristics scan_characteristics = 11 [json_name = "scanCharacteristics"];
    {::_pbi::TcParser::FastMtS1,
     {90, 5, 10, PROTOBUF_FIELD_OFFSET(Signal, _impl_.scan_characteristics_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Frequency frequency_center = 1 [json_name = "frequencyCenter"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.frequency_measurement_.frequency_center_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.FrequencyRange frequency_range = 2 [json_name = "frequencyRange"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.frequency_measurement_.frequency_range_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue bandwidth_hz = 3 [json_name = "bandwidthHz"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.bandwidth_hz_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue signal_to_noise_ratio = 4 [json_name = "signalToNoiseRatio"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.signal_to_noise_ratio_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.LineOfBearing line_of_bearing = 5 [json_name = "lineOfBearing"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.report_.line_of_bearing_), _Internal::kOneofCaseOffset + 4, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Fixed fixed = 6 [json_name = "fixed"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.report_.fixed_), _Internal::kOneofCaseOffset + 4, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entitymanager.v1.EmitterNotation emitter_notations = 7 [json_name = "emitterNotations"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.emitter_notations_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue pulse_width_s = 8 [json_name = "pulseWidthS"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.pulse_width_s_), _Internal::kHasBitsOffset + 2, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.PulseRepetitionInterval pulse_repetition_interval = 9 [json_name = "pulseRepetitionInterval"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.pulse_repetition_interval_), _Internal::kHasBitsOffset + 3, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Modulation modulation = 10 [json_name = "modulation"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.modulation_), _Internal::kHasBitsOffset + 4, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.ScanCharacteristics scan_characteristics = 11 [json_name = "scanCharacteristics"];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.scan_characteristics_), _Internal::kHasBitsOffset + 5, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Frequency>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FrequencyRange>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::LineOfBearing>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Fixed>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::EmitterNotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::PulseRepetitionInterval>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Modulation>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ScanCharacteristics>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Signal::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Signal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emitter_notations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.bandwidth_hz_ != nullptr);
      _impl_.bandwidth_hz_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.signal_to_noise_ratio_ != nullptr);
      _impl_.signal_to_noise_ratio_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.pulse_width_s_ != nullptr);
      _impl_.pulse_width_s_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.pulse_repetition_interval_ != nullptr);
      _impl_.pulse_repetition_interval_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.modulation_ != nullptr);
      _impl_.modulation_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.scan_characteristics_ != nullptr);
      _impl_.scan_characteristics_->Clear();
    }
  }
  clear_frequency_measurement();
  clear_report();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Signal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Signal& this_ = static_cast<const Signal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Signal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Signal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Signal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.frequency_measurement_case()) {
            case kFrequencyCenter: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.frequency_measurement_.frequency_center_, this_._impl_.frequency_measurement_.frequency_center_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFrequencyRange: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.frequency_measurement_.frequency_range_, this_._impl_.frequency_measurement_.frequency_range_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.DoubleValue bandwidth_hz = 3 [json_name = "bandwidthHz"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.bandwidth_hz_, this_._impl_.bandwidth_hz_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.DoubleValue signal_to_noise_ratio = 4 [json_name = "signalToNoiseRatio"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.signal_to_noise_ratio_, this_._impl_.signal_to_noise_ratio_->GetCachedSize(), target,
                stream);
          }

          switch (this_.report_case()) {
            case kLineOfBearing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.report_.line_of_bearing_, this_._impl_.report_.line_of_bearing_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFixed: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.report_.fixed_, this_._impl_.report_.fixed_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          // repeated .anduril.entitymanager.v1.EmitterNotation emitter_notations = 7 [json_name = "emitterNotations"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_emitter_notations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_emitter_notations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .google.protobuf.DoubleValue pulse_width_s = 8 [json_name = "pulseWidthS"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.pulse_width_s_, this_._impl_.pulse_width_s_->GetCachedSize(), target,
                stream);
          }

          // .anduril.entitymanager.v1.PulseRepetitionInterval pulse_repetition_interval = 9 [json_name = "pulseRepetitionInterval"];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.pulse_repetition_interval_, this_._impl_.pulse_repetition_interval_->GetCachedSize(), target,
                stream);
          }

          // .anduril.entitymanager.v1.Modulation modulation = 10 [json_name = "modulation"];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.modulation_, this_._impl_.modulation_->GetCachedSize(), target,
                stream);
          }

          // .anduril.entitymanager.v1.ScanCharacteristics scan_characteristics = 11 [json_name = "scanCharacteristics"];
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.scan_characteristics_, this_._impl_.scan_characteristics_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Signal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Signal::ByteSizeLong(const MessageLite& base) {
          const Signal& this_ = static_cast<const Signal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Signal::ByteSizeLong() const {
          const Signal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Signal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.entitymanager.v1.EmitterNotation emitter_notations = 7 [json_name = "emitterNotations"];
            {
              total_size += 1UL * this_._internal_emitter_notations_size();
              for (const auto& msg : this_._internal_emitter_notations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .google.protobuf.DoubleValue bandwidth_hz = 3 [json_name = "bandwidthHz"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bandwidth_hz_);
            }
            // .google.protobuf.DoubleValue signal_to_noise_ratio = 4 [json_name = "signalToNoiseRatio"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signal_to_noise_ratio_);
            }
            // .google.protobuf.DoubleValue pulse_width_s = 8 [json_name = "pulseWidthS"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pulse_width_s_);
            }
            // .anduril.entitymanager.v1.PulseRepetitionInterval pulse_repetition_interval = 9 [json_name = "pulseRepetitionInterval"];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pulse_repetition_interval_);
            }
            // .anduril.entitymanager.v1.Modulation modulation = 10 [json_name = "modulation"];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.modulation_);
            }
            // .anduril.entitymanager.v1.ScanCharacteristics scan_characteristics = 11 [json_name = "scanCharacteristics"];
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scan_characteristics_);
            }
          }
          switch (this_.frequency_measurement_case()) {
            // .anduril.entitymanager.v1.Frequency frequency_center = 1 [json_name = "frequencyCenter"];
            case kFrequencyCenter: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.frequency_measurement_.frequency_center_);
              break;
            }
            // .anduril.entitymanager.v1.FrequencyRange frequency_range = 2 [json_name = "frequencyRange"];
            case kFrequencyRange: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.frequency_measurement_.frequency_range_);
              break;
            }
            case FREQUENCY_MEASUREMENT_NOT_SET: {
              break;
            }
          }
          switch (this_.report_case()) {
            // .anduril.entitymanager.v1.LineOfBearing line_of_bearing = 5 [json_name = "lineOfBearing"];
            case kLineOfBearing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.report_.line_of_bearing_);
              break;
            }
            // .anduril.entitymanager.v1.Fixed fixed = 6 [json_name = "fixed"];
            case kFixed: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.report_.fixed_);
              break;
            }
            case REPORT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Signal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Signal*>(&to_msg);
  auto& from = static_cast<const Signal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Signal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_emitter_notations()->MergeFrom(
      from._internal_emitter_notations());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.bandwidth_hz_ != nullptr);
      if (_this->_impl_.bandwidth_hz_ == nullptr) {
        _this->_impl_.bandwidth_hz_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.bandwidth_hz_);
      } else {
        _this->_impl_.bandwidth_hz_->MergeFrom(*from._impl_.bandwidth_hz_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.signal_to_noise_ratio_ != nullptr);
      if (_this->_impl_.signal_to_noise_ratio_ == nullptr) {
        _this->_impl_.signal_to_noise_ratio_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.signal_to_noise_ratio_);
      } else {
        _this->_impl_.signal_to_noise_ratio_->MergeFrom(*from._impl_.signal_to_noise_ratio_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.pulse_width_s_ != nullptr);
      if (_this->_impl_.pulse_width_s_ == nullptr) {
        _this->_impl_.pulse_width_s_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.pulse_width_s_);
      } else {
        _this->_impl_.pulse_width_s_->MergeFrom(*from._impl_.pulse_width_s_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.pulse_repetition_interval_ != nullptr);
      if (_this->_impl_.pulse_repetition_interval_ == nullptr) {
        _this->_impl_.pulse_repetition_interval_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::PulseRepetitionInterval>(arena, *from._impl_.pulse_repetition_interval_);
      } else {
        _this->_impl_.pulse_repetition_interval_->MergeFrom(*from._impl_.pulse_repetition_interval_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.modulation_ != nullptr);
      if (_this->_impl_.modulation_ == nullptr) {
        _this->_impl_.modulation_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Modulation>(arena, *from._impl_.modulation_);
      } else {
        _this->_impl_.modulation_->MergeFrom(*from._impl_.modulation_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.scan_characteristics_ != nullptr);
      if (_this->_impl_.scan_characteristics_ == nullptr) {
        _this->_impl_.scan_characteristics_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::ScanCharacteristics>(arena, *from._impl_.scan_characteristics_);
      } else {
        _this->_impl_.scan_characteristics_->MergeFrom(*from._impl_.scan_characteristics_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_frequency_measurement();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFrequencyCenter: {
        if (oneof_needs_init) {
          _this->_impl_.frequency_measurement_.frequency_center_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Frequency>(arena, *from._impl_.frequency_measurement_.frequency_center_);
        } else {
          _this->_impl_.frequency_measurement_.frequency_center_->MergeFrom(from._internal_frequency_center());
        }
        break;
      }
      case kFrequencyRange: {
        if (oneof_needs_init) {
          _this->_impl_.frequency_measurement_.frequency_range_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::FrequencyRange>(arena, *from._impl_.frequency_measurement_.frequency_range_);
        } else {
          _this->_impl_.frequency_measurement_.frequency_range_->MergeFrom(from._internal_frequency_range());
        }
        break;
      }
      case FREQUENCY_MEASUREMENT_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[1]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[1];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_report();
      }
      _this->_impl_._oneof_case_[1] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLineOfBearing: {
        if (oneof_needs_init) {
          _this->_impl_.report_.line_of_bearing_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::LineOfBearing>(arena, *from._impl_.report_.line_of_bearing_);
        } else {
          _this->_impl_.report_.line_of_bearing_->MergeFrom(from._internal_line_of_bearing());
        }
        break;
      }
      case kFixed: {
        if (oneof_needs_init) {
          _this->_impl_.report_.fixed_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Fixed>(arena, *from._impl_.report_.fixed_);
        } else {
          _this->_impl_.report_.fixed_->MergeFrom(from._internal_fixed());
        }
        break;
      }
      case REPORT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signal::CopyFrom(const Signal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Signal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Signal::InternalSwap(Signal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.emitter_notations_.InternalSwap(&other->_impl_.emitter_notations_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Signal, _impl_.scan_characteristics_)
      + sizeof(Signal::_impl_.scan_characteristics_)
      - PROTOBUF_FIELD_OFFSET(Signal, _impl_.bandwidth_hz_)>(
          reinterpret_cast<char*>(&_impl_.bandwidth_hz_),
          reinterpret_cast<char*>(&other->_impl_.bandwidth_hz_));
  swap(_impl_.frequency_measurement_, other->_impl_.frequency_measurement_);
  swap(_impl_.report_, other->_impl_.report_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::google::protobuf::Metadata Signal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EmitterNotation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EmitterNotation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EmitterNotation, _impl_._has_bits_);
};

void EmitterNotation::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EmitterNotation::EmitterNotation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.EmitterNotation)
}
inline PROTOBUF_NDEBUG_INLINE EmitterNotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::EmitterNotation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        emitter_notation_(arena, from.emitter_notation_) {}

EmitterNotation::EmitterNotation(
    ::google::protobuf::Arena* arena,
    const EmitterNotation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EmitterNotation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.confidence_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.EmitterNotation)
}
inline PROTOBUF_NDEBUG_INLINE EmitterNotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        emitter_notation_(arena) {}

inline void EmitterNotation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.confidence_ = {};
}
EmitterNotation::~EmitterNotation() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.EmitterNotation)
  SharedDtor(*this);
}
inline void EmitterNotation::SharedDtor(MessageLite& self) {
  EmitterNotation& this_ = static_cast<EmitterNotation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.emitter_notation_.Destroy();
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* EmitterNotation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EmitterNotation(arena);
}
constexpr auto EmitterNotation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EmitterNotation),
                                            alignof(EmitterNotation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EmitterNotation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EmitterNotation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EmitterNotation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EmitterNotation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EmitterNotation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EmitterNotation>(), &EmitterNotation::ByteSizeLong,
            &EmitterNotation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EmitterNotation, _impl_._cached_size_),
        false,
    },
    &EmitterNotation::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EmitterNotation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 65, 2> EmitterNotation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EmitterNotation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::EmitterNotation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.DoubleValue confidence = 2 [json_name = "confidence"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EmitterNotation, _impl_.confidence_)}},
    // string emitter_notation = 1 [json_name = "emitterNotation"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EmitterNotation, _impl_.emitter_notation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string emitter_notation = 1 [json_name = "emitterNotation"];
    {PROTOBUF_FIELD_OFFSET(EmitterNotation, _impl_.emitter_notation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.DoubleValue confidence = 2 [json_name = "confidence"];
    {PROTOBUF_FIELD_OFFSET(EmitterNotation, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
    "\50\20\0\0\0\0\0\0"
    "anduril.entitymanager.v1.EmitterNotation"
    "emitter_notation"
  }},
};

PROTOBUF_NOINLINE void EmitterNotation::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.EmitterNotation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emitter_notation_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EmitterNotation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EmitterNotation& this_ = static_cast<const EmitterNotation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EmitterNotation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EmitterNotation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.EmitterNotation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string emitter_notation = 1 [json_name = "emitterNotation"];
          if (!this_._internal_emitter_notation().empty()) {
            const std::string& _s = this_._internal_emitter_notation();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.EmitterNotation.emitter_notation");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.DoubleValue confidence = 2 [json_name = "confidence"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.EmitterNotation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EmitterNotation::ByteSizeLong(const MessageLite& base) {
          const EmitterNotation& this_ = static_cast<const EmitterNotation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EmitterNotation::ByteSizeLong() const {
          const EmitterNotation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.EmitterNotation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string emitter_notation = 1 [json_name = "emitterNotation"];
            if (!this_._internal_emitter_notation().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_emitter_notation());
            }
          }
           {
            // .google.protobuf.DoubleValue confidence = 2 [json_name = "confidence"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EmitterNotation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EmitterNotation*>(&to_msg);
  auto& from = static_cast<const EmitterNotation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.EmitterNotation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_emitter_notation().empty()) {
    _this->_internal_set_emitter_notation(from._internal_emitter_notation());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.confidence_ != nullptr);
    if (_this->_impl_.confidence_ == nullptr) {
      _this->_impl_.confidence_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.confidence_);
    } else {
      _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmitterNotation::CopyFrom(const EmitterNotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.EmitterNotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EmitterNotation::InternalSwap(EmitterNotation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.emitter_notation_, &other->_impl_.emitter_notation_, arena);
  swap(_impl_.confidence_, other->_impl_.confidence_);
}

::google::protobuf::Metadata EmitterNotation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Measurement::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Measurement>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Measurement, _impl_._has_bits_);
};

void Measurement::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Measurement::clear_sigma() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sigma_ != nullptr) _impl_.sigma_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Measurement::Measurement(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Measurement)
}
inline PROTOBUF_NDEBUG_INLINE Measurement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Measurement& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Measurement::Measurement(
    ::google::protobuf::Arena* arena,
    const Measurement& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Measurement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.value_)
                        : nullptr;
  _impl_.sigma_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.sigma_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Measurement)
}
inline PROTOBUF_NDEBUG_INLINE Measurement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Measurement::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, sigma_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::sigma_));
}
Measurement::~Measurement() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Measurement)
  SharedDtor(*this);
}
inline void Measurement::SharedDtor(MessageLite& self) {
  Measurement& this_ = static_cast<Measurement&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.value_;
  delete this_._impl_.sigma_;
  this_._impl_.~Impl_();
}

inline void* Measurement::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Measurement(arena);
}
constexpr auto Measurement::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Measurement),
                                            alignof(Measurement));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Measurement::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Measurement_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Measurement::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Measurement>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Measurement::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Measurement>(), &Measurement::ByteSizeLong,
            &Measurement::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Measurement, _impl_._cached_size_),
        false,
    },
    &Measurement::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Measurement::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Measurement::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Measurement, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Measurement>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.DoubleValue sigma = 2 [json_name = "sigma"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Measurement, _impl_.sigma_)}},
    // .google.protobuf.DoubleValue value = 1 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Measurement, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue value = 1 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Measurement, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue sigma = 2 [json_name = "sigma"];
    {PROTOBUF_FIELD_OFFSET(Measurement, _impl_.sigma_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Measurement::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Measurement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.sigma_ != nullptr);
      _impl_.sigma_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Measurement::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Measurement& this_ = static_cast<const Measurement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Measurement::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Measurement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Measurement)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.DoubleValue value = 1 [json_name = "value"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.value_, this_._impl_.value_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.DoubleValue sigma = 2 [json_name = "sigma"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.sigma_, this_._impl_.sigma_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Measurement)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Measurement::ByteSizeLong(const MessageLite& base) {
          const Measurement& this_ = static_cast<const Measurement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Measurement::ByteSizeLong() const {
          const Measurement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Measurement)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.DoubleValue value = 1 [json_name = "value"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_);
            }
            // .google.protobuf.DoubleValue sigma = 2 [json_name = "sigma"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sigma_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Measurement::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Measurement*>(&to_msg);
  auto& from = static_cast<const Measurement&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Measurement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.value_ != nullptr);
      if (_this->_impl_.value_ == nullptr) {
        _this->_impl_.value_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.value_);
      } else {
        _this->_impl_.value_->MergeFrom(*from._impl_.value_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.sigma_ != nullptr);
      if (_this->_impl_.sigma_ == nullptr) {
        _this->_impl_.sigma_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.sigma_);
      } else {
        _this->_impl_.sigma_->MergeFrom(*from._impl_.sigma_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Measurement::CopyFrom(const Measurement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Measurement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Measurement::InternalSwap(Measurement* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Measurement, _impl_.sigma_)
      + sizeof(Measurement::_impl_.sigma_)
      - PROTOBUF_FIELD_OFFSET(Measurement, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata Measurement::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Frequency::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Frequency>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Frequency, _impl_._has_bits_);
};

Frequency::Frequency(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Frequency)
}
inline PROTOBUF_NDEBUG_INLINE Frequency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Frequency& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Frequency::Frequency(
    ::google::protobuf::Arena* arena,
    const Frequency& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Frequency* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.frequency_hz_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(
                              arena, *from._impl_.frequency_hz_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Frequency)
}
inline PROTOBUF_NDEBUG_INLINE Frequency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Frequency::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.frequency_hz_ = {};
}
Frequency::~Frequency() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Frequency)
  SharedDtor(*this);
}
inline void Frequency::SharedDtor(MessageLite& self) {
  Frequency& this_ = static_cast<Frequency&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.frequency_hz_;
  this_._impl_.~Impl_();
}

inline void* Frequency::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Frequency(arena);
}
constexpr auto Frequency::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Frequency),
                                            alignof(Frequency));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Frequency::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Frequency_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Frequency::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Frequency>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Frequency::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Frequency>(), &Frequency::ByteSizeLong,
            &Frequency::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Frequency, _impl_._cached_size_),
        false,
    },
    &Frequency::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Frequency::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Frequency::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Frequency, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Frequency>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.entitymanager.v1.Measurement frequency_hz = 1 [json_name = "frequencyHz"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Frequency, _impl_.frequency_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Measurement frequency_hz = 1 [json_name = "frequencyHz"];
    {PROTOBUF_FIELD_OFFSET(Frequency, _impl_.frequency_hz_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Measurement>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Frequency::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Frequency)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.frequency_hz_ != nullptr);
    _impl_.frequency_hz_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Frequency::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Frequency& this_ = static_cast<const Frequency&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Frequency::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Frequency& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Frequency)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.entitymanager.v1.Measurement frequency_hz = 1 [json_name = "frequencyHz"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.frequency_hz_, this_._impl_.frequency_hz_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Frequency)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Frequency::ByteSizeLong(const MessageLite& base) {
          const Frequency& this_ = static_cast<const Frequency&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Frequency::ByteSizeLong() const {
          const Frequency& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Frequency)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.entitymanager.v1.Measurement frequency_hz = 1 [json_name = "frequencyHz"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.frequency_hz_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Frequency::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Frequency*>(&to_msg);
  auto& from = static_cast<const Frequency&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Frequency)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.frequency_hz_ != nullptr);
    if (_this->_impl_.frequency_hz_ == nullptr) {
      _this->_impl_.frequency_hz_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.frequency_hz_);
    } else {
      _this->_impl_.frequency_hz_->MergeFrom(*from._impl_.frequency_hz_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Frequency::CopyFrom(const Frequency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Frequency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Frequency::InternalSwap(Frequency* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.frequency_hz_, other->_impl_.frequency_hz_);
}

::google::protobuf::Metadata Frequency::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FrequencyRange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FrequencyRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_._has_bits_);
};

FrequencyRange::FrequencyRange(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.FrequencyRange)
}
inline PROTOBUF_NDEBUG_INLINE FrequencyRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::FrequencyRange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FrequencyRange::FrequencyRange(
    ::google::protobuf::Arena* arena,
    const FrequencyRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FrequencyRange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.minimum_frequency_hz_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Frequency>(
                              arena, *from._impl_.minimum_frequency_hz_)
                        : nullptr;
  _impl_.maximum_frequency_hz_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Frequency>(
                              arena, *from._impl_.maximum_frequency_hz_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.FrequencyRange)
}
inline PROTOBUF_NDEBUG_INLINE FrequencyRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FrequencyRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_frequency_hz_),
           0,
           offsetof(Impl_, maximum_frequency_hz_) -
               offsetof(Impl_, minimum_frequency_hz_) +
               sizeof(Impl_::maximum_frequency_hz_));
}
FrequencyRange::~FrequencyRange() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.FrequencyRange)
  SharedDtor(*this);
}
inline void FrequencyRange::SharedDtor(MessageLite& self) {
  FrequencyRange& this_ = static_cast<FrequencyRange&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.minimum_frequency_hz_;
  delete this_._impl_.maximum_frequency_hz_;
  this_._impl_.~Impl_();
}

inline void* FrequencyRange::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FrequencyRange(arena);
}
constexpr auto FrequencyRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FrequencyRange),
                                            alignof(FrequencyRange));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FrequencyRange::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FrequencyRange_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FrequencyRange::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FrequencyRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FrequencyRange::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FrequencyRange>(), &FrequencyRange::ByteSizeLong,
            &FrequencyRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_._cached_size_),
        false,
    },
    &FrequencyRange::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FrequencyRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> FrequencyRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FrequencyRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.entitymanager.v1.Frequency maximum_frequency_hz = 2 [json_name = "maximumFrequencyHz"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_.maximum_frequency_hz_)}},
    // .anduril.entitymanager.v1.Frequency minimum_frequency_hz = 1 [json_name = "minimumFrequencyHz"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_.minimum_frequency_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Frequency minimum_frequency_hz = 1 [json_name = "minimumFrequencyHz"];
    {PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_.minimum_frequency_hz_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Frequency maximum_frequency_hz = 2 [json_name = "maximumFrequencyHz"];
    {PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_.maximum_frequency_hz_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Frequency>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Frequency>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FrequencyRange::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.FrequencyRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.minimum_frequency_hz_ != nullptr);
      _impl_.minimum_frequency_hz_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.maximum_frequency_hz_ != nullptr);
      _impl_.maximum_frequency_hz_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FrequencyRange::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FrequencyRange& this_ = static_cast<const FrequencyRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FrequencyRange::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FrequencyRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.FrequencyRange)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.entitymanager.v1.Frequency minimum_frequency_hz = 1 [json_name = "minimumFrequencyHz"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.minimum_frequency_hz_, this_._impl_.minimum_frequency_hz_->GetCachedSize(), target,
                stream);
          }

          // .anduril.entitymanager.v1.Frequency maximum_frequency_hz = 2 [json_name = "maximumFrequencyHz"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.maximum_frequency_hz_, this_._impl_.maximum_frequency_hz_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.FrequencyRange)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FrequencyRange::ByteSizeLong(const MessageLite& base) {
          const FrequencyRange& this_ = static_cast<const FrequencyRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FrequencyRange::ByteSizeLong() const {
          const FrequencyRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.FrequencyRange)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.entitymanager.v1.Frequency minimum_frequency_hz = 1 [json_name = "minimumFrequencyHz"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.minimum_frequency_hz_);
            }
            // .anduril.entitymanager.v1.Frequency maximum_frequency_hz = 2 [json_name = "maximumFrequencyHz"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.maximum_frequency_hz_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FrequencyRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrequencyRange*>(&to_msg);
  auto& from = static_cast<const FrequencyRange&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.FrequencyRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.minimum_frequency_hz_ != nullptr);
      if (_this->_impl_.minimum_frequency_hz_ == nullptr) {
        _this->_impl_.minimum_frequency_hz_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Frequency>(arena, *from._impl_.minimum_frequency_hz_);
      } else {
        _this->_impl_.minimum_frequency_hz_->MergeFrom(*from._impl_.minimum_frequency_hz_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.maximum_frequency_hz_ != nullptr);
      if (_this->_impl_.maximum_frequency_hz_ == nullptr) {
        _this->_impl_.maximum_frequency_hz_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Frequency>(arena, *from._impl_.maximum_frequency_hz_);
      } else {
        _this->_impl_.maximum_frequency_hz_->MergeFrom(*from._impl_.maximum_frequency_hz_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrequencyRange::CopyFrom(const FrequencyRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.FrequencyRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrequencyRange::InternalSwap(FrequencyRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_.maximum_frequency_hz_)
      + sizeof(FrequencyRange::_impl_.maximum_frequency_hz_)
      - PROTOBUF_FIELD_OFFSET(FrequencyRange, _impl_.minimum_frequency_hz_)>(
          reinterpret_cast<char*>(&_impl_.minimum_frequency_hz_),
          reinterpret_cast<char*>(&other->_impl_.minimum_frequency_hz_));
}

::google::protobuf::Metadata FrequencyRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LineOfBearing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LineOfBearing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LineOfBearing, _impl_._oneof_case_);
};

void LineOfBearing::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void LineOfBearing::set_allocated_range_estimate_m(::anduril::entitymanager::v1::Measurement* range_estimate_m) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_detection_range();
  if (range_estimate_m) {
    ::google::protobuf::Arena* submessage_arena = range_estimate_m->GetArena();
    if (message_arena != submessage_arena) {
      range_estimate_m = ::google::protobuf::internal::GetOwnedMessage(message_arena, range_estimate_m, submessage_arena);
    }
    set_has_range_estimate_m();
    _impl_.detection_range_.range_estimate_m_ = range_estimate_m;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.LineOfBearing.range_estimate_m)
}
void LineOfBearing::set_allocated_max_range_m(::anduril::entitymanager::v1::Measurement* max_range_m) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_detection_range();
  if (max_range_m) {
    ::google::protobuf::Arena* submessage_arena = max_range_m->GetArena();
    if (message_arena != submessage_arena) {
      max_range_m = ::google::protobuf::internal::GetOwnedMessage(message_arena, max_range_m, submessage_arena);
    }
    set_has_max_range_m();
    _impl_.detection_range_.max_range_m_ = max_range_m;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.LineOfBearing.max_range_m)
}
LineOfBearing::LineOfBearing(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.LineOfBearing)
}
inline PROTOBUF_NDEBUG_INLINE LineOfBearing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::LineOfBearing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        detection_range_{},
        _oneof_case_{from._oneof_case_[0]} {}

LineOfBearing::LineOfBearing(
    ::google::protobuf::Arena* arena,
    const LineOfBearing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LineOfBearing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Position>(
                              arena, *from._impl_.origin_)
                        : nullptr;
  _impl_.range_bearing_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::RangeBearing>(
                              arena, *from._impl_.range_bearing_)
                        : nullptr;
  _impl_.angle_of_arrival_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::AngleOfArrival>(
                              arena, *from._impl_.angle_of_arrival_)
                        : nullptr;
  switch (detection_range_case()) {
    case DETECTION_RANGE_NOT_SET:
      break;
      case kRangeEstimateM:
        _impl_.detection_range_.range_estimate_m_ = ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.detection_range_.range_estimate_m_);
        break;
      case kMaxRangeM:
        _impl_.detection_range_.max_range_m_ = ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.detection_range_.max_range_m_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.LineOfBearing)
}
inline PROTOBUF_NDEBUG_INLINE LineOfBearing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        detection_range_{},
        _oneof_case_{} {}

inline void LineOfBearing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, angle_of_arrival_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::angle_of_arrival_));
}
LineOfBearing::~LineOfBearing() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.LineOfBearing)
  SharedDtor(*this);
}
inline void LineOfBearing::SharedDtor(MessageLite& self) {
  LineOfBearing& this_ = static_cast<LineOfBearing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.range_bearing_;
  delete this_._impl_.angle_of_arrival_;
  if (this_.has_detection_range()) {
    this_.clear_detection_range();
  }
  this_._impl_.~Impl_();
}

void LineOfBearing::clear_detection_range() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entitymanager.v1.LineOfBearing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (detection_range_case()) {
    case kRangeEstimateM: {
      if (GetArena() == nullptr) {
        delete _impl_.detection_range_.range_estimate_m_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.detection_range_.range_estimate_m_);
      }
      break;
    }
    case kMaxRangeM: {
      if (GetArena() == nullptr) {
        delete _impl_.detection_range_.max_range_m_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.detection_range_.max_range_m_);
      }
      break;
    }
    case DETECTION_RANGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DETECTION_RANGE_NOT_SET;
}


inline void* LineOfBearing::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LineOfBearing(arena);
}
constexpr auto LineOfBearing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LineOfBearing),
                                            alignof(LineOfBearing));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LineOfBearing::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LineOfBearing_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LineOfBearing::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LineOfBearing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LineOfBearing::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LineOfBearing>(), &LineOfBearing::ByteSizeLong,
            &LineOfBearing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_._cached_size_),
        false,
    },
    &LineOfBearing::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LineOfBearing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 5, 0, 2> LineOfBearing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::LineOfBearing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.Position origin = 1 [json_name = "origin", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.origin_)}},
    // .anduril.entitymanager.v1.RangeBearing range_bearing = 2 [json_name = "rangeBearing", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.range_bearing_)}},
    // .anduril.entitymanager.v1.AngleOfArrival angle_of_arrival = 3 [json_name = "angleOfArrival"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.angle_of_arrival_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Position origin = 1 [json_name = "origin", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.RangeBearing range_bearing = 2 [json_name = "rangeBearing", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.range_bearing_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.AngleOfArrival angle_of_arrival = 3 [json_name = "angleOfArrival"];
    {PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.angle_of_arrival_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Measurement range_estimate_m = 4 [json_name = "rangeEstimateM"];
    {PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.detection_range_.range_estimate_m_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Measurement max_range_m = 5 [json_name = "maxRangeM"];
    {PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.detection_range_.max_range_m_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::RangeBearing>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::AngleOfArrival>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Measurement>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Measurement>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LineOfBearing::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.LineOfBearing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.range_bearing_ != nullptr);
      _impl_.range_bearing_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.angle_of_arrival_ != nullptr);
      _impl_.angle_of_arrival_->Clear();
    }
  }
  clear_detection_range();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LineOfBearing::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LineOfBearing& this_ = static_cast<const LineOfBearing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LineOfBearing::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LineOfBearing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.LineOfBearing)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.entitymanager.v1.Position origin = 1 [json_name = "origin", deprecated = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
                stream);
          }

          // .anduril.entitymanager.v1.RangeBearing range_bearing = 2 [json_name = "rangeBearing", deprecated = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.range_bearing_, this_._impl_.range_bearing_->GetCachedSize(), target,
                stream);
          }

          // .anduril.entitymanager.v1.AngleOfArrival angle_of_arrival = 3 [json_name = "angleOfArrival"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.angle_of_arrival_, this_._impl_.angle_of_arrival_->GetCachedSize(), target,
                stream);
          }

          switch (this_.detection_range_case()) {
            case kRangeEstimateM: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.detection_range_.range_estimate_m_, this_._impl_.detection_range_.range_estimate_m_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMaxRangeM: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.detection_range_.max_range_m_, this_._impl_.detection_range_.max_range_m_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.LineOfBearing)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LineOfBearing::ByteSizeLong(const MessageLite& base) {
          const LineOfBearing& this_ = static_cast<const LineOfBearing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LineOfBearing::ByteSizeLong() const {
          const LineOfBearing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.LineOfBearing)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .anduril.entitymanager.v1.Position origin = 1 [json_name = "origin", deprecated = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
            }
            // .anduril.entitymanager.v1.RangeBearing range_bearing = 2 [json_name = "rangeBearing", deprecated = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.range_bearing_);
            }
            // .anduril.entitymanager.v1.AngleOfArrival angle_of_arrival = 3 [json_name = "angleOfArrival"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angle_of_arrival_);
            }
          }
          switch (this_.detection_range_case()) {
            // .anduril.entitymanager.v1.Measurement range_estimate_m = 4 [json_name = "rangeEstimateM"];
            case kRangeEstimateM: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.detection_range_.range_estimate_m_);
              break;
            }
            // .anduril.entitymanager.v1.Measurement max_range_m = 5 [json_name = "maxRangeM"];
            case kMaxRangeM: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.detection_range_.max_range_m_);
              break;
            }
            case DETECTION_RANGE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LineOfBearing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LineOfBearing*>(&to_msg);
  auto& from = static_cast<const LineOfBearing&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.LineOfBearing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Position>(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.range_bearing_ != nullptr);
      if (_this->_impl_.range_bearing_ == nullptr) {
        _this->_impl_.range_bearing_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::RangeBearing>(arena, *from._impl_.range_bearing_);
      } else {
        _this->_impl_.range_bearing_->MergeFrom(*from._impl_.range_bearing_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.angle_of_arrival_ != nullptr);
      if (_this->_impl_.angle_of_arrival_ == nullptr) {
        _this->_impl_.angle_of_arrival_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::AngleOfArrival>(arena, *from._impl_.angle_of_arrival_);
      } else {
        _this->_impl_.angle_of_arrival_->MergeFrom(*from._impl_.angle_of_arrival_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_detection_range();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRangeEstimateM: {
        if (oneof_needs_init) {
          _this->_impl_.detection_range_.range_estimate_m_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.detection_range_.range_estimate_m_);
        } else {
          _this->_impl_.detection_range_.range_estimate_m_->MergeFrom(from._internal_range_estimate_m());
        }
        break;
      }
      case kMaxRangeM: {
        if (oneof_needs_init) {
          _this->_impl_.detection_range_.max_range_m_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.detection_range_.max_range_m_);
        } else {
          _this->_impl_.detection_range_.max_range_m_->MergeFrom(from._internal_max_range_m());
        }
        break;
      }
      case DETECTION_RANGE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LineOfBearing::CopyFrom(const LineOfBearing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.LineOfBearing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LineOfBearing::InternalSwap(LineOfBearing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.angle_of_arrival_)
      + sizeof(LineOfBearing::_impl_.angle_of_arrival_)
      - PROTOBUF_FIELD_OFFSET(LineOfBearing, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
  swap(_impl_.detection_range_, other->_impl_.detection_range_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata LineOfBearing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AngleOfArrival::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AngleOfArrival>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_._has_bits_);
};

void AngleOfArrival::clear_relative_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relative_pose_ != nullptr) _impl_.relative_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AngleOfArrival::clear_bearing_elevation_covariance_rad2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bearing_elevation_covariance_rad2_ != nullptr) _impl_.bearing_elevation_covariance_rad2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AngleOfArrival::AngleOfArrival(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.AngleOfArrival)
}
inline PROTOBUF_NDEBUG_INLINE AngleOfArrival::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::AngleOfArrival& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AngleOfArrival::AngleOfArrival(
    ::google::protobuf::Arena* arena,
    const AngleOfArrival& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AngleOfArrival* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.relative_pose_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::type::Pose>(
                              arena, *from._impl_.relative_pose_)
                        : nullptr;
  _impl_.bearing_elevation_covariance_rad2_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::type::TMat2>(
                              arena, *from._impl_.bearing_elevation_covariance_rad2_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.AngleOfArrival)
}
inline PROTOBUF_NDEBUG_INLINE AngleOfArrival::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AngleOfArrival::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, relative_pose_),
           0,
           offsetof(Impl_, bearing_elevation_covariance_rad2_) -
               offsetof(Impl_, relative_pose_) +
               sizeof(Impl_::bearing_elevation_covariance_rad2_));
}
AngleOfArrival::~AngleOfArrival() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.AngleOfArrival)
  SharedDtor(*this);
}
inline void AngleOfArrival::SharedDtor(MessageLite& self) {
  AngleOfArrival& this_ = static_cast<AngleOfArrival&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.relative_pose_;
  delete this_._impl_.bearing_elevation_covariance_rad2_;
  this_._impl_.~Impl_();
}

inline void* AngleOfArrival::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AngleOfArrival(arena);
}
constexpr auto AngleOfArrival::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AngleOfArrival),
                                            alignof(AngleOfArrival));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AngleOfArrival::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AngleOfArrival_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AngleOfArrival::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AngleOfArrival>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AngleOfArrival::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AngleOfArrival>(), &AngleOfArrival::ByteSizeLong,
            &AngleOfArrival::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_._cached_size_),
        false,
    },
    &AngleOfArrival::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AngleOfArrival::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> AngleOfArrival::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::AngleOfArrival>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.type.TMat2 bearing_elevation_covariance_rad2 = 2 [json_name = "bearingElevationCovarianceRad2"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_.bearing_elevation_covariance_rad2_)}},
    // .anduril.type.Pose relative_pose = 1 [json_name = "relativePose"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_.relative_pose_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.type.Pose relative_pose = 1 [json_name = "relativePose"];
    {PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_.relative_pose_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.TMat2 bearing_elevation_covariance_rad2 = 2 [json_name = "bearingElevationCovarianceRad2"];
    {PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_.bearing_elevation_covariance_rad2_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::type::Pose>()},
    {::_pbi::TcParser::GetTable<::anduril::type::TMat2>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AngleOfArrival::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.AngleOfArrival)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.relative_pose_ != nullptr);
      _impl_.relative_pose_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.bearing_elevation_covariance_rad2_ != nullptr);
      _impl_.bearing_elevation_covariance_rad2_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AngleOfArrival::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AngleOfArrival& this_ = static_cast<const AngleOfArrival&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AngleOfArrival::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AngleOfArrival& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.AngleOfArrival)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.type.Pose relative_pose = 1 [json_name = "relativePose"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.relative_pose_, this_._impl_.relative_pose_->GetCachedSize(), target,
                stream);
          }

          // .anduril.type.TMat2 bearing_elevation_covariance_rad2 = 2 [json_name = "bearingElevationCovarianceRad2"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.bearing_elevation_covariance_rad2_, this_._impl_.bearing_elevation_covariance_rad2_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.AngleOfArrival)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AngleOfArrival::ByteSizeLong(const MessageLite& base) {
          const AngleOfArrival& this_ = static_cast<const AngleOfArrival&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AngleOfArrival::ByteSizeLong() const {
          const AngleOfArrival& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.AngleOfArrival)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.type.Pose relative_pose = 1 [json_name = "relativePose"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.relative_pose_);
            }
            // .anduril.type.TMat2 bearing_elevation_covariance_rad2 = 2 [json_name = "bearingElevationCovarianceRad2"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bearing_elevation_covariance_rad2_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AngleOfArrival::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AngleOfArrival*>(&to_msg);
  auto& from = static_cast<const AngleOfArrival&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.AngleOfArrival)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.relative_pose_ != nullptr);
      if (_this->_impl_.relative_pose_ == nullptr) {
        _this->_impl_.relative_pose_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::type::Pose>(arena, *from._impl_.relative_pose_);
      } else {
        _this->_impl_.relative_pose_->MergeFrom(*from._impl_.relative_pose_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.bearing_elevation_covariance_rad2_ != nullptr);
      if (_this->_impl_.bearing_elevation_covariance_rad2_ == nullptr) {
        _this->_impl_.bearing_elevation_covariance_rad2_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::type::TMat2>(arena, *from._impl_.bearing_elevation_covariance_rad2_);
      } else {
        _this->_impl_.bearing_elevation_covariance_rad2_->MergeFrom(*from._impl_.bearing_elevation_covariance_rad2_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AngleOfArrival::CopyFrom(const AngleOfArrival& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.AngleOfArrival)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AngleOfArrival::InternalSwap(AngleOfArrival* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_.bearing_elevation_covariance_rad2_)
      + sizeof(AngleOfArrival::_impl_.bearing_elevation_covariance_rad2_)
      - PROTOBUF_FIELD_OFFSET(AngleOfArrival, _impl_.relative_pose_)>(
          reinterpret_cast<char*>(&_impl_.relative_pose_),
          reinterpret_cast<char*>(&other->_impl_.relative_pose_));
}

::google::protobuf::Metadata AngleOfArrival::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Fixed::_Internal {
 public:
};

Fixed::Fixed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Fixed)
}
Fixed::Fixed(
    ::google::protobuf::Arena* arena,
    const Fixed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Fixed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Fixed)
}

inline void* Fixed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Fixed(arena);
}
constexpr auto Fixed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Fixed),
                                            alignof(Fixed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Fixed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Fixed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Fixed::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Fixed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Fixed::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Fixed>(), &Fixed::ByteSizeLong,
            &Fixed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Fixed, _impl_._cached_size_),
        false,
    },
    &Fixed::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Fixed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Fixed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Fixed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Fixed::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangeBearing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RangeBearing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_._has_bits_);
};

RangeBearing::RangeBearing(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.RangeBearing)
}
inline PROTOBUF_NDEBUG_INLINE RangeBearing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::RangeBearing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RangeBearing::RangeBearing(
    ::google::protobuf::Arena* arena,
    const RangeBearing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RangeBearing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.range_m_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(
                              arena, *from._impl_.range_m_)
                        : nullptr;
  _impl_.range_angle_d_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(
                              arena, *from._impl_.range_angle_d_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.RangeBearing)
}
inline PROTOBUF_NDEBUG_INLINE RangeBearing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RangeBearing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, range_m_),
           0,
           offsetof(Impl_, range_angle_d_) -
               offsetof(Impl_, range_m_) +
               sizeof(Impl_::range_angle_d_));
}
RangeBearing::~RangeBearing() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.RangeBearing)
  SharedDtor(*this);
}
inline void RangeBearing::SharedDtor(MessageLite& self) {
  RangeBearing& this_ = static_cast<RangeBearing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.range_m_;
  delete this_._impl_.range_angle_d_;
  this_._impl_.~Impl_();
}

inline void* RangeBearing::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RangeBearing(arena);
}
constexpr auto RangeBearing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RangeBearing),
                                            alignof(RangeBearing));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RangeBearing::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RangeBearing_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RangeBearing::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RangeBearing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RangeBearing::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RangeBearing>(), &RangeBearing::ByteSizeLong,
            &RangeBearing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_._cached_size_),
        false,
    },
    &RangeBearing::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RangeBearing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> RangeBearing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::RangeBearing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.entitymanager.v1.Measurement range_angle_d = 2 [json_name = "rangeAngleD"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_.range_angle_d_)}},
    // .anduril.entitymanager.v1.Measurement range_m = 1 [json_name = "rangeM"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_.range_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Measurement range_m = 1 [json_name = "rangeM"];
    {PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_.range_m_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Measurement range_angle_d = 2 [json_name = "rangeAngleD"];
    {PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_.range_angle_d_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Measurement>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Measurement>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RangeBearing::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.RangeBearing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.range_m_ != nullptr);
      _impl_.range_m_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.range_angle_d_ != nullptr);
      _impl_.range_angle_d_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RangeBearing::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RangeBearing& this_ = static_cast<const RangeBearing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RangeBearing::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RangeBearing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.RangeBearing)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.entitymanager.v1.Measurement range_m = 1 [json_name = "rangeM"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.range_m_, this_._impl_.range_m_->GetCachedSize(), target,
                stream);
          }

          // .anduril.entitymanager.v1.Measurement range_angle_d = 2 [json_name = "rangeAngleD"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.range_angle_d_, this_._impl_.range_angle_d_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.RangeBearing)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RangeBearing::ByteSizeLong(const MessageLite& base) {
          const RangeBearing& this_ = static_cast<const RangeBearing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RangeBearing::ByteSizeLong() const {
          const RangeBearing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.RangeBearing)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.entitymanager.v1.Measurement range_m = 1 [json_name = "rangeM"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.range_m_);
            }
            // .anduril.entitymanager.v1.Measurement range_angle_d = 2 [json_name = "rangeAngleD"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.range_angle_d_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RangeBearing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangeBearing*>(&to_msg);
  auto& from = static_cast<const RangeBearing&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.RangeBearing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.range_m_ != nullptr);
      if (_this->_impl_.range_m_ == nullptr) {
        _this->_impl_.range_m_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.range_m_);
      } else {
        _this->_impl_.range_m_->MergeFrom(*from._impl_.range_m_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.range_angle_d_ != nullptr);
      if (_this->_impl_.range_angle_d_ == nullptr) {
        _this->_impl_.range_angle_d_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.range_angle_d_);
      } else {
        _this->_impl_.range_angle_d_->MergeFrom(*from._impl_.range_angle_d_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeBearing::CopyFrom(const RangeBearing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.RangeBearing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangeBearing::InternalSwap(RangeBearing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_.range_angle_d_)
      + sizeof(RangeBearing::_impl_.range_angle_d_)
      - PROTOBUF_FIELD_OFFSET(RangeBearing, _impl_.range_m_)>(
          reinterpret_cast<char*>(&_impl_.range_m_),
          reinterpret_cast<char*>(&other->_impl_.range_m_));
}

::google::protobuf::Metadata RangeBearing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PulseRepetitionInterval::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PulseRepetitionInterval>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PulseRepetitionInterval, _impl_._has_bits_);
};

PulseRepetitionInterval::PulseRepetitionInterval(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.PulseRepetitionInterval)
}
inline PROTOBUF_NDEBUG_INLINE PulseRepetitionInterval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::PulseRepetitionInterval& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PulseRepetitionInterval::PulseRepetitionInterval(
    ::google::protobuf::Arena* arena,
    const PulseRepetitionInterval& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PulseRepetitionInterval* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pulse_repetition_interval_s_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(
                              arena, *from._impl_.pulse_repetition_interval_s_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.PulseRepetitionInterval)
}
inline PROTOBUF_NDEBUG_INLINE PulseRepetitionInterval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PulseRepetitionInterval::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pulse_repetition_interval_s_ = {};
}
PulseRepetitionInterval::~PulseRepetitionInterval() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.PulseRepetitionInterval)
  SharedDtor(*this);
}
inline void PulseRepetitionInterval::SharedDtor(MessageLite& self) {
  PulseRepetitionInterval& this_ = static_cast<PulseRepetitionInterval&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pulse_repetition_interval_s_;
  this_._impl_.~Impl_();
}

inline void* PulseRepetitionInterval::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PulseRepetitionInterval(arena);
}
constexpr auto PulseRepetitionInterval::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PulseRepetitionInterval),
                                            alignof(PulseRepetitionInterval));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PulseRepetitionInterval::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PulseRepetitionInterval_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PulseRepetitionInterval::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PulseRepetitionInterval>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PulseRepetitionInterval::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PulseRepetitionInterval>(), &PulseRepetitionInterval::ByteSizeLong,
            &PulseRepetitionInterval::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PulseRepetitionInterval, _impl_._cached_size_),
        false,
    },
    &PulseRepetitionInterval::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PulseRepetitionInterval::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PulseRepetitionInterval::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PulseRepetitionInterval, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::PulseRepetitionInterval>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.entitymanager.v1.Measurement pulse_repetition_interval_s = 1 [json_name = "pulseRepetitionIntervalS"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PulseRepetitionInterval, _impl_.pulse_repetition_interval_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Measurement pulse_repetition_interval_s = 1 [json_name = "pulseRepetitionIntervalS"];
    {PROTOBUF_FIELD_OFFSET(PulseRepetitionInterval, _impl_.pulse_repetition_interval_s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Measurement>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PulseRepetitionInterval::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.PulseRepetitionInterval)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pulse_repetition_interval_s_ != nullptr);
    _impl_.pulse_repetition_interval_s_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PulseRepetitionInterval::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PulseRepetitionInterval& this_ = static_cast<const PulseRepetitionInterval&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PulseRepetitionInterval::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PulseRepetitionInterval& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.PulseRepetitionInterval)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.entitymanager.v1.Measurement pulse_repetition_interval_s = 1 [json_name = "pulseRepetitionIntervalS"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pulse_repetition_interval_s_, this_._impl_.pulse_repetition_interval_s_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.PulseRepetitionInterval)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PulseRepetitionInterval::ByteSizeLong(const MessageLite& base) {
          const PulseRepetitionInterval& this_ = static_cast<const PulseRepetitionInterval&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PulseRepetitionInterval::ByteSizeLong() const {
          const PulseRepetitionInterval& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.PulseRepetitionInterval)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.entitymanager.v1.Measurement pulse_repetition_interval_s = 1 [json_name = "pulseRepetitionIntervalS"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pulse_repetition_interval_s_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PulseRepetitionInterval::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PulseRepetitionInterval*>(&to_msg);
  auto& from = static_cast<const PulseRepetitionInterval&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.PulseRepetitionInterval)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pulse_repetition_interval_s_ != nullptr);
    if (_this->_impl_.pulse_repetition_interval_s_ == nullptr) {
      _this->_impl_.pulse_repetition_interval_s_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Measurement>(arena, *from._impl_.pulse_repetition_interval_s_);
    } else {
      _this->_impl_.pulse_repetition_interval_s_->MergeFrom(*from._impl_.pulse_repetition_interval_s_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PulseRepetitionInterval::CopyFrom(const PulseRepetitionInterval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.PulseRepetitionInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PulseRepetitionInterval::InternalSwap(PulseRepetitionInterval* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pulse_repetition_interval_s_, other->_impl_.pulse_repetition_interval_s_);
}

::google::protobuf::Metadata PulseRepetitionInterval::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Modulation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Modulation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Modulation, _impl_._has_bits_);
};

void Modulation::clear_symbols() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.symbols_ != nullptr) _impl_.symbols_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Modulation::Modulation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Modulation)
}
inline PROTOBUF_NDEBUG_INLINE Modulation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Modulation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        interpulse_modulation_(arena, from.interpulse_modulation_) {}

Modulation::Modulation(
    ::google::protobuf::Arena* arena,
    const Modulation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Modulation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.symbols_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Int32Value>(
                              arena, *from._impl_.symbols_)
                        : nullptr;
  _impl_.encoding_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Encoding>(
                              arena, *from._impl_.encoding_)
                        : nullptr;
  _impl_.modulation_type_ = from._impl_.modulation_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Modulation)
}
inline PROTOBUF_NDEBUG_INLINE Modulation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        interpulse_modulation_(arena) {}

inline void Modulation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, symbols_),
           0,
           offsetof(Impl_, modulation_type_) -
               offsetof(Impl_, symbols_) +
               sizeof(Impl_::modulation_type_));
}
Modulation::~Modulation() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Modulation)
  SharedDtor(*this);
}
inline void Modulation::SharedDtor(MessageLite& self) {
  Modulation& this_ = static_cast<Modulation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.interpulse_modulation_.Destroy();
  delete this_._impl_.symbols_;
  delete this_._impl_.encoding_;
  this_._impl_.~Impl_();
}

inline void* Modulation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Modulation(arena);
}
constexpr auto Modulation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Modulation),
                                            alignof(Modulation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Modulation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Modulation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Modulation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Modulation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Modulation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Modulation>(), &Modulation::ByteSizeLong,
            &Modulation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Modulation, _impl_._cached_size_),
        false,
    },
    &Modulation::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Modulation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 65, 2> Modulation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Modulation, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Modulation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.entitymanager.v1.Encoding encoding = 4 [json_name = "encoding"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Modulation, _impl_.encoding_)}},
    // .anduril.entitymanager.v1.ModulationType modulation_type = 1 [json_name = "modulationType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Modulation, _impl_.modulation_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Modulation, _impl_.modulation_type_)}},
    // .google.protobuf.Int32Value symbols = 2 [json_name = "symbols"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Modulation, _impl_.symbols_)}},
    // string interpulse_modulation = 3 [json_name = "interpulseModulation"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Modulation, _impl_.interpulse_modulation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.ModulationType modulation_type = 1 [json_name = "modulationType"];
    {PROTOBUF_FIELD_OFFSET(Modulation, _impl_.modulation_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Int32Value symbols = 2 [json_name = "symbols"];
    {PROTOBUF_FIELD_OFFSET(Modulation, _impl_.symbols_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string interpulse_modulation = 3 [json_name = "interpulseModulation"];
    {PROTOBUF_FIELD_OFFSET(Modulation, _impl_.interpulse_modulation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.Encoding encoding = 4 [json_name = "encoding"];
    {PROTOBUF_FIELD_OFFSET(Modulation, _impl_.encoding_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int32Value>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Encoding>()},
  }}, {{
    "\43\0\0\25\0\0\0\0"
    "anduril.entitymanager.v1.Modulation"
    "interpulse_modulation"
  }},
};

PROTOBUF_NOINLINE void Modulation::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Modulation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interpulse_modulation_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.symbols_ != nullptr);
      _impl_.symbols_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.encoding_ != nullptr);
      _impl_.encoding_->Clear();
    }
  }
  _impl_.modulation_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Modulation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Modulation& this_ = static_cast<const Modulation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Modulation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Modulation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Modulation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.entitymanager.v1.ModulationType modulation_type = 1 [json_name = "modulationType"];
          if (this_._internal_modulation_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_modulation_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Int32Value symbols = 2 [json_name = "symbols"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.symbols_, this_._impl_.symbols_->GetCachedSize(), target,
                stream);
          }

          // string interpulse_modulation = 3 [json_name = "interpulseModulation"];
          if (!this_._internal_interpulse_modulation().empty()) {
            const std::string& _s = this_._internal_interpulse_modulation();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Modulation.interpulse_modulation");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .anduril.entitymanager.v1.Encoding encoding = 4 [json_name = "encoding"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.encoding_, this_._impl_.encoding_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Modulation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Modulation::ByteSizeLong(const MessageLite& base) {
          const Modulation& this_ = static_cast<const Modulation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Modulation::ByteSizeLong() const {
          const Modulation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Modulation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string interpulse_modulation = 3 [json_name = "interpulseModulation"];
            if (!this_._internal_interpulse_modulation().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interpulse_modulation());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Int32Value symbols = 2 [json_name = "symbols"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.symbols_);
            }
            // .anduril.entitymanager.v1.Encoding encoding = 4 [json_name = "encoding"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.encoding_);
            }
          }
           {
            // .anduril.entitymanager.v1.ModulationType modulation_type = 1 [json_name = "modulationType"];
            if (this_._internal_modulation_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_modulation_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Modulation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Modulation*>(&to_msg);
  auto& from = static_cast<const Modulation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Modulation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interpulse_modulation().empty()) {
    _this->_internal_set_interpulse_modulation(from._internal_interpulse_modulation());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.symbols_ != nullptr);
      if (_this->_impl_.symbols_ == nullptr) {
        _this->_impl_.symbols_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Int32Value>(arena, *from._impl_.symbols_);
      } else {
        _this->_impl_.symbols_->MergeFrom(*from._impl_.symbols_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.encoding_ != nullptr);
      if (_this->_impl_.encoding_ == nullptr) {
        _this->_impl_.encoding_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Encoding>(arena, *from._impl_.encoding_);
      } else {
        _this->_impl_.encoding_->MergeFrom(*from._impl_.encoding_);
      }
    }
  }
  if (from._internal_modulation_type() != 0) {
    _this->_impl_.modulation_type_ = from._impl_.modulation_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Modulation::CopyFrom(const Modulation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Modulation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Modulation::InternalSwap(Modulation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interpulse_modulation_, &other->_impl_.interpulse_modulation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Modulation, _impl_.modulation_type_)
      + sizeof(Modulation::_impl_.modulation_type_)
      - PROTOBUF_FIELD_OFFSET(Modulation, _impl_.symbols_)>(
          reinterpret_cast<char*>(&_impl_.symbols_),
          reinterpret_cast<char*>(&other->_impl_.symbols_));
}

::google::protobuf::Metadata Modulation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Encoding::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Encoding>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Encoding, _impl_._has_bits_);
};

void Encoding::clear_chip_hop_rate_num_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chip_hop_rate_num_sec_ != nullptr) _impl_.chip_hop_rate_num_sec_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Encoding::clear_hop_dwell_time_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hop_dwell_time_sec_ != nullptr) _impl_.hop_dwell_time_sec_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Encoding::clear_baud_rate_num_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.baud_rate_num_sec_ != nullptr) _impl_.baud_rate_num_sec_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Encoding::Encoding(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Encoding)
}
inline PROTOBUF_NDEBUG_INLINE Encoding::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Encoding& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Encoding::Encoding(
    ::google::protobuf::Arena* arena,
    const Encoding& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Encoding* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.chip_hop_rate_num_sec_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.chip_hop_rate_num_sec_)
                        : nullptr;
  _impl_.hop_dwell_time_sec_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.hop_dwell_time_sec_)
                        : nullptr;
  _impl_.baud_rate_num_sec_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.baud_rate_num_sec_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Encoding)
}
inline PROTOBUF_NDEBUG_INLINE Encoding::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Encoding::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chip_hop_rate_num_sec_),
           0,
           offsetof(Impl_, baud_rate_num_sec_) -
               offsetof(Impl_, chip_hop_rate_num_sec_) +
               sizeof(Impl_::baud_rate_num_sec_));
}
Encoding::~Encoding() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Encoding)
  SharedDtor(*this);
}
inline void Encoding::SharedDtor(MessageLite& self) {
  Encoding& this_ = static_cast<Encoding&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.chip_hop_rate_num_sec_;
  delete this_._impl_.hop_dwell_time_sec_;
  delete this_._impl_.baud_rate_num_sec_;
  this_._impl_.~Impl_();
}

inline void* Encoding::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Encoding(arena);
}
constexpr auto Encoding::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Encoding),
                                            alignof(Encoding));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Encoding::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Encoding_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Encoding::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Encoding>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Encoding::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Encoding>(), &Encoding::ByteSizeLong,
            &Encoding::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Encoding, _impl_._cached_size_),
        false,
    },
    &Encoding::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Encoding::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Encoding::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Encoding, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Encoding>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Encoding, _impl_.chip_hop_rate_num_sec_)}},
    // .google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Encoding, _impl_.hop_dwell_time_sec_)}},
    // .google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Encoding, _impl_.baud_rate_num_sec_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];
    {PROTOBUF_FIELD_OFFSET(Encoding, _impl_.chip_hop_rate_num_sec_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];
    {PROTOBUF_FIELD_OFFSET(Encoding, _impl_.hop_dwell_time_sec_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];
    {PROTOBUF_FIELD_OFFSET(Encoding, _impl_.baud_rate_num_sec_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Encoding::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Encoding)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.chip_hop_rate_num_sec_ != nullptr);
      _impl_.chip_hop_rate_num_sec_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.hop_dwell_time_sec_ != nullptr);
      _impl_.hop_dwell_time_sec_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.baud_rate_num_sec_ != nullptr);
      _impl_.baud_rate_num_sec_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Encoding::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Encoding& this_ = static_cast<const Encoding&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Encoding::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Encoding& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Encoding)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.chip_hop_rate_num_sec_, this_._impl_.chip_hop_rate_num_sec_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.hop_dwell_time_sec_, this_._impl_.hop_dwell_time_sec_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.baud_rate_num_sec_, this_._impl_.baud_rate_num_sec_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Encoding)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Encoding::ByteSizeLong(const MessageLite& base) {
          const Encoding& this_ = static_cast<const Encoding&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Encoding::ByteSizeLong() const {
          const Encoding& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Encoding)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.chip_hop_rate_num_sec_);
            }
            // .google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hop_dwell_time_sec_);
            }
            // .google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.baud_rate_num_sec_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Encoding::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Encoding*>(&to_msg);
  auto& from = static_cast<const Encoding&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Encoding)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.chip_hop_rate_num_sec_ != nullptr);
      if (_this->_impl_.chip_hop_rate_num_sec_ == nullptr) {
        _this->_impl_.chip_hop_rate_num_sec_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.chip_hop_rate_num_sec_);
      } else {
        _this->_impl_.chip_hop_rate_num_sec_->MergeFrom(*from._impl_.chip_hop_rate_num_sec_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.hop_dwell_time_sec_ != nullptr);
      if (_this->_impl_.hop_dwell_time_sec_ == nullptr) {
        _this->_impl_.hop_dwell_time_sec_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.hop_dwell_time_sec_);
      } else {
        _this->_impl_.hop_dwell_time_sec_->MergeFrom(*from._impl_.hop_dwell_time_sec_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.baud_rate_num_sec_ != nullptr);
      if (_this->_impl_.baud_rate_num_sec_ == nullptr) {
        _this->_impl_.baud_rate_num_sec_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.baud_rate_num_sec_);
      } else {
        _this->_impl_.baud_rate_num_sec_->MergeFrom(*from._impl_.baud_rate_num_sec_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Encoding::CopyFrom(const Encoding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Encoding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Encoding::InternalSwap(Encoding* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Encoding, _impl_.baud_rate_num_sec_)
      + sizeof(Encoding::_impl_.baud_rate_num_sec_)
      - PROTOBUF_FIELD_OFFSET(Encoding, _impl_.chip_hop_rate_num_sec_)>(
          reinterpret_cast<char*>(&_impl_.chip_hop_rate_num_sec_),
          reinterpret_cast<char*>(&other->_impl_.chip_hop_rate_num_sec_));
}

::google::protobuf::Metadata Encoding::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScanCharacteristics::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScanCharacteristics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_._has_bits_);
};

void ScanCharacteristics::clear_scan_period_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scan_period_s_ != nullptr) _impl_.scan_period_s_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ScanCharacteristics::ScanCharacteristics(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.ScanCharacteristics)
}
inline PROTOBUF_NDEBUG_INLINE ScanCharacteristics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::ScanCharacteristics& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ScanCharacteristics::ScanCharacteristics(
    ::google::protobuf::Arena* arena,
    const ScanCharacteristics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScanCharacteristics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.scan_period_s_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.scan_period_s_)
                        : nullptr;
  _impl_.scan_type_ = from._impl_.scan_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.ScanCharacteristics)
}
inline PROTOBUF_NDEBUG_INLINE ScanCharacteristics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScanCharacteristics::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scan_period_s_),
           0,
           offsetof(Impl_, scan_type_) -
               offsetof(Impl_, scan_period_s_) +
               sizeof(Impl_::scan_type_));
}
ScanCharacteristics::~ScanCharacteristics() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.ScanCharacteristics)
  SharedDtor(*this);
}
inline void ScanCharacteristics::SharedDtor(MessageLite& self) {
  ScanCharacteristics& this_ = static_cast<ScanCharacteristics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.scan_period_s_;
  this_._impl_.~Impl_();
}

inline void* ScanCharacteristics::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScanCharacteristics(arena);
}
constexpr auto ScanCharacteristics::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ScanCharacteristics),
                                            alignof(ScanCharacteristics));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScanCharacteristics::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScanCharacteristics_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScanCharacteristics::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScanCharacteristics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScanCharacteristics::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScanCharacteristics>(), &ScanCharacteristics::ByteSizeLong,
            &ScanCharacteristics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_._cached_size_),
        false,
    },
    &ScanCharacteristics::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScanCharacteristics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ScanCharacteristics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ScanCharacteristics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.DoubleValue scan_period_s = 2 [json_name = "scanPeriodS"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_.scan_period_s_)}},
    // .anduril.entitymanager.v1.ScanType scan_type = 1 [json_name = "scanType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanCharacteristics, _impl_.scan_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_.scan_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.ScanType scan_type = 1 [json_name = "scanType"];
    {PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_.scan_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.DoubleValue scan_period_s = 2 [json_name = "scanPeriodS"];
    {PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_.scan_period_s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ScanCharacteristics::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.ScanCharacteristics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.scan_period_s_ != nullptr);
    _impl_.scan_period_s_->Clear();
  }
  _impl_.scan_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScanCharacteristics::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScanCharacteristics& this_ = static_cast<const ScanCharacteristics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScanCharacteristics::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScanCharacteristics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.ScanCharacteristics)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.entitymanager.v1.ScanType scan_type = 1 [json_name = "scanType"];
          if (this_._internal_scan_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_scan_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.DoubleValue scan_period_s = 2 [json_name = "scanPeriodS"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.scan_period_s_, this_._impl_.scan_period_s_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.ScanCharacteristics)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScanCharacteristics::ByteSizeLong(const MessageLite& base) {
          const ScanCharacteristics& this_ = static_cast<const ScanCharacteristics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScanCharacteristics::ByteSizeLong() const {
          const ScanCharacteristics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.ScanCharacteristics)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .google.protobuf.DoubleValue scan_period_s = 2 [json_name = "scanPeriodS"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scan_period_s_);
            }
          }
           {
            // .anduril.entitymanager.v1.ScanType scan_type = 1 [json_name = "scanType"];
            if (this_._internal_scan_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_scan_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScanCharacteristics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScanCharacteristics*>(&to_msg);
  auto& from = static_cast<const ScanCharacteristics&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.ScanCharacteristics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.scan_period_s_ != nullptr);
    if (_this->_impl_.scan_period_s_ == nullptr) {
      _this->_impl_.scan_period_s_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.scan_period_s_);
    } else {
      _this->_impl_.scan_period_s_->MergeFrom(*from._impl_.scan_period_s_);
    }
  }
  if (from._internal_scan_type() != 0) {
    _this->_impl_.scan_type_ = from._impl_.scan_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScanCharacteristics::CopyFrom(const ScanCharacteristics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.ScanCharacteristics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScanCharacteristics::InternalSwap(ScanCharacteristics* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_.scan_type_)
      + sizeof(ScanCharacteristics::_impl_.scan_type_)
      - PROTOBUF_FIELD_OFFSET(ScanCharacteristics, _impl_.scan_period_s_)>(
          reinterpret_cast<char*>(&_impl_.scan_period_s_),
          reinterpret_cast<char*>(&other->_impl_.scan_period_s_));
}

::google::protobuf::Metadata ScanCharacteristics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
