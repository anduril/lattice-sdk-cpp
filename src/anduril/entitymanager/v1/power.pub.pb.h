// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/power.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto_2epb_2eh
#define anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/wrappers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class PowerLevel;
struct PowerLevelDefaultTypeInternal;
extern PowerLevelDefaultTypeInternal _PowerLevel_default_instance_;
class PowerSource;
struct PowerSourceDefaultTypeInternal;
extern PowerSourceDefaultTypeInternal _PowerSource_default_instance_;
class PowerState;
struct PowerStateDefaultTypeInternal;
extern PowerStateDefaultTypeInternal _PowerState_default_instance_;
class PowerState_SourceIdToStateEntry_DoNotUse;
struct PowerState_SourceIdToStateEntry_DoNotUseDefaultTypeInternal;
extern PowerState_SourceIdToStateEntry_DoNotUseDefaultTypeInternal _PowerState_SourceIdToStateEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {
enum PowerStatus : int {
  POWER_STATUS_INVALID = 0,
  POWER_STATUS_UNKNOWN = 1,
  POWER_STATUS_NOT_PRESENT = 2,
  POWER_STATUS_OPERATING = 3,
  POWER_STATUS_DISABLED = 4,
  POWER_STATUS_ERROR = 5,
  PowerStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PowerStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PowerStatus_IsValid(int value);
extern const uint32_t PowerStatus_internal_data_[];
constexpr PowerStatus PowerStatus_MIN = static_cast<PowerStatus>(0);
constexpr PowerStatus PowerStatus_MAX = static_cast<PowerStatus>(5);
constexpr int PowerStatus_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
PowerStatus_descriptor();
template <typename T>
const std::string& PowerStatus_Name(T value) {
  static_assert(std::is_same<T, PowerStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PowerStatus_Name().");
  return PowerStatus_Name(static_cast<PowerStatus>(value));
}
template <>
inline const std::string& PowerStatus_Name(PowerStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PowerStatus_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool PowerStatus_Parse(absl::string_view name, PowerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerStatus>(
      PowerStatus_descriptor(), name, value);
}
enum PowerType : int {
  POWER_TYPE_INVALID = 0,
  POWER_TYPE_UNKNOWN = 1,
  POWER_TYPE_GAS = 2,
  POWER_TYPE_BATTERY = 3,
  PowerType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PowerType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PowerType_IsValid(int value);
extern const uint32_t PowerType_internal_data_[];
constexpr PowerType PowerType_MIN = static_cast<PowerType>(0);
constexpr PowerType PowerType_MAX = static_cast<PowerType>(3);
constexpr int PowerType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
PowerType_descriptor();
template <typename T>
const std::string& PowerType_Name(T value) {
  static_assert(std::is_same<T, PowerType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PowerType_Name().");
  return PowerType_Name(static_cast<PowerType>(value));
}
template <>
inline const std::string& PowerType_Name(PowerType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PowerType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool PowerType_Parse(absl::string_view name, PowerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerType>(
      PowerType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PowerLevel final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PowerLevel) */ {
 public:
  inline PowerLevel() : PowerLevel(nullptr) {}
  ~PowerLevel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerLevel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerLevel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerLevel(
      ::google::protobuf::internal::ConstantInitialized);

  inline PowerLevel(const PowerLevel& from) : PowerLevel(nullptr, from) {}
  inline PowerLevel(PowerLevel&& from) noexcept
      : PowerLevel(nullptr, std::move(from)) {}
  inline PowerLevel& operator=(const PowerLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerLevel& operator=(PowerLevel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerLevel& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerLevel* internal_default_instance() {
    return reinterpret_cast<const PowerLevel*>(
        &_PowerLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PowerLevel& a, PowerLevel& b) { a.Swap(&b); }
  inline void Swap(PowerLevel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerLevel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerLevel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PowerLevel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PowerLevel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PowerLevel& from) { PowerLevel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PowerLevel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PowerLevel"; }

 protected:
  explicit PowerLevel(::google::protobuf::Arena* arena);
  PowerLevel(::google::protobuf::Arena* arena, const PowerLevel& from);
  PowerLevel(::google::protobuf::Arena* arena, PowerLevel&& from) noexcept
      : PowerLevel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVoltageFieldNumber = 4,
    kCurrentAmpsFieldNumber = 5,
    kRunTimeToEmptyMinsFieldNumber = 6,
    kConsumptionRateLPerSFieldNumber = 7,
    kCapacityFieldNumber = 1,
    kRemainingFieldNumber = 2,
    kPercentRemainingFieldNumber = 3,
  };
  // .google.protobuf.DoubleValue voltage = 4 [json_name = "voltage"];
  bool has_voltage() const;
  void clear_voltage() ;
  const ::google::protobuf::DoubleValue& voltage() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_voltage();
  ::google::protobuf::DoubleValue* mutable_voltage();
  void set_allocated_voltage(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_voltage(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_voltage();

  private:
  const ::google::protobuf::DoubleValue& _internal_voltage() const;
  ::google::protobuf::DoubleValue* _internal_mutable_voltage();

  public:
  // .google.protobuf.DoubleValue current_amps = 5 [json_name = "currentAmps"];
  bool has_current_amps() const;
  void clear_current_amps() ;
  const ::google::protobuf::DoubleValue& current_amps() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_current_amps();
  ::google::protobuf::DoubleValue* mutable_current_amps();
  void set_allocated_current_amps(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_current_amps(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_current_amps();

  private:
  const ::google::protobuf::DoubleValue& _internal_current_amps() const;
  ::google::protobuf::DoubleValue* _internal_mutable_current_amps();

  public:
  // .google.protobuf.DoubleValue run_time_to_empty_mins = 6 [json_name = "runTimeToEmptyMins"];
  bool has_run_time_to_empty_mins() const;
  void clear_run_time_to_empty_mins() ;
  const ::google::protobuf::DoubleValue& run_time_to_empty_mins() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_run_time_to_empty_mins();
  ::google::protobuf::DoubleValue* mutable_run_time_to_empty_mins();
  void set_allocated_run_time_to_empty_mins(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_run_time_to_empty_mins(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_run_time_to_empty_mins();

  private:
  const ::google::protobuf::DoubleValue& _internal_run_time_to_empty_mins() const;
  ::google::protobuf::DoubleValue* _internal_mutable_run_time_to_empty_mins();

  public:
  // .google.protobuf.DoubleValue consumption_rate_l_per_s = 7 [json_name = "consumptionRateLPerS"];
  bool has_consumption_rate_l_per_s() const;
  void clear_consumption_rate_l_per_s() ;
  const ::google::protobuf::DoubleValue& consumption_rate_l_per_s() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_consumption_rate_l_per_s();
  ::google::protobuf::DoubleValue* mutable_consumption_rate_l_per_s();
  void set_allocated_consumption_rate_l_per_s(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_consumption_rate_l_per_s(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_consumption_rate_l_per_s();

  private:
  const ::google::protobuf::DoubleValue& _internal_consumption_rate_l_per_s() const;
  ::google::protobuf::DoubleValue* _internal_mutable_consumption_rate_l_per_s();

  public:
  // float capacity = 1 [json_name = "capacity"];
  void clear_capacity() ;
  float capacity() const;
  void set_capacity(float value);

  private:
  float _internal_capacity() const;
  void _internal_set_capacity(float value);

  public:
  // float remaining = 2 [json_name = "remaining"];
  void clear_remaining() ;
  float remaining() const;
  void set_remaining(float value);

  private:
  float _internal_remaining() const;
  void _internal_set_remaining(float value);

  public:
  // float percent_remaining = 3 [json_name = "percentRemaining"];
  void clear_percent_remaining() ;
  float percent_remaining() const;
  void set_percent_remaining(float value);

  private:
  float _internal_percent_remaining() const;
  void _internal_set_percent_remaining(float value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PowerLevel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PowerLevel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::DoubleValue* voltage_;
    ::google::protobuf::DoubleValue* current_amps_;
    ::google::protobuf::DoubleValue* run_time_to_empty_mins_;
    ::google::protobuf::DoubleValue* consumption_rate_l_per_s_;
    float capacity_;
    float remaining_;
    float percent_remaining_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto;
};
// -------------------------------------------------------------------

class PowerSource final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PowerSource) */ {
 public:
  inline PowerSource() : PowerSource(nullptr) {}
  ~PowerSource() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerSource* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerSource));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerSource(
      ::google::protobuf::internal::ConstantInitialized);

  inline PowerSource(const PowerSource& from) : PowerSource(nullptr, from) {}
  inline PowerSource(PowerSource&& from) noexcept
      : PowerSource(nullptr, std::move(from)) {}
  inline PowerSource& operator=(const PowerSource& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerSource& operator=(PowerSource&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerSource& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerSource* internal_default_instance() {
    return reinterpret_cast<const PowerSource*>(
        &_PowerSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PowerSource& a, PowerSource& b) { a.Swap(&b); }
  inline void Swap(PowerSource* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerSource* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerSource* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PowerSource>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PowerSource& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PowerSource& from) { PowerSource::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PowerSource* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PowerSource"; }

 protected:
  explicit PowerSource(::google::protobuf::Arena* arena);
  PowerSource(::google::protobuf::Arena* arena, const PowerSource& from);
  PowerSource(::google::protobuf::Arena* arena, PowerSource&& from) noexcept
      : PowerSource(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 4,
    kPowerLevelFieldNumber = 3,
    kOffloadableFieldNumber = 5,
    kPowerStatusFieldNumber = 1,
    kPowerTypeFieldNumber = 2,
  };
  // repeated string messages = 4 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  const std::string& messages(int index) const;
  std::string* mutable_messages(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_messages(int index, Arg_&& value, Args_... args);
  std::string* add_messages();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_messages(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& messages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_messages();

  public:
  // .anduril.entitymanager.v1.PowerLevel power_level = 3 [json_name = "powerLevel"];
  bool has_power_level() const;
  void clear_power_level() ;
  const ::anduril::entitymanager::v1::PowerLevel& power_level() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::PowerLevel* release_power_level();
  ::anduril::entitymanager::v1::PowerLevel* mutable_power_level();
  void set_allocated_power_level(::anduril::entitymanager::v1::PowerLevel* value);
  void unsafe_arena_set_allocated_power_level(::anduril::entitymanager::v1::PowerLevel* value);
  ::anduril::entitymanager::v1::PowerLevel* unsafe_arena_release_power_level();

  private:
  const ::anduril::entitymanager::v1::PowerLevel& _internal_power_level() const;
  ::anduril::entitymanager::v1::PowerLevel* _internal_mutable_power_level();

  public:
  // .google.protobuf.BoolValue offloadable = 5 [json_name = "offloadable"];
  bool has_offloadable() const;
  void clear_offloadable() ;
  const ::google::protobuf::BoolValue& offloadable() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_offloadable();
  ::google::protobuf::BoolValue* mutable_offloadable();
  void set_allocated_offloadable(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_offloadable(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_offloadable();

  private:
  const ::google::protobuf::BoolValue& _internal_offloadable() const;
  ::google::protobuf::BoolValue* _internal_mutable_offloadable();

  public:
  // .anduril.entitymanager.v1.PowerStatus power_status = 1 [json_name = "powerStatus"];
  void clear_power_status() ;
  ::anduril::entitymanager::v1::PowerStatus power_status() const;
  void set_power_status(::anduril::entitymanager::v1::PowerStatus value);

  private:
  ::anduril::entitymanager::v1::PowerStatus _internal_power_status() const;
  void _internal_set_power_status(::anduril::entitymanager::v1::PowerStatus value);

  public:
  // .anduril.entitymanager.v1.PowerType power_type = 2 [json_name = "powerType"];
  void clear_power_type() ;
  ::anduril::entitymanager::v1::PowerType power_type() const;
  void set_power_type(::anduril::entitymanager::v1::PowerType value);

  private:
  ::anduril::entitymanager::v1::PowerType _internal_power_type() const;
  void _internal_set_power_type(::anduril::entitymanager::v1::PowerType value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PowerSource)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PowerSource& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> messages_;
    ::anduril::entitymanager::v1::PowerLevel* power_level_;
    ::google::protobuf::BoolValue* offloadable_;
    int power_status_;
    int power_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto;
};
// -------------------------------------------------------------------

class PowerState_SourceIdToStateEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  PowerState_SourceIdToStateEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerState_SourceIdToStateEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PowerState_SourceIdToStateEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const PowerState_SourceIdToStateEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const PowerState_SourceIdToStateEntry_DoNotUse*>(
        &_PowerState_SourceIdToStateEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      68, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class PowerState final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PowerState) */ {
 public:
  inline PowerState() : PowerState(nullptr) {}
  ~PowerState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerState(
      ::google::protobuf::internal::ConstantInitialized);

  inline PowerState(const PowerState& from) : PowerState(nullptr, from) {}
  inline PowerState(PowerState&& from) noexcept
      : PowerState(nullptr, std::move(from)) {}
  inline PowerState& operator=(const PowerState& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerState& operator=(PowerState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerState& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerState* internal_default_instance() {
    return reinterpret_cast<const PowerState*>(
        &_PowerState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PowerState& a, PowerState& b) { a.Swap(&b); }
  inline void Swap(PowerState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PowerState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PowerState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PowerState& from) { PowerState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PowerState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PowerState"; }

 protected:
  explicit PowerState(::google::protobuf::Arena* arena);
  PowerState(::google::protobuf::Arena* arena, const PowerState& from);
  PowerState(::google::protobuf::Arena* arena, PowerState&& from) noexcept
      : PowerState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceIdToStateFieldNumber = 5,
  };
  // map<string, .anduril.entitymanager.v1.PowerSource> source_id_to_state = 5 [json_name = "sourceIdToState"];
  int source_id_to_state_size() const;
  private:
  int _internal_source_id_to_state_size() const;

  public:
  void clear_source_id_to_state() ;
  const ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>& source_id_to_state() const;
  ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>* mutable_source_id_to_state();

  private:
  const ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>& _internal_source_id_to_state() const;
  ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>* _internal_mutable_source_id_to_state();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PowerState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PowerState& from_msg);
    ::google::protobuf::internal::MapField<PowerState_SourceIdToStateEntry_DoNotUse, std::string, ::anduril::entitymanager::v1::PowerSource,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        source_id_to_state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PowerState

// map<string, .anduril.entitymanager.v1.PowerSource> source_id_to_state = 5 [json_name = "sourceIdToState"];
inline int PowerState::_internal_source_id_to_state_size() const {
  return _internal_source_id_to_state().size();
}
inline int PowerState::source_id_to_state_size() const {
  return _internal_source_id_to_state_size();
}
inline void PowerState::clear_source_id_to_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_to_state_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>& PowerState::_internal_source_id_to_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_id_to_state_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>& PowerState::source_id_to_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:anduril.entitymanager.v1.PowerState.source_id_to_state)
  return _internal_source_id_to_state();
}
inline ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>* PowerState::_internal_mutable_source_id_to_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_id_to_state_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::anduril::entitymanager::v1::PowerSource>* PowerState::mutable_source_id_to_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:anduril.entitymanager.v1.PowerState.source_id_to_state)
  return _internal_mutable_source_id_to_state();
}

// -------------------------------------------------------------------

// PowerSource

// .anduril.entitymanager.v1.PowerStatus power_status = 1 [json_name = "powerStatus"];
inline void PowerSource::clear_power_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_status_ = 0;
}
inline ::anduril::entitymanager::v1::PowerStatus PowerSource::power_status() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerSource.power_status)
  return _internal_power_status();
}
inline void PowerSource::set_power_status(::anduril::entitymanager::v1::PowerStatus value) {
  _internal_set_power_status(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PowerSource.power_status)
}
inline ::anduril::entitymanager::v1::PowerStatus PowerSource::_internal_power_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::PowerStatus>(_impl_.power_status_);
}
inline void PowerSource::_internal_set_power_status(::anduril::entitymanager::v1::PowerStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_status_ = value;
}

// .anduril.entitymanager.v1.PowerType power_type = 2 [json_name = "powerType"];
inline void PowerSource::clear_power_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_type_ = 0;
}
inline ::anduril::entitymanager::v1::PowerType PowerSource::power_type() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerSource.power_type)
  return _internal_power_type();
}
inline void PowerSource::set_power_type(::anduril::entitymanager::v1::PowerType value) {
  _internal_set_power_type(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PowerSource.power_type)
}
inline ::anduril::entitymanager::v1::PowerType PowerSource::_internal_power_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::PowerType>(_impl_.power_type_);
}
inline void PowerSource::_internal_set_power_type(::anduril::entitymanager::v1::PowerType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_type_ = value;
}

// .anduril.entitymanager.v1.PowerLevel power_level = 3 [json_name = "powerLevel"];
inline bool PowerSource::has_power_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.power_level_ != nullptr);
  return value;
}
inline void PowerSource::clear_power_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.power_level_ != nullptr) _impl_.power_level_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::PowerLevel& PowerSource::_internal_power_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::PowerLevel* p = _impl_.power_level_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::PowerLevel&>(::anduril::entitymanager::v1::_PowerLevel_default_instance_);
}
inline const ::anduril::entitymanager::v1::PowerLevel& PowerSource::power_level() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerSource.power_level)
  return _internal_power_level();
}
inline void PowerSource::unsafe_arena_set_allocated_power_level(::anduril::entitymanager::v1::PowerLevel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.power_level_);
  }
  _impl_.power_level_ = reinterpret_cast<::anduril::entitymanager::v1::PowerLevel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PowerSource.power_level)
}
inline ::anduril::entitymanager::v1::PowerLevel* PowerSource::release_power_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::PowerLevel* released = _impl_.power_level_;
  _impl_.power_level_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::PowerLevel* PowerSource::unsafe_arena_release_power_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PowerSource.power_level)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::PowerLevel* temp = _impl_.power_level_;
  _impl_.power_level_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::PowerLevel* PowerSource::_internal_mutable_power_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.power_level_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::PowerLevel>(GetArena());
    _impl_.power_level_ = reinterpret_cast<::anduril::entitymanager::v1::PowerLevel*>(p);
  }
  return _impl_.power_level_;
}
inline ::anduril::entitymanager::v1::PowerLevel* PowerSource::mutable_power_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::PowerLevel* _msg = _internal_mutable_power_level();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PowerSource.power_level)
  return _msg;
}
inline void PowerSource::set_allocated_power_level(::anduril::entitymanager::v1::PowerLevel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.power_level_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.power_level_ = reinterpret_cast<::anduril::entitymanager::v1::PowerLevel*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PowerSource.power_level)
}

// repeated string messages = 4 [json_name = "messages"];
inline int PowerSource::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int PowerSource::messages_size() const {
  return _internal_messages_size();
}
inline void PowerSource::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline std::string* PowerSource::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add_mutable:anduril.entitymanager.v1.PowerSource.messages)
  return _s;
}
inline const std::string& PowerSource::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerSource.messages)
  return _internal_messages().Get(index);
}
inline std::string* PowerSource::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PowerSource.messages)
  return _internal_mutable_messages()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PowerSource::set_messages(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_messages()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PowerSource.messages)
}
template <typename Arg_, typename... Args_>
inline void PowerSource::add_messages(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_messages(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.PowerSource.messages)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PowerSource::messages() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.PowerSource.messages)
  return _internal_messages();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PowerSource::mutable_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.PowerSource.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PowerSource::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PowerSource::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// .google.protobuf.BoolValue offloadable = 5 [json_name = "offloadable"];
inline bool PowerSource::has_offloadable() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.offloadable_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& PowerSource::_internal_offloadable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::BoolValue* p = _impl_.offloadable_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& PowerSource::offloadable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerSource.offloadable)
  return _internal_offloadable();
}
inline void PowerSource::unsafe_arena_set_allocated_offloadable(::google::protobuf::BoolValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.offloadable_);
  }
  _impl_.offloadable_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PowerSource.offloadable)
}
inline ::google::protobuf::BoolValue* PowerSource::release_offloadable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* released = _impl_.offloadable_;
  _impl_.offloadable_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::BoolValue* PowerSource::unsafe_arena_release_offloadable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PowerSource.offloadable)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* temp = _impl_.offloadable_;
  _impl_.offloadable_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* PowerSource::_internal_mutable_offloadable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.offloadable_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::BoolValue>(GetArena());
    _impl_.offloadable_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.offloadable_;
}
inline ::google::protobuf::BoolValue* PowerSource::mutable_offloadable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::BoolValue* _msg = _internal_mutable_offloadable();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PowerSource.offloadable)
  return _msg;
}
inline void PowerSource::set_allocated_offloadable(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.offloadable_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.offloadable_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PowerSource.offloadable)
}

// -------------------------------------------------------------------

// PowerLevel

// float capacity = 1 [json_name = "capacity"];
inline void PowerLevel::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = 0;
}
inline float PowerLevel::capacity() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerLevel.capacity)
  return _internal_capacity();
}
inline void PowerLevel::set_capacity(float value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PowerLevel.capacity)
}
inline float PowerLevel::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void PowerLevel::_internal_set_capacity(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// float remaining = 2 [json_name = "remaining"];
inline void PowerLevel::clear_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remaining_ = 0;
}
inline float PowerLevel::remaining() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerLevel.remaining)
  return _internal_remaining();
}
inline void PowerLevel::set_remaining(float value) {
  _internal_set_remaining(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PowerLevel.remaining)
}
inline float PowerLevel::_internal_remaining() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remaining_;
}
inline void PowerLevel::_internal_set_remaining(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remaining_ = value;
}

// float percent_remaining = 3 [json_name = "percentRemaining"];
inline void PowerLevel::clear_percent_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percent_remaining_ = 0;
}
inline float PowerLevel::percent_remaining() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerLevel.percent_remaining)
  return _internal_percent_remaining();
}
inline void PowerLevel::set_percent_remaining(float value) {
  _internal_set_percent_remaining(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PowerLevel.percent_remaining)
}
inline float PowerLevel::_internal_percent_remaining() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.percent_remaining_;
}
inline void PowerLevel::_internal_set_percent_remaining(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.percent_remaining_ = value;
}

// .google.protobuf.DoubleValue voltage = 4 [json_name = "voltage"];
inline bool PowerLevel::has_voltage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltage_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& PowerLevel::_internal_voltage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.voltage_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& PowerLevel::voltage() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerLevel.voltage)
  return _internal_voltage();
}
inline void PowerLevel::unsafe_arena_set_allocated_voltage(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltage_);
  }
  _impl_.voltage_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PowerLevel.voltage)
}
inline ::google::protobuf::DoubleValue* PowerLevel::release_voltage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* released = _impl_.voltage_;
  _impl_.voltage_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* PowerLevel::unsafe_arena_release_voltage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PowerLevel.voltage)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* temp = _impl_.voltage_;
  _impl_.voltage_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* PowerLevel::_internal_mutable_voltage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltage_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.voltage_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.voltage_;
}
inline ::google::protobuf::DoubleValue* PowerLevel::mutable_voltage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_voltage();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PowerLevel.voltage)
  return _msg;
}
inline void PowerLevel::set_allocated_voltage(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltage_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.voltage_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PowerLevel.voltage)
}

// .google.protobuf.DoubleValue current_amps = 5 [json_name = "currentAmps"];
inline bool PowerLevel::has_current_amps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.current_amps_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& PowerLevel::_internal_current_amps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.current_amps_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& PowerLevel::current_amps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerLevel.current_amps)
  return _internal_current_amps();
}
inline void PowerLevel::unsafe_arena_set_allocated_current_amps(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_amps_);
  }
  _impl_.current_amps_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PowerLevel.current_amps)
}
inline ::google::protobuf::DoubleValue* PowerLevel::release_current_amps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::DoubleValue* released = _impl_.current_amps_;
  _impl_.current_amps_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* PowerLevel::unsafe_arena_release_current_amps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PowerLevel.current_amps)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::DoubleValue* temp = _impl_.current_amps_;
  _impl_.current_amps_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* PowerLevel::_internal_mutable_current_amps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_amps_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.current_amps_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.current_amps_;
}
inline ::google::protobuf::DoubleValue* PowerLevel::mutable_current_amps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_current_amps();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PowerLevel.current_amps)
  return _msg;
}
inline void PowerLevel::set_allocated_current_amps(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_amps_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.current_amps_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PowerLevel.current_amps)
}

// .google.protobuf.DoubleValue run_time_to_empty_mins = 6 [json_name = "runTimeToEmptyMins"];
inline bool PowerLevel::has_run_time_to_empty_mins() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.run_time_to_empty_mins_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& PowerLevel::_internal_run_time_to_empty_mins() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.run_time_to_empty_mins_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& PowerLevel::run_time_to_empty_mins() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerLevel.run_time_to_empty_mins)
  return _internal_run_time_to_empty_mins();
}
inline void PowerLevel::unsafe_arena_set_allocated_run_time_to_empty_mins(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.run_time_to_empty_mins_);
  }
  _impl_.run_time_to_empty_mins_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PowerLevel.run_time_to_empty_mins)
}
inline ::google::protobuf::DoubleValue* PowerLevel::release_run_time_to_empty_mins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::DoubleValue* released = _impl_.run_time_to_empty_mins_;
  _impl_.run_time_to_empty_mins_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* PowerLevel::unsafe_arena_release_run_time_to_empty_mins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PowerLevel.run_time_to_empty_mins)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::DoubleValue* temp = _impl_.run_time_to_empty_mins_;
  _impl_.run_time_to_empty_mins_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* PowerLevel::_internal_mutable_run_time_to_empty_mins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.run_time_to_empty_mins_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.run_time_to_empty_mins_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.run_time_to_empty_mins_;
}
inline ::google::protobuf::DoubleValue* PowerLevel::mutable_run_time_to_empty_mins() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_run_time_to_empty_mins();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PowerLevel.run_time_to_empty_mins)
  return _msg;
}
inline void PowerLevel::set_allocated_run_time_to_empty_mins(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.run_time_to_empty_mins_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.run_time_to_empty_mins_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PowerLevel.run_time_to_empty_mins)
}

// .google.protobuf.DoubleValue consumption_rate_l_per_s = 7 [json_name = "consumptionRateLPerS"];
inline bool PowerLevel::has_consumption_rate_l_per_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.consumption_rate_l_per_s_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& PowerLevel::_internal_consumption_rate_l_per_s() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.consumption_rate_l_per_s_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& PowerLevel::consumption_rate_l_per_s() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PowerLevel.consumption_rate_l_per_s)
  return _internal_consumption_rate_l_per_s();
}
inline void PowerLevel::unsafe_arena_set_allocated_consumption_rate_l_per_s(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.consumption_rate_l_per_s_);
  }
  _impl_.consumption_rate_l_per_s_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PowerLevel.consumption_rate_l_per_s)
}
inline ::google::protobuf::DoubleValue* PowerLevel::release_consumption_rate_l_per_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::DoubleValue* released = _impl_.consumption_rate_l_per_s_;
  _impl_.consumption_rate_l_per_s_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* PowerLevel::unsafe_arena_release_consumption_rate_l_per_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PowerLevel.consumption_rate_l_per_s)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::DoubleValue* temp = _impl_.consumption_rate_l_per_s_;
  _impl_.consumption_rate_l_per_s_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* PowerLevel::_internal_mutable_consumption_rate_l_per_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consumption_rate_l_per_s_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.consumption_rate_l_per_s_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.consumption_rate_l_per_s_;
}
inline ::google::protobuf::DoubleValue* PowerLevel::mutable_consumption_rate_l_per_s() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_consumption_rate_l_per_s();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PowerLevel.consumption_rate_l_per_s)
  return _msg;
}
inline void PowerLevel::set_allocated_consumption_rate_l_per_s(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.consumption_rate_l_per_s_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.consumption_rate_l_per_s_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PowerLevel.consumption_rate_l_per_s)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::entitymanager::v1::PowerStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::PowerStatus>() {
  return ::anduril::entitymanager::v1::PowerStatus_descriptor();
}
template <>
struct is_proto_enum<::anduril::entitymanager::v1::PowerType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::PowerType>() {
  return ::anduril::entitymanager::v1::PowerType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2fentitymanager_2fv1_2fpower_2epub_2eproto_2epb_2eh
