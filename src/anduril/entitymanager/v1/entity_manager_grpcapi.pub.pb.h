// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/entity_manager_grpcapi.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto_2epb_2eh
#define anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "anduril/entitymanager/v1/entity.pub.pb.h"
#include "anduril/entitymanager/v1/filter.pub.pb.h"
#include "anduril/entitymanager/v1/rate_limit.pub.pb.h"
#include "anduril/entitymanager/v1/types.pub.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class EntityEvent;
struct EntityEventDefaultTypeInternal;
extern EntityEventDefaultTypeInternal _EntityEvent_default_instance_;
class GetEntityRequest;
struct GetEntityRequestDefaultTypeInternal;
extern GetEntityRequestDefaultTypeInternal _GetEntityRequest_default_instance_;
class GetEntityResponse;
struct GetEntityResponseDefaultTypeInternal;
extern GetEntityResponseDefaultTypeInternal _GetEntityResponse_default_instance_;
class Heartbeat;
struct HeartbeatDefaultTypeInternal;
extern HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;
class OverrideEntityRequest;
struct OverrideEntityRequestDefaultTypeInternal;
extern OverrideEntityRequestDefaultTypeInternal _OverrideEntityRequest_default_instance_;
class OverrideEntityResponse;
struct OverrideEntityResponseDefaultTypeInternal;
extern OverrideEntityResponseDefaultTypeInternal _OverrideEntityResponse_default_instance_;
class PublishEntitiesRequest;
struct PublishEntitiesRequestDefaultTypeInternal;
extern PublishEntitiesRequestDefaultTypeInternal _PublishEntitiesRequest_default_instance_;
class PublishEntitiesResponse;
struct PublishEntitiesResponseDefaultTypeInternal;
extern PublishEntitiesResponseDefaultTypeInternal _PublishEntitiesResponse_default_instance_;
class PublishEntityRequest;
struct PublishEntityRequestDefaultTypeInternal;
extern PublishEntityRequestDefaultTypeInternal _PublishEntityRequest_default_instance_;
class PublishEntityResponse;
struct PublishEntityResponseDefaultTypeInternal;
extern PublishEntityResponseDefaultTypeInternal _PublishEntityResponse_default_instance_;
class RemoveEntityOverrideRequest;
struct RemoveEntityOverrideRequestDefaultTypeInternal;
extern RemoveEntityOverrideRequestDefaultTypeInternal _RemoveEntityOverrideRequest_default_instance_;
class RemoveEntityOverrideResponse;
struct RemoveEntityOverrideResponseDefaultTypeInternal;
extern RemoveEntityOverrideResponseDefaultTypeInternal _RemoveEntityOverrideResponse_default_instance_;
class StreamEntityComponentsRequest;
struct StreamEntityComponentsRequestDefaultTypeInternal;
extern StreamEntityComponentsRequestDefaultTypeInternal _StreamEntityComponentsRequest_default_instance_;
class StreamEntityComponentsResponse;
struct StreamEntityComponentsResponseDefaultTypeInternal;
extern StreamEntityComponentsResponseDefaultTypeInternal _StreamEntityComponentsResponse_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {
enum EventType : int {
  EVENT_TYPE_INVALID = 0,
  EVENT_TYPE_CREATED = 1,
  EVENT_TYPE_UPDATE = 2,
  EVENT_TYPE_DELETED = 3,
  EVENT_TYPE_PREEXISTING = 4,
  EVENT_TYPE_POST_EXPIRY_OVERRIDE = 5,
  EventType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EventType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EventType_IsValid(int value);
extern const uint32_t EventType_internal_data_[];
constexpr EventType EventType_MIN = static_cast<EventType>(0);
constexpr EventType EventType_MAX = static_cast<EventType>(5);
constexpr int EventType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
EventType_descriptor();
template <typename T>
const std::string& EventType_Name(T value) {
  static_assert(std::is_same<T, EventType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EventType_Name().");
  return EventType_Name(static_cast<EventType>(value));
}
template <>
inline const std::string& EventType_Name(EventType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EventType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool EventType_Parse(absl::string_view name, EventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventType>(
      EventType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class RemoveEntityOverrideResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.RemoveEntityOverrideResponse) */ {
 public:
  inline RemoveEntityOverrideResponse() : RemoveEntityOverrideResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveEntityOverrideResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveEntityOverrideResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveEntityOverrideResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveEntityOverrideResponse(const RemoveEntityOverrideResponse& from) : RemoveEntityOverrideResponse(nullptr, from) {}
  inline RemoveEntityOverrideResponse(RemoveEntityOverrideResponse&& from) noexcept
      : RemoveEntityOverrideResponse(nullptr, std::move(from)) {}
  inline RemoveEntityOverrideResponse& operator=(const RemoveEntityOverrideResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveEntityOverrideResponse& operator=(RemoveEntityOverrideResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveEntityOverrideResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveEntityOverrideResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveEntityOverrideResponse*>(
        &_RemoveEntityOverrideResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(RemoveEntityOverrideResponse& a, RemoveEntityOverrideResponse& b) { a.Swap(&b); }
  inline void Swap(RemoveEntityOverrideResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveEntityOverrideResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveEntityOverrideResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RemoveEntityOverrideResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RemoveEntityOverrideResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RemoveEntityOverrideResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.RemoveEntityOverrideResponse"; }

 protected:
  explicit RemoveEntityOverrideResponse(::google::protobuf::Arena* arena);
  RemoveEntityOverrideResponse(::google::protobuf::Arena* arena, const RemoveEntityOverrideResponse& from);
  RemoveEntityOverrideResponse(::google::protobuf::Arena* arena, RemoveEntityOverrideResponse&& from) noexcept
      : RemoveEntityOverrideResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.RemoveEntityOverrideResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveEntityOverrideResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class RemoveEntityOverrideRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.RemoveEntityOverrideRequest) */ {
 public:
  inline RemoveEntityOverrideRequest() : RemoveEntityOverrideRequest(nullptr) {}
  ~RemoveEntityOverrideRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveEntityOverrideRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveEntityOverrideRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveEntityOverrideRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveEntityOverrideRequest(const RemoveEntityOverrideRequest& from) : RemoveEntityOverrideRequest(nullptr, from) {}
  inline RemoveEntityOverrideRequest(RemoveEntityOverrideRequest&& from) noexcept
      : RemoveEntityOverrideRequest(nullptr, std::move(from)) {}
  inline RemoveEntityOverrideRequest& operator=(const RemoveEntityOverrideRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveEntityOverrideRequest& operator=(RemoveEntityOverrideRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveEntityOverrideRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveEntityOverrideRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveEntityOverrideRequest*>(
        &_RemoveEntityOverrideRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(RemoveEntityOverrideRequest& a, RemoveEntityOverrideRequest& b) { a.Swap(&b); }
  inline void Swap(RemoveEntityOverrideRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveEntityOverrideRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveEntityOverrideRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoveEntityOverrideRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveEntityOverrideRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveEntityOverrideRequest& from) { RemoveEntityOverrideRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoveEntityOverrideRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.RemoveEntityOverrideRequest"; }

 protected:
  explicit RemoveEntityOverrideRequest(::google::protobuf::Arena* arena);
  RemoveEntityOverrideRequest(::google::protobuf::Arena* arena, const RemoveEntityOverrideRequest& from);
  RemoveEntityOverrideRequest(::google::protobuf::Arena* arena, RemoveEntityOverrideRequest&& from) noexcept
      : RemoveEntityOverrideRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldPathFieldNumber = 2,
    kEntityIdFieldNumber = 1,
  };
  // repeated string field_path = 2 [json_name = "fieldPath"];
  int field_path_size() const;
  private:
  int _internal_field_path_size() const;

  public:
  void clear_field_path() ;
  const std::string& field_path(int index) const;
  std::string* mutable_field_path(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field_path(int index, Arg_&& value, Args_... args);
  std::string* add_field_path();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_field_path(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& field_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_field_path();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_field_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_field_path();

  public:
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const std::string& entity_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  std::string* mutable_entity_id();
  PROTOBUF_NODISCARD std::string* release_entity_id();
  void set_allocated_entity_id(std::string* value);

  private:
  const std::string& _internal_entity_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(
      const std::string& value);
  std::string* _internal_mutable_entity_id();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.RemoveEntityOverrideRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveEntityOverrideRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> field_path_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class PublishEntityResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PublishEntityResponse) */ {
 public:
  inline PublishEntityResponse() : PublishEntityResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishEntityResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishEntityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEntityResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PublishEntityResponse(const PublishEntityResponse& from) : PublishEntityResponse(nullptr, from) {}
  inline PublishEntityResponse(PublishEntityResponse&& from) noexcept
      : PublishEntityResponse(nullptr, std::move(from)) {}
  inline PublishEntityResponse& operator=(const PublishEntityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishEntityResponse& operator=(PublishEntityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishEntityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishEntityResponse* internal_default_instance() {
    return reinterpret_cast<const PublishEntityResponse*>(
        &_PublishEntityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PublishEntityResponse& a, PublishEntityResponse& b) { a.Swap(&b); }
  inline void Swap(PublishEntityResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishEntityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishEntityResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PublishEntityResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PublishEntityResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PublishEntityResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PublishEntityResponse"; }

 protected:
  explicit PublishEntityResponse(::google::protobuf::Arena* arena);
  PublishEntityResponse(::google::protobuf::Arena* arena, const PublishEntityResponse& from);
  PublishEntityResponse(::google::protobuf::Arena* arena, PublishEntityResponse&& from) noexcept
      : PublishEntityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PublishEntityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PublishEntityResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class PublishEntitiesResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PublishEntitiesResponse) */ {
 public:
  inline PublishEntitiesResponse() : PublishEntitiesResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishEntitiesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishEntitiesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEntitiesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PublishEntitiesResponse(const PublishEntitiesResponse& from) : PublishEntitiesResponse(nullptr, from) {}
  inline PublishEntitiesResponse(PublishEntitiesResponse&& from) noexcept
      : PublishEntitiesResponse(nullptr, std::move(from)) {}
  inline PublishEntitiesResponse& operator=(const PublishEntitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishEntitiesResponse& operator=(PublishEntitiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishEntitiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishEntitiesResponse* internal_default_instance() {
    return reinterpret_cast<const PublishEntitiesResponse*>(
        &_PublishEntitiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PublishEntitiesResponse& a, PublishEntitiesResponse& b) { a.Swap(&b); }
  inline void Swap(PublishEntitiesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishEntitiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishEntitiesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PublishEntitiesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PublishEntitiesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PublishEntitiesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PublishEntitiesResponse"; }

 protected:
  explicit PublishEntitiesResponse(::google::protobuf::Arena* arena);
  PublishEntitiesResponse(::google::protobuf::Arena* arena, const PublishEntitiesResponse& from);
  PublishEntitiesResponse(::google::protobuf::Arena* arena, PublishEntitiesResponse&& from) noexcept
      : PublishEntitiesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PublishEntitiesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PublishEntitiesResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class OverrideEntityResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.OverrideEntityResponse) */ {
 public:
  inline OverrideEntityResponse() : OverrideEntityResponse(nullptr) {}
  ~OverrideEntityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OverrideEntityResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OverrideEntityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OverrideEntityResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline OverrideEntityResponse(const OverrideEntityResponse& from) : OverrideEntityResponse(nullptr, from) {}
  inline OverrideEntityResponse(OverrideEntityResponse&& from) noexcept
      : OverrideEntityResponse(nullptr, std::move(from)) {}
  inline OverrideEntityResponse& operator=(const OverrideEntityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline OverrideEntityResponse& operator=(OverrideEntityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OverrideEntityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const OverrideEntityResponse* internal_default_instance() {
    return reinterpret_cast<const OverrideEntityResponse*>(
        &_OverrideEntityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(OverrideEntityResponse& a, OverrideEntityResponse& b) { a.Swap(&b); }
  inline void Swap(OverrideEntityResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OverrideEntityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OverrideEntityResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OverrideEntityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OverrideEntityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OverrideEntityResponse& from) { OverrideEntityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OverrideEntityResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.OverrideEntityResponse"; }

 protected:
  explicit OverrideEntityResponse(::google::protobuf::Arena* arena);
  OverrideEntityResponse(::google::protobuf::Arena* arena, const OverrideEntityResponse& from);
  OverrideEntityResponse(::google::protobuf::Arena* arena, OverrideEntityResponse&& from) noexcept
      : OverrideEntityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // .anduril.entitymanager.v1.OverrideStatus status = 1 [json_name = "status"];
  void clear_status() ;
  ::anduril::entitymanager::v1::OverrideStatus status() const;
  void set_status(::anduril::entitymanager::v1::OverrideStatus value);

  private:
  ::anduril::entitymanager::v1::OverrideStatus _internal_status() const;
  void _internal_set_status(::anduril::entitymanager::v1::OverrideStatus value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.OverrideEntityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OverrideEntityResponse& from_msg);
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class GetEntityRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.GetEntityRequest) */ {
 public:
  inline GetEntityRequest() : GetEntityRequest(nullptr) {}
  ~GetEntityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetEntityRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetEntityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetEntityRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetEntityRequest(const GetEntityRequest& from) : GetEntityRequest(nullptr, from) {}
  inline GetEntityRequest(GetEntityRequest&& from) noexcept
      : GetEntityRequest(nullptr, std::move(from)) {}
  inline GetEntityRequest& operator=(const GetEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEntityRequest& operator=(GetEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEntityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEntityRequest* internal_default_instance() {
    return reinterpret_cast<const GetEntityRequest*>(
        &_GetEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetEntityRequest& a, GetEntityRequest& b) { a.Swap(&b); }
  inline void Swap(GetEntityRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEntityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEntityRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetEntityRequest& from) { GetEntityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetEntityRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.GetEntityRequest"; }

 protected:
  explicit GetEntityRequest(::google::protobuf::Arena* arena);
  GetEntityRequest(::google::protobuf::Arena* arena, const GetEntityRequest& from);
  GetEntityRequest(::google::protobuf::Arena* arena, GetEntityRequest&& from) noexcept
      : GetEntityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const std::string& entity_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  std::string* mutable_entity_id();
  PROTOBUF_NODISCARD std::string* release_entity_id();
  void set_allocated_entity_id(std::string* value);

  private:
  const std::string& _internal_entity_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(
      const std::string& value);
  std::string* _internal_mutable_entity_id();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.GetEntityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetEntityRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class Heartbeat final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Heartbeat) */ {
 public:
  inline Heartbeat() : Heartbeat(nullptr) {}
  ~Heartbeat() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Heartbeat* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Heartbeat));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Heartbeat(
      ::google::protobuf::internal::ConstantInitialized);

  inline Heartbeat(const Heartbeat& from) : Heartbeat(nullptr, from) {}
  inline Heartbeat(Heartbeat&& from) noexcept
      : Heartbeat(nullptr, std::move(from)) {}
  inline Heartbeat& operator=(const Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Heartbeat& operator=(Heartbeat&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Heartbeat& default_instance() {
    return *internal_default_instance();
  }
  static inline const Heartbeat* internal_default_instance() {
    return reinterpret_cast<const Heartbeat*>(
        &_Heartbeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(Heartbeat& a, Heartbeat& b) { a.Swap(&b); }
  inline void Swap(Heartbeat* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Heartbeat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Heartbeat* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Heartbeat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Heartbeat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Heartbeat& from) { Heartbeat::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Heartbeat* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Heartbeat"; }

 protected:
  explicit Heartbeat(::google::protobuf::Arena* arena);
  Heartbeat(::google::protobuf::Arena* arena, const Heartbeat& from);
  Heartbeat(::google::protobuf::Arena* arena, Heartbeat&& from) noexcept
      : Heartbeat(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
  };
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Heartbeat)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Heartbeat& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class StreamEntityComponentsRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.StreamEntityComponentsRequest) */ {
 public:
  inline StreamEntityComponentsRequest() : StreamEntityComponentsRequest(nullptr) {}
  ~StreamEntityComponentsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamEntityComponentsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamEntityComponentsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamEntityComponentsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StreamEntityComponentsRequest(const StreamEntityComponentsRequest& from) : StreamEntityComponentsRequest(nullptr, from) {}
  inline StreamEntityComponentsRequest(StreamEntityComponentsRequest&& from) noexcept
      : StreamEntityComponentsRequest(nullptr, std::move(from)) {}
  inline StreamEntityComponentsRequest& operator=(const StreamEntityComponentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamEntityComponentsRequest& operator=(StreamEntityComponentsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamEntityComponentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamEntityComponentsRequest* internal_default_instance() {
    return reinterpret_cast<const StreamEntityComponentsRequest*>(
        &_StreamEntityComponentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(StreamEntityComponentsRequest& a, StreamEntityComponentsRequest& b) { a.Swap(&b); }
  inline void Swap(StreamEntityComponentsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamEntityComponentsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamEntityComponentsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamEntityComponentsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamEntityComponentsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamEntityComponentsRequest& from) { StreamEntityComponentsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamEntityComponentsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.StreamEntityComponentsRequest"; }

 protected:
  explicit StreamEntityComponentsRequest(::google::protobuf::Arena* arena);
  StreamEntityComponentsRequest(::google::protobuf::Arena* arena, const StreamEntityComponentsRequest& from);
  StreamEntityComponentsRequest(::google::protobuf::Arena* arena, StreamEntityComponentsRequest&& from) noexcept
      : StreamEntityComponentsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentsToIncludeFieldNumber = 1,
    kFilterFieldNumber = 3,
    kRateLimitFieldNumber = 4,
    kIncludeAllComponentsFieldNumber = 2,
    kPreexistingOnlyFieldNumber = 6,
    kHeartbeatPeriodMillisFieldNumber = 5,
  };
  // repeated string components_to_include = 1 [json_name = "componentsToInclude"];
  int components_to_include_size() const;
  private:
  int _internal_components_to_include_size() const;

  public:
  void clear_components_to_include() ;
  const std::string& components_to_include(int index) const;
  std::string* mutable_components_to_include(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_components_to_include(int index, Arg_&& value, Args_... args);
  std::string* add_components_to_include();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_components_to_include(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& components_to_include() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_components_to_include();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_components_to_include() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_components_to_include();

  public:
  // .anduril.entitymanager.v1.Statement filter = 3 [json_name = "filter"];
  bool has_filter() const;
  void clear_filter() ;
  const ::anduril::entitymanager::v1::Statement& filter() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Statement* release_filter();
  ::anduril::entitymanager::v1::Statement* mutable_filter();
  void set_allocated_filter(::anduril::entitymanager::v1::Statement* value);
  void unsafe_arena_set_allocated_filter(::anduril::entitymanager::v1::Statement* value);
  ::anduril::entitymanager::v1::Statement* unsafe_arena_release_filter();

  private:
  const ::anduril::entitymanager::v1::Statement& _internal_filter() const;
  ::anduril::entitymanager::v1::Statement* _internal_mutable_filter();

  public:
  // .anduril.entitymanager.v1.RateLimit rate_limit = 4 [json_name = "rateLimit"];
  bool has_rate_limit() const;
  void clear_rate_limit() ;
  const ::anduril::entitymanager::v1::RateLimit& rate_limit() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::RateLimit* release_rate_limit();
  ::anduril::entitymanager::v1::RateLimit* mutable_rate_limit();
  void set_allocated_rate_limit(::anduril::entitymanager::v1::RateLimit* value);
  void unsafe_arena_set_allocated_rate_limit(::anduril::entitymanager::v1::RateLimit* value);
  ::anduril::entitymanager::v1::RateLimit* unsafe_arena_release_rate_limit();

  private:
  const ::anduril::entitymanager::v1::RateLimit& _internal_rate_limit() const;
  ::anduril::entitymanager::v1::RateLimit* _internal_mutable_rate_limit();

  public:
  // bool include_all_components = 2 [json_name = "includeAllComponents"];
  void clear_include_all_components() ;
  bool include_all_components() const;
  void set_include_all_components(bool value);

  private:
  bool _internal_include_all_components() const;
  void _internal_set_include_all_components(bool value);

  public:
  // bool preexisting_only = 6 [json_name = "preexistingOnly"];
  void clear_preexisting_only() ;
  bool preexisting_only() const;
  void set_preexisting_only(bool value);

  private:
  bool _internal_preexisting_only() const;
  void _internal_set_preexisting_only(bool value);

  public:
  // uint32 heartbeat_period_millis = 5 [json_name = "heartbeatPeriodMillis"];
  void clear_heartbeat_period_millis() ;
  ::uint32_t heartbeat_period_millis() const;
  void set_heartbeat_period_millis(::uint32_t value);

  private:
  ::uint32_t _internal_heartbeat_period_millis() const;
  void _internal_set_heartbeat_period_millis(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.StreamEntityComponentsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      84, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StreamEntityComponentsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> components_to_include_;
    ::anduril::entitymanager::v1::Statement* filter_;
    ::anduril::entitymanager::v1::RateLimit* rate_limit_;
    bool include_all_components_;
    bool preexisting_only_;
    ::uint32_t heartbeat_period_millis_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class PublishEntityRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PublishEntityRequest) */ {
 public:
  inline PublishEntityRequest() : PublishEntityRequest(nullptr) {}
  ~PublishEntityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishEntityRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishEntityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEntityRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PublishEntityRequest(const PublishEntityRequest& from) : PublishEntityRequest(nullptr, from) {}
  inline PublishEntityRequest(PublishEntityRequest&& from) noexcept
      : PublishEntityRequest(nullptr, std::move(from)) {}
  inline PublishEntityRequest& operator=(const PublishEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishEntityRequest& operator=(PublishEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishEntityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishEntityRequest* internal_default_instance() {
    return reinterpret_cast<const PublishEntityRequest*>(
        &_PublishEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PublishEntityRequest& a, PublishEntityRequest& b) { a.Swap(&b); }
  inline void Swap(PublishEntityRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishEntityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishEntityRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublishEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublishEntityRequest& from) { PublishEntityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublishEntityRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PublishEntityRequest"; }

 protected:
  explicit PublishEntityRequest(::google::protobuf::Arena* arena);
  PublishEntityRequest(::google::protobuf::Arena* arena, const PublishEntityRequest& from);
  PublishEntityRequest(::google::protobuf::Arena* arena, PublishEntityRequest&& from) noexcept
      : PublishEntityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityFieldNumber = 1,
  };
  // .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
  bool has_entity() const;
  void clear_entity() ;
  const ::anduril::entitymanager::v1::Entity& entity() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_entity();
  ::anduril::entitymanager::v1::Entity* mutable_entity();
  void set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_entity();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_entity() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_entity();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PublishEntityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PublishEntityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::Entity* entity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class PublishEntitiesRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PublishEntitiesRequest) */ {
 public:
  inline PublishEntitiesRequest() : PublishEntitiesRequest(nullptr) {}
  ~PublishEntitiesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishEntitiesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishEntitiesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEntitiesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PublishEntitiesRequest(const PublishEntitiesRequest& from) : PublishEntitiesRequest(nullptr, from) {}
  inline PublishEntitiesRequest(PublishEntitiesRequest&& from) noexcept
      : PublishEntitiesRequest(nullptr, std::move(from)) {}
  inline PublishEntitiesRequest& operator=(const PublishEntitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishEntitiesRequest& operator=(PublishEntitiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishEntitiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishEntitiesRequest* internal_default_instance() {
    return reinterpret_cast<const PublishEntitiesRequest*>(
        &_PublishEntitiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PublishEntitiesRequest& a, PublishEntitiesRequest& b) { a.Swap(&b); }
  inline void Swap(PublishEntitiesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishEntitiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishEntitiesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublishEntitiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishEntitiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublishEntitiesRequest& from) { PublishEntitiesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublishEntitiesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PublishEntitiesRequest"; }

 protected:
  explicit PublishEntitiesRequest(::google::protobuf::Arena* arena);
  PublishEntitiesRequest(::google::protobuf::Arena* arena, const PublishEntitiesRequest& from);
  PublishEntitiesRequest(::google::protobuf::Arena* arena, PublishEntitiesRequest&& from) noexcept
      : PublishEntitiesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityFieldNumber = 1,
  };
  // .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
  bool has_entity() const;
  void clear_entity() ;
  const ::anduril::entitymanager::v1::Entity& entity() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_entity();
  ::anduril::entitymanager::v1::Entity* mutable_entity();
  void set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_entity();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_entity() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_entity();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PublishEntitiesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PublishEntitiesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::Entity* entity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class OverrideEntityRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.OverrideEntityRequest) */ {
 public:
  inline OverrideEntityRequest() : OverrideEntityRequest(nullptr) {}
  ~OverrideEntityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OverrideEntityRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OverrideEntityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OverrideEntityRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline OverrideEntityRequest(const OverrideEntityRequest& from) : OverrideEntityRequest(nullptr, from) {}
  inline OverrideEntityRequest(OverrideEntityRequest&& from) noexcept
      : OverrideEntityRequest(nullptr, std::move(from)) {}
  inline OverrideEntityRequest& operator=(const OverrideEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OverrideEntityRequest& operator=(OverrideEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OverrideEntityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const OverrideEntityRequest* internal_default_instance() {
    return reinterpret_cast<const OverrideEntityRequest*>(
        &_OverrideEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(OverrideEntityRequest& a, OverrideEntityRequest& b) { a.Swap(&b); }
  inline void Swap(OverrideEntityRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OverrideEntityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OverrideEntityRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OverrideEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OverrideEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OverrideEntityRequest& from) { OverrideEntityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OverrideEntityRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.OverrideEntityRequest"; }

 protected:
  explicit OverrideEntityRequest(::google::protobuf::Arena* arena);
  OverrideEntityRequest(::google::protobuf::Arena* arena, const OverrideEntityRequest& from);
  OverrideEntityRequest(::google::protobuf::Arena* arena, OverrideEntityRequest&& from) noexcept
      : OverrideEntityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldPathFieldNumber = 2,
    kEntityFieldNumber = 1,
    kProvenanceFieldNumber = 3,
  };
  // repeated string field_path = 2 [json_name = "fieldPath"];
  int field_path_size() const;
  private:
  int _internal_field_path_size() const;

  public:
  void clear_field_path() ;
  const std::string& field_path(int index) const;
  std::string* mutable_field_path(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field_path(int index, Arg_&& value, Args_... args);
  std::string* add_field_path();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_field_path(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& field_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_field_path();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_field_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_field_path();

  public:
  // .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
  bool has_entity() const;
  void clear_entity() ;
  const ::anduril::entitymanager::v1::Entity& entity() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_entity();
  ::anduril::entitymanager::v1::Entity* mutable_entity();
  void set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_entity();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_entity() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_entity();

  public:
  // .anduril.entitymanager.v1.Provenance provenance = 3 [json_name = "provenance"];
  bool has_provenance() const;
  void clear_provenance() ;
  const ::anduril::entitymanager::v1::Provenance& provenance() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Provenance* release_provenance();
  ::anduril::entitymanager::v1::Provenance* mutable_provenance();
  void set_allocated_provenance(::anduril::entitymanager::v1::Provenance* value);
  void unsafe_arena_set_allocated_provenance(::anduril::entitymanager::v1::Provenance* value);
  ::anduril::entitymanager::v1::Provenance* unsafe_arena_release_provenance();

  private:
  const ::anduril::entitymanager::v1::Provenance& _internal_provenance() const;
  ::anduril::entitymanager::v1::Provenance* _internal_mutable_provenance();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.OverrideEntityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OverrideEntityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> field_path_;
    ::anduril::entitymanager::v1::Entity* entity_;
    ::anduril::entitymanager::v1::Provenance* provenance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class GetEntityResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.GetEntityResponse) */ {
 public:
  inline GetEntityResponse() : GetEntityResponse(nullptr) {}
  ~GetEntityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetEntityResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetEntityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetEntityResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetEntityResponse(const GetEntityResponse& from) : GetEntityResponse(nullptr, from) {}
  inline GetEntityResponse(GetEntityResponse&& from) noexcept
      : GetEntityResponse(nullptr, std::move(from)) {}
  inline GetEntityResponse& operator=(const GetEntityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEntityResponse& operator=(GetEntityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEntityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEntityResponse* internal_default_instance() {
    return reinterpret_cast<const GetEntityResponse*>(
        &_GetEntityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetEntityResponse& a, GetEntityResponse& b) { a.Swap(&b); }
  inline void Swap(GetEntityResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEntityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEntityResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetEntityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEntityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetEntityResponse& from) { GetEntityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetEntityResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.GetEntityResponse"; }

 protected:
  explicit GetEntityResponse(::google::protobuf::Arena* arena);
  GetEntityResponse(::google::protobuf::Arena* arena, const GetEntityResponse& from);
  GetEntityResponse(::google::protobuf::Arena* arena, GetEntityResponse&& from) noexcept
      : GetEntityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityFieldNumber = 1,
  };
  // .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
  bool has_entity() const;
  void clear_entity() ;
  const ::anduril::entitymanager::v1::Entity& entity() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_entity();
  ::anduril::entitymanager::v1::Entity* mutable_entity();
  void set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_entity();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_entity() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_entity();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.GetEntityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetEntityResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::Entity* entity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class EntityEvent final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.EntityEvent) */ {
 public:
  inline EntityEvent() : EntityEvent(nullptr) {}
  ~EntityEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EntityEvent* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EntityEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EntityEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline EntityEvent(const EntityEvent& from) : EntityEvent(nullptr, from) {}
  inline EntityEvent(EntityEvent&& from) noexcept
      : EntityEvent(nullptr, std::move(from)) {}
  inline EntityEvent& operator=(const EntityEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityEvent& operator=(EntityEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityEvent* internal_default_instance() {
    return reinterpret_cast<const EntityEvent*>(
        &_EntityEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(EntityEvent& a, EntityEvent& b) { a.Swap(&b); }
  inline void Swap(EntityEvent* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityEvent* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EntityEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EntityEvent& from) { EntityEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EntityEvent* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.EntityEvent"; }

 protected:
  explicit EntityEvent(::google::protobuf::Arena* arena);
  EntityEvent(::google::protobuf::Arena* arena, const EntityEvent& from);
  EntityEvent(::google::protobuf::Arena* arena, EntityEvent&& from) noexcept
      : EntityEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 2,
    kEntityFieldNumber = 3,
    kEventTypeFieldNumber = 1,
  };
  // .google.protobuf.Timestamp time = 2 [json_name = "time"];
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // .anduril.entitymanager.v1.Entity entity = 3 [json_name = "entity"];
  bool has_entity() const;
  void clear_entity() ;
  const ::anduril::entitymanager::v1::Entity& entity() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_entity();
  ::anduril::entitymanager::v1::Entity* mutable_entity();
  void set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_entity();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_entity() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_entity();

  public:
  // .anduril.entitymanager.v1.EventType event_type = 1 [json_name = "eventType"];
  void clear_event_type() ;
  ::anduril::entitymanager::v1::EventType event_type() const;
  void set_event_type(::anduril::entitymanager::v1::EventType value);

  private:
  ::anduril::entitymanager::v1::EventType _internal_event_type() const;
  void _internal_set_event_type(::anduril::entitymanager::v1::EventType value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.EntityEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EntityEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* time_;
    ::anduril::entitymanager::v1::Entity* entity_;
    int event_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};
// -------------------------------------------------------------------

class StreamEntityComponentsResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.StreamEntityComponentsResponse) */ {
 public:
  inline StreamEntityComponentsResponse() : StreamEntityComponentsResponse(nullptr) {}
  ~StreamEntityComponentsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamEntityComponentsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamEntityComponentsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamEntityComponentsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StreamEntityComponentsResponse(const StreamEntityComponentsResponse& from) : StreamEntityComponentsResponse(nullptr, from) {}
  inline StreamEntityComponentsResponse(StreamEntityComponentsResponse&& from) noexcept
      : StreamEntityComponentsResponse(nullptr, std::move(from)) {}
  inline StreamEntityComponentsResponse& operator=(const StreamEntityComponentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamEntityComponentsResponse& operator=(StreamEntityComponentsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamEntityComponentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamEntityComponentsResponse* internal_default_instance() {
    return reinterpret_cast<const StreamEntityComponentsResponse*>(
        &_StreamEntityComponentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(StreamEntityComponentsResponse& a, StreamEntityComponentsResponse& b) { a.Swap(&b); }
  inline void Swap(StreamEntityComponentsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamEntityComponentsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamEntityComponentsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamEntityComponentsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamEntityComponentsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamEntityComponentsResponse& from) { StreamEntityComponentsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamEntityComponentsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.StreamEntityComponentsResponse"; }

 protected:
  explicit StreamEntityComponentsResponse(::google::protobuf::Arena* arena);
  StreamEntityComponentsResponse(::google::protobuf::Arena* arena, const StreamEntityComponentsResponse& from);
  StreamEntityComponentsResponse(::google::protobuf::Arena* arena, StreamEntityComponentsResponse&& from) noexcept
      : StreamEntityComponentsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityEventFieldNumber = 1,
    kHeartbeatFieldNumber = 2,
  };
  // .anduril.entitymanager.v1.EntityEvent entity_event = 1 [json_name = "entityEvent"];
  bool has_entity_event() const;
  void clear_entity_event() ;
  const ::anduril::entitymanager::v1::EntityEvent& entity_event() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::EntityEvent* release_entity_event();
  ::anduril::entitymanager::v1::EntityEvent* mutable_entity_event();
  void set_allocated_entity_event(::anduril::entitymanager::v1::EntityEvent* value);
  void unsafe_arena_set_allocated_entity_event(::anduril::entitymanager::v1::EntityEvent* value);
  ::anduril::entitymanager::v1::EntityEvent* unsafe_arena_release_entity_event();

  private:
  const ::anduril::entitymanager::v1::EntityEvent& _internal_entity_event() const;
  ::anduril::entitymanager::v1::EntityEvent* _internal_mutable_entity_event();

  public:
  // .anduril.entitymanager.v1.Heartbeat heartbeat = 2 [json_name = "heartbeat"];
  bool has_heartbeat() const;
  void clear_heartbeat() ;
  const ::anduril::entitymanager::v1::Heartbeat& heartbeat() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Heartbeat* release_heartbeat();
  ::anduril::entitymanager::v1::Heartbeat* mutable_heartbeat();
  void set_allocated_heartbeat(::anduril::entitymanager::v1::Heartbeat* value);
  void unsafe_arena_set_allocated_heartbeat(::anduril::entitymanager::v1::Heartbeat* value);
  ::anduril::entitymanager::v1::Heartbeat* unsafe_arena_release_heartbeat();

  private:
  const ::anduril::entitymanager::v1::Heartbeat& _internal_heartbeat() const;
  ::anduril::entitymanager::v1::Heartbeat* _internal_mutable_heartbeat();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.StreamEntityComponentsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StreamEntityComponentsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::EntityEvent* entity_event_;
    ::anduril::entitymanager::v1::Heartbeat* heartbeat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PublishEntityRequest

// .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
inline bool PublishEntityRequest::has_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& PublishEntityRequest::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& PublishEntityRequest::entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PublishEntityRequest.entity)
  return _internal_entity();
}
inline void PublishEntityRequest::unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }
  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PublishEntityRequest.entity)
}
inline ::anduril::entitymanager::v1::Entity* PublishEntityRequest::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.entity_;
  _impl_.entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Entity* PublishEntityRequest::unsafe_arena_release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PublishEntityRequest.entity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.entity_;
  _impl_.entity_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* PublishEntityRequest::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.entity_;
}
inline ::anduril::entitymanager::v1::Entity* PublishEntityRequest::mutable_entity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PublishEntityRequest.entity)
  return _msg;
}
inline void PublishEntityRequest::set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PublishEntityRequest.entity)
}

// -------------------------------------------------------------------

// PublishEntityResponse

// -------------------------------------------------------------------

// PublishEntitiesRequest

// .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
inline bool PublishEntitiesRequest::has_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& PublishEntitiesRequest::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& PublishEntitiesRequest::entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PublishEntitiesRequest.entity)
  return _internal_entity();
}
inline void PublishEntitiesRequest::unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }
  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.PublishEntitiesRequest.entity)
}
inline ::anduril::entitymanager::v1::Entity* PublishEntitiesRequest::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.entity_;
  _impl_.entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Entity* PublishEntitiesRequest::unsafe_arena_release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PublishEntitiesRequest.entity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.entity_;
  _impl_.entity_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* PublishEntitiesRequest::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.entity_;
}
inline ::anduril::entitymanager::v1::Entity* PublishEntitiesRequest::mutable_entity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PublishEntitiesRequest.entity)
  return _msg;
}
inline void PublishEntitiesRequest::set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PublishEntitiesRequest.entity)
}

// -------------------------------------------------------------------

// PublishEntitiesResponse

// -------------------------------------------------------------------

// GetEntityRequest

// string entity_id = 1 [json_name = "entityId"];
inline void GetEntityRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
}
inline const std::string& GetEntityRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.GetEntityRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetEntityRequest::set_entity_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.GetEntityRequest.entity_id)
}
inline std::string* GetEntityRequest::mutable_entity_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.GetEntityRequest.entity_id)
  return _s;
}
inline const std::string& GetEntityRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void GetEntityRequest::_internal_set_entity_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(value, GetArena());
}
inline std::string* GetEntityRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_id_.Mutable( GetArena());
}
inline std::string* GetEntityRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.GetEntityRequest.entity_id)
  return _impl_.entity_id_.Release();
}
inline void GetEntityRequest::set_allocated_entity_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GetEntityRequest.entity_id)
}

// -------------------------------------------------------------------

// GetEntityResponse

// .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
inline bool GetEntityResponse::has_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& GetEntityResponse::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& GetEntityResponse::entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.GetEntityResponse.entity)
  return _internal_entity();
}
inline void GetEntityResponse::unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }
  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.GetEntityResponse.entity)
}
inline ::anduril::entitymanager::v1::Entity* GetEntityResponse::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.entity_;
  _impl_.entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Entity* GetEntityResponse::unsafe_arena_release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.GetEntityResponse.entity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.entity_;
  _impl_.entity_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* GetEntityResponse::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.entity_;
}
inline ::anduril::entitymanager::v1::Entity* GetEntityResponse::mutable_entity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.GetEntityResponse.entity)
  return _msg;
}
inline void GetEntityResponse::set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GetEntityResponse.entity)
}

// -------------------------------------------------------------------

// OverrideEntityRequest

// .anduril.entitymanager.v1.Entity entity = 1 [json_name = "entity"];
inline bool OverrideEntityRequest::has_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& OverrideEntityRequest::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& OverrideEntityRequest::entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.OverrideEntityRequest.entity)
  return _internal_entity();
}
inline void OverrideEntityRequest::unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }
  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.OverrideEntityRequest.entity)
}
inline ::anduril::entitymanager::v1::Entity* OverrideEntityRequest::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.entity_;
  _impl_.entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Entity* OverrideEntityRequest::unsafe_arena_release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.OverrideEntityRequest.entity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.entity_;
  _impl_.entity_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* OverrideEntityRequest::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.entity_;
}
inline ::anduril::entitymanager::v1::Entity* OverrideEntityRequest::mutable_entity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.OverrideEntityRequest.entity)
  return _msg;
}
inline void OverrideEntityRequest::set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.OverrideEntityRequest.entity)
}

// repeated string field_path = 2 [json_name = "fieldPath"];
inline int OverrideEntityRequest::_internal_field_path_size() const {
  return _internal_field_path().size();
}
inline int OverrideEntityRequest::field_path_size() const {
  return _internal_field_path_size();
}
inline void OverrideEntityRequest::clear_field_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_path_.Clear();
}
inline std::string* OverrideEntityRequest::add_field_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_field_path()->Add();
  // @@protoc_insertion_point(field_add_mutable:anduril.entitymanager.v1.OverrideEntityRequest.field_path)
  return _s;
}
inline const std::string& OverrideEntityRequest::field_path(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.OverrideEntityRequest.field_path)
  return _internal_field_path().Get(index);
}
inline std::string* OverrideEntityRequest::mutable_field_path(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.OverrideEntityRequest.field_path)
  return _internal_mutable_field_path()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OverrideEntityRequest::set_field_path(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_field_path()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.OverrideEntityRequest.field_path)
}
template <typename Arg_, typename... Args_>
inline void OverrideEntityRequest::add_field_path(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_field_path(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.OverrideEntityRequest.field_path)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OverrideEntityRequest::field_path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.OverrideEntityRequest.field_path)
  return _internal_field_path();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OverrideEntityRequest::mutable_field_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.OverrideEntityRequest.field_path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_field_path();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OverrideEntityRequest::_internal_field_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_path_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OverrideEntityRequest::_internal_mutable_field_path() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.field_path_;
}

// .anduril.entitymanager.v1.Provenance provenance = 3 [json_name = "provenance"];
inline bool OverrideEntityRequest::has_provenance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.provenance_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Provenance& OverrideEntityRequest::_internal_provenance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Provenance* p = _impl_.provenance_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Provenance&>(::anduril::entitymanager::v1::_Provenance_default_instance_);
}
inline const ::anduril::entitymanager::v1::Provenance& OverrideEntityRequest::provenance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.OverrideEntityRequest.provenance)
  return _internal_provenance();
}
inline void OverrideEntityRequest::unsafe_arena_set_allocated_provenance(::anduril::entitymanager::v1::Provenance* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.provenance_);
  }
  _impl_.provenance_ = reinterpret_cast<::anduril::entitymanager::v1::Provenance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.OverrideEntityRequest.provenance)
}
inline ::anduril::entitymanager::v1::Provenance* OverrideEntityRequest::release_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Provenance* released = _impl_.provenance_;
  _impl_.provenance_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Provenance* OverrideEntityRequest::unsafe_arena_release_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.OverrideEntityRequest.provenance)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Provenance* temp = _impl_.provenance_;
  _impl_.provenance_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Provenance* OverrideEntityRequest::_internal_mutable_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.provenance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Provenance>(GetArena());
    _impl_.provenance_ = reinterpret_cast<::anduril::entitymanager::v1::Provenance*>(p);
  }
  return _impl_.provenance_;
}
inline ::anduril::entitymanager::v1::Provenance* OverrideEntityRequest::mutable_provenance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Provenance* _msg = _internal_mutable_provenance();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.OverrideEntityRequest.provenance)
  return _msg;
}
inline void OverrideEntityRequest::set_allocated_provenance(::anduril::entitymanager::v1::Provenance* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.provenance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.provenance_ = reinterpret_cast<::anduril::entitymanager::v1::Provenance*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.OverrideEntityRequest.provenance)
}

// -------------------------------------------------------------------

// OverrideEntityResponse

// .anduril.entitymanager.v1.OverrideStatus status = 1 [json_name = "status"];
inline void OverrideEntityResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::anduril::entitymanager::v1::OverrideStatus OverrideEntityResponse::status() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.OverrideEntityResponse.status)
  return _internal_status();
}
inline void OverrideEntityResponse::set_status(::anduril::entitymanager::v1::OverrideStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.OverrideEntityResponse.status)
}
inline ::anduril::entitymanager::v1::OverrideStatus OverrideEntityResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::OverrideStatus>(_impl_.status_);
}
inline void OverrideEntityResponse::_internal_set_status(::anduril::entitymanager::v1::OverrideStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// RemoveEntityOverrideRequest

// string entity_id = 1 [json_name = "entityId"];
inline void RemoveEntityOverrideRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
}
inline const std::string& RemoveEntityOverrideRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.RemoveEntityOverrideRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveEntityOverrideRequest::set_entity_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.RemoveEntityOverrideRequest.entity_id)
}
inline std::string* RemoveEntityOverrideRequest::mutable_entity_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.RemoveEntityOverrideRequest.entity_id)
  return _s;
}
inline const std::string& RemoveEntityOverrideRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void RemoveEntityOverrideRequest::_internal_set_entity_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(value, GetArena());
}
inline std::string* RemoveEntityOverrideRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_id_.Mutable( GetArena());
}
inline std::string* RemoveEntityOverrideRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.RemoveEntityOverrideRequest.entity_id)
  return _impl_.entity_id_.Release();
}
inline void RemoveEntityOverrideRequest::set_allocated_entity_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.RemoveEntityOverrideRequest.entity_id)
}

// repeated string field_path = 2 [json_name = "fieldPath"];
inline int RemoveEntityOverrideRequest::_internal_field_path_size() const {
  return _internal_field_path().size();
}
inline int RemoveEntityOverrideRequest::field_path_size() const {
  return _internal_field_path_size();
}
inline void RemoveEntityOverrideRequest::clear_field_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_path_.Clear();
}
inline std::string* RemoveEntityOverrideRequest::add_field_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_field_path()->Add();
  // @@protoc_insertion_point(field_add_mutable:anduril.entitymanager.v1.RemoveEntityOverrideRequest.field_path)
  return _s;
}
inline const std::string& RemoveEntityOverrideRequest::field_path(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.RemoveEntityOverrideRequest.field_path)
  return _internal_field_path().Get(index);
}
inline std::string* RemoveEntityOverrideRequest::mutable_field_path(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.RemoveEntityOverrideRequest.field_path)
  return _internal_mutable_field_path()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RemoveEntityOverrideRequest::set_field_path(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_field_path()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.RemoveEntityOverrideRequest.field_path)
}
template <typename Arg_, typename... Args_>
inline void RemoveEntityOverrideRequest::add_field_path(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_field_path(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.RemoveEntityOverrideRequest.field_path)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RemoveEntityOverrideRequest::field_path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.RemoveEntityOverrideRequest.field_path)
  return _internal_field_path();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RemoveEntityOverrideRequest::mutable_field_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.RemoveEntityOverrideRequest.field_path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_field_path();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RemoveEntityOverrideRequest::_internal_field_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_path_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RemoveEntityOverrideRequest::_internal_mutable_field_path() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.field_path_;
}

// -------------------------------------------------------------------

// RemoveEntityOverrideResponse

// -------------------------------------------------------------------

// StreamEntityComponentsRequest

// repeated string components_to_include = 1 [json_name = "componentsToInclude"];
inline int StreamEntityComponentsRequest::_internal_components_to_include_size() const {
  return _internal_components_to_include().size();
}
inline int StreamEntityComponentsRequest::components_to_include_size() const {
  return _internal_components_to_include_size();
}
inline void StreamEntityComponentsRequest::clear_components_to_include() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.components_to_include_.Clear();
}
inline std::string* StreamEntityComponentsRequest::add_components_to_include() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_components_to_include()->Add();
  // @@protoc_insertion_point(field_add_mutable:anduril.entitymanager.v1.StreamEntityComponentsRequest.components_to_include)
  return _s;
}
inline const std::string& StreamEntityComponentsRequest::components_to_include(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsRequest.components_to_include)
  return _internal_components_to_include().Get(index);
}
inline std::string* StreamEntityComponentsRequest::mutable_components_to_include(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.StreamEntityComponentsRequest.components_to_include)
  return _internal_mutable_components_to_include()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void StreamEntityComponentsRequest::set_components_to_include(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_components_to_include()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.StreamEntityComponentsRequest.components_to_include)
}
template <typename Arg_, typename... Args_>
inline void StreamEntityComponentsRequest::add_components_to_include(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_components_to_include(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.StreamEntityComponentsRequest.components_to_include)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StreamEntityComponentsRequest::components_to_include() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.StreamEntityComponentsRequest.components_to_include)
  return _internal_components_to_include();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StreamEntityComponentsRequest::mutable_components_to_include() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.StreamEntityComponentsRequest.components_to_include)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_components_to_include();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StreamEntityComponentsRequest::_internal_components_to_include() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.components_to_include_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StreamEntityComponentsRequest::_internal_mutable_components_to_include() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.components_to_include_;
}

// bool include_all_components = 2 [json_name = "includeAllComponents"];
inline void StreamEntityComponentsRequest::clear_include_all_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_all_components_ = false;
}
inline bool StreamEntityComponentsRequest::include_all_components() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsRequest.include_all_components)
  return _internal_include_all_components();
}
inline void StreamEntityComponentsRequest::set_include_all_components(bool value) {
  _internal_set_include_all_components(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.StreamEntityComponentsRequest.include_all_components)
}
inline bool StreamEntityComponentsRequest::_internal_include_all_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_all_components_;
}
inline void StreamEntityComponentsRequest::_internal_set_include_all_components(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_all_components_ = value;
}

// .anduril.entitymanager.v1.Statement filter = 3 [json_name = "filter"];
inline bool StreamEntityComponentsRequest::has_filter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filter_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Statement& StreamEntityComponentsRequest::_internal_filter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Statement* p = _impl_.filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Statement&>(::anduril::entitymanager::v1::_Statement_default_instance_);
}
inline const ::anduril::entitymanager::v1::Statement& StreamEntityComponentsRequest::filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsRequest.filter)
  return _internal_filter();
}
inline void StreamEntityComponentsRequest::unsafe_arena_set_allocated_filter(::anduril::entitymanager::v1::Statement* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filter_);
  }
  _impl_.filter_ = reinterpret_cast<::anduril::entitymanager::v1::Statement*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsRequest.filter)
}
inline ::anduril::entitymanager::v1::Statement* StreamEntityComponentsRequest::release_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Statement* released = _impl_.filter_;
  _impl_.filter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Statement* StreamEntityComponentsRequest::unsafe_arena_release_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.StreamEntityComponentsRequest.filter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Statement* temp = _impl_.filter_;
  _impl_.filter_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Statement* StreamEntityComponentsRequest::_internal_mutable_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Statement>(GetArena());
    _impl_.filter_ = reinterpret_cast<::anduril::entitymanager::v1::Statement*>(p);
  }
  return _impl_.filter_;
}
inline ::anduril::entitymanager::v1::Statement* StreamEntityComponentsRequest::mutable_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Statement* _msg = _internal_mutable_filter();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.StreamEntityComponentsRequest.filter)
  return _msg;
}
inline void StreamEntityComponentsRequest::set_allocated_filter(::anduril::entitymanager::v1::Statement* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filter_ = reinterpret_cast<::anduril::entitymanager::v1::Statement*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsRequest.filter)
}

// .anduril.entitymanager.v1.RateLimit rate_limit = 4 [json_name = "rateLimit"];
inline bool StreamEntityComponentsRequest::has_rate_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rate_limit_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::RateLimit& StreamEntityComponentsRequest::_internal_rate_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::RateLimit* p = _impl_.rate_limit_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::RateLimit&>(::anduril::entitymanager::v1::_RateLimit_default_instance_);
}
inline const ::anduril::entitymanager::v1::RateLimit& StreamEntityComponentsRequest::rate_limit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsRequest.rate_limit)
  return _internal_rate_limit();
}
inline void StreamEntityComponentsRequest::unsafe_arena_set_allocated_rate_limit(::anduril::entitymanager::v1::RateLimit* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rate_limit_);
  }
  _impl_.rate_limit_ = reinterpret_cast<::anduril::entitymanager::v1::RateLimit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsRequest.rate_limit)
}
inline ::anduril::entitymanager::v1::RateLimit* StreamEntityComponentsRequest::release_rate_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::RateLimit* released = _impl_.rate_limit_;
  _impl_.rate_limit_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::RateLimit* StreamEntityComponentsRequest::unsafe_arena_release_rate_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.StreamEntityComponentsRequest.rate_limit)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::RateLimit* temp = _impl_.rate_limit_;
  _impl_.rate_limit_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::RateLimit* StreamEntityComponentsRequest::_internal_mutable_rate_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rate_limit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::RateLimit>(GetArena());
    _impl_.rate_limit_ = reinterpret_cast<::anduril::entitymanager::v1::RateLimit*>(p);
  }
  return _impl_.rate_limit_;
}
inline ::anduril::entitymanager::v1::RateLimit* StreamEntityComponentsRequest::mutable_rate_limit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::RateLimit* _msg = _internal_mutable_rate_limit();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.StreamEntityComponentsRequest.rate_limit)
  return _msg;
}
inline void StreamEntityComponentsRequest::set_allocated_rate_limit(::anduril::entitymanager::v1::RateLimit* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rate_limit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.rate_limit_ = reinterpret_cast<::anduril::entitymanager::v1::RateLimit*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsRequest.rate_limit)
}

// uint32 heartbeat_period_millis = 5 [json_name = "heartbeatPeriodMillis"];
inline void StreamEntityComponentsRequest::clear_heartbeat_period_millis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_period_millis_ = 0u;
}
inline ::uint32_t StreamEntityComponentsRequest::heartbeat_period_millis() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsRequest.heartbeat_period_millis)
  return _internal_heartbeat_period_millis();
}
inline void StreamEntityComponentsRequest::set_heartbeat_period_millis(::uint32_t value) {
  _internal_set_heartbeat_period_millis(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.StreamEntityComponentsRequest.heartbeat_period_millis)
}
inline ::uint32_t StreamEntityComponentsRequest::_internal_heartbeat_period_millis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heartbeat_period_millis_;
}
inline void StreamEntityComponentsRequest::_internal_set_heartbeat_period_millis(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_period_millis_ = value;
}

// bool preexisting_only = 6 [json_name = "preexistingOnly"];
inline void StreamEntityComponentsRequest::clear_preexisting_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preexisting_only_ = false;
}
inline bool StreamEntityComponentsRequest::preexisting_only() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsRequest.preexisting_only)
  return _internal_preexisting_only();
}
inline void StreamEntityComponentsRequest::set_preexisting_only(bool value) {
  _internal_set_preexisting_only(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.StreamEntityComponentsRequest.preexisting_only)
}
inline bool StreamEntityComponentsRequest::_internal_preexisting_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preexisting_only_;
}
inline void StreamEntityComponentsRequest::_internal_set_preexisting_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preexisting_only_ = value;
}

// -------------------------------------------------------------------

// StreamEntityComponentsResponse

// .anduril.entitymanager.v1.EntityEvent entity_event = 1 [json_name = "entityEvent"];
inline bool StreamEntityComponentsResponse::has_entity_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_event_ != nullptr);
  return value;
}
inline void StreamEntityComponentsResponse::clear_entity_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_event_ != nullptr) _impl_.entity_event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::EntityEvent& StreamEntityComponentsResponse::_internal_entity_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::EntityEvent* p = _impl_.entity_event_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::EntityEvent&>(::anduril::entitymanager::v1::_EntityEvent_default_instance_);
}
inline const ::anduril::entitymanager::v1::EntityEvent& StreamEntityComponentsResponse::entity_event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsResponse.entity_event)
  return _internal_entity_event();
}
inline void StreamEntityComponentsResponse::unsafe_arena_set_allocated_entity_event(::anduril::entitymanager::v1::EntityEvent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_event_);
  }
  _impl_.entity_event_ = reinterpret_cast<::anduril::entitymanager::v1::EntityEvent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsResponse.entity_event)
}
inline ::anduril::entitymanager::v1::EntityEvent* StreamEntityComponentsResponse::release_entity_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::EntityEvent* released = _impl_.entity_event_;
  _impl_.entity_event_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::EntityEvent* StreamEntityComponentsResponse::unsafe_arena_release_entity_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.StreamEntityComponentsResponse.entity_event)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::EntityEvent* temp = _impl_.entity_event_;
  _impl_.entity_event_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::EntityEvent* StreamEntityComponentsResponse::_internal_mutable_entity_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_event_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::EntityEvent>(GetArena());
    _impl_.entity_event_ = reinterpret_cast<::anduril::entitymanager::v1::EntityEvent*>(p);
  }
  return _impl_.entity_event_;
}
inline ::anduril::entitymanager::v1::EntityEvent* StreamEntityComponentsResponse::mutable_entity_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::EntityEvent* _msg = _internal_mutable_entity_event();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.StreamEntityComponentsResponse.entity_event)
  return _msg;
}
inline void StreamEntityComponentsResponse::set_allocated_entity_event(::anduril::entitymanager::v1::EntityEvent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.entity_event_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.entity_event_ = reinterpret_cast<::anduril::entitymanager::v1::EntityEvent*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsResponse.entity_event)
}

// .anduril.entitymanager.v1.Heartbeat heartbeat = 2 [json_name = "heartbeat"];
inline bool StreamEntityComponentsResponse::has_heartbeat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.heartbeat_ != nullptr);
  return value;
}
inline void StreamEntityComponentsResponse::clear_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.heartbeat_ != nullptr) _impl_.heartbeat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::anduril::entitymanager::v1::Heartbeat& StreamEntityComponentsResponse::_internal_heartbeat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Heartbeat* p = _impl_.heartbeat_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Heartbeat&>(::anduril::entitymanager::v1::_Heartbeat_default_instance_);
}
inline const ::anduril::entitymanager::v1::Heartbeat& StreamEntityComponentsResponse::heartbeat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.StreamEntityComponentsResponse.heartbeat)
  return _internal_heartbeat();
}
inline void StreamEntityComponentsResponse::unsafe_arena_set_allocated_heartbeat(::anduril::entitymanager::v1::Heartbeat* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.heartbeat_);
  }
  _impl_.heartbeat_ = reinterpret_cast<::anduril::entitymanager::v1::Heartbeat*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsResponse.heartbeat)
}
inline ::anduril::entitymanager::v1::Heartbeat* StreamEntityComponentsResponse::release_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Heartbeat* released = _impl_.heartbeat_;
  _impl_.heartbeat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Heartbeat* StreamEntityComponentsResponse::unsafe_arena_release_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.StreamEntityComponentsResponse.heartbeat)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Heartbeat* temp = _impl_.heartbeat_;
  _impl_.heartbeat_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Heartbeat* StreamEntityComponentsResponse::_internal_mutable_heartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.heartbeat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Heartbeat>(GetArena());
    _impl_.heartbeat_ = reinterpret_cast<::anduril::entitymanager::v1::Heartbeat*>(p);
  }
  return _impl_.heartbeat_;
}
inline ::anduril::entitymanager::v1::Heartbeat* StreamEntityComponentsResponse::mutable_heartbeat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Heartbeat* _msg = _internal_mutable_heartbeat();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.StreamEntityComponentsResponse.heartbeat)
  return _msg;
}
inline void StreamEntityComponentsResponse::set_allocated_heartbeat(::anduril::entitymanager::v1::Heartbeat* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.heartbeat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.heartbeat_ = reinterpret_cast<::anduril::entitymanager::v1::Heartbeat*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.StreamEntityComponentsResponse.heartbeat)
}

// -------------------------------------------------------------------

// EntityEvent

// .anduril.entitymanager.v1.EventType event_type = 1 [json_name = "eventType"];
inline void EntityEvent::clear_event_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_type_ = 0;
}
inline ::anduril::entitymanager::v1::EventType EntityEvent::event_type() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.EntityEvent.event_type)
  return _internal_event_type();
}
inline void EntityEvent::set_event_type(::anduril::entitymanager::v1::EventType value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.EntityEvent.event_type)
}
inline ::anduril::entitymanager::v1::EventType EntityEvent::_internal_event_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::EventType>(_impl_.event_type_);
}
inline void EntityEvent::_internal_set_event_type(::anduril::entitymanager::v1::EventType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_type_ = value;
}

// .google.protobuf.Timestamp time = 2 [json_name = "time"];
inline bool EntityEvent::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EntityEvent::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EntityEvent::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.EntityEvent.time)
  return _internal_time();
}
inline void EntityEvent::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.EntityEvent.time)
}
inline ::google::protobuf::Timestamp* EntityEvent::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* EntityEvent::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.EntityEvent.time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EntityEvent::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* EntityEvent::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.EntityEvent.time)
  return _msg;
}
inline void EntityEvent::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.EntityEvent.time)
}

// .anduril.entitymanager.v1.Entity entity = 3 [json_name = "entity"];
inline bool EntityEvent::has_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& EntityEvent::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& EntityEvent::entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.EntityEvent.entity)
  return _internal_entity();
}
inline void EntityEvent::unsafe_arena_set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }
  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.EntityEvent.entity)
}
inline ::anduril::entitymanager::v1::Entity* EntityEvent::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.entity_;
  _impl_.entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Entity* EntityEvent::unsafe_arena_release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.EntityEvent.entity)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.entity_;
  _impl_.entity_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* EntityEvent::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.entity_;
}
inline ::anduril::entitymanager::v1::Entity* EntityEvent::mutable_entity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.EntityEvent.entity)
  return _msg;
}
inline void EntityEvent::set_allocated_entity(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.entity_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.EntityEvent.entity)
}

// -------------------------------------------------------------------

// Heartbeat

// .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
inline bool Heartbeat::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Heartbeat::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Heartbeat::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Heartbeat.timestamp)
  return _internal_timestamp();
}
inline void Heartbeat::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.Heartbeat.timestamp)
}
inline ::google::protobuf::Timestamp* Heartbeat::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Heartbeat::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Heartbeat.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Heartbeat::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* Heartbeat::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Heartbeat.timestamp)
  return _msg;
}
inline void Heartbeat::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Heartbeat.timestamp)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::entitymanager::v1::EventType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::EventType>() {
  return ::anduril::entitymanager::v1::EventType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fgrpcapi_2epub_2eproto_2epb_2eh
