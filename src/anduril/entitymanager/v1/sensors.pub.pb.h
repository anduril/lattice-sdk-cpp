// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/sensors.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_2epb_2eh
#define anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "anduril/entitymanager/v1/location.pub.pb.h"
#include "anduril/entitymanager/v1/signal.pub.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/wrappers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class Bandwidth;
struct BandwidthDefaultTypeInternal;
extern BandwidthDefaultTypeInternal _Bandwidth_default_instance_;
class BandwidthRange;
struct BandwidthRangeDefaultTypeInternal;
extern BandwidthRangeDefaultTypeInternal _BandwidthRange_default_instance_;
class FieldOfView;
struct FieldOfViewDefaultTypeInternal;
extern FieldOfViewDefaultTypeInternal _FieldOfView_default_instance_;
class ProjectedFrustum;
struct ProjectedFrustumDefaultTypeInternal;
extern ProjectedFrustumDefaultTypeInternal _ProjectedFrustum_default_instance_;
class RFConfiguration;
struct RFConfigurationDefaultTypeInternal;
extern RFConfigurationDefaultTypeInternal _RFConfiguration_default_instance_;
class Sensor;
struct SensorDefaultTypeInternal;
extern SensorDefaultTypeInternal _Sensor_default_instance_;
class Sensors;
struct SensorsDefaultTypeInternal;
extern SensorsDefaultTypeInternal _Sensors_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {
enum OperationalState : int {
  OPERATIONAL_STATE_INVALID = 0,
  OPERATIONAL_STATE_OFF = 1,
  OPERATIONAL_STATE_NON_OPERATIONAL = 2,
  OPERATIONAL_STATE_DEGRADED = 3,
  OPERATIONAL_STATE_OPERATIONAL = 4,
  OPERATIONAL_STATE_DENIED = 5,
  OperationalState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OperationalState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OperationalState_IsValid(int value);
extern const uint32_t OperationalState_internal_data_[];
constexpr OperationalState OperationalState_MIN = static_cast<OperationalState>(0);
constexpr OperationalState OperationalState_MAX = static_cast<OperationalState>(5);
constexpr int OperationalState_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
OperationalState_descriptor();
template <typename T>
const std::string& OperationalState_Name(T value) {
  static_assert(std::is_same<T, OperationalState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OperationalState_Name().");
  return OperationalState_Name(static_cast<OperationalState>(value));
}
template <>
inline const std::string& OperationalState_Name(OperationalState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OperationalState_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool OperationalState_Parse(absl::string_view name, OperationalState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationalState>(
      OperationalState_descriptor(), name, value);
}
enum SensorMode : int {
  SENSOR_MODE_INVALID = 0,
  SENSOR_MODE_SEARCH = 1,
  SENSOR_MODE_TRACK = 2,
  SENSOR_MODE_WEAPON_SUPPORT = 3,
  SENSOR_MODE_AUTO = 4,
  SENSOR_MODE_MUTE = 5,
  SensorMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SensorMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SensorMode_IsValid(int value);
extern const uint32_t SensorMode_internal_data_[];
constexpr SensorMode SensorMode_MIN = static_cast<SensorMode>(0);
constexpr SensorMode SensorMode_MAX = static_cast<SensorMode>(5);
constexpr int SensorMode_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
SensorMode_descriptor();
template <typename T>
const std::string& SensorMode_Name(T value) {
  static_assert(std::is_same<T, SensorMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SensorMode_Name().");
  return SensorMode_Name(static_cast<SensorMode>(value));
}
template <>
inline const std::string& SensorMode_Name(SensorMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SensorMode_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool SensorMode_Parse(absl::string_view name, SensorMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SensorMode>(
      SensorMode_descriptor(), name, value);
}
enum SensorType : int {
  SENSOR_TYPE_INVALID = 0,
  SENSOR_TYPE_RADAR = 1,
  SENSOR_TYPE_CAMERA = 2,
  SENSOR_TYPE_TRANSPONDER = 3,
  SENSOR_TYPE_RF = 4,
  SENSOR_TYPE_GPS = 5,
  SENSOR_TYPE_PTU_POS = 6,
  SENSOR_TYPE_PERIMETER = 8,
  SENSOR_TYPE_SONAR = 9,
  SensorType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SensorType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SensorType_IsValid(int value);
extern const uint32_t SensorType_internal_data_[];
constexpr SensorType SensorType_MIN = static_cast<SensorType>(0);
constexpr SensorType SensorType_MAX = static_cast<SensorType>(9);
constexpr int SensorType_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
SensorType_descriptor();
template <typename T>
const std::string& SensorType_Name(T value) {
  static_assert(std::is_same<T, SensorType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SensorType_Name().");
  return SensorType_Name(static_cast<SensorType>(value));
}
template <>
inline const std::string& SensorType_Name(SensorType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SensorType_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool SensorType_Parse(absl::string_view name, SensorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SensorType>(
      SensorType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Bandwidth final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Bandwidth) */ {
 public:
  inline Bandwidth() : Bandwidth(nullptr) {}
  ~Bandwidth() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Bandwidth* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Bandwidth));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Bandwidth(
      ::google::protobuf::internal::ConstantInitialized);

  inline Bandwidth(const Bandwidth& from) : Bandwidth(nullptr, from) {}
  inline Bandwidth(Bandwidth&& from) noexcept
      : Bandwidth(nullptr, std::move(from)) {}
  inline Bandwidth& operator=(const Bandwidth& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bandwidth& operator=(Bandwidth&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Bandwidth& default_instance() {
    return *internal_default_instance();
  }
  static inline const Bandwidth* internal_default_instance() {
    return reinterpret_cast<const Bandwidth*>(
        &_Bandwidth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Bandwidth& a, Bandwidth& b) { a.Swap(&b); }
  inline void Swap(Bandwidth* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bandwidth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Bandwidth* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Bandwidth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Bandwidth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Bandwidth& from) { Bandwidth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Bandwidth* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Bandwidth"; }

 protected:
  explicit Bandwidth(::google::protobuf::Arena* arena);
  Bandwidth(::google::protobuf::Arena* arena, const Bandwidth& from);
  Bandwidth(::google::protobuf::Arena* arena, Bandwidth&& from) noexcept
      : Bandwidth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBandwidthHzFieldNumber = 1,
  };
  // .google.protobuf.DoubleValue bandwidth_hz = 1 [json_name = "bandwidthHz"];
  bool has_bandwidth_hz() const;
  void clear_bandwidth_hz() ;
  const ::google::protobuf::DoubleValue& bandwidth_hz() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_bandwidth_hz();
  ::google::protobuf::DoubleValue* mutable_bandwidth_hz();
  void set_allocated_bandwidth_hz(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_bandwidth_hz(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_bandwidth_hz();

  private:
  const ::google::protobuf::DoubleValue& _internal_bandwidth_hz() const;
  ::google::protobuf::DoubleValue* _internal_mutable_bandwidth_hz();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Bandwidth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Bandwidth& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::DoubleValue* bandwidth_hz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
};
// -------------------------------------------------------------------

class ProjectedFrustum final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.ProjectedFrustum) */ {
 public:
  inline ProjectedFrustum() : ProjectedFrustum(nullptr) {}
  ~ProjectedFrustum() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProjectedFrustum* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProjectedFrustum));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProjectedFrustum(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProjectedFrustum(const ProjectedFrustum& from) : ProjectedFrustum(nullptr, from) {}
  inline ProjectedFrustum(ProjectedFrustum&& from) noexcept
      : ProjectedFrustum(nullptr, std::move(from)) {}
  inline ProjectedFrustum& operator=(const ProjectedFrustum& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProjectedFrustum& operator=(ProjectedFrustum&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProjectedFrustum& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProjectedFrustum* internal_default_instance() {
    return reinterpret_cast<const ProjectedFrustum*>(
        &_ProjectedFrustum_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ProjectedFrustum& a, ProjectedFrustum& b) { a.Swap(&b); }
  inline void Swap(ProjectedFrustum* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProjectedFrustum* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProjectedFrustum* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProjectedFrustum>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProjectedFrustum& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProjectedFrustum& from) { ProjectedFrustum::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProjectedFrustum* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.ProjectedFrustum"; }

 protected:
  explicit ProjectedFrustum(::google::protobuf::Arena* arena);
  ProjectedFrustum(::google::protobuf::Arena* arena, const ProjectedFrustum& from);
  ProjectedFrustum(::google::protobuf::Arena* arena, ProjectedFrustum&& from) noexcept
      : ProjectedFrustum(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpperLeftFieldNumber = 1,
    kUpperRightFieldNumber = 2,
    kBottomRightFieldNumber = 3,
    kBottomLeftFieldNumber = 4,
  };
  // .anduril.entitymanager.v1.Position upper_left = 1 [json_name = "upperLeft"];
  bool has_upper_left() const;
  void clear_upper_left() ;
  const ::anduril::entitymanager::v1::Position& upper_left() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Position* release_upper_left();
  ::anduril::entitymanager::v1::Position* mutable_upper_left();
  void set_allocated_upper_left(::anduril::entitymanager::v1::Position* value);
  void unsafe_arena_set_allocated_upper_left(::anduril::entitymanager::v1::Position* value);
  ::anduril::entitymanager::v1::Position* unsafe_arena_release_upper_left();

  private:
  const ::anduril::entitymanager::v1::Position& _internal_upper_left() const;
  ::anduril::entitymanager::v1::Position* _internal_mutable_upper_left();

  public:
  // .anduril.entitymanager.v1.Position upper_right = 2 [json_name = "upperRight"];
  bool has_upper_right() const;
  void clear_upper_right() ;
  const ::anduril::entitymanager::v1::Position& upper_right() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Position* release_upper_right();
  ::anduril::entitymanager::v1::Position* mutable_upper_right();
  void set_allocated_upper_right(::anduril::entitymanager::v1::Position* value);
  void unsafe_arena_set_allocated_upper_right(::anduril::entitymanager::v1::Position* value);
  ::anduril::entitymanager::v1::Position* unsafe_arena_release_upper_right();

  private:
  const ::anduril::entitymanager::v1::Position& _internal_upper_right() const;
  ::anduril::entitymanager::v1::Position* _internal_mutable_upper_right();

  public:
  // .anduril.entitymanager.v1.Position bottom_right = 3 [json_name = "bottomRight"];
  bool has_bottom_right() const;
  void clear_bottom_right() ;
  const ::anduril::entitymanager::v1::Position& bottom_right() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Position* release_bottom_right();
  ::anduril::entitymanager::v1::Position* mutable_bottom_right();
  void set_allocated_bottom_right(::anduril::entitymanager::v1::Position* value);
  void unsafe_arena_set_allocated_bottom_right(::anduril::entitymanager::v1::Position* value);
  ::anduril::entitymanager::v1::Position* unsafe_arena_release_bottom_right();

  private:
  const ::anduril::entitymanager::v1::Position& _internal_bottom_right() const;
  ::anduril::entitymanager::v1::Position* _internal_mutable_bottom_right();

  public:
  // .anduril.entitymanager.v1.Position bottom_left = 4 [json_name = "bottomLeft"];
  bool has_bottom_left() const;
  void clear_bottom_left() ;
  const ::anduril::entitymanager::v1::Position& bottom_left() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Position* release_bottom_left();
  ::anduril::entitymanager::v1::Position* mutable_bottom_left();
  void set_allocated_bottom_left(::anduril::entitymanager::v1::Position* value);
  void unsafe_arena_set_allocated_bottom_left(::anduril::entitymanager::v1::Position* value);
  ::anduril::entitymanager::v1::Position* unsafe_arena_release_bottom_left();

  private:
  const ::anduril::entitymanager::v1::Position& _internal_bottom_left() const;
  ::anduril::entitymanager::v1::Position* _internal_mutable_bottom_left();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.ProjectedFrustum)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProjectedFrustum& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::Position* upper_left_;
    ::anduril::entitymanager::v1::Position* upper_right_;
    ::anduril::entitymanager::v1::Position* bottom_right_;
    ::anduril::entitymanager::v1::Position* bottom_left_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
};
// -------------------------------------------------------------------

class BandwidthRange final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.BandwidthRange) */ {
 public:
  inline BandwidthRange() : BandwidthRange(nullptr) {}
  ~BandwidthRange() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BandwidthRange* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BandwidthRange));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BandwidthRange(
      ::google::protobuf::internal::ConstantInitialized);

  inline BandwidthRange(const BandwidthRange& from) : BandwidthRange(nullptr, from) {}
  inline BandwidthRange(BandwidthRange&& from) noexcept
      : BandwidthRange(nullptr, std::move(from)) {}
  inline BandwidthRange& operator=(const BandwidthRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline BandwidthRange& operator=(BandwidthRange&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BandwidthRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const BandwidthRange* internal_default_instance() {
    return reinterpret_cast<const BandwidthRange*>(
        &_BandwidthRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(BandwidthRange& a, BandwidthRange& b) { a.Swap(&b); }
  inline void Swap(BandwidthRange* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BandwidthRange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BandwidthRange* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BandwidthRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BandwidthRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BandwidthRange& from) { BandwidthRange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BandwidthRange* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.BandwidthRange"; }

 protected:
  explicit BandwidthRange(::google::protobuf::Arena* arena);
  BandwidthRange(::google::protobuf::Arena* arena, const BandwidthRange& from);
  BandwidthRange(::google::protobuf::Arena* arena, BandwidthRange&& from) noexcept
      : BandwidthRange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinimumBandwidthFieldNumber = 1,
    kMaximumBandwidthFieldNumber = 2,
  };
  // .anduril.entitymanager.v1.Bandwidth minimum_bandwidth = 1 [json_name = "minimumBandwidth"];
  bool has_minimum_bandwidth() const;
  void clear_minimum_bandwidth() ;
  const ::anduril::entitymanager::v1::Bandwidth& minimum_bandwidth() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Bandwidth* release_minimum_bandwidth();
  ::anduril::entitymanager::v1::Bandwidth* mutable_minimum_bandwidth();
  void set_allocated_minimum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value);
  void unsafe_arena_set_allocated_minimum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value);
  ::anduril::entitymanager::v1::Bandwidth* unsafe_arena_release_minimum_bandwidth();

  private:
  const ::anduril::entitymanager::v1::Bandwidth& _internal_minimum_bandwidth() const;
  ::anduril::entitymanager::v1::Bandwidth* _internal_mutable_minimum_bandwidth();

  public:
  // .anduril.entitymanager.v1.Bandwidth maximum_bandwidth = 2 [json_name = "maximumBandwidth"];
  bool has_maximum_bandwidth() const;
  void clear_maximum_bandwidth() ;
  const ::anduril::entitymanager::v1::Bandwidth& maximum_bandwidth() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Bandwidth* release_maximum_bandwidth();
  ::anduril::entitymanager::v1::Bandwidth* mutable_maximum_bandwidth();
  void set_allocated_maximum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value);
  void unsafe_arena_set_allocated_maximum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value);
  ::anduril::entitymanager::v1::Bandwidth* unsafe_arena_release_maximum_bandwidth();

  private:
  const ::anduril::entitymanager::v1::Bandwidth& _internal_maximum_bandwidth() const;
  ::anduril::entitymanager::v1::Bandwidth* _internal_mutable_maximum_bandwidth();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.BandwidthRange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BandwidthRange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::Bandwidth* minimum_bandwidth_;
    ::anduril::entitymanager::v1::Bandwidth* maximum_bandwidth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
};
// -------------------------------------------------------------------

class FieldOfView final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.FieldOfView) */ {
 public:
  inline FieldOfView() : FieldOfView(nullptr) {}
  ~FieldOfView() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FieldOfView* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FieldOfView));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FieldOfView(
      ::google::protobuf::internal::ConstantInitialized);

  inline FieldOfView(const FieldOfView& from) : FieldOfView(nullptr, from) {}
  inline FieldOfView(FieldOfView&& from) noexcept
      : FieldOfView(nullptr, std::move(from)) {}
  inline FieldOfView& operator=(const FieldOfView& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldOfView& operator=(FieldOfView&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FieldOfView& default_instance() {
    return *internal_default_instance();
  }
  static inline const FieldOfView* internal_default_instance() {
    return reinterpret_cast<const FieldOfView*>(
        &_FieldOfView_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(FieldOfView& a, FieldOfView& b) { a.Swap(&b); }
  inline void Swap(FieldOfView* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FieldOfView* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FieldOfView* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FieldOfView>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FieldOfView& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FieldOfView& from) { FieldOfView::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FieldOfView* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.FieldOfView"; }

 protected:
  explicit FieldOfView(::google::protobuf::Arena* arena);
  FieldOfView(::google::protobuf::Arena* arena, const FieldOfView& from);
  FieldOfView(::google::protobuf::Arena* arena, FieldOfView&& from) noexcept
      : FieldOfView(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMountIdFieldNumber = 2,
    kProjectedFrustumFieldNumber = 3,
    kProjectedCenterRayFieldNumber = 4,
    kCenterRayPoseFieldNumber = 5,
    kRangeFieldNumber = 8,
    kFovIdFieldNumber = 1,
    kHorizontalFovFieldNumber = 6,
    kVerticalFovFieldNumber = 7,
    kModeFieldNumber = 9,
  };
  // string mount_id = 2 [json_name = "mountId"];
  void clear_mount_id() ;
  const std::string& mount_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mount_id(Arg_&& arg, Args_... args);
  std::string* mutable_mount_id();
  PROTOBUF_NODISCARD std::string* release_mount_id();
  void set_allocated_mount_id(std::string* value);

  private:
  const std::string& _internal_mount_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mount_id(
      const std::string& value);
  std::string* _internal_mutable_mount_id();

  public:
  // .anduril.entitymanager.v1.ProjectedFrustum projected_frustum = 3 [json_name = "projectedFrustum"];
  bool has_projected_frustum() const;
  void clear_projected_frustum() ;
  const ::anduril::entitymanager::v1::ProjectedFrustum& projected_frustum() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::ProjectedFrustum* release_projected_frustum();
  ::anduril::entitymanager::v1::ProjectedFrustum* mutable_projected_frustum();
  void set_allocated_projected_frustum(::anduril::entitymanager::v1::ProjectedFrustum* value);
  void unsafe_arena_set_allocated_projected_frustum(::anduril::entitymanager::v1::ProjectedFrustum* value);
  ::anduril::entitymanager::v1::ProjectedFrustum* unsafe_arena_release_projected_frustum();

  private:
  const ::anduril::entitymanager::v1::ProjectedFrustum& _internal_projected_frustum() const;
  ::anduril::entitymanager::v1::ProjectedFrustum* _internal_mutable_projected_frustum();

  public:
  // .anduril.entitymanager.v1.Position projected_center_ray = 4 [json_name = "projectedCenterRay"];
  bool has_projected_center_ray() const;
  void clear_projected_center_ray() ;
  const ::anduril::entitymanager::v1::Position& projected_center_ray() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Position* release_projected_center_ray();
  ::anduril::entitymanager::v1::Position* mutable_projected_center_ray();
  void set_allocated_projected_center_ray(::anduril::entitymanager::v1::Position* value);
  void unsafe_arena_set_allocated_projected_center_ray(::anduril::entitymanager::v1::Position* value);
  ::anduril::entitymanager::v1::Position* unsafe_arena_release_projected_center_ray();

  private:
  const ::anduril::entitymanager::v1::Position& _internal_projected_center_ray() const;
  ::anduril::entitymanager::v1::Position* _internal_mutable_projected_center_ray();

  public:
  // .anduril.entitymanager.v1.Pose center_ray_pose = 5 [json_name = "centerRayPose"];
  bool has_center_ray_pose() const;
  void clear_center_ray_pose() ;
  const ::anduril::entitymanager::v1::Pose& center_ray_pose() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Pose* release_center_ray_pose();
  ::anduril::entitymanager::v1::Pose* mutable_center_ray_pose();
  void set_allocated_center_ray_pose(::anduril::entitymanager::v1::Pose* value);
  void unsafe_arena_set_allocated_center_ray_pose(::anduril::entitymanager::v1::Pose* value);
  ::anduril::entitymanager::v1::Pose* unsafe_arena_release_center_ray_pose();

  private:
  const ::anduril::entitymanager::v1::Pose& _internal_center_ray_pose() const;
  ::anduril::entitymanager::v1::Pose* _internal_mutable_center_ray_pose();

  public:
  // .google.protobuf.FloatValue range = 8 [json_name = "range"];
  bool has_range() const;
  void clear_range() ;
  const ::google::protobuf::FloatValue& range() const;
  PROTOBUF_NODISCARD ::google::protobuf::FloatValue* release_range();
  ::google::protobuf::FloatValue* mutable_range();
  void set_allocated_range(::google::protobuf::FloatValue* value);
  void unsafe_arena_set_allocated_range(::google::protobuf::FloatValue* value);
  ::google::protobuf::FloatValue* unsafe_arena_release_range();

  private:
  const ::google::protobuf::FloatValue& _internal_range() const;
  ::google::protobuf::FloatValue* _internal_mutable_range();

  public:
  // int32 fov_id = 1 [json_name = "fovId"];
  void clear_fov_id() ;
  ::int32_t fov_id() const;
  void set_fov_id(::int32_t value);

  private:
  ::int32_t _internal_fov_id() const;
  void _internal_set_fov_id(::int32_t value);

  public:
  // float horizontal_fov = 6 [json_name = "horizontalFov"];
  void clear_horizontal_fov() ;
  float horizontal_fov() const;
  void set_horizontal_fov(float value);

  private:
  float _internal_horizontal_fov() const;
  void _internal_set_horizontal_fov(float value);

  public:
  // float vertical_fov = 7 [json_name = "verticalFov"];
  void clear_vertical_fov() ;
  float vertical_fov() const;
  void set_vertical_fov(float value);

  private:
  float _internal_vertical_fov() const;
  void _internal_set_vertical_fov(float value);

  public:
  // .anduril.entitymanager.v1.SensorMode mode = 9 [json_name = "mode"];
  void clear_mode() ;
  ::anduril::entitymanager::v1::SensorMode mode() const;
  void set_mode(::anduril::entitymanager::v1::SensorMode value);

  private:
  ::anduril::entitymanager::v1::SensorMode _internal_mode() const;
  void _internal_set_mode(::anduril::entitymanager::v1::SensorMode value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.FieldOfView)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 4,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FieldOfView& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr mount_id_;
    ::anduril::entitymanager::v1::ProjectedFrustum* projected_frustum_;
    ::anduril::entitymanager::v1::Position* projected_center_ray_;
    ::anduril::entitymanager::v1::Pose* center_ray_pose_;
    ::google::protobuf::FloatValue* range_;
    ::int32_t fov_id_;
    float horizontal_fov_;
    float vertical_fov_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
};
// -------------------------------------------------------------------

class RFConfiguration final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.RFConfiguration) */ {
 public:
  inline RFConfiguration() : RFConfiguration(nullptr) {}
  ~RFConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RFConfiguration* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RFConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RFConfiguration(
      ::google::protobuf::internal::ConstantInitialized);

  inline RFConfiguration(const RFConfiguration& from) : RFConfiguration(nullptr, from) {}
  inline RFConfiguration(RFConfiguration&& from) noexcept
      : RFConfiguration(nullptr, std::move(from)) {}
  inline RFConfiguration& operator=(const RFConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline RFConfiguration& operator=(RFConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RFConfiguration& default_instance() {
    return *internal_default_instance();
  }
  static inline const RFConfiguration* internal_default_instance() {
    return reinterpret_cast<const RFConfiguration*>(
        &_RFConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RFConfiguration& a, RFConfiguration& b) { a.Swap(&b); }
  inline void Swap(RFConfiguration* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RFConfiguration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RFConfiguration* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RFConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RFConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RFConfiguration& from) { RFConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RFConfiguration* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.RFConfiguration"; }

 protected:
  explicit RFConfiguration(::google::protobuf::Arena* arena);
  RFConfiguration(::google::protobuf::Arena* arena, const RFConfiguration& from);
  RFConfiguration(::google::protobuf::Arena* arena, RFConfiguration&& from) noexcept
      : RFConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFrequencyRangeHzFieldNumber = 3,
    kBandwidthRangeHzFieldNumber = 4,
  };
  // repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];
  int frequency_range_hz_size() const;
  private:
  int _internal_frequency_range_hz_size() const;

  public:
  void clear_frequency_range_hz() ;
  ::anduril::entitymanager::v1::FrequencyRange* mutable_frequency_range_hz(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>* mutable_frequency_range_hz();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>& _internal_frequency_range_hz() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>* _internal_mutable_frequency_range_hz();
  public:
  const ::anduril::entitymanager::v1::FrequencyRange& frequency_range_hz(int index) const;
  ::anduril::entitymanager::v1::FrequencyRange* add_frequency_range_hz();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>& frequency_range_hz() const;
  // repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];
  int bandwidth_range_hz_size() const;
  private:
  int _internal_bandwidth_range_hz_size() const;

  public:
  void clear_bandwidth_range_hz() ;
  ::anduril::entitymanager::v1::BandwidthRange* mutable_bandwidth_range_hz(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>* mutable_bandwidth_range_hz();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>& _internal_bandwidth_range_hz() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>* _internal_mutable_bandwidth_range_hz();
  public:
  const ::anduril::entitymanager::v1::BandwidthRange& bandwidth_range_hz(int index) const;
  ::anduril::entitymanager::v1::BandwidthRange* add_bandwidth_range_hz();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>& bandwidth_range_hz() const;
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.RFConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RFConfiguration& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::FrequencyRange > frequency_range_hz_;
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::BandwidthRange > bandwidth_range_hz_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
};
// -------------------------------------------------------------------

class Sensor final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Sensor) */ {
 public:
  inline Sensor() : Sensor(nullptr) {}
  ~Sensor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Sensor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Sensor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Sensor(
      ::google::protobuf::internal::ConstantInitialized);

  inline Sensor(const Sensor& from) : Sensor(nullptr, from) {}
  inline Sensor(Sensor&& from) noexcept
      : Sensor(nullptr, std::move(from)) {}
  inline Sensor& operator=(const Sensor& from) {
    CopyFrom(from);
    return *this;
  }
  inline Sensor& operator=(Sensor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Sensor& default_instance() {
    return *internal_default_instance();
  }
  static inline const Sensor* internal_default_instance() {
    return reinterpret_cast<const Sensor*>(
        &_Sensor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Sensor& a, Sensor& b) { a.Swap(&b); }
  inline void Swap(Sensor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Sensor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Sensor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Sensor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Sensor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Sensor& from) { Sensor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Sensor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Sensor"; }

 protected:
  explicit Sensor(::google::protobuf::Arena* arena);
  Sensor(::google::protobuf::Arena* arena, const Sensor& from);
  Sensor(::google::protobuf::Arena* arena, Sensor&& from) noexcept
      : Sensor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldsOfViewFieldNumber = 9,
    kSensorIdFieldNumber = 1,
    kSensorDescriptionFieldNumber = 6,
    kRfConfiguratonFieldNumber = 7,
    kLastDetectionTimestampFieldNumber = 8,
    kOperationalStateFieldNumber = 3,
    kSensorTypeFieldNumber = 5,
  };
  // repeated .anduril.entitymanager.v1.FieldOfView fields_of_view = 9 [json_name = "fieldsOfView"];
  int fields_of_view_size() const;
  private:
  int _internal_fields_of_view_size() const;

  public:
  void clear_fields_of_view() ;
  ::anduril::entitymanager::v1::FieldOfView* mutable_fields_of_view(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>* mutable_fields_of_view();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>& _internal_fields_of_view() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>* _internal_mutable_fields_of_view();
  public:
  const ::anduril::entitymanager::v1::FieldOfView& fields_of_view(int index) const;
  ::anduril::entitymanager::v1::FieldOfView* add_fields_of_view();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>& fields_of_view() const;
  // string sensor_id = 1 [json_name = "sensorId"];
  void clear_sensor_id() ;
  const std::string& sensor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sensor_id(Arg_&& arg, Args_... args);
  std::string* mutable_sensor_id();
  PROTOBUF_NODISCARD std::string* release_sensor_id();
  void set_allocated_sensor_id(std::string* value);

  private:
  const std::string& _internal_sensor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sensor_id(
      const std::string& value);
  std::string* _internal_mutable_sensor_id();

  public:
  // string sensor_description = 6 [json_name = "sensorDescription"];
  void clear_sensor_description() ;
  const std::string& sensor_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sensor_description(Arg_&& arg, Args_... args);
  std::string* mutable_sensor_description();
  PROTOBUF_NODISCARD std::string* release_sensor_description();
  void set_allocated_sensor_description(std::string* value);

  private:
  const std::string& _internal_sensor_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sensor_description(
      const std::string& value);
  std::string* _internal_mutable_sensor_description();

  public:
  // .anduril.entitymanager.v1.RFConfiguration rf_configuraton = 7 [json_name = "rfConfiguraton"];
  bool has_rf_configuraton() const;
  void clear_rf_configuraton() ;
  const ::anduril::entitymanager::v1::RFConfiguration& rf_configuraton() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::RFConfiguration* release_rf_configuraton();
  ::anduril::entitymanager::v1::RFConfiguration* mutable_rf_configuraton();
  void set_allocated_rf_configuraton(::anduril::entitymanager::v1::RFConfiguration* value);
  void unsafe_arena_set_allocated_rf_configuraton(::anduril::entitymanager::v1::RFConfiguration* value);
  ::anduril::entitymanager::v1::RFConfiguration* unsafe_arena_release_rf_configuraton();

  private:
  const ::anduril::entitymanager::v1::RFConfiguration& _internal_rf_configuraton() const;
  ::anduril::entitymanager::v1::RFConfiguration* _internal_mutable_rf_configuraton();

  public:
  // .google.protobuf.Timestamp last_detection_timestamp = 8 [json_name = "lastDetectionTimestamp"];
  bool has_last_detection_timestamp() const;
  void clear_last_detection_timestamp() ;
  const ::google::protobuf::Timestamp& last_detection_timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_last_detection_timestamp();
  ::google::protobuf::Timestamp* mutable_last_detection_timestamp();
  void set_allocated_last_detection_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_last_detection_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_last_detection_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_last_detection_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_last_detection_timestamp();

  public:
  // .anduril.entitymanager.v1.OperationalState operational_state = 3 [json_name = "operationalState"];
  void clear_operational_state() ;
  ::anduril::entitymanager::v1::OperationalState operational_state() const;
  void set_operational_state(::anduril::entitymanager::v1::OperationalState value);

  private:
  ::anduril::entitymanager::v1::OperationalState _internal_operational_state() const;
  void _internal_set_operational_state(::anduril::entitymanager::v1::OperationalState value);

  public:
  // .anduril.entitymanager.v1.SensorType sensor_type = 5 [json_name = "sensorType"];
  void clear_sensor_type() ;
  ::anduril::entitymanager::v1::SensorType sensor_type() const;
  void set_sensor_type(::anduril::entitymanager::v1::SensorType value);

  private:
  ::anduril::entitymanager::v1::SensorType _internal_sensor_type() const;
  void _internal_set_sensor_type(::anduril::entitymanager::v1::SensorType value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Sensor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Sensor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::FieldOfView > fields_of_view_;
    ::google::protobuf::internal::ArenaStringPtr sensor_id_;
    ::google::protobuf::internal::ArenaStringPtr sensor_description_;
    ::anduril::entitymanager::v1::RFConfiguration* rf_configuraton_;
    ::google::protobuf::Timestamp* last_detection_timestamp_;
    int operational_state_;
    int sensor_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
};
// -------------------------------------------------------------------

class Sensors final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Sensors) */ {
 public:
  inline Sensors() : Sensors(nullptr) {}
  ~Sensors() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Sensors* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Sensors));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Sensors(
      ::google::protobuf::internal::ConstantInitialized);

  inline Sensors(const Sensors& from) : Sensors(nullptr, from) {}
  inline Sensors(Sensors&& from) noexcept
      : Sensors(nullptr, std::move(from)) {}
  inline Sensors& operator=(const Sensors& from) {
    CopyFrom(from);
    return *this;
  }
  inline Sensors& operator=(Sensors&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Sensors& default_instance() {
    return *internal_default_instance();
  }
  static inline const Sensors* internal_default_instance() {
    return reinterpret_cast<const Sensors*>(
        &_Sensors_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Sensors& a, Sensors& b) { a.Swap(&b); }
  inline void Swap(Sensors* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Sensors* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Sensors* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Sensors>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Sensors& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Sensors& from) { Sensors::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Sensors* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Sensors"; }

 protected:
  explicit Sensors(::google::protobuf::Arena* arena);
  Sensors(::google::protobuf::Arena* arena, const Sensors& from);
  Sensors(::google::protobuf::Arena* arena, Sensors&& from) noexcept
      : Sensors(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSensorsFieldNumber = 1,
  };
  // repeated .anduril.entitymanager.v1.Sensor sensors = 1 [json_name = "sensors"];
  int sensors_size() const;
  private:
  int _internal_sensors_size() const;

  public:
  void clear_sensors() ;
  ::anduril::entitymanager::v1::Sensor* mutable_sensors(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>* mutable_sensors();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>& _internal_sensors() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>* _internal_mutable_sensors();
  public:
  const ::anduril::entitymanager::v1::Sensor& sensors(int index) const;
  ::anduril::entitymanager::v1::Sensor* add_sensors();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>& sensors() const;
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Sensors)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Sensors& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::Sensor > sensors_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Sensors

// repeated .anduril.entitymanager.v1.Sensor sensors = 1 [json_name = "sensors"];
inline int Sensors::_internal_sensors_size() const {
  return _internal_sensors().size();
}
inline int Sensors::sensors_size() const {
  return _internal_sensors_size();
}
inline void Sensors::clear_sensors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensors_.Clear();
}
inline ::anduril::entitymanager::v1::Sensor* Sensors::mutable_sensors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Sensors.sensors)
  return _internal_mutable_sensors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>* Sensors::mutable_sensors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.Sensors.sensors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sensors();
}
inline const ::anduril::entitymanager::v1::Sensor& Sensors::sensors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensors.sensors)
  return _internal_sensors().Get(index);
}
inline ::anduril::entitymanager::v1::Sensor* Sensors::add_sensors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::Sensor* _add = _internal_mutable_sensors()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.Sensors.sensors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>& Sensors::sensors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.Sensors.sensors)
  return _internal_sensors();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>&
Sensors::_internal_sensors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sensors_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Sensor>*
Sensors::_internal_mutable_sensors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sensors_;
}

// -------------------------------------------------------------------

// Sensor

// string sensor_id = 1 [json_name = "sensorId"];
inline void Sensor::clear_sensor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_id_.ClearToEmpty();
}
inline const std::string& Sensor::sensor_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensor.sensor_id)
  return _internal_sensor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Sensor::set_sensor_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.Sensor.sensor_id)
}
inline std::string* Sensor::mutable_sensor_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sensor_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Sensor.sensor_id)
  return _s;
}
inline const std::string& Sensor::_internal_sensor_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sensor_id_.Get();
}
inline void Sensor::_internal_set_sensor_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_id_.Set(value, GetArena());
}
inline std::string* Sensor::_internal_mutable_sensor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sensor_id_.Mutable( GetArena());
}
inline std::string* Sensor::release_sensor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Sensor.sensor_id)
  return _impl_.sensor_id_.Release();
}
inline void Sensor::set_allocated_sensor_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sensor_id_.IsDefault()) {
    _impl_.sensor_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Sensor.sensor_id)
}

// .anduril.entitymanager.v1.OperationalState operational_state = 3 [json_name = "operationalState"];
inline void Sensor::clear_operational_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operational_state_ = 0;
}
inline ::anduril::entitymanager::v1::OperationalState Sensor::operational_state() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensor.operational_state)
  return _internal_operational_state();
}
inline void Sensor::set_operational_state(::anduril::entitymanager::v1::OperationalState value) {
  _internal_set_operational_state(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.Sensor.operational_state)
}
inline ::anduril::entitymanager::v1::OperationalState Sensor::_internal_operational_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::OperationalState>(_impl_.operational_state_);
}
inline void Sensor::_internal_set_operational_state(::anduril::entitymanager::v1::OperationalState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operational_state_ = value;
}

// .anduril.entitymanager.v1.SensorType sensor_type = 5 [json_name = "sensorType"];
inline void Sensor::clear_sensor_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_type_ = 0;
}
inline ::anduril::entitymanager::v1::SensorType Sensor::sensor_type() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensor.sensor_type)
  return _internal_sensor_type();
}
inline void Sensor::set_sensor_type(::anduril::entitymanager::v1::SensorType value) {
  _internal_set_sensor_type(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.Sensor.sensor_type)
}
inline ::anduril::entitymanager::v1::SensorType Sensor::_internal_sensor_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::SensorType>(_impl_.sensor_type_);
}
inline void Sensor::_internal_set_sensor_type(::anduril::entitymanager::v1::SensorType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_type_ = value;
}

// string sensor_description = 6 [json_name = "sensorDescription"];
inline void Sensor::clear_sensor_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_description_.ClearToEmpty();
}
inline const std::string& Sensor::sensor_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensor.sensor_description)
  return _internal_sensor_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Sensor::set_sensor_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.Sensor.sensor_description)
}
inline std::string* Sensor::mutable_sensor_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sensor_description();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Sensor.sensor_description)
  return _s;
}
inline const std::string& Sensor::_internal_sensor_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sensor_description_.Get();
}
inline void Sensor::_internal_set_sensor_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_description_.Set(value, GetArena());
}
inline std::string* Sensor::_internal_mutable_sensor_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sensor_description_.Mutable( GetArena());
}
inline std::string* Sensor::release_sensor_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Sensor.sensor_description)
  return _impl_.sensor_description_.Release();
}
inline void Sensor::set_allocated_sensor_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sensor_description_.IsDefault()) {
    _impl_.sensor_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Sensor.sensor_description)
}

// .anduril.entitymanager.v1.RFConfiguration rf_configuraton = 7 [json_name = "rfConfiguraton"];
inline bool Sensor::has_rf_configuraton() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rf_configuraton_ != nullptr);
  return value;
}
inline void Sensor::clear_rf_configuraton() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rf_configuraton_ != nullptr) _impl_.rf_configuraton_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::RFConfiguration& Sensor::_internal_rf_configuraton() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::RFConfiguration* p = _impl_.rf_configuraton_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::RFConfiguration&>(::anduril::entitymanager::v1::_RFConfiguration_default_instance_);
}
inline const ::anduril::entitymanager::v1::RFConfiguration& Sensor::rf_configuraton() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensor.rf_configuraton)
  return _internal_rf_configuraton();
}
inline void Sensor::unsafe_arena_set_allocated_rf_configuraton(::anduril::entitymanager::v1::RFConfiguration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rf_configuraton_);
  }
  _impl_.rf_configuraton_ = reinterpret_cast<::anduril::entitymanager::v1::RFConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.Sensor.rf_configuraton)
}
inline ::anduril::entitymanager::v1::RFConfiguration* Sensor::release_rf_configuraton() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::RFConfiguration* released = _impl_.rf_configuraton_;
  _impl_.rf_configuraton_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::RFConfiguration* Sensor::unsafe_arena_release_rf_configuraton() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Sensor.rf_configuraton)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::RFConfiguration* temp = _impl_.rf_configuraton_;
  _impl_.rf_configuraton_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::RFConfiguration* Sensor::_internal_mutable_rf_configuraton() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rf_configuraton_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::RFConfiguration>(GetArena());
    _impl_.rf_configuraton_ = reinterpret_cast<::anduril::entitymanager::v1::RFConfiguration*>(p);
  }
  return _impl_.rf_configuraton_;
}
inline ::anduril::entitymanager::v1::RFConfiguration* Sensor::mutable_rf_configuraton() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::RFConfiguration* _msg = _internal_mutable_rf_configuraton();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Sensor.rf_configuraton)
  return _msg;
}
inline void Sensor::set_allocated_rf_configuraton(::anduril::entitymanager::v1::RFConfiguration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.rf_configuraton_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rf_configuraton_ = reinterpret_cast<::anduril::entitymanager::v1::RFConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Sensor.rf_configuraton)
}

// .google.protobuf.Timestamp last_detection_timestamp = 8 [json_name = "lastDetectionTimestamp"];
inline bool Sensor::has_last_detection_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_detection_timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Sensor::_internal_last_detection_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.last_detection_timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Sensor::last_detection_timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensor.last_detection_timestamp)
  return _internal_last_detection_timestamp();
}
inline void Sensor::unsafe_arena_set_allocated_last_detection_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_detection_timestamp_);
  }
  _impl_.last_detection_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.Sensor.last_detection_timestamp)
}
inline ::google::protobuf::Timestamp* Sensor::release_last_detection_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.last_detection_timestamp_;
  _impl_.last_detection_timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Sensor::unsafe_arena_release_last_detection_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Sensor.last_detection_timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.last_detection_timestamp_;
  _impl_.last_detection_timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Sensor::_internal_mutable_last_detection_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_detection_timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_detection_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_detection_timestamp_;
}
inline ::google::protobuf::Timestamp* Sensor::mutable_last_detection_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_detection_timestamp();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Sensor.last_detection_timestamp)
  return _msg;
}
inline void Sensor::set_allocated_last_detection_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_detection_timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.last_detection_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Sensor.last_detection_timestamp)
}

// repeated .anduril.entitymanager.v1.FieldOfView fields_of_view = 9 [json_name = "fieldsOfView"];
inline int Sensor::_internal_fields_of_view_size() const {
  return _internal_fields_of_view().size();
}
inline int Sensor::fields_of_view_size() const {
  return _internal_fields_of_view_size();
}
inline void Sensor::clear_fields_of_view() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_of_view_.Clear();
}
inline ::anduril::entitymanager::v1::FieldOfView* Sensor::mutable_fields_of_view(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Sensor.fields_of_view)
  return _internal_mutable_fields_of_view()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>* Sensor::mutable_fields_of_view()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.Sensor.fields_of_view)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_fields_of_view();
}
inline const ::anduril::entitymanager::v1::FieldOfView& Sensor::fields_of_view(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Sensor.fields_of_view)
  return _internal_fields_of_view().Get(index);
}
inline ::anduril::entitymanager::v1::FieldOfView* Sensor::add_fields_of_view() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::FieldOfView* _add = _internal_mutable_fields_of_view()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.Sensor.fields_of_view)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>& Sensor::fields_of_view() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.Sensor.fields_of_view)
  return _internal_fields_of_view();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>&
Sensor::_internal_fields_of_view() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fields_of_view_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldOfView>*
Sensor::_internal_mutable_fields_of_view() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.fields_of_view_;
}

// -------------------------------------------------------------------

// FieldOfView

// int32 fov_id = 1 [json_name = "fovId"];
inline void FieldOfView::clear_fov_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fov_id_ = 0;
}
inline ::int32_t FieldOfView::fov_id() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.fov_id)
  return _internal_fov_id();
}
inline void FieldOfView::set_fov_id(::int32_t value) {
  _internal_set_fov_id(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.FieldOfView.fov_id)
}
inline ::int32_t FieldOfView::_internal_fov_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fov_id_;
}
inline void FieldOfView::_internal_set_fov_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fov_id_ = value;
}

// string mount_id = 2 [json_name = "mountId"];
inline void FieldOfView::clear_mount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_.ClearToEmpty();
}
inline const std::string& FieldOfView::mount_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.mount_id)
  return _internal_mount_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FieldOfView::set_mount_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.FieldOfView.mount_id)
}
inline std::string* FieldOfView::mutable_mount_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mount_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.FieldOfView.mount_id)
  return _s;
}
inline const std::string& FieldOfView::_internal_mount_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mount_id_.Get();
}
inline void FieldOfView::_internal_set_mount_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_.Set(value, GetArena());
}
inline std::string* FieldOfView::_internal_mutable_mount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mount_id_.Mutable( GetArena());
}
inline std::string* FieldOfView::release_mount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.FieldOfView.mount_id)
  return _impl_.mount_id_.Release();
}
inline void FieldOfView::set_allocated_mount_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mount_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mount_id_.IsDefault()) {
    _impl_.mount_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.FieldOfView.mount_id)
}

// .anduril.entitymanager.v1.ProjectedFrustum projected_frustum = 3 [json_name = "projectedFrustum"];
inline bool FieldOfView::has_projected_frustum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.projected_frustum_ != nullptr);
  return value;
}
inline void FieldOfView::clear_projected_frustum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.projected_frustum_ != nullptr) _impl_.projected_frustum_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::ProjectedFrustum& FieldOfView::_internal_projected_frustum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::ProjectedFrustum* p = _impl_.projected_frustum_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::ProjectedFrustum&>(::anduril::entitymanager::v1::_ProjectedFrustum_default_instance_);
}
inline const ::anduril::entitymanager::v1::ProjectedFrustum& FieldOfView::projected_frustum() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.projected_frustum)
  return _internal_projected_frustum();
}
inline void FieldOfView::unsafe_arena_set_allocated_projected_frustum(::anduril::entitymanager::v1::ProjectedFrustum* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.projected_frustum_);
  }
  _impl_.projected_frustum_ = reinterpret_cast<::anduril::entitymanager::v1::ProjectedFrustum*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.FieldOfView.projected_frustum)
}
inline ::anduril::entitymanager::v1::ProjectedFrustum* FieldOfView::release_projected_frustum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::ProjectedFrustum* released = _impl_.projected_frustum_;
  _impl_.projected_frustum_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::ProjectedFrustum* FieldOfView::unsafe_arena_release_projected_frustum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.FieldOfView.projected_frustum)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::ProjectedFrustum* temp = _impl_.projected_frustum_;
  _impl_.projected_frustum_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::ProjectedFrustum* FieldOfView::_internal_mutable_projected_frustum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.projected_frustum_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::ProjectedFrustum>(GetArena());
    _impl_.projected_frustum_ = reinterpret_cast<::anduril::entitymanager::v1::ProjectedFrustum*>(p);
  }
  return _impl_.projected_frustum_;
}
inline ::anduril::entitymanager::v1::ProjectedFrustum* FieldOfView::mutable_projected_frustum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::ProjectedFrustum* _msg = _internal_mutable_projected_frustum();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.FieldOfView.projected_frustum)
  return _msg;
}
inline void FieldOfView::set_allocated_projected_frustum(::anduril::entitymanager::v1::ProjectedFrustum* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.projected_frustum_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.projected_frustum_ = reinterpret_cast<::anduril::entitymanager::v1::ProjectedFrustum*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.FieldOfView.projected_frustum)
}

// .anduril.entitymanager.v1.Position projected_center_ray = 4 [json_name = "projectedCenterRay"];
inline bool FieldOfView::has_projected_center_ray() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.projected_center_ray_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Position& FieldOfView::_internal_projected_center_ray() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Position* p = _impl_.projected_center_ray_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Position&>(::anduril::entitymanager::v1::_Position_default_instance_);
}
inline const ::anduril::entitymanager::v1::Position& FieldOfView::projected_center_ray() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.projected_center_ray)
  return _internal_projected_center_ray();
}
inline void FieldOfView::unsafe_arena_set_allocated_projected_center_ray(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.projected_center_ray_);
  }
  _impl_.projected_center_ray_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.FieldOfView.projected_center_ray)
}
inline ::anduril::entitymanager::v1::Position* FieldOfView::release_projected_center_ray() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Position* released = _impl_.projected_center_ray_;
  _impl_.projected_center_ray_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Position* FieldOfView::unsafe_arena_release_projected_center_ray() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.FieldOfView.projected_center_ray)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Position* temp = _impl_.projected_center_ray_;
  _impl_.projected_center_ray_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Position* FieldOfView::_internal_mutable_projected_center_ray() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.projected_center_ray_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Position>(GetArena());
    _impl_.projected_center_ray_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(p);
  }
  return _impl_.projected_center_ray_;
}
inline ::anduril::entitymanager::v1::Position* FieldOfView::mutable_projected_center_ray() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Position* _msg = _internal_mutable_projected_center_ray();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.FieldOfView.projected_center_ray)
  return _msg;
}
inline void FieldOfView::set_allocated_projected_center_ray(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.projected_center_ray_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.projected_center_ray_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.FieldOfView.projected_center_ray)
}

// .anduril.entitymanager.v1.Pose center_ray_pose = 5 [json_name = "centerRayPose"];
inline bool FieldOfView::has_center_ray_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.center_ray_pose_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Pose& FieldOfView::_internal_center_ray_pose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Pose* p = _impl_.center_ray_pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Pose&>(::anduril::entitymanager::v1::_Pose_default_instance_);
}
inline const ::anduril::entitymanager::v1::Pose& FieldOfView::center_ray_pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.center_ray_pose)
  return _internal_center_ray_pose();
}
inline void FieldOfView::unsafe_arena_set_allocated_center_ray_pose(::anduril::entitymanager::v1::Pose* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_ray_pose_);
  }
  _impl_.center_ray_pose_ = reinterpret_cast<::anduril::entitymanager::v1::Pose*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.FieldOfView.center_ray_pose)
}
inline ::anduril::entitymanager::v1::Pose* FieldOfView::release_center_ray_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::entitymanager::v1::Pose* released = _impl_.center_ray_pose_;
  _impl_.center_ray_pose_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Pose* FieldOfView::unsafe_arena_release_center_ray_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.FieldOfView.center_ray_pose)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::entitymanager::v1::Pose* temp = _impl_.center_ray_pose_;
  _impl_.center_ray_pose_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Pose* FieldOfView::_internal_mutable_center_ray_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_ray_pose_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Pose>(GetArena());
    _impl_.center_ray_pose_ = reinterpret_cast<::anduril::entitymanager::v1::Pose*>(p);
  }
  return _impl_.center_ray_pose_;
}
inline ::anduril::entitymanager::v1::Pose* FieldOfView::mutable_center_ray_pose() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::anduril::entitymanager::v1::Pose* _msg = _internal_mutable_center_ray_pose();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.FieldOfView.center_ray_pose)
  return _msg;
}
inline void FieldOfView::set_allocated_center_ray_pose(::anduril::entitymanager::v1::Pose* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_ray_pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.center_ray_pose_ = reinterpret_cast<::anduril::entitymanager::v1::Pose*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.FieldOfView.center_ray_pose)
}

// float horizontal_fov = 6 [json_name = "horizontalFov"];
inline void FieldOfView::clear_horizontal_fov() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_fov_ = 0;
}
inline float FieldOfView::horizontal_fov() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.horizontal_fov)
  return _internal_horizontal_fov();
}
inline void FieldOfView::set_horizontal_fov(float value) {
  _internal_set_horizontal_fov(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.FieldOfView.horizontal_fov)
}
inline float FieldOfView::_internal_horizontal_fov() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.horizontal_fov_;
}
inline void FieldOfView::_internal_set_horizontal_fov(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_fov_ = value;
}

// float vertical_fov = 7 [json_name = "verticalFov"];
inline void FieldOfView::clear_vertical_fov() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_fov_ = 0;
}
inline float FieldOfView::vertical_fov() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.vertical_fov)
  return _internal_vertical_fov();
}
inline void FieldOfView::set_vertical_fov(float value) {
  _internal_set_vertical_fov(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.FieldOfView.vertical_fov)
}
inline float FieldOfView::_internal_vertical_fov() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertical_fov_;
}
inline void FieldOfView::_internal_set_vertical_fov(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_fov_ = value;
}

// .google.protobuf.FloatValue range = 8 [json_name = "range"];
inline bool FieldOfView::has_range() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.range_ != nullptr);
  return value;
}
inline const ::google::protobuf::FloatValue& FieldOfView::_internal_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::FloatValue* p = _impl_.range_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::FloatValue&>(::google::protobuf::_FloatValue_default_instance_);
}
inline const ::google::protobuf::FloatValue& FieldOfView::range() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.range)
  return _internal_range();
}
inline void FieldOfView::unsafe_arena_set_allocated_range(::google::protobuf::FloatValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.range_);
  }
  _impl_.range_ = reinterpret_cast<::google::protobuf::FloatValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.FieldOfView.range)
}
inline ::google::protobuf::FloatValue* FieldOfView::release_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::FloatValue* released = _impl_.range_;
  _impl_.range_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::FloatValue* FieldOfView::unsafe_arena_release_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.FieldOfView.range)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::FloatValue* temp = _impl_.range_;
  _impl_.range_ = nullptr;
  return temp;
}
inline ::google::protobuf::FloatValue* FieldOfView::_internal_mutable_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.range_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::FloatValue>(GetArena());
    _impl_.range_ = reinterpret_cast<::google::protobuf::FloatValue*>(p);
  }
  return _impl_.range_;
}
inline ::google::protobuf::FloatValue* FieldOfView::mutable_range() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::FloatValue* _msg = _internal_mutable_range();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.FieldOfView.range)
  return _msg;
}
inline void FieldOfView::set_allocated_range(::google::protobuf::FloatValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.range_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.range_ = reinterpret_cast<::google::protobuf::FloatValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.FieldOfView.range)
}

// .anduril.entitymanager.v1.SensorMode mode = 9 [json_name = "mode"];
inline void FieldOfView::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::anduril::entitymanager::v1::SensorMode FieldOfView::mode() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldOfView.mode)
  return _internal_mode();
}
inline void FieldOfView::set_mode(::anduril::entitymanager::v1::SensorMode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.FieldOfView.mode)
}
inline ::anduril::entitymanager::v1::SensorMode FieldOfView::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::SensorMode>(_impl_.mode_);
}
inline void FieldOfView::_internal_set_mode(::anduril::entitymanager::v1::SensorMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// ProjectedFrustum

// .anduril.entitymanager.v1.Position upper_left = 1 [json_name = "upperLeft"];
inline bool ProjectedFrustum::has_upper_left() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.upper_left_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_internal_upper_left() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Position* p = _impl_.upper_left_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Position&>(::anduril::entitymanager::v1::_Position_default_instance_);
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::upper_left() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ProjectedFrustum.upper_left)
  return _internal_upper_left();
}
inline void ProjectedFrustum::unsafe_arena_set_allocated_upper_left(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_left_);
  }
  _impl_.upper_left_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.upper_left)
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::release_upper_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Position* released = _impl_.upper_left_;
  _impl_.upper_left_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::unsafe_arena_release_upper_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ProjectedFrustum.upper_left)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Position* temp = _impl_.upper_left_;
  _impl_.upper_left_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::_internal_mutable_upper_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_left_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Position>(GetArena());
    _impl_.upper_left_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(p);
  }
  return _impl_.upper_left_;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::mutable_upper_left() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Position* _msg = _internal_mutable_upper_left();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ProjectedFrustum.upper_left)
  return _msg;
}
inline void ProjectedFrustum::set_allocated_upper_left(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_left_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.upper_left_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.upper_left)
}

// .anduril.entitymanager.v1.Position upper_right = 2 [json_name = "upperRight"];
inline bool ProjectedFrustum::has_upper_right() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.upper_right_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_internal_upper_right() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Position* p = _impl_.upper_right_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Position&>(::anduril::entitymanager::v1::_Position_default_instance_);
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::upper_right() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ProjectedFrustum.upper_right)
  return _internal_upper_right();
}
inline void ProjectedFrustum::unsafe_arena_set_allocated_upper_right(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_right_);
  }
  _impl_.upper_right_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.upper_right)
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::release_upper_right() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Position* released = _impl_.upper_right_;
  _impl_.upper_right_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::unsafe_arena_release_upper_right() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ProjectedFrustum.upper_right)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Position* temp = _impl_.upper_right_;
  _impl_.upper_right_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::_internal_mutable_upper_right() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_right_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Position>(GetArena());
    _impl_.upper_right_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(p);
  }
  return _impl_.upper_right_;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::mutable_upper_right() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Position* _msg = _internal_mutable_upper_right();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ProjectedFrustum.upper_right)
  return _msg;
}
inline void ProjectedFrustum::set_allocated_upper_right(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_right_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.upper_right_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.upper_right)
}

// .anduril.entitymanager.v1.Position bottom_right = 3 [json_name = "bottomRight"];
inline bool ProjectedFrustum::has_bottom_right() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bottom_right_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_internal_bottom_right() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Position* p = _impl_.bottom_right_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Position&>(::anduril::entitymanager::v1::_Position_default_instance_);
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::bottom_right() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ProjectedFrustum.bottom_right)
  return _internal_bottom_right();
}
inline void ProjectedFrustum::unsafe_arena_set_allocated_bottom_right(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_right_);
  }
  _impl_.bottom_right_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.bottom_right)
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::release_bottom_right() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::entitymanager::v1::Position* released = _impl_.bottom_right_;
  _impl_.bottom_right_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::unsafe_arena_release_bottom_right() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ProjectedFrustum.bottom_right)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::entitymanager::v1::Position* temp = _impl_.bottom_right_;
  _impl_.bottom_right_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::_internal_mutable_bottom_right() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bottom_right_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Position>(GetArena());
    _impl_.bottom_right_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(p);
  }
  return _impl_.bottom_right_;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::mutable_bottom_right() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::anduril::entitymanager::v1::Position* _msg = _internal_mutable_bottom_right();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ProjectedFrustum.bottom_right)
  return _msg;
}
inline void ProjectedFrustum::set_allocated_bottom_right(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_right_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.bottom_right_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.bottom_right)
}

// .anduril.entitymanager.v1.Position bottom_left = 4 [json_name = "bottomLeft"];
inline bool ProjectedFrustum::has_bottom_left() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bottom_left_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_internal_bottom_left() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Position* p = _impl_.bottom_left_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Position&>(::anduril::entitymanager::v1::_Position_default_instance_);
}
inline const ::anduril::entitymanager::v1::Position& ProjectedFrustum::bottom_left() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ProjectedFrustum.bottom_left)
  return _internal_bottom_left();
}
inline void ProjectedFrustum::unsafe_arena_set_allocated_bottom_left(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_left_);
  }
  _impl_.bottom_left_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.bottom_left)
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::release_bottom_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::anduril::entitymanager::v1::Position* released = _impl_.bottom_left_;
  _impl_.bottom_left_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::unsafe_arena_release_bottom_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ProjectedFrustum.bottom_left)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::anduril::entitymanager::v1::Position* temp = _impl_.bottom_left_;
  _impl_.bottom_left_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::_internal_mutable_bottom_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bottom_left_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Position>(GetArena());
    _impl_.bottom_left_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(p);
  }
  return _impl_.bottom_left_;
}
inline ::anduril::entitymanager::v1::Position* ProjectedFrustum::mutable_bottom_left() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::anduril::entitymanager::v1::Position* _msg = _internal_mutable_bottom_left();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ProjectedFrustum.bottom_left)
  return _msg;
}
inline void ProjectedFrustum::set_allocated_bottom_left(::anduril::entitymanager::v1::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_left_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.bottom_left_ = reinterpret_cast<::anduril::entitymanager::v1::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ProjectedFrustum.bottom_left)
}

// -------------------------------------------------------------------

// RFConfiguration

// repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];
inline int RFConfiguration::_internal_frequency_range_hz_size() const {
  return _internal_frequency_range_hz().size();
}
inline int RFConfiguration::frequency_range_hz_size() const {
  return _internal_frequency_range_hz_size();
}
inline ::anduril::entitymanager::v1::FrequencyRange* RFConfiguration::mutable_frequency_range_hz(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.RFConfiguration.frequency_range_hz)
  return _internal_mutable_frequency_range_hz()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>* RFConfiguration::mutable_frequency_range_hz()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.RFConfiguration.frequency_range_hz)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_frequency_range_hz();
}
inline const ::anduril::entitymanager::v1::FrequencyRange& RFConfiguration::frequency_range_hz(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.RFConfiguration.frequency_range_hz)
  return _internal_frequency_range_hz().Get(index);
}
inline ::anduril::entitymanager::v1::FrequencyRange* RFConfiguration::add_frequency_range_hz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::FrequencyRange* _add = _internal_mutable_frequency_range_hz()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.RFConfiguration.frequency_range_hz)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>& RFConfiguration::frequency_range_hz() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.RFConfiguration.frequency_range_hz)
  return _internal_frequency_range_hz();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>&
RFConfiguration::_internal_frequency_range_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frequency_range_hz_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FrequencyRange>*
RFConfiguration::_internal_mutable_frequency_range_hz() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.frequency_range_hz_;
}

// repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];
inline int RFConfiguration::_internal_bandwidth_range_hz_size() const {
  return _internal_bandwidth_range_hz().size();
}
inline int RFConfiguration::bandwidth_range_hz_size() const {
  return _internal_bandwidth_range_hz_size();
}
inline void RFConfiguration::clear_bandwidth_range_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bandwidth_range_hz_.Clear();
}
inline ::anduril::entitymanager::v1::BandwidthRange* RFConfiguration::mutable_bandwidth_range_hz(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.RFConfiguration.bandwidth_range_hz)
  return _internal_mutable_bandwidth_range_hz()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>* RFConfiguration::mutable_bandwidth_range_hz()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.RFConfiguration.bandwidth_range_hz)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bandwidth_range_hz();
}
inline const ::anduril::entitymanager::v1::BandwidthRange& RFConfiguration::bandwidth_range_hz(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.RFConfiguration.bandwidth_range_hz)
  return _internal_bandwidth_range_hz().Get(index);
}
inline ::anduril::entitymanager::v1::BandwidthRange* RFConfiguration::add_bandwidth_range_hz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::BandwidthRange* _add = _internal_mutable_bandwidth_range_hz()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.RFConfiguration.bandwidth_range_hz)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>& RFConfiguration::bandwidth_range_hz() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.RFConfiguration.bandwidth_range_hz)
  return _internal_bandwidth_range_hz();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>&
RFConfiguration::_internal_bandwidth_range_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bandwidth_range_hz_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::BandwidthRange>*
RFConfiguration::_internal_mutable_bandwidth_range_hz() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bandwidth_range_hz_;
}

// -------------------------------------------------------------------

// BandwidthRange

// .anduril.entitymanager.v1.Bandwidth minimum_bandwidth = 1 [json_name = "minimumBandwidth"];
inline bool BandwidthRange::has_minimum_bandwidth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.minimum_bandwidth_ != nullptr);
  return value;
}
inline void BandwidthRange::clear_minimum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.minimum_bandwidth_ != nullptr) _impl_.minimum_bandwidth_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::Bandwidth& BandwidthRange::_internal_minimum_bandwidth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Bandwidth* p = _impl_.minimum_bandwidth_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Bandwidth&>(::anduril::entitymanager::v1::_Bandwidth_default_instance_);
}
inline const ::anduril::entitymanager::v1::Bandwidth& BandwidthRange::minimum_bandwidth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.BandwidthRange.minimum_bandwidth)
  return _internal_minimum_bandwidth();
}
inline void BandwidthRange::unsafe_arena_set_allocated_minimum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.minimum_bandwidth_);
  }
  _impl_.minimum_bandwidth_ = reinterpret_cast<::anduril::entitymanager::v1::Bandwidth*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.BandwidthRange.minimum_bandwidth)
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::release_minimum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Bandwidth* released = _impl_.minimum_bandwidth_;
  _impl_.minimum_bandwidth_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::unsafe_arena_release_minimum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.BandwidthRange.minimum_bandwidth)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Bandwidth* temp = _impl_.minimum_bandwidth_;
  _impl_.minimum_bandwidth_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::_internal_mutable_minimum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.minimum_bandwidth_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Bandwidth>(GetArena());
    _impl_.minimum_bandwidth_ = reinterpret_cast<::anduril::entitymanager::v1::Bandwidth*>(p);
  }
  return _impl_.minimum_bandwidth_;
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::mutable_minimum_bandwidth() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Bandwidth* _msg = _internal_mutable_minimum_bandwidth();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.BandwidthRange.minimum_bandwidth)
  return _msg;
}
inline void BandwidthRange::set_allocated_minimum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.minimum_bandwidth_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.minimum_bandwidth_ = reinterpret_cast<::anduril::entitymanager::v1::Bandwidth*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.BandwidthRange.minimum_bandwidth)
}

// .anduril.entitymanager.v1.Bandwidth maximum_bandwidth = 2 [json_name = "maximumBandwidth"];
inline bool BandwidthRange::has_maximum_bandwidth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.maximum_bandwidth_ != nullptr);
  return value;
}
inline void BandwidthRange::clear_maximum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.maximum_bandwidth_ != nullptr) _impl_.maximum_bandwidth_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::anduril::entitymanager::v1::Bandwidth& BandwidthRange::_internal_maximum_bandwidth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Bandwidth* p = _impl_.maximum_bandwidth_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Bandwidth&>(::anduril::entitymanager::v1::_Bandwidth_default_instance_);
}
inline const ::anduril::entitymanager::v1::Bandwidth& BandwidthRange::maximum_bandwidth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.BandwidthRange.maximum_bandwidth)
  return _internal_maximum_bandwidth();
}
inline void BandwidthRange::unsafe_arena_set_allocated_maximum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.maximum_bandwidth_);
  }
  _impl_.maximum_bandwidth_ = reinterpret_cast<::anduril::entitymanager::v1::Bandwidth*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.BandwidthRange.maximum_bandwidth)
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::release_maximum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Bandwidth* released = _impl_.maximum_bandwidth_;
  _impl_.maximum_bandwidth_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::unsafe_arena_release_maximum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.BandwidthRange.maximum_bandwidth)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Bandwidth* temp = _impl_.maximum_bandwidth_;
  _impl_.maximum_bandwidth_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::_internal_mutable_maximum_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.maximum_bandwidth_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Bandwidth>(GetArena());
    _impl_.maximum_bandwidth_ = reinterpret_cast<::anduril::entitymanager::v1::Bandwidth*>(p);
  }
  return _impl_.maximum_bandwidth_;
}
inline ::anduril::entitymanager::v1::Bandwidth* BandwidthRange::mutable_maximum_bandwidth() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Bandwidth* _msg = _internal_mutable_maximum_bandwidth();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.BandwidthRange.maximum_bandwidth)
  return _msg;
}
inline void BandwidthRange::set_allocated_maximum_bandwidth(::anduril::entitymanager::v1::Bandwidth* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.maximum_bandwidth_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.maximum_bandwidth_ = reinterpret_cast<::anduril::entitymanager::v1::Bandwidth*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.BandwidthRange.maximum_bandwidth)
}

// -------------------------------------------------------------------

// Bandwidth

// .google.protobuf.DoubleValue bandwidth_hz = 1 [json_name = "bandwidthHz"];
inline bool Bandwidth::has_bandwidth_hz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bandwidth_hz_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& Bandwidth::_internal_bandwidth_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.bandwidth_hz_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& Bandwidth::bandwidth_hz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Bandwidth.bandwidth_hz)
  return _internal_bandwidth_hz();
}
inline void Bandwidth::unsafe_arena_set_allocated_bandwidth_hz(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bandwidth_hz_);
  }
  _impl_.bandwidth_hz_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.Bandwidth.bandwidth_hz)
}
inline ::google::protobuf::DoubleValue* Bandwidth::release_bandwidth_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* released = _impl_.bandwidth_hz_;
  _impl_.bandwidth_hz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* Bandwidth::unsafe_arena_release_bandwidth_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Bandwidth.bandwidth_hz)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* temp = _impl_.bandwidth_hz_;
  _impl_.bandwidth_hz_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* Bandwidth::_internal_mutable_bandwidth_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bandwidth_hz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.bandwidth_hz_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.bandwidth_hz_;
}
inline ::google::protobuf::DoubleValue* Bandwidth::mutable_bandwidth_hz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_bandwidth_hz();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Bandwidth.bandwidth_hz)
  return _msg;
}
inline void Bandwidth::set_allocated_bandwidth_hz(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bandwidth_hz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bandwidth_hz_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Bandwidth.bandwidth_hz)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::entitymanager::v1::OperationalState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::OperationalState>() {
  return ::anduril::entitymanager::v1::OperationalState_descriptor();
}
template <>
struct is_proto_enum<::anduril::entitymanager::v1::SensorMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::SensorMode>() {
  return ::anduril::entitymanager::v1::SensorMode_descriptor();
}
template <>
struct is_proto_enum<::anduril::entitymanager::v1::SensorType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::SensorType>() {
  return ::anduril::entitymanager::v1::SensorType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_2epb_2eh
