// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/group.pub.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class GroupDetails;
struct GroupDetailsDefaultTypeInternal;
extern GroupDetailsDefaultTypeInternal _GroupDetails_default_instance_;
class Team;
struct TeamDefaultTypeInternal;
extern TeamDefaultTypeInternal _Team_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Team final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Team) */ {
 public:
  inline Team() : Team(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Team(::google::protobuf::internal::ConstantInitialized);

  inline Team(const Team& from)
      : Team(nullptr, from) {}
  Team(Team&& from) noexcept
    : Team() {
    *this = ::std::move(from);
  }

  inline Team& operator=(const Team& from) {
    CopyFrom(from);
    return *this;
  }
  inline Team& operator=(Team&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Team& default_instance() {
    return *internal_default_instance();
  }
  static inline const Team* internal_default_instance() {
    return reinterpret_cast<const Team*>(
               &_Team_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Team& a, Team& b) {
    a.Swap(&b);
  }
  inline void Swap(Team* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Team* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Team* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Team>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Team& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Team& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "anduril.entitymanager.v1.Team";
  }
  protected:
  explicit Team(::google::protobuf::Arena* arena);
  Team(::google::protobuf::Arena* arena, const Team& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Team)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto;
};// -------------------------------------------------------------------

class GroupDetails final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.GroupDetails) */ {
 public:
  inline GroupDetails() : GroupDetails(nullptr) {}
  ~GroupDetails() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GroupDetails(::google::protobuf::internal::ConstantInitialized);

  inline GroupDetails(const GroupDetails& from)
      : GroupDetails(nullptr, from) {}
  GroupDetails(GroupDetails&& from) noexcept
    : GroupDetails() {
    *this = ::std::move(from);
  }

  inline GroupDetails& operator=(const GroupDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline GroupDetails& operator=(GroupDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GroupDetails& default_instance() {
    return *internal_default_instance();
  }
  enum GroupTypeCase {
    kTeam = 1,
    GROUP_TYPE_NOT_SET = 0,
  };

  static inline const GroupDetails* internal_default_instance() {
    return reinterpret_cast<const GroupDetails*>(
               &_GroupDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GroupDetails& a, GroupDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(GroupDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GroupDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GroupDetails* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GroupDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GroupDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GroupDetails& from) {
    GroupDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GroupDetails* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "anduril.entitymanager.v1.GroupDetails";
  }
  protected:
  explicit GroupDetails(::google::protobuf::Arena* arena);
  GroupDetails(::google::protobuf::Arena* arena, const GroupDetails& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamFieldNumber = 1,
  };
  // .anduril.entitymanager.v1.Team team = 1 [json_name = "team"];
  bool has_team() const;
  private:
  bool _internal_has_team() const;

  public:
  void clear_team() ;
  const ::anduril::entitymanager::v1::Team& team() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Team* release_team();
  ::anduril::entitymanager::v1::Team* mutable_team();
  void set_allocated_team(::anduril::entitymanager::v1::Team* value);
  void unsafe_arena_set_allocated_team(::anduril::entitymanager::v1::Team* value);
  ::anduril::entitymanager::v1::Team* unsafe_arena_release_team();

  private:
  const ::anduril::entitymanager::v1::Team& _internal_team() const;
  ::anduril::entitymanager::v1::Team* _internal_mutable_team();

  public:
  void clear_group_type();
  GroupTypeCase group_type_case() const;
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.GroupDetails)
 private:
  class _Internal;
  void set_has_team();

  inline bool has_group_type() const;
  inline void clear_has_group_type();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union GroupTypeUnion {
      constexpr GroupTypeUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::anduril::entitymanager::v1::Team* team_;
    } group_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GroupDetails

// .anduril.entitymanager.v1.Team team = 1 [json_name = "team"];
inline bool GroupDetails::has_team() const {
  return group_type_case() == kTeam;
}
inline bool GroupDetails::_internal_has_team() const {
  return group_type_case() == kTeam;
}
inline void GroupDetails::set_has_team() {
  _impl_._oneof_case_[0] = kTeam;
}
inline void GroupDetails::clear_team() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (group_type_case() == kTeam) {
    if (GetArena() == nullptr) {
      delete _impl_.group_type_.team_;
    }
    clear_has_group_type();
  }
}
inline ::anduril::entitymanager::v1::Team* GroupDetails::release_team() {
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.GroupDetails.team)
  if (group_type_case() == kTeam) {
    clear_has_group_type();
    auto* temp = _impl_.group_type_.team_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.group_type_.team_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::anduril::entitymanager::v1::Team& GroupDetails::_internal_team() const {
  return group_type_case() == kTeam ? *_impl_.group_type_.team_ : reinterpret_cast<::anduril::entitymanager::v1::Team&>(::anduril::entitymanager::v1::_Team_default_instance_);
}
inline const ::anduril::entitymanager::v1::Team& GroupDetails::team() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.GroupDetails.team)
  return _internal_team();
}
inline ::anduril::entitymanager::v1::Team* GroupDetails::unsafe_arena_release_team() {
  // @@protoc_insertion_point(field_unsafe_arena_release:anduril.entitymanager.v1.GroupDetails.team)
  if (group_type_case() == kTeam) {
    clear_has_group_type();
    auto* temp = _impl_.group_type_.team_;
    _impl_.group_type_.team_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GroupDetails::unsafe_arena_set_allocated_team(::anduril::entitymanager::v1::Team* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_group_type();
  if (value) {
    set_has_team();
    _impl_.group_type_.team_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.GroupDetails.team)
}
inline ::anduril::entitymanager::v1::Team* GroupDetails::_internal_mutable_team() {
  if (group_type_case() != kTeam) {
    clear_group_type();
    set_has_team();
    _impl_.group_type_.team_ = CreateMaybeMessage<::anduril::entitymanager::v1::Team>(GetArena());
  }
  return _impl_.group_type_.team_;
}
inline ::anduril::entitymanager::v1::Team* GroupDetails::mutable_team() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::anduril::entitymanager::v1::Team* _msg = _internal_mutable_team();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.GroupDetails.team)
  return _msg;
}

inline bool GroupDetails::has_group_type() const {
  return group_type_case() != GROUP_TYPE_NOT_SET;
}
inline void GroupDetails::clear_has_group_type() {
  _impl_._oneof_case_[0] = GROUP_TYPE_NOT_SET;
}
inline GroupDetails::GroupTypeCase GroupDetails::group_type_case() const {
  return GroupDetails::GroupTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Team

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_anduril_2fentitymanager_2fv1_2fgroup_2epub_2eproto_2epb_2eh
