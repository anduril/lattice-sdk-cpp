// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/sensors.pub.proto

#include "anduril/entitymanager/v1/sensors.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr Bandwidth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bandwidth_hz_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Bandwidth::Bandwidth(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BandwidthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BandwidthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BandwidthDefaultTypeInternal() {}
  union {
    Bandwidth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BandwidthDefaultTypeInternal _Bandwidth_default_instance_;

inline constexpr ProjectedFrustum::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        upper_left_{nullptr},
        upper_right_{nullptr},
        bottom_right_{nullptr},
        bottom_left_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ProjectedFrustum::ProjectedFrustum(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectedFrustumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectedFrustumDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectedFrustumDefaultTypeInternal() {}
  union {
    ProjectedFrustum _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectedFrustumDefaultTypeInternal _ProjectedFrustum_default_instance_;

inline constexpr BandwidthRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        minimum_bandwidth_{nullptr},
        maximum_bandwidth_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BandwidthRange::BandwidthRange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BandwidthRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BandwidthRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BandwidthRangeDefaultTypeInternal() {}
  union {
    BandwidthRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BandwidthRangeDefaultTypeInternal _BandwidthRange_default_instance_;

inline constexpr FieldOfView::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mount_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        projected_frustum_{nullptr},
        projected_center_ray_{nullptr},
        center_ray_pose_{nullptr},
        range_{nullptr},
        fov_id_{0},
        horizontal_fov_{0},
        vertical_fov_{0},
        mode_{static_cast< ::anduril::entitymanager::v1::SensorMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR FieldOfView::FieldOfView(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FieldOfViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldOfViewDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldOfViewDefaultTypeInternal() {}
  union {
    FieldOfView _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldOfViewDefaultTypeInternal _FieldOfView_default_instance_;

inline constexpr RFConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : frequency_range_{},
        bandwidth_range_{},
        frequency_range_hz_{},
        bandwidth_range_hz_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RFConfiguration::RFConfiguration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RFConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RFConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RFConfigurationDefaultTypeInternal() {}
  union {
    RFConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RFConfigurationDefaultTypeInternal _RFConfiguration_default_instance_;

inline constexpr Sensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fields_of_view_{},
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sensor_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        field_of_view_{nullptr},
        rf_configuraton_{nullptr},
        last_detection_timestamp_{nullptr},
        operational_state_{static_cast< ::anduril::entitymanager::v1::OperationalState >(0)},
        sensor_type_{static_cast< ::anduril::entitymanager::v1::SensorType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Sensor::Sensor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorDefaultTypeInternal() {}
  union {
    Sensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorDefaultTypeInternal _Sensor_default_instance_;

inline constexpr Sensors::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sensors_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Sensors::Sensors(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorsDefaultTypeInternal() {}
  union {
    Sensors _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorsDefaultTypeInternal _Sensors_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensors, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensors, _impl_.sensors_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.sensor_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.operational_state_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.field_of_view_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.sensor_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.sensor_description_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.rf_configuraton_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.last_detection_timestamp_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Sensor, _impl_.fields_of_view_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    1,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.fov_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.mount_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.projected_frustum_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.projected_center_ray_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.center_ray_pose_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.horizontal_fov_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.vertical_fov_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.range_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FieldOfView, _impl_.mode_),
    ~0u,
    ~0u,
    0,
    1,
    2,
    ~0u,
    ~0u,
    3,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ProjectedFrustum, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ProjectedFrustum, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ProjectedFrustum, _impl_.upper_left_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ProjectedFrustum, _impl_.upper_right_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ProjectedFrustum, _impl_.bottom_right_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ProjectedFrustum, _impl_.bottom_left_),
    0,
    1,
    2,
    3,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RFConfiguration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RFConfiguration, _impl_.frequency_range_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RFConfiguration, _impl_.bandwidth_range_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RFConfiguration, _impl_.frequency_range_hz_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::RFConfiguration, _impl_.bandwidth_range_hz_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::BandwidthRange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::BandwidthRange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::BandwidthRange, _impl_.minimum_bandwidth_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::BandwidthRange, _impl_.maximum_bandwidth_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Bandwidth, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Bandwidth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Bandwidth, _impl_.bandwidth_hz_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::entitymanager::v1::Sensors)},
        {9, 25, -1, sizeof(::anduril::entitymanager::v1::Sensor)},
        {33, 50, -1, sizeof(::anduril::entitymanager::v1::FieldOfView)},
        {59, 71, -1, sizeof(::anduril::entitymanager::v1::ProjectedFrustum)},
        {75, -1, -1, sizeof(::anduril::entitymanager::v1::RFConfiguration)},
        {87, 97, -1, sizeof(::anduril::entitymanager::v1::BandwidthRange)},
        {99, 108, -1, sizeof(::anduril::entitymanager::v1::Bandwidth)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_Sensors_default_instance_._instance,
    &::anduril::entitymanager::v1::_Sensor_default_instance_._instance,
    &::anduril::entitymanager::v1::_FieldOfView_default_instance_._instance,
    &::anduril::entitymanager::v1::_ProjectedFrustum_default_instance_._instance,
    &::anduril::entitymanager::v1::_RFConfiguration_default_instance_._instance,
    &::anduril::entitymanager::v1::_BandwidthRange_default_instance_._instance,
    &::anduril::entitymanager::v1::_Bandwidth_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n*anduril/entitymanager/v1/sensors.pub.p"
    "roto\022\030anduril.entitymanager.v1\032+anduril/"
    "entitymanager/v1/location.pub.proto\032*and"
    "uril/entitymanager/v1/options.pub.proto\032"
    ")anduril/entitymanager/v1/signal.pub.pro"
    "to\032(anduril/entitymanager/v1/types.pub.p"
    "roto\032\037google/protobuf/timestamp.proto\032\036g"
    "oogle/protobuf/wrappers.proto\"E\n\007Sensors"
    "\022:\n\007sensors\030\001 \003(\0132 .anduril.entitymanage"
    "r.v1.SensorR\007sensors\"\273\004\n\006Sensor\022 \n\tsenso"
    "r_id\030\001 \001(\tB\003\320>\001R\010sensorId\022W\n\021operational"
    "_state\030\003 \001(\0162*.anduril.entitymanager.v1."
    "OperationalStateR\020operationalState\022I\n\rfi"
    "eld_of_view\030\004 \001(\0132%.anduril.entitymanage"
    "r.v1.FieldOfViewR\013fieldOfView\022E\n\013sensor_"
    "type\030\005 \001(\0162$.anduril.entitymanager.v1.Se"
    "nsorTypeR\nsensorType\022-\n\022sensor_descripti"
    "on\030\006 \001(\tR\021sensorDescription\022R\n\017rf_config"
    "uraton\030\007 \001(\0132).anduril.entitymanager.v1."
    "RFConfigurationR\016rfConfiguraton\022T\n\030last_"
    "detection_timestamp\030\010 \001(\0132\032.google.proto"
    "buf.TimestampR\026lastDetectionTimestamp\022K\n"
    "\016fields_of_view\030\t \003(\0132%.anduril.entityma"
    "nager.v1.FieldOfViewR\014fieldsOfView\"\355\003\n\013F"
    "ieldOfView\022\025\n\006fov_id\030\001 \001(\005R\005fovId\022\031\n\010mou"
    "nt_id\030\002 \001(\tR\007mountId\022W\n\021projected_frustu"
    "m\030\003 \001(\0132*.anduril.entitymanager.v1.Proje"
    "ctedFrustumR\020projectedFrustum\022T\n\024project"
    "ed_center_ray\030\004 \001(\0132\".anduril.entitymana"
    "ger.v1.PositionR\022projectedCenterRay\022F\n\017c"
    "enter_ray_pose\030\005 \001(\0132\036.anduril.entityman"
    "ager.v1.PoseR\rcenterRayPose\022%\n\016horizonta"
    "l_fov\030\006 \001(\002R\rhorizontalFov\022!\n\014vertical_f"
    "ov\030\007 \001(\002R\013verticalFov\0221\n\005range\030\010 \001(\0132\033.g"
    "oogle.protobuf.FloatValueR\005range\0228\n\004mode"
    "\030\t \001(\0162$.anduril.entitymanager.v1.Sensor"
    "ModeR\004mode\"\246\002\n\020ProjectedFrustum\022A\n\nupper"
    "_left\030\001 \001(\0132\".anduril.entitymanager.v1.P"
    "ositionR\tupperLeft\022C\n\013upper_right\030\002 \001(\0132"
    "\".anduril.entitymanager.v1.PositionR\nupp"
    "erRight\022E\n\014bottom_right\030\003 \001(\0132\".anduril."
    "entitymanager.v1.PositionR\013bottomRight\022C"
    "\n\013bottom_left\030\004 \001(\0132\".anduril.entitymana"
    "ger.v1.PositionR\nbottomLeft\"\347\002\n\017RFConfig"
    "uration\022Q\n\017frequency_range\030\001 \003(\0132$.andur"
    "il.entitymanager.v1.FloatRangeB\002\030\001R\016freq"
    "uencyRange\022Q\n\017bandwidth_range\030\002 \003(\0132$.an"
    "duril.entitymanager.v1.FloatRangeB\002\030\001R\016b"
    "andwidthRange\022V\n\022frequency_range_hz\030\003 \003("
    "\0132(.anduril.entitymanager.v1.FrequencyRa"
    "ngeR\020frequencyRangeHz\022V\n\022bandwidth_range"
    "_hz\030\004 \003(\0132(.anduril.entitymanager.v1.Ban"
    "dwidthRangeR\020bandwidthRangeHz\"\264\001\n\016Bandwi"
    "dthRange\022P\n\021minimum_bandwidth\030\001 \001(\0132#.an"
    "duril.entitymanager.v1.BandwidthR\020minimu"
    "mBandwidth\022P\n\021maximum_bandwidth\030\002 \001(\0132#."
    "anduril.entitymanager.v1.BandwidthR\020maxi"
    "mumBandwidth\"L\n\tBandwidth\022\?\n\014bandwidth_h"
    "z\030\001 \001(\0132\034.google.protobuf.DoubleValueR\013b"
    "andwidthHz*\324\001\n\020OperationalState\022\035\n\031OPERA"
    "TIONAL_STATE_INVALID\020\000\022\031\n\025OPERATIONAL_ST"
    "ATE_OFF\020\001\022%\n!OPERATIONAL_STATE_NON_OPERA"
    "TIONAL\020\002\022\036\n\032OPERATIONAL_STATE_DEGRADED\020\003"
    "\022!\n\035OPERATIONAL_STATE_OPERATIONAL\020\004\022\034\n\030O"
    "PERATIONAL_STATE_DENIED\020\005*\240\001\n\nSensorMode"
    "\022\027\n\023SENSOR_MODE_INVALID\020\000\022\026\n\022SENSOR_MODE"
    "_SEARCH\020\001\022\025\n\021SENSOR_MODE_TRACK\020\002\022\036\n\032SENS"
    "OR_MODE_WEAPON_SUPPORT\020\003\022\024\n\020SENSOR_MODE_"
    "AUTO\020\004\022\024\n\020SENSOR_MODE_MUTE\020\005*\373\001\n\nSensorT"
    "ype\022\027\n\023SENSOR_TYPE_INVALID\020\000\022\025\n\021SENSOR_T"
    "YPE_RADAR\020\001\022\026\n\022SENSOR_TYPE_CAMERA\020\002\022\033\n\027S"
    "ENSOR_TYPE_TRANSPONDER\020\003\022\022\n\016SENSOR_TYPE_"
    "RF\020\004\022\023\n\017SENSOR_TYPE_GPS\020\005\022\027\n\023SENSOR_TYPE"
    "_PTU_POS\020\006\022\024\n\020SENSOR_TYPE_WISP\020\007\022\031\n\025SENS"
    "OR_TYPE_PERIMETER\020\010\022\025\n\021SENSOR_TYPE_SONAR"
    "\020\tB\200\002\n\034com.anduril.entitymanager.v1B\017Sen"
    "sorsPubProtoP\001ZMghe.anduril.dev/anduril/"
    "andurilapis-go/anduril/entitymanager/v1;"
    "entitymanager\242\002\003AEX\252\002\030Anduril.Entitymana"
    "ger.V1\312\002\030Anduril\\Entitymanager\\V1\342\002$Andu"
    "ril\\Entitymanager\\V1\\GPBMetadata\352\002\032Andur"
    "il::Entitymanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_deps[6] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2foptions_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fsignal_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto = {
    false,
    false,
    3269,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto,
    "anduril/entitymanager/v1/sensors.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_deps,
    6,
    7,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto(&descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto);
namespace anduril {
namespace entitymanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* OperationalState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t OperationalState_internal_data_[] = {
    393216u, 0u, };
bool OperationalState_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* SensorMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SensorMode_internal_data_[] = {
    393216u, 0u, };
bool SensorMode_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* SensorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SensorType_internal_data_[] = {
    655360u, 0u, };
bool SensorType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
// ===================================================================

class Sensors::_Internal {
 public:
};

Sensors::Sensors(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Sensors)
}
inline PROTOBUF_NDEBUG_INLINE Sensors::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sensors_{visibility, arena, from.sensors_},
        _cached_size_{0} {}

Sensors::Sensors(
    ::google::protobuf::Arena* arena,
    const Sensors& from)
    : ::google::protobuf::Message(arena) {
  Sensors* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Sensors)
}
inline PROTOBUF_NDEBUG_INLINE Sensors::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sensors_{visibility, arena},
        _cached_size_{0} {}

inline void Sensors::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Sensors::~Sensors() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Sensors)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Sensors::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Sensors::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Sensors)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sensors_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Sensors::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Sensors::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Sensors_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entitymanager.v1.Sensor sensors = 1 [json_name = "sensors"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Sensors, _impl_.sensors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.Sensor sensors = 1 [json_name = "sensors"];
    {PROTOBUF_FIELD_OFFSET(Sensors, _impl_.sensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Sensor>()},
  }}, {{
  }},
};

::uint8_t* Sensors::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Sensors)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.Sensor sensors = 1 [json_name = "sensors"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sensors_size()); i < n; i++) {
    const auto& repfield = this->_internal_sensors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Sensors)
  return target;
}

::size_t Sensors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Sensors)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.Sensor sensors = 1 [json_name = "sensors"];
  total_size += 1UL * this->_internal_sensors_size();
  for (const auto& msg : this->_internal_sensors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Sensors::_class_data_ = {
    Sensors::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Sensors::GetClassData() const {
  return &_class_data_;
}

void Sensors::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Sensors*>(&to_msg);
  auto& from = static_cast<const Sensors&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Sensors)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sensors()->MergeFrom(
      from._internal_sensors());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Sensors::CopyFrom(const Sensors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Sensors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Sensors::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Sensors::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Sensors::InternalSwap(Sensors* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sensors_.InternalSwap(&other->_impl_.sensors_);
}

::google::protobuf::Metadata Sensors::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[0]);
}
// ===================================================================

class Sensor::_Internal {
 public:
  using HasBits = decltype(std::declval<Sensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Sensor, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::FieldOfView& field_of_view(const Sensor* msg);
  static void set_has_field_of_view(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::RFConfiguration& rf_configuraton(const Sensor* msg);
  static void set_has_rf_configuraton(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::Timestamp& last_detection_timestamp(const Sensor* msg);
  static void set_has_last_detection_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::entitymanager::v1::FieldOfView& Sensor::_Internal::field_of_view(const Sensor* msg) {
  return *msg->_impl_.field_of_view_;
}
const ::anduril::entitymanager::v1::RFConfiguration& Sensor::_Internal::rf_configuraton(const Sensor* msg) {
  return *msg->_impl_.rf_configuraton_;
}
const ::google::protobuf::Timestamp& Sensor::_Internal::last_detection_timestamp(const Sensor* msg) {
  return *msg->_impl_.last_detection_timestamp_;
}
void Sensor::clear_last_detection_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.last_detection_timestamp_ != nullptr) _impl_.last_detection_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Sensor::Sensor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Sensor)
}
inline PROTOBUF_NDEBUG_INLINE Sensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        fields_of_view_{visibility, arena, from.fields_of_view_},
        sensor_id_(arena, from.sensor_id_),
        sensor_description_(arena, from.sensor_description_) {}

Sensor::Sensor(
    ::google::protobuf::Arena* arena,
    const Sensor& from)
    : ::google::protobuf::Message(arena) {
  Sensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.field_of_view_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::FieldOfView>(arena, *from._impl_.field_of_view_)
                : nullptr;
  _impl_.rf_configuraton_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::RFConfiguration>(arena, *from._impl_.rf_configuraton_)
                : nullptr;
  _impl_.last_detection_timestamp_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.last_detection_timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operational_state_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, operational_state_),
           offsetof(Impl_, sensor_type_) -
               offsetof(Impl_, operational_state_) +
               sizeof(Impl_::sensor_type_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Sensor)
}
inline PROTOBUF_NDEBUG_INLINE Sensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        fields_of_view_{visibility, arena},
        sensor_id_(arena),
        sensor_description_(arena) {}

inline void Sensor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, field_of_view_),
           0,
           offsetof(Impl_, sensor_type_) -
               offsetof(Impl_, field_of_view_) +
               sizeof(Impl_::sensor_type_));
}
Sensor::~Sensor() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Sensor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Sensor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sensor_id_.Destroy();
  _impl_.sensor_description_.Destroy();
  delete _impl_.field_of_view_;
  delete _impl_.rf_configuraton_;
  delete _impl_.last_detection_timestamp_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Sensor::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Sensor)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fields_of_view_.Clear();
  _impl_.sensor_id_.ClearToEmpty();
  _impl_.sensor_description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.field_of_view_ != nullptr);
      _impl_.field_of_view_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rf_configuraton_ != nullptr);
      _impl_.rf_configuraton_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.last_detection_timestamp_ != nullptr);
      _impl_.last_detection_timestamp_->Clear();
    }
  }
  ::memset(&_impl_.operational_state_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sensor_type_) -
      reinterpret_cast<char*>(&_impl_.operational_state_)) + sizeof(_impl_.sensor_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Sensor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 4, 75, 2> Sensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Sensor, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966786,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Sensor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sensor_id = 1 [json_name = "sensorId", (.anduril.entitymanager.v1.componentIdentifier) = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.sensor_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.OperationalState operational_state = 3 [json_name = "operationalState"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Sensor, _impl_.operational_state_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.operational_state_)}},
    // .anduril.entitymanager.v1.FieldOfView field_of_view = 4 [json_name = "fieldOfView"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.field_of_view_)}},
    // .anduril.entitymanager.v1.SensorType sensor_type = 5 [json_name = "sensorType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Sensor, _impl_.sensor_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.sensor_type_)}},
    // string sensor_description = 6 [json_name = "sensorDescription"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.sensor_description_)}},
    // .anduril.entitymanager.v1.RFConfiguration rf_configuraton = 7 [json_name = "rfConfiguraton"];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.rf_configuraton_)}},
    // .google.protobuf.Timestamp last_detection_timestamp = 8 [json_name = "lastDetectionTimestamp"];
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 2, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.last_detection_timestamp_)}},
    // repeated .anduril.entitymanager.v1.FieldOfView fields_of_view = 9 [json_name = "fieldsOfView"];
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 3, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.fields_of_view_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string sensor_id = 1 [json_name = "sensorId", (.anduril.entitymanager.v1.componentIdentifier) = true];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.sensor_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.OperationalState operational_state = 3 [json_name = "operationalState"];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.operational_state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.entitymanager.v1.FieldOfView field_of_view = 4 [json_name = "fieldOfView"];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.field_of_view_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.SensorType sensor_type = 5 [json_name = "sensorType"];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.sensor_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string sensor_description = 6 [json_name = "sensorDescription"];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.sensor_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.RFConfiguration rf_configuraton = 7 [json_name = "rfConfiguraton"];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.rf_configuraton_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp last_detection_timestamp = 8 [json_name = "lastDetectionTimestamp"];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.last_detection_timestamp_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entitymanager.v1.FieldOfView fields_of_view = 9 [json_name = "fieldsOfView"];
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.fields_of_view_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FieldOfView>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::RFConfiguration>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FieldOfView>()},
  }}, {{
    "\37\11\0\0\0\22\0\0\0\0\0\0\0\0\0\0"
    "anduril.entitymanager.v1.Sensor"
    "sensor_id"
    "sensor_description"
  }},
};

::uint8_t* Sensor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Sensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sensor_id = 1 [json_name = "sensorId", (.anduril.entitymanager.v1.componentIdentifier) = true];
  if (!this->_internal_sensor_id().empty()) {
    const std::string& _s = this->_internal_sensor_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Sensor.sensor_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .anduril.entitymanager.v1.OperationalState operational_state = 3 [json_name = "operationalState"];
  if (this->_internal_operational_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_operational_state(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.FieldOfView field_of_view = 4 [json_name = "fieldOfView"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::field_of_view(this),
        _Internal::field_of_view(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.SensorType sensor_type = 5 [json_name = "sensorType"];
  if (this->_internal_sensor_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_sensor_type(), target);
  }

  // string sensor_description = 6 [json_name = "sensorDescription"];
  if (!this->_internal_sensor_description().empty()) {
    const std::string& _s = this->_internal_sensor_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Sensor.sensor_description");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // .anduril.entitymanager.v1.RFConfiguration rf_configuraton = 7 [json_name = "rfConfiguraton"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::rf_configuraton(this),
        _Internal::rf_configuraton(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_detection_timestamp = 8 [json_name = "lastDetectionTimestamp"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::last_detection_timestamp(this),
        _Internal::last_detection_timestamp(this).GetCachedSize(), target, stream);
  }

  // repeated .anduril.entitymanager.v1.FieldOfView fields_of_view = 9 [json_name = "fieldsOfView"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_of_view_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields_of_view().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Sensor)
  return target;
}

::size_t Sensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Sensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.FieldOfView fields_of_view = 9 [json_name = "fieldsOfView"];
  total_size += 1UL * this->_internal_fields_of_view_size();
  for (const auto& msg : this->_internal_fields_of_view()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string sensor_id = 1 [json_name = "sensorId", (.anduril.entitymanager.v1.componentIdentifier) = true];
  if (!this->_internal_sensor_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sensor_id());
  }

  // string sensor_description = 6 [json_name = "sensorDescription"];
  if (!this->_internal_sensor_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sensor_description());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.entitymanager.v1.FieldOfView field_of_view = 4 [json_name = "fieldOfView"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.field_of_view_);
    }

    // .anduril.entitymanager.v1.RFConfiguration rf_configuraton = 7 [json_name = "rfConfiguraton"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rf_configuraton_);
    }

    // .google.protobuf.Timestamp last_detection_timestamp = 8 [json_name = "lastDetectionTimestamp"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.last_detection_timestamp_);
    }

  }
  // .anduril.entitymanager.v1.OperationalState operational_state = 3 [json_name = "operationalState"];
  if (this->_internal_operational_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_operational_state());
  }

  // .anduril.entitymanager.v1.SensorType sensor_type = 5 [json_name = "sensorType"];
  if (this->_internal_sensor_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_sensor_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Sensor::_class_data_ = {
    Sensor::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Sensor::GetClassData() const {
  return &_class_data_;
}

void Sensor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Sensor*>(&to_msg);
  auto& from = static_cast<const Sensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Sensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_fields_of_view()->MergeFrom(
      from._internal_fields_of_view());
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (!from._internal_sensor_description().empty()) {
    _this->_internal_set_sensor_description(from._internal_sensor_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_field_of_view()->::anduril::entitymanager::v1::FieldOfView::MergeFrom(
          from._internal_field_of_view());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rf_configuraton()->::anduril::entitymanager::v1::RFConfiguration::MergeFrom(
          from._internal_rf_configuraton());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_last_detection_timestamp()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_last_detection_timestamp());
    }
  }
  if (from._internal_operational_state() != 0) {
    _this->_internal_set_operational_state(from._internal_operational_state());
  }
  if (from._internal_sensor_type() != 0) {
    _this->_internal_set_sensor_type(from._internal_sensor_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Sensor::CopyFrom(const Sensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Sensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Sensor::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Sensor::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Sensor::InternalSwap(Sensor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.fields_of_view_.InternalSwap(&other->_impl_.fields_of_view_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_description_, &other->_impl_.sensor_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Sensor, _impl_.sensor_type_)
      + sizeof(Sensor::_impl_.sensor_type_)
      - PROTOBUF_FIELD_OFFSET(Sensor, _impl_.field_of_view_)>(
          reinterpret_cast<char*>(&_impl_.field_of_view_),
          reinterpret_cast<char*>(&other->_impl_.field_of_view_));
}

::google::protobuf::Metadata Sensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[1]);
}
// ===================================================================

class FieldOfView::_Internal {
 public:
  using HasBits = decltype(std::declval<FieldOfView>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::ProjectedFrustum& projected_frustum(const FieldOfView* msg);
  static void set_has_projected_frustum(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Position& projected_center_ray(const FieldOfView* msg);
  static void set_has_projected_center_ray(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::entitymanager::v1::Pose& center_ray_pose(const FieldOfView* msg);
  static void set_has_center_ray_pose(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::FloatValue& range(const FieldOfView* msg);
  static void set_has_range(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::anduril::entitymanager::v1::ProjectedFrustum& FieldOfView::_Internal::projected_frustum(const FieldOfView* msg) {
  return *msg->_impl_.projected_frustum_;
}
const ::anduril::entitymanager::v1::Position& FieldOfView::_Internal::projected_center_ray(const FieldOfView* msg) {
  return *msg->_impl_.projected_center_ray_;
}
const ::anduril::entitymanager::v1::Pose& FieldOfView::_Internal::center_ray_pose(const FieldOfView* msg) {
  return *msg->_impl_.center_ray_pose_;
}
const ::google::protobuf::FloatValue& FieldOfView::_Internal::range(const FieldOfView* msg) {
  return *msg->_impl_.range_;
}
void FieldOfView::clear_projected_center_ray() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.projected_center_ray_ != nullptr) _impl_.projected_center_ray_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void FieldOfView::clear_center_ray_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.center_ray_pose_ != nullptr) _impl_.center_ray_pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void FieldOfView::clear_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.range_ != nullptr) _impl_.range_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
FieldOfView::FieldOfView(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.FieldOfView)
}
inline PROTOBUF_NDEBUG_INLINE FieldOfView::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mount_id_(arena, from.mount_id_) {}

FieldOfView::FieldOfView(
    ::google::protobuf::Arena* arena,
    const FieldOfView& from)
    : ::google::protobuf::Message(arena) {
  FieldOfView* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.projected_frustum_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::ProjectedFrustum>(arena, *from._impl_.projected_frustum_)
                : nullptr;
  _impl_.projected_center_ray_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.projected_center_ray_)
                : nullptr;
  _impl_.center_ray_pose_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Pose>(arena, *from._impl_.center_ray_pose_)
                : nullptr;
  _impl_.range_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.range_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fov_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fov_id_),
           offsetof(Impl_, mode_) -
               offsetof(Impl_, fov_id_) +
               sizeof(Impl_::mode_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.FieldOfView)
}
inline PROTOBUF_NDEBUG_INLINE FieldOfView::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mount_id_(arena) {}

inline void FieldOfView::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, projected_frustum_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, projected_frustum_) +
               sizeof(Impl_::mode_));
}
FieldOfView::~FieldOfView() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.FieldOfView)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FieldOfView::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.mount_id_.Destroy();
  delete _impl_.projected_frustum_;
  delete _impl_.projected_center_ray_;
  delete _impl_.center_ray_pose_;
  delete _impl_.range_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FieldOfView::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.FieldOfView)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mount_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.projected_frustum_ != nullptr);
      _impl_.projected_frustum_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.projected_center_ray_ != nullptr);
      _impl_.projected_center_ray_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.center_ray_pose_ != nullptr);
      _impl_.center_ray_pose_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.range_ != nullptr);
      _impl_.range_->Clear();
    }
  }
  ::memset(&_impl_.fov_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mode_) -
      reinterpret_cast<char*>(&_impl_.fov_id_)) + sizeof(_impl_.mode_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FieldOfView::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 61, 2> FieldOfView::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FieldOfView_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 fov_id = 1 [json_name = "fovId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FieldOfView, _impl_.fov_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.fov_id_)}},
    // string mount_id = 2 [json_name = "mountId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.mount_id_)}},
    // .anduril.entitymanager.v1.ProjectedFrustum projected_frustum = 3 [json_name = "projectedFrustum"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.projected_frustum_)}},
    // .anduril.entitymanager.v1.Position projected_center_ray = 4 [json_name = "projectedCenterRay"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.projected_center_ray_)}},
    // .anduril.entitymanager.v1.Pose center_ray_pose = 5 [json_name = "centerRayPose"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.center_ray_pose_)}},
    // float horizontal_fov = 6 [json_name = "horizontalFov"];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.horizontal_fov_)}},
    // float vertical_fov = 7 [json_name = "verticalFov"];
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.vertical_fov_)}},
    // .google.protobuf.FloatValue range = 8 [json_name = "range"];
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.range_)}},
    // .anduril.entitymanager.v1.SensorMode mode = 9 [json_name = "mode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FieldOfView, _impl_.mode_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 fov_id = 1 [json_name = "fovId"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.fov_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string mount_id = 2 [json_name = "mountId"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.mount_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.ProjectedFrustum projected_frustum = 3 [json_name = "projectedFrustum"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.projected_frustum_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Position projected_center_ray = 4 [json_name = "projectedCenterRay"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.projected_center_ray_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Pose center_ray_pose = 5 [json_name = "centerRayPose"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.center_ray_pose_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float horizontal_fov = 6 [json_name = "horizontalFov"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.horizontal_fov_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float vertical_fov = 7 [json_name = "verticalFov"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.vertical_fov_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .google.protobuf.FloatValue range = 8 [json_name = "range"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.range_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.SensorMode mode = 9 [json_name = "mode"];
    {PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ProjectedFrustum>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Pose>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
  }}, {{
    "\44\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "anduril.entitymanager.v1.FieldOfView"
    "mount_id"
  }},
};

::uint8_t* FieldOfView::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.FieldOfView)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 fov_id = 1 [json_name = "fovId"];
  if (this->_internal_fov_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_fov_id(), target);
  }

  // string mount_id = 2 [json_name = "mountId"];
  if (!this->_internal_mount_id().empty()) {
    const std::string& _s = this->_internal_mount_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.FieldOfView.mount_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.ProjectedFrustum projected_frustum = 3 [json_name = "projectedFrustum"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::projected_frustum(this),
        _Internal::projected_frustum(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Position projected_center_ray = 4 [json_name = "projectedCenterRay"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::projected_center_ray(this),
        _Internal::projected_center_ray(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Pose center_ray_pose = 5 [json_name = "centerRayPose"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::center_ray_pose(this),
        _Internal::center_ray_pose(this).GetCachedSize(), target, stream);
  }

  // float horizontal_fov = 6 [json_name = "horizontalFov"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov = this->_internal_horizontal_fov();
  ::uint32_t raw_horizontal_fov;
  memcpy(&raw_horizontal_fov, &tmp_horizontal_fov, sizeof(tmp_horizontal_fov));
  if (raw_horizontal_fov != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_horizontal_fov(), target);
  }

  // float vertical_fov = 7 [json_name = "verticalFov"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_fov = this->_internal_vertical_fov();
  ::uint32_t raw_vertical_fov;
  memcpy(&raw_vertical_fov, &tmp_vertical_fov, sizeof(tmp_vertical_fov));
  if (raw_vertical_fov != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_vertical_fov(), target);
  }

  // .google.protobuf.FloatValue range = 8 [json_name = "range"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::range(this),
        _Internal::range(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.SensorMode mode = 9 [json_name = "mode"];
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.FieldOfView)
  return target;
}

::size_t FieldOfView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.FieldOfView)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mount_id = 2 [json_name = "mountId"];
  if (!this->_internal_mount_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mount_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .anduril.entitymanager.v1.ProjectedFrustum projected_frustum = 3 [json_name = "projectedFrustum"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.projected_frustum_);
    }

    // .anduril.entitymanager.v1.Position projected_center_ray = 4 [json_name = "projectedCenterRay"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.projected_center_ray_);
    }

    // .anduril.entitymanager.v1.Pose center_ray_pose = 5 [json_name = "centerRayPose"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.center_ray_pose_);
    }

    // .google.protobuf.FloatValue range = 8 [json_name = "range"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.range_);
    }

  }
  // int32 fov_id = 1 [json_name = "fovId"];
  if (this->_internal_fov_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_fov_id());
  }

  // float horizontal_fov = 6 [json_name = "horizontalFov"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov = this->_internal_horizontal_fov();
  ::uint32_t raw_horizontal_fov;
  memcpy(&raw_horizontal_fov, &tmp_horizontal_fov, sizeof(tmp_horizontal_fov));
  if (raw_horizontal_fov != 0) {
    total_size += 5;
  }

  // float vertical_fov = 7 [json_name = "verticalFov"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_fov = this->_internal_vertical_fov();
  ::uint32_t raw_vertical_fov;
  memcpy(&raw_vertical_fov, &tmp_vertical_fov, sizeof(tmp_vertical_fov));
  if (raw_vertical_fov != 0) {
    total_size += 5;
  }

  // .anduril.entitymanager.v1.SensorMode mode = 9 [json_name = "mode"];
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FieldOfView::_class_data_ = {
    FieldOfView::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FieldOfView::GetClassData() const {
  return &_class_data_;
}

void FieldOfView::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FieldOfView*>(&to_msg);
  auto& from = static_cast<const FieldOfView&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.FieldOfView)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mount_id().empty()) {
    _this->_internal_set_mount_id(from._internal_mount_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_projected_frustum()->::anduril::entitymanager::v1::ProjectedFrustum::MergeFrom(
          from._internal_projected_frustum());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_projected_center_ray()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_projected_center_ray());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_center_ray_pose()->::anduril::entitymanager::v1::Pose::MergeFrom(
          from._internal_center_ray_pose());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_range()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_range());
    }
  }
  if (from._internal_fov_id() != 0) {
    _this->_internal_set_fov_id(from._internal_fov_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov = from._internal_horizontal_fov();
  ::uint32_t raw_horizontal_fov;
  memcpy(&raw_horizontal_fov, &tmp_horizontal_fov, sizeof(tmp_horizontal_fov));
  if (raw_horizontal_fov != 0) {
    _this->_internal_set_horizontal_fov(from._internal_horizontal_fov());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_fov = from._internal_vertical_fov();
  ::uint32_t raw_vertical_fov;
  memcpy(&raw_vertical_fov, &tmp_vertical_fov, sizeof(tmp_vertical_fov));
  if (raw_vertical_fov != 0) {
    _this->_internal_set_vertical_fov(from._internal_vertical_fov());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FieldOfView::CopyFrom(const FieldOfView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.FieldOfView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FieldOfView::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FieldOfView::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FieldOfView::InternalSwap(FieldOfView* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mount_id_, &other->_impl_.mount_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.mode_)
      + sizeof(FieldOfView::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(FieldOfView, _impl_.projected_frustum_)>(
          reinterpret_cast<char*>(&_impl_.projected_frustum_),
          reinterpret_cast<char*>(&other->_impl_.projected_frustum_));
}

::google::protobuf::Metadata FieldOfView::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[2]);
}
// ===================================================================

class ProjectedFrustum::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectedFrustum>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Position& upper_left(const ProjectedFrustum* msg);
  static void set_has_upper_left(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Position& upper_right(const ProjectedFrustum* msg);
  static void set_has_upper_right(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::entitymanager::v1::Position& bottom_right(const ProjectedFrustum* msg);
  static void set_has_bottom_right(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::anduril::entitymanager::v1::Position& bottom_left(const ProjectedFrustum* msg);
  static void set_has_bottom_left(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_Internal::upper_left(const ProjectedFrustum* msg) {
  return *msg->_impl_.upper_left_;
}
const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_Internal::upper_right(const ProjectedFrustum* msg) {
  return *msg->_impl_.upper_right_;
}
const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_Internal::bottom_right(const ProjectedFrustum* msg) {
  return *msg->_impl_.bottom_right_;
}
const ::anduril::entitymanager::v1::Position& ProjectedFrustum::_Internal::bottom_left(const ProjectedFrustum* msg) {
  return *msg->_impl_.bottom_left_;
}
void ProjectedFrustum::clear_upper_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.upper_left_ != nullptr) _impl_.upper_left_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ProjectedFrustum::clear_upper_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.upper_right_ != nullptr) _impl_.upper_right_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ProjectedFrustum::clear_bottom_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bottom_right_ != nullptr) _impl_.bottom_right_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ProjectedFrustum::clear_bottom_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bottom_left_ != nullptr) _impl_.bottom_left_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ProjectedFrustum::ProjectedFrustum(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.ProjectedFrustum)
}
inline PROTOBUF_NDEBUG_INLINE ProjectedFrustum::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ProjectedFrustum::ProjectedFrustum(
    ::google::protobuf::Arena* arena,
    const ProjectedFrustum& from)
    : ::google::protobuf::Message(arena) {
  ProjectedFrustum* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.upper_left_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.upper_left_)
                : nullptr;
  _impl_.upper_right_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.upper_right_)
                : nullptr;
  _impl_.bottom_right_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.bottom_right_)
                : nullptr;
  _impl_.bottom_left_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.bottom_left_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.ProjectedFrustum)
}
inline PROTOBUF_NDEBUG_INLINE ProjectedFrustum::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProjectedFrustum::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, upper_left_),
           0,
           offsetof(Impl_, bottom_left_) -
               offsetof(Impl_, upper_left_) +
               sizeof(Impl_::bottom_left_));
}
ProjectedFrustum::~ProjectedFrustum() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.ProjectedFrustum)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectedFrustum::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.upper_left_;
  delete _impl_.upper_right_;
  delete _impl_.bottom_right_;
  delete _impl_.bottom_left_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectedFrustum::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.ProjectedFrustum)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.upper_left_ != nullptr);
      _impl_.upper_left_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.upper_right_ != nullptr);
      _impl_.upper_right_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.bottom_right_ != nullptr);
      _impl_.bottom_right_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.bottom_left_ != nullptr);
      _impl_.bottom_left_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectedFrustum::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> ProjectedFrustum::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProjectedFrustum_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.Position bottom_left = 4 [json_name = "bottomLeft"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.bottom_left_)}},
    // .anduril.entitymanager.v1.Position upper_left = 1 [json_name = "upperLeft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.upper_left_)}},
    // .anduril.entitymanager.v1.Position upper_right = 2 [json_name = "upperRight"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.upper_right_)}},
    // .anduril.entitymanager.v1.Position bottom_right = 3 [json_name = "bottomRight"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.bottom_right_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Position upper_left = 1 [json_name = "upperLeft"];
    {PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.upper_left_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Position upper_right = 2 [json_name = "upperRight"];
    {PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.upper_right_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Position bottom_right = 3 [json_name = "bottomRight"];
    {PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.bottom_right_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Position bottom_left = 4 [json_name = "bottomLeft"];
    {PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.bottom_left_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
  }}, {{
  }},
};

::uint8_t* ProjectedFrustum::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.ProjectedFrustum)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Position upper_left = 1 [json_name = "upperLeft"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::upper_left(this),
        _Internal::upper_left(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Position upper_right = 2 [json_name = "upperRight"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::upper_right(this),
        _Internal::upper_right(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Position bottom_right = 3 [json_name = "bottomRight"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::bottom_right(this),
        _Internal::bottom_right(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Position bottom_left = 4 [json_name = "bottomLeft"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::bottom_left(this),
        _Internal::bottom_left(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.ProjectedFrustum)
  return target;
}

::size_t ProjectedFrustum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.ProjectedFrustum)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .anduril.entitymanager.v1.Position upper_left = 1 [json_name = "upperLeft"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upper_left_);
    }

    // .anduril.entitymanager.v1.Position upper_right = 2 [json_name = "upperRight"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upper_right_);
    }

    // .anduril.entitymanager.v1.Position bottom_right = 3 [json_name = "bottomRight"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bottom_right_);
    }

    // .anduril.entitymanager.v1.Position bottom_left = 4 [json_name = "bottomLeft"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bottom_left_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectedFrustum::_class_data_ = {
    ProjectedFrustum::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectedFrustum::GetClassData() const {
  return &_class_data_;
}

void ProjectedFrustum::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectedFrustum*>(&to_msg);
  auto& from = static_cast<const ProjectedFrustum&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.ProjectedFrustum)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_upper_left()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_upper_left());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_upper_right()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_upper_right());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_bottom_right()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_bottom_right());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bottom_left()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_bottom_left());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectedFrustum::CopyFrom(const ProjectedFrustum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.ProjectedFrustum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectedFrustum::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProjectedFrustum::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectedFrustum::InternalSwap(ProjectedFrustum* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.bottom_left_)
      + sizeof(ProjectedFrustum::_impl_.bottom_left_)
      - PROTOBUF_FIELD_OFFSET(ProjectedFrustum, _impl_.upper_left_)>(
          reinterpret_cast<char*>(&_impl_.upper_left_),
          reinterpret_cast<char*>(&other->_impl_.upper_left_));
}

::google::protobuf::Metadata ProjectedFrustum::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[3]);
}
// ===================================================================

class RFConfiguration::_Internal {
 public:
};

void RFConfiguration::clear_frequency_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frequency_range_.Clear();
}
void RFConfiguration::clear_bandwidth_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bandwidth_range_.Clear();
}
void RFConfiguration::clear_frequency_range_hz() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frequency_range_hz_.Clear();
}
RFConfiguration::RFConfiguration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.RFConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE RFConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : frequency_range_{visibility, arena, from.frequency_range_},
        bandwidth_range_{visibility, arena, from.bandwidth_range_},
        frequency_range_hz_{visibility, arena, from.frequency_range_hz_},
        bandwidth_range_hz_{visibility, arena, from.bandwidth_range_hz_},
        _cached_size_{0} {}

RFConfiguration::RFConfiguration(
    ::google::protobuf::Arena* arena,
    const RFConfiguration& from)
    : ::google::protobuf::Message(arena) {
  RFConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.RFConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE RFConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : frequency_range_{visibility, arena},
        bandwidth_range_{visibility, arena},
        frequency_range_hz_{visibility, arena},
        bandwidth_range_hz_{visibility, arena},
        _cached_size_{0} {}

inline void RFConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RFConfiguration::~RFConfiguration() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.RFConfiguration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RFConfiguration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RFConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.RFConfiguration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frequency_range_.Clear();
  _impl_.bandwidth_range_.Clear();
  _impl_.frequency_range_hz_.Clear();
  _impl_.bandwidth_range_hz_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RFConfiguration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> RFConfiguration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RFConfiguration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.bandwidth_range_hz_)}},
    // repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.frequency_range_)}},
    // repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.bandwidth_range_)}},
    // repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.frequency_range_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.frequency_range_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.bandwidth_range_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];
    {PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.frequency_range_hz_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];
    {PROTOBUF_FIELD_OFFSET(RFConfiguration, _impl_.bandwidth_range_hz_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FloatRange>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FloatRange>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FrequencyRange>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::BandwidthRange>()},
  }}, {{
  }},
};

::uint8_t* RFConfiguration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.RFConfiguration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frequency_range_size()); i < n; i++) {
    const auto& repfield = this->_internal_frequency_range().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bandwidth_range_size()); i < n; i++) {
    const auto& repfield = this->_internal_bandwidth_range().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frequency_range_hz_size()); i < n; i++) {
    const auto& repfield = this->_internal_frequency_range_hz().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bandwidth_range_hz_size()); i < n; i++) {
    const auto& repfield = this->_internal_bandwidth_range_hz().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.RFConfiguration)
  return target;
}

::size_t RFConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.RFConfiguration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];
  total_size += 1UL * this->_internal_frequency_range_size();
  for (const auto& msg : this->_internal_frequency_range()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];
  total_size += 1UL * this->_internal_bandwidth_range_size();
  for (const auto& msg : this->_internal_bandwidth_range()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];
  total_size += 1UL * this->_internal_frequency_range_hz_size();
  for (const auto& msg : this->_internal_frequency_range_hz()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];
  total_size += 1UL * this->_internal_bandwidth_range_hz_size();
  for (const auto& msg : this->_internal_bandwidth_range_hz()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RFConfiguration::_class_data_ = {
    RFConfiguration::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RFConfiguration::GetClassData() const {
  return &_class_data_;
}

void RFConfiguration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RFConfiguration*>(&to_msg);
  auto& from = static_cast<const RFConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.RFConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_frequency_range()->MergeFrom(
      from._internal_frequency_range());
  _this->_internal_mutable_bandwidth_range()->MergeFrom(
      from._internal_bandwidth_range());
  _this->_internal_mutable_frequency_range_hz()->MergeFrom(
      from._internal_frequency_range_hz());
  _this->_internal_mutable_bandwidth_range_hz()->MergeFrom(
      from._internal_bandwidth_range_hz());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RFConfiguration::CopyFrom(const RFConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.RFConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RFConfiguration::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RFConfiguration::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RFConfiguration::InternalSwap(RFConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.frequency_range_.InternalSwap(&other->_impl_.frequency_range_);
  _impl_.bandwidth_range_.InternalSwap(&other->_impl_.bandwidth_range_);
  _impl_.frequency_range_hz_.InternalSwap(&other->_impl_.frequency_range_hz_);
  _impl_.bandwidth_range_hz_.InternalSwap(&other->_impl_.bandwidth_range_hz_);
}

::google::protobuf::Metadata RFConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[4]);
}
// ===================================================================

class BandwidthRange::_Internal {
 public:
  using HasBits = decltype(std::declval<BandwidthRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Bandwidth& minimum_bandwidth(const BandwidthRange* msg);
  static void set_has_minimum_bandwidth(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Bandwidth& maximum_bandwidth(const BandwidthRange* msg);
  static void set_has_maximum_bandwidth(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::entitymanager::v1::Bandwidth& BandwidthRange::_Internal::minimum_bandwidth(const BandwidthRange* msg) {
  return *msg->_impl_.minimum_bandwidth_;
}
const ::anduril::entitymanager::v1::Bandwidth& BandwidthRange::_Internal::maximum_bandwidth(const BandwidthRange* msg) {
  return *msg->_impl_.maximum_bandwidth_;
}
BandwidthRange::BandwidthRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.BandwidthRange)
}
inline PROTOBUF_NDEBUG_INLINE BandwidthRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BandwidthRange::BandwidthRange(
    ::google::protobuf::Arena* arena,
    const BandwidthRange& from)
    : ::google::protobuf::Message(arena) {
  BandwidthRange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.minimum_bandwidth_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Bandwidth>(arena, *from._impl_.minimum_bandwidth_)
                : nullptr;
  _impl_.maximum_bandwidth_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Bandwidth>(arena, *from._impl_.maximum_bandwidth_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.BandwidthRange)
}
inline PROTOBUF_NDEBUG_INLINE BandwidthRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BandwidthRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_bandwidth_),
           0,
           offsetof(Impl_, maximum_bandwidth_) -
               offsetof(Impl_, minimum_bandwidth_) +
               sizeof(Impl_::maximum_bandwidth_));
}
BandwidthRange::~BandwidthRange() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.BandwidthRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BandwidthRange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.minimum_bandwidth_;
  delete _impl_.maximum_bandwidth_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BandwidthRange::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.BandwidthRange)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.minimum_bandwidth_ != nullptr);
      _impl_.minimum_bandwidth_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.maximum_bandwidth_ != nullptr);
      _impl_.maximum_bandwidth_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BandwidthRange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BandwidthRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BandwidthRange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.Bandwidth maximum_bandwidth = 2 [json_name = "maximumBandwidth"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_.maximum_bandwidth_)}},
    // .anduril.entitymanager.v1.Bandwidth minimum_bandwidth = 1 [json_name = "minimumBandwidth"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_.minimum_bandwidth_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Bandwidth minimum_bandwidth = 1 [json_name = "minimumBandwidth"];
    {PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_.minimum_bandwidth_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Bandwidth maximum_bandwidth = 2 [json_name = "maximumBandwidth"];
    {PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_.maximum_bandwidth_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Bandwidth>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Bandwidth>()},
  }}, {{
  }},
};

::uint8_t* BandwidthRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.BandwidthRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Bandwidth minimum_bandwidth = 1 [json_name = "minimumBandwidth"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::minimum_bandwidth(this),
        _Internal::minimum_bandwidth(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Bandwidth maximum_bandwidth = 2 [json_name = "maximumBandwidth"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::maximum_bandwidth(this),
        _Internal::maximum_bandwidth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.BandwidthRange)
  return target;
}

::size_t BandwidthRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.BandwidthRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.entitymanager.v1.Bandwidth minimum_bandwidth = 1 [json_name = "minimumBandwidth"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.minimum_bandwidth_);
    }

    // .anduril.entitymanager.v1.Bandwidth maximum_bandwidth = 2 [json_name = "maximumBandwidth"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.maximum_bandwidth_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BandwidthRange::_class_data_ = {
    BandwidthRange::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BandwidthRange::GetClassData() const {
  return &_class_data_;
}

void BandwidthRange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BandwidthRange*>(&to_msg);
  auto& from = static_cast<const BandwidthRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.BandwidthRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_minimum_bandwidth()->::anduril::entitymanager::v1::Bandwidth::MergeFrom(
          from._internal_minimum_bandwidth());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_maximum_bandwidth()->::anduril::entitymanager::v1::Bandwidth::MergeFrom(
          from._internal_maximum_bandwidth());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BandwidthRange::CopyFrom(const BandwidthRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.BandwidthRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BandwidthRange::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BandwidthRange::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BandwidthRange::InternalSwap(BandwidthRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_.maximum_bandwidth_)
      + sizeof(BandwidthRange::_impl_.maximum_bandwidth_)
      - PROTOBUF_FIELD_OFFSET(BandwidthRange, _impl_.minimum_bandwidth_)>(
          reinterpret_cast<char*>(&_impl_.minimum_bandwidth_),
          reinterpret_cast<char*>(&other->_impl_.minimum_bandwidth_));
}

::google::protobuf::Metadata BandwidthRange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[5]);
}
// ===================================================================

class Bandwidth::_Internal {
 public:
  using HasBits = decltype(std::declval<Bandwidth>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Bandwidth, _impl_._has_bits_);
  static const ::google::protobuf::DoubleValue& bandwidth_hz(const Bandwidth* msg);
  static void set_has_bandwidth_hz(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::DoubleValue& Bandwidth::_Internal::bandwidth_hz(const Bandwidth* msg) {
  return *msg->_impl_.bandwidth_hz_;
}
void Bandwidth::clear_bandwidth_hz() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bandwidth_hz_ != nullptr) _impl_.bandwidth_hz_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Bandwidth::Bandwidth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Bandwidth)
}
inline PROTOBUF_NDEBUG_INLINE Bandwidth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Bandwidth::Bandwidth(
    ::google::protobuf::Arena* arena,
    const Bandwidth& from)
    : ::google::protobuf::Message(arena) {
  Bandwidth* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bandwidth_hz_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.bandwidth_hz_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Bandwidth)
}
inline PROTOBUF_NDEBUG_INLINE Bandwidth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Bandwidth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bandwidth_hz_ = {};
}
Bandwidth::~Bandwidth() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Bandwidth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Bandwidth::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.bandwidth_hz_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Bandwidth::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Bandwidth)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bandwidth_hz_ != nullptr);
    _impl_.bandwidth_hz_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Bandwidth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Bandwidth::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Bandwidth, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Bandwidth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.DoubleValue bandwidth_hz = 1 [json_name = "bandwidthHz"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Bandwidth, _impl_.bandwidth_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue bandwidth_hz = 1 [json_name = "bandwidthHz"];
    {PROTOBUF_FIELD_OFFSET(Bandwidth, _impl_.bandwidth_hz_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

::uint8_t* Bandwidth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Bandwidth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.DoubleValue bandwidth_hz = 1 [json_name = "bandwidthHz"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::bandwidth_hz(this),
        _Internal::bandwidth_hz(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Bandwidth)
  return target;
}

::size_t Bandwidth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Bandwidth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue bandwidth_hz = 1 [json_name = "bandwidthHz"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bandwidth_hz_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Bandwidth::_class_data_ = {
    Bandwidth::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Bandwidth::GetClassData() const {
  return &_class_data_;
}

void Bandwidth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Bandwidth*>(&to_msg);
  auto& from = static_cast<const Bandwidth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Bandwidth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bandwidth_hz()->::google::protobuf::DoubleValue::MergeFrom(
        from._internal_bandwidth_hz());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Bandwidth::CopyFrom(const Bandwidth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Bandwidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Bandwidth::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Bandwidth::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Bandwidth::InternalSwap(Bandwidth* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.bandwidth_hz_, other->_impl_.bandwidth_hz_);
}

::google::protobuf::Metadata Bandwidth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fsensors_2epub_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
