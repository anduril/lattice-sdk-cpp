// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/geoentity.pub.proto

#include "anduril/entitymanager/v1/geoentity.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr MCMDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mcm_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mcm_type_{static_cast< ::anduril::entitymanager::v1::MCMDetailType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MCMDetails::MCMDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MCMDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MCMDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MCMDetailsDefaultTypeInternal() {}
  union {
    MCMDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MCMDetailsDefaultTypeInternal _MCMDetails_default_instance_;

inline constexpr FiringAuthority::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entity_ids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FiringAuthority::FiringAuthority(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FiringAuthorityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FiringAuthorityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FiringAuthorityDefaultTypeInternal() {}
  union {
    FiringAuthority _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FiringAuthorityDefaultTypeInternal _FiringAuthority_default_instance_;

inline constexpr EmergencyDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : emergency_type_{static_cast< ::anduril::entitymanager::v1::EmergencyType >(0)},
        personnel_involved_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmergencyDetails::EmergencyDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmergencyDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmergencyDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmergencyDetailsDefaultTypeInternal() {}
  union {
    EmergencyDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmergencyDetailsDefaultTypeInternal _EmergencyDetails_default_instance_;

inline constexpr ControlAreaDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::anduril::entitymanager::v1::ControlAreaType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControlAreaDetails::ControlAreaDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControlAreaDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlAreaDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlAreaDetailsDefaultTypeInternal() {}
  union {
    ControlAreaDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlAreaDetailsDefaultTypeInternal _ControlAreaDetails_default_instance_;

inline constexpr ACMDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : acm_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        acm_type_{static_cast< ::anduril::entitymanager::v1::ACMDetailType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ACMDetails::ACMDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ACMDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ACMDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ACMDetailsDefaultTypeInternal() {}
  union {
    ACMDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ACMDetailsDefaultTypeInternal _ACMDetails_default_instance_;

inline constexpr GeoEllipsoid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        forward_axis_m_{nullptr},
        side_axis_m_{nullptr},
        up_axis_m_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GeoEllipsoid::GeoEllipsoid(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoEllipsoidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoEllipsoidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoEllipsoidDefaultTypeInternal() {}
  union {
    GeoEllipsoid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoEllipsoidDefaultTypeInternal _GeoEllipsoid_default_instance_;

inline constexpr GeoEllipse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        semi_major_axis_m_{nullptr},
        semi_minor_axis_m_{nullptr},
        orientation_d_{nullptr},
        height_m_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GeoEllipse::GeoEllipse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoEllipseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoEllipseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoEllipseDefaultTypeInternal() {}
  union {
    GeoEllipse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoEllipseDefaultTypeInternal _GeoEllipse_default_instance_;

inline constexpr FSCMDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ammo_restrict_types_{},
        _ammo_restrict_types_cached_byte_size_{0},
        fscm_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        firing_authority_{nullptr},
        fscm_type_{static_cast< ::anduril::entitymanager::v1::FSCMDetailType >(0)},
        ammo_restriction_type_{static_cast< ::anduril::entitymanager::v1::AmmoRestrictionType >(0)},
        restrictive_measure_type_{static_cast< ::anduril::entitymanager::v1::RestrictiveMeasureType >(0)},
        is_ground_{false} {}

template <typename>
PROTOBUF_CONSTEXPR FSCMDetails::FSCMDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FSCMDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FSCMDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FSCMDetailsDefaultTypeInternal() {}
  union {
    FSCMDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FSCMDetailsDefaultTypeInternal _FSCMDetails_default_instance_;

inline constexpr GeoVisualDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fill_color_{nullptr},
        line_color_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GeoVisualDetails::GeoVisualDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoVisualDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoVisualDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoVisualDetailsDefaultTypeInternal() {}
  union {
    GeoVisualDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoVisualDetailsDefaultTypeInternal _GeoVisualDetails_default_instance_;

inline constexpr GeoPolygonPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        height_m_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GeoPolygonPosition::GeoPolygonPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoPolygonPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoPolygonPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoPolygonPositionDefaultTypeInternal() {}
  union {
    GeoPolygonPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoPolygonPositionDefaultTypeInternal _GeoPolygonPosition_default_instance_;

inline constexpr GeoPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GeoPoint::GeoPoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoPointDefaultTypeInternal() {}
  union {
    GeoPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoPointDefaultTypeInternal _GeoPoint_default_instance_;

inline constexpr GeoLine::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : positions_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeoLine::GeoLine(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoLineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoLineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoLineDefaultTypeInternal() {}
  union {
    GeoLine _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoLineDefaultTypeInternal _GeoLine_default_instance_;

inline constexpr LinearRing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : points_{},
        positions_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LinearRing::LinearRing(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LinearRingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinearRingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinearRingDefaultTypeInternal() {}
  union {
    LinearRing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinearRingDefaultTypeInternal _LinearRing_default_instance_;

inline constexpr GeoDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        visual_details_{nullptr},
        type_{static_cast< ::anduril::entitymanager::v1::GeoType >(0)},
        type_details_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GeoDetails::GeoDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoDetailsDefaultTypeInternal() {}
  union {
    GeoDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoDetailsDefaultTypeInternal _GeoDetails_default_instance_;

inline constexpr GeoPolygon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rings_{},
        is_rectangle_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeoPolygon::GeoPolygon(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoPolygonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoPolygonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoPolygonDefaultTypeInternal() {}
  union {
    GeoPolygon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoPolygonDefaultTypeInternal _GeoPolygon_default_instance_;

inline constexpr GeoShape::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shape_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GeoShape::GeoShape(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeoShapeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoShapeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoShapeDefaultTypeInternal() {}
  union {
    GeoShape _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoShapeDefaultTypeInternal _GeoShape_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[16];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[8];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoDetails, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoDetails, _impl_.type_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoDetails, _impl_.visual_details_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoDetails, _impl_.type_details_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::EmergencyDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::EmergencyDetails, _impl_.emergency_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::EmergencyDetails, _impl_.personnel_involved_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoShape, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoShape, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoShape, _impl_.shape_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPoint, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPoint, _impl_.position_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoLine, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoLine, _impl_.positions_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPolygon, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPolygon, _impl_.rings_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPolygon, _impl_.is_rectangle_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipse, _impl_.semi_major_axis_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipse, _impl_.semi_minor_axis_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipse, _impl_.orientation_d_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipse, _impl_.height_m_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipsoid, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipsoid, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipsoid, _impl_.forward_axis_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipsoid, _impl_.side_axis_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoEllipsoid, _impl_.up_axis_m_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LinearRing, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LinearRing, _impl_.points_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::LinearRing, _impl_.positions_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPolygonPosition, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPolygonPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPolygonPosition, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoPolygonPosition, _impl_.height_m_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoVisualDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoVisualDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoVisualDetails, _impl_.fill_color_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoVisualDetails, _impl_.line_color_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_.fscm_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_.fscm_description_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_.firing_authority_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_.ammo_restriction_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_.restrictive_measure_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_.ammo_restrict_types_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FSCMDetails, _impl_.is_ground_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ACMDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ACMDetails, _impl_.acm_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ACMDetails, _impl_.acm_description_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MCMDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MCMDetails, _impl_.mcm_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MCMDetails, _impl_.mcm_description_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FiringAuthority, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::FiringAuthority, _impl_.entity_ids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ControlAreaDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ControlAreaDetails, _impl_.type_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::anduril::entitymanager::v1::GeoDetails)},
        {23, -1, -1, sizeof(::anduril::entitymanager::v1::EmergencyDetails)},
        {33, -1, -1, sizeof(::anduril::entitymanager::v1::GeoShape)},
        {47, 56, -1, sizeof(::anduril::entitymanager::v1::GeoPoint)},
        {57, -1, -1, sizeof(::anduril::entitymanager::v1::GeoLine)},
        {66, -1, -1, sizeof(::anduril::entitymanager::v1::GeoPolygon)},
        {76, 88, -1, sizeof(::anduril::entitymanager::v1::GeoEllipse)},
        {92, 103, -1, sizeof(::anduril::entitymanager::v1::GeoEllipsoid)},
        {106, -1, -1, sizeof(::anduril::entitymanager::v1::LinearRing)},
        {116, 126, -1, sizeof(::anduril::entitymanager::v1::GeoPolygonPosition)},
        {128, 138, -1, sizeof(::anduril::entitymanager::v1::GeoVisualDetails)},
        {140, 155, -1, sizeof(::anduril::entitymanager::v1::FSCMDetails)},
        {162, -1, -1, sizeof(::anduril::entitymanager::v1::ACMDetails)},
        {172, -1, -1, sizeof(::anduril::entitymanager::v1::MCMDetails)},
        {182, -1, -1, sizeof(::anduril::entitymanager::v1::FiringAuthority)},
        {191, -1, -1, sizeof(::anduril::entitymanager::v1::ControlAreaDetails)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_GeoDetails_default_instance_._instance,
    &::anduril::entitymanager::v1::_EmergencyDetails_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoShape_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoPoint_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoLine_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoPolygon_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoEllipse_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoEllipsoid_default_instance_._instance,
    &::anduril::entitymanager::v1::_LinearRing_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoPolygonPosition_default_instance_._instance,
    &::anduril::entitymanager::v1::_GeoVisualDetails_default_instance_._instance,
    &::anduril::entitymanager::v1::_FSCMDetails_default_instance_._instance,
    &::anduril::entitymanager::v1::_ACMDetails_default_instance_._instance,
    &::anduril::entitymanager::v1::_MCMDetails_default_instance_._instance,
    &::anduril::entitymanager::v1::_FiringAuthority_default_instance_._instance,
    &::anduril::entitymanager::v1::_ControlAreaDetails_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n,anduril/entitymanager/v1/geoentity.pub"
    ".proto\022\030anduril.entitymanager.v1\032+anduri"
    "l/entitymanager/v1/location.pub.proto\032\034a"
    "nduril/type/color.pub.proto\032\036google/prot"
    "obuf/wrappers.proto\"\366\003\n\nGeoDetails\0225\n\004ty"
    "pe\030\001 \001(\0162!.anduril.entitymanager.v1.GeoT"
    "ypeR\004type\022J\n\temergency\030\002 \001(\0132*.anduril.e"
    "ntitymanager.v1.EmergencyDetailsH\000R\temer"
    "gency\022;\n\004fscm\030\004 \001(\0132%.anduril.entitymana"
    "ger.v1.FSCMDetailsH\000R\004fscm\022Q\n\014control_ar"
    "ea\030\005 \001(\0132,.anduril.entitymanager.v1.Cont"
    "rolAreaDetailsH\000R\013controlArea\0228\n\003acm\030\006 \001"
    "(\0132$.anduril.entitymanager.v1.ACMDetails"
    "H\000R\003acm\0228\n\003mcm\030\007 \001(\0132$.anduril.entityman"
    "ager.v1.MCMDetailsH\000R\003mcm\022Q\n\016visual_deta"
    "ils\030\003 \001(\0132*.anduril.entitymanager.v1.Geo"
    "VisualDetailsR\rvisualDetailsB\016\n\014type_det"
    "ails\"\221\001\n\020EmergencyDetails\022N\n\016emergency_t"
    "ype\030\001 \001(\0162\'.anduril.entitymanager.v1.Eme"
    "rgencyTypeR\remergencyType\022-\n\022personnel_i"
    "nvolved\030\002 \001(\rR\021personnelInvolved\"\324\002\n\010Geo"
    "Shape\022:\n\005point\030\001 \001(\0132\".anduril.entityman"
    "ager.v1.GeoPointH\000R\005point\0227\n\004line\030\002 \001(\0132"
    "!.anduril.entitymanager.v1.GeoLineH\000R\004li"
    "ne\022@\n\007polygon\030\003 \001(\0132$.anduril.entitymana"
    "ger.v1.GeoPolygonH\000R\007polygon\022@\n\007ellipse\030"
    "\004 \001(\0132$.anduril.entitymanager.v1.GeoElli"
    "pseH\000R\007ellipse\022F\n\tellipsoid\030\005 \001(\0132&.andu"
    "ril.entitymanager.v1.GeoEllipsoidH\000R\tell"
    "ipsoidB\007\n\005shape\"J\n\010GeoPoint\022>\n\010position\030"
    "\001 \001(\0132\".anduril.entitymanager.v1.Positio"
    "nR\010position\"K\n\007GeoLine\022@\n\tpositions\030\001 \003("
    "\0132\".anduril.entitymanager.v1.PositionR\tp"
    "ositions\"k\n\nGeoPolygon\022:\n\005rings\030\001 \003(\0132$."
    "anduril.entitymanager.v1.LinearRingR\005rin"
    "gs\022!\n\014is_rectangle\030\002 \001(\010R\013isRectangle\"\232\002"
    "\n\nGeoEllipse\022G\n\021semi_major_axis_m\030\002 \001(\0132"
    "\034.google.protobuf.DoubleValueR\016semiMajor"
    "AxisM\022G\n\021semi_minor_axis_m\030\003 \001(\0132\034.googl"
    "e.protobuf.DoubleValueR\016semiMinorAxisM\022A"
    "\n\rorientation_d\030\004 \001(\0132\034.google.protobuf."
    "DoubleValueR\014orientationD\0227\n\010height_m\030\005 "
    "\001(\0132\034.google.protobuf.DoubleValueR\007heigh"
    "tM\"\312\001\n\014GeoEllipsoid\022B\n\016forward_axis_m\030\001 "
    "\001(\0132\034.google.protobuf.DoubleValueR\014forwa"
    "rdAxisM\022<\n\013side_axis_m\030\002 \001(\0132\034.google.pr"
    "otobuf.DoubleValueR\tsideAxisM\0228\n\tup_axis"
    "_m\030\003 \001(\0132\034.google.protobuf.DoubleValueR\007"
    "upAxisM\"\230\001\n\nLinearRing\022>\n\006points\030\001 \003(\0132\""
    ".anduril.entitymanager.v1.PositionB\002\030\001R\006"
    "points\022J\n\tpositions\030\002 \003(\0132,.anduril.enti"
    "tymanager.v1.GeoPolygonPositionR\tpositio"
    "ns\"\214\001\n\022GeoPolygonPosition\022>\n\010position\030\001 "
    "\001(\0132\".anduril.entitymanager.v1.PositionR"
    "\010position\0226\n\010height_m\030\002 \001(\0132\033.google.pro"
    "tobuf.FloatValueR\007heightM\"z\n\020GeoVisualDe"
    "tails\0222\n\nfill_color\030\001 \001(\0132\023.anduril.type"
    ".ColorR\tfillColor\0222\n\nline_color\030\002 \001(\0132\023."
    "anduril.type.ColorR\tlineColor\"\244\004\n\013FSCMDe"
    "tails\022E\n\tfscm_type\030\001 \001(\0162(.anduril.entit"
    "ymanager.v1.FSCMDetailTypeR\010fscmType\022)\n\020"
    "fscm_description\030\002 \001(\tR\017fscmDescription\022"
    "T\n\020firing_authority\030\003 \001(\0132).anduril.enti"
    "tymanager.v1.FiringAuthorityR\017firingAuth"
    "ority\022e\n\025ammo_restriction_type\030\004 \001(\0162-.a"
    "nduril.entitymanager.v1.AmmoRestrictionT"
    "ypeB\002\030\001R\023ammoRestrictionType\022j\n\030restrict"
    "ive_measure_type\030\005 \001(\01620.anduril.entitym"
    "anager.v1.RestrictiveMeasureTypeR\026restri"
    "ctiveMeasureType\022]\n\023ammo_restrict_types\030"
    "\006 \003(\0162-.anduril.entitymanager.v1.AmmoRes"
    "trictionTypeR\021ammoRestrictTypes\022\033\n\tis_gr"
    "ound\030\007 \001(\010R\010isGround\"y\n\nACMDetails\022B\n\010ac"
    "m_type\030\001 \001(\0162\'.anduril.entitymanager.v1."
    "ACMDetailTypeR\007acmType\022\'\n\017acm_descriptio"
    "n\030\002 \001(\tR\016acmDescription\"y\n\nMCMDetails\022B\n"
    "\010mcm_type\030\001 \001(\0162\'.anduril.entitymanager."
    "v1.MCMDetailTypeR\007mcmType\022\'\n\017mcm_descrip"
    "tion\030\002 \001(\tR\016mcmDescription\"0\n\017FiringAuth"
    "ority\022\035\n\nentity_ids\030\001 \003(\tR\tentityIds\"S\n\022"
    "ControlAreaDetails\022=\n\004type\030\001 \001(\0162).andur"
    "il.entitymanager.v1.ControlAreaTypeR\004typ"
    "e*\351\001\n\007GeoType\022\024\n\020GEO_TYPE_INVALID\020\000\022\024\n\020G"
    "EO_TYPE_GENERAL\020\001\022\023\n\017GEO_TYPE_HAZARD\020\002\022\026"
    "\n\022GEO_TYPE_EMERGENCY\020\003\022\021\n\rGEO_TYPE_FSCM\020"
    "\004\022\034\n\030GEO_TYPE_ENGAGEMENT_ZONE\020\005\022\031\n\025GEO_T"
    "YPE_CONTROL_AREA\020\006\022\025\n\021GEO_TYPE_BULLSEYE\020"
    "\007\022\020\n\014GEO_TYPE_ACM\020\010\022\020\n\014GEO_TYPE_MCM\020\t*\262\002"
    "\n\rEmergencyType\022\032\n\026EMERGENCY_TYPE_INVALI"
    "D\020\000\022 \n\034EMERGENCY_TYPE_DOWN_AIRCRAFT\020\001\022\037\n"
    "\033EMERGENCY_TYPE_MAN_IN_WATER\020\002\022\033\n\027EMERGE"
    "NCY_TYPE_DITCHING\020\003\022\032\n\026EMERGENCY_TYPE_BA"
    "ILOUT\020\004\022%\n!EMERGENCY_TYPE_DISTRESSED_VEH"
    "ICLE\020\005\022\"\n\036EMERGENCY_TYPE_GROUND_INCIDENT"
    "\020\006\022\032\n\026EMERGENCY_TYPE_MEDICAL\020\007\022\"\n\036EMERGE"
    "NCY_TYPE_ISOLATED_PERSON\020\010*\241\002\n\017ControlAr"
    "eaType\022\035\n\031CONTROL_AREA_TYPE_INVALID\020\000\022\"\n"
    "\036CONTROL_AREA_TYPE_KEEP_IN_ZONE\020\001\022#\n\037CON"
    "TROL_AREA_TYPE_KEEP_OUT_ZONE\020\002\022 \n\034CONTRO"
    "L_AREA_TYPE_DITCH_ZONE\020\003\022+\n\'CONTROL_AREA"
    "_TYPE_OBSERVATION_EXCLUSION\020\004\022+\n\'CONTROL"
    "_AREA_TYPE_OBSERVATION_INCLUSION\020\005\022*\n&CO"
    "NTROL_AREA_TYPE_OBSERVATION_PRIORITY\020\006*\241"
    "\t\n\016FSCMDetailType\022\034\n\030FSCM_DETAIL_TYPE_IN"
    "VALID\020\000\022$\n FSCM_DETAIL_TYPE_DEAD_SPACE_A"
    "REA\020\001\022!\n\035FSCM_DETAIL_TYPE_NO_FIRE_AREA\020\002"
    "\022#\n\037FSCM_DETAIL_TYPE_FREE_FIRE_AREA\020\003\022*\n"
    "&FSCM_DETAIL_TYPE_RESTRICTIVE_FIRE_AREA\020"
    "\004\022#\n\037FSCM_DETAIL_TYPE_SAFE_FIRE_AREA\020\005\022/"
    "\n+FSCM_DETAIL_TYPE_AIRSPACE_COORDINATION"
    "_AREA\020\006\0224\n0FSCM_DETAIL_TYPE_FORWARD_EDGE"
    "_OF_THE_BATTLE_AREA\020\007\022&\n\"FSCM_DETAIL_TYP"
    "E_FIRE_SUPPORT_AREA\020\010\022*\n&FSCM_DETAIL_TYP"
    "E_PATROL_RECONNAISSANCE\020\t\022+\n\'FSCM_DETAIL"
    "_TYPE_ZONE_OF_RESPONSIBILITY\020\n\0220\n,FSCM_D"
    "ETAIL_TYPE_PRIORITY_CALL_FOR_FIRE_ZONE\020\013"
    "\022\"\n\036FSCM_DETAIL_TYPE_CENSORED_ZONE\020\014\022#\n\037"
    "FSCM_DETAIL_TYPE_ZONE_OF_ACTION\020\r\022+\n\'FSC"
    "M_DETAIL_TYPE_CRITICAL_FRIENDLY_ZONE\020\016\022("
    "\n$FSCM_DETAIL_TYPE_PLATOON_AREA_HAZARD\020\017"
    "\022\'\n#FSCM_DETAIL_TYPE_TARGET_AREA_HAZARD\020"
    "\020\022/\n+FSCM_DETAIL_TYPE_RESTRICTED_OPERATI"
    "ONS_ZONE\020\021\022!\n\035FSCM_DETAIL_TYPE_AIR_CORRI"
    "DOR\020\022\022*\n&FSCM_DETAIL_TYPE_RESTRICTIVE_FI"
    "RE_LINE\020\023\0227\n3FSCM_DETAIL_TYPE_COORDINATE"
    "D_FIRE_LINE_NO_FIRE_LINE\020\024\022\"\n\036FSCM_DETAI"
    "L_TYPE_BOUNDARY_LINE\020\025\022!\n\035FSCM_DETAIL_TY"
    "PE_FORWARD_LINE\020\026\022&\n\"FSCM_DETAIL_TYPE_FI"
    "RE_SUPPORT_LINE\020\027\022&\n\"FSCM_DETAIL_TYPE_LI"
    "NE_OF_DEPARTURE\020\030\022$\n FSCM_DETAIL_TYPE_LI"
    "NE_OF_CONTACT\020\031\0226\n2FSCM_DETAIL_TYPE_LINE"
    "_OF_DEPARTURE_LINE_OF_CONTACT\020\032\022!\n\035FSCM_"
    "DETAIL_TYPE_ZONE_OF_FIRE\020\033*\346\t\n\rACMDetail"
    "Type\022\033\n\027ACM_DETAIL_TYPE_INVALID\020\000\022 \n\034ACM"
    "_DETAIL_TYPE_AIR_CORRIDOR\020\001\022&\n\"ACM_DETAI"
    "L_TYPE_MINIMUM_RISK_ROUTE\020\002\0220\n,ACM_DETAI"
    "L_TYPE_TEMPORARY_MINIMUM_RISK_ROUTE\020\003\022!\n"
    "\035ACM_DETAIL_TYPE_TRANSIT_ROUTE\020\004\022+\n\'ACM_"
    "DETAIL_TYPE_LOW_LEVEL_TRANSIT_ROUTE\020\005\022$\n"
    " ACM_DETAIL_TYPE_SPECIAL_CORRIDOR\020\006\022;\n7A"
    "CM_DETAIL_TYPE_STANDARD_USE_ARMY_AIRCRAF"
    "T_FLIGHT_ROUTE\020\007\022.\n*ACM_DETAIL_TYPE_REST"
    "RICTED_OPERATIONS_ZONE\020\010\022-\n)ACM_DETAIL_T"
    "YPE_AIR_TO_AIR_REFUELING_AREA\020\t\0225\n1ACM_D"
    "ETAIL_TYPE_AIRBORNE_COMMAND_AND_CONTROL_"
    "AREA\020\n\022/\n+ACM_DETAIL_TYPE_AIRBORNE_EARLY"
    "_WARNING_AREA\020\013\022*\n&ACM_DETAIL_TYPE_CLOSE"
    "_AIR_SUPPORT_AREA\020\014\022%\n!ACM_DETAIL_TYPE_C"
    "OMBAT_AIR_PATROL\020\r\022\035\n\031ACM_DETAIL_TYPE_DR"
    "OP_ZONE\020\016\022%\n!ACM_DETAIL_TYPE_ELECTRONIC_"
    "COMBAT\020\017\022 \n\034ACM_DETAIL_TYPE_LANDING_ZONE"
    "\020\020\022\037\n\033ACM_DETAIL_TYPE_PICKUP_ZONE\020\021\022\'\n#A"
    "CM_DETAIL_TYPE_RECONNAISSANCE_AREA\020\022\0221\n-"
    "ACM_DETAIL_TYPE_SPECIAL_OPERATIONS_FORCE"
    "_AREA\020\023\0225\n1ACM_DETAIL_TYPE_SURFACE_TO_SU"
    "RFACE_MISSILE_SYSTEM\020\024\0220\n,ACM_DETAIL_TYP"
    "E_SURFACE_TO_SURFACE_MUNITIONS\020\025\022*\n&ACM_"
    "DETAIL_TYPE_UNMANNED_AIRCRAFT_AREA\020\026\022)\n%"
    "ACM_DETAIL_TYPE_COORDINATING_ALTITUDE\020\027\022"
    "&\n\"ACM_DETAIL_TYPE_COORDINATION_LEVEL\020\030\022"
    "6\n2ACM_DETAIL_TYPE_HIGH_DENSITY_AIRSPACE"
    "_CONTROL_ZONE\020\031\022\037\n\033ACM_DETAIL_TYPE_NO_FL"
    "Y_AREA\020\032\022$\n ACM_DETAIL_TYPE_TRANSIT_CORR"
    "IDOR\020\033\022#\n\037ACM_DETAIL_TYPE_RETURN_TO_FORC"
    "E\020\034*\237\004\n\023AmmoRestrictionType\022!\n\035AMMO_REST"
    "RICTION_TYPE_INVALID\020\000\0222\n.AMMO_RESTRICTI"
    "ON_TYPE_HIGH_EXPLOSIVE_MUNITIONS\020\001\0229\n5AM"
    "MO_RESTRICTION_TYPE_IMPROVED_CONVENTIONA"
    "L_MUNITIONS\020\002\022,\n(AMMO_RESTRICTION_TYPE_C"
    "HEMICAL_MUNITIONS\020\003\022+\n\'AMMO_RESTRICTION_"
    "TYPE_NUCLEAR_MUNITIONS\020\004\0224\n0AMMO_RESTRIC"
    "TION_TYPE_WHITE_PHOSPHORUS_MUNITIONS\020\005\0220"
    "\n,AMMO_RESTRICTION_TYPE_ILLUMINATION_MUN"
    "ITIONS\020\006\0223\n/AMMO_RESTRICTION_TYPE_TERMIN"
    "AL_HOMING_MUNITIONS\020\007\022*\n&AMMO_RESTRICTIO"
    "N_TYPE_FASCAM_MUNITIONS\020\010\022)\n%AMMO_RESTRI"
    "CTION_TYPE_SMOKE_MUNITIONS\020\t\022\'\n#AMMO_RES"
    "TRICTION_TYPE_ALL_MUNITIONS\020\n*\273\003\n\026Restri"
    "ctiveMeasureType\022$\n RESTRICTIVE_MEASURE_"
    "TYPE_INVALID\020\000\022-\n)RESTRICTIVE_MEASURE_TY"
    "PE_STAY_INSIDE_AREA\020\001\022.\n*RESTRICTIVE_MEA"
    "SURE_TYPE_STAY_OUTSIDE_AREA\020\002\022,\n(RESTRIC"
    "TIVE_MEASURE_TYPE_STAY_ABOVE_AREA\020\003\022,\n(R"
    "ESTRICTIVE_MEASURE_TYPE_STAY_BELOW_AREA\020"
    "\004\022/\n+RESTRICTIVE_MEASURE_TYPE_STAY_NORTH"
    "_OF_LINE\020\005\022.\n*RESTRICTIVE_MEASURE_TYPE_S"
    "TAY_EAST_OF_LINE\020\006\022/\n+RESTRICTIVE_MEASUR"
    "E_TYPE_STAY_SOUTH_OF_LINE\020\007\022.\n*RESTRICTI"
    "VE_MEASURE_TYPE_STAY_WEST_OF_LINE\020\010*\205\001\n\r"
    "MCMDetailType\022\033\n\027MCM_DETAIL_TYPE_INVALID"
    "\020\000\022*\n&MCM_DETAIL_TYPE_NAMED_AREA_OF_INTE"
    "REST\020\001\022+\n\'MCM_DETAIL_TYPE_TARGET_AREA_OF"
    "_INTEREST\020\002B\202\002\n\034com.anduril.entitymanage"
    "r.v1B\021GeoentityPubProtoP\001ZMghe.anduril.d"
    "ev/anduril/andurilapis-go/anduril/entity"
    "manager/v1;entitymanager\242\002\003AEX\252\002\030Anduril"
    ".Entitymanager.V1\312\002\030Anduril\\Entitymanage"
    "r\\V1\342\002$Anduril\\Entitymanager\\V1\\GPBMetad"
    "ata\352\002\032Anduril::Entitymanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_deps[3] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
        &::descriptor_table_anduril_2ftype_2fcolor_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto = {
    false,
    false,
    7960,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto,
    "anduril/entitymanager/v1/geoentity.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_deps,
    3,
    16,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
namespace anduril {
namespace entitymanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* GeoType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t GeoType_internal_data_[] = {
    655360u, 0u, };
bool GeoType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
const ::google::protobuf::EnumDescriptor* EmergencyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t EmergencyType_internal_data_[] = {
    589824u, 0u, };
bool EmergencyType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* ControlAreaType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ControlAreaType_internal_data_[] = {
    458752u, 0u, };
bool ControlAreaType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* FSCMDetailType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t FSCMDetailType_internal_data_[] = {
    1835008u, 0u, };
bool FSCMDetailType_IsValid(int value) {
  return 0 <= value && value <= 27;
}
const ::google::protobuf::EnumDescriptor* ACMDetailType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t ACMDetailType_internal_data_[] = {
    1900544u, 0u, };
bool ACMDetailType_IsValid(int value) {
  return 0 <= value && value <= 28;
}
const ::google::protobuf::EnumDescriptor* AmmoRestrictionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t AmmoRestrictionType_internal_data_[] = {
    720896u, 0u, };
bool AmmoRestrictionType_IsValid(int value) {
  return 0 <= value && value <= 10;
}
const ::google::protobuf::EnumDescriptor* RestrictiveMeasureType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t RestrictiveMeasureType_internal_data_[] = {
    589824u, 0u, };
bool RestrictiveMeasureType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* MCMDetailType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t MCMDetailType_internal_data_[] = {
    196608u, 0u, };
bool MCMDetailType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class GeoDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<GeoDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoDetails, _impl_._oneof_case_);
  static const ::anduril::entitymanager::v1::EmergencyDetails& emergency(const GeoDetails* msg);
  static const ::anduril::entitymanager::v1::FSCMDetails& fscm(const GeoDetails* msg);
  static const ::anduril::entitymanager::v1::ControlAreaDetails& control_area(const GeoDetails* msg);
  static const ::anduril::entitymanager::v1::ACMDetails& acm(const GeoDetails* msg);
  static const ::anduril::entitymanager::v1::MCMDetails& mcm(const GeoDetails* msg);
  static const ::anduril::entitymanager::v1::GeoVisualDetails& visual_details(const GeoDetails* msg);
  static void set_has_visual_details(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::entitymanager::v1::EmergencyDetails& GeoDetails::_Internal::emergency(const GeoDetails* msg) {
  return *msg->_impl_.type_details_.emergency_;
}
const ::anduril::entitymanager::v1::FSCMDetails& GeoDetails::_Internal::fscm(const GeoDetails* msg) {
  return *msg->_impl_.type_details_.fscm_;
}
const ::anduril::entitymanager::v1::ControlAreaDetails& GeoDetails::_Internal::control_area(const GeoDetails* msg) {
  return *msg->_impl_.type_details_.control_area_;
}
const ::anduril::entitymanager::v1::ACMDetails& GeoDetails::_Internal::acm(const GeoDetails* msg) {
  return *msg->_impl_.type_details_.acm_;
}
const ::anduril::entitymanager::v1::MCMDetails& GeoDetails::_Internal::mcm(const GeoDetails* msg) {
  return *msg->_impl_.type_details_.mcm_;
}
const ::anduril::entitymanager::v1::GeoVisualDetails& GeoDetails::_Internal::visual_details(const GeoDetails* msg) {
  return *msg->_impl_.visual_details_;
}
void GeoDetails::set_allocated_emergency(::anduril::entitymanager::v1::EmergencyDetails* emergency) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type_details();
  if (emergency) {
    ::google::protobuf::Arena* submessage_arena = emergency->GetArena();
    if (message_arena != submessage_arena) {
      emergency = ::google::protobuf::internal::GetOwnedMessage(message_arena, emergency, submessage_arena);
    }
    set_has_emergency();
    _impl_.type_details_.emergency_ = emergency;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoDetails.emergency)
}
void GeoDetails::set_allocated_fscm(::anduril::entitymanager::v1::FSCMDetails* fscm) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type_details();
  if (fscm) {
    ::google::protobuf::Arena* submessage_arena = fscm->GetArena();
    if (message_arena != submessage_arena) {
      fscm = ::google::protobuf::internal::GetOwnedMessage(message_arena, fscm, submessage_arena);
    }
    set_has_fscm();
    _impl_.type_details_.fscm_ = fscm;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoDetails.fscm)
}
void GeoDetails::set_allocated_control_area(::anduril::entitymanager::v1::ControlAreaDetails* control_area) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type_details();
  if (control_area) {
    ::google::protobuf::Arena* submessage_arena = control_area->GetArena();
    if (message_arena != submessage_arena) {
      control_area = ::google::protobuf::internal::GetOwnedMessage(message_arena, control_area, submessage_arena);
    }
    set_has_control_area();
    _impl_.type_details_.control_area_ = control_area;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoDetails.control_area)
}
void GeoDetails::set_allocated_acm(::anduril::entitymanager::v1::ACMDetails* acm) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type_details();
  if (acm) {
    ::google::protobuf::Arena* submessage_arena = acm->GetArena();
    if (message_arena != submessage_arena) {
      acm = ::google::protobuf::internal::GetOwnedMessage(message_arena, acm, submessage_arena);
    }
    set_has_acm();
    _impl_.type_details_.acm_ = acm;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoDetails.acm)
}
void GeoDetails::set_allocated_mcm(::anduril::entitymanager::v1::MCMDetails* mcm) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type_details();
  if (mcm) {
    ::google::protobuf::Arena* submessage_arena = mcm->GetArena();
    if (message_arena != submessage_arena) {
      mcm = ::google::protobuf::internal::GetOwnedMessage(message_arena, mcm, submessage_arena);
    }
    set_has_mcm();
    _impl_.type_details_.mcm_ = mcm;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoDetails.mcm)
}
GeoDetails::GeoDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoDetails)
}
inline PROTOBUF_NDEBUG_INLINE GeoDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_details_{},
        _oneof_case_{from._oneof_case_[0]} {}

GeoDetails::GeoDetails(
    ::google::protobuf::Arena* arena,
    const GeoDetails& from)
    : ::google::protobuf::Message(arena) {
  GeoDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.visual_details_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::GeoVisualDetails>(arena, *from._impl_.visual_details_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;
  switch (type_details_case()) {
    case TYPE_DETAILS_NOT_SET:
      break;
      case kEmergency:
        _impl_.type_details_.emergency_ = CreateMaybeMessage<::anduril::entitymanager::v1::EmergencyDetails>(arena, *from._impl_.type_details_.emergency_);
        break;
      case kFscm:
        _impl_.type_details_.fscm_ = CreateMaybeMessage<::anduril::entitymanager::v1::FSCMDetails>(arena, *from._impl_.type_details_.fscm_);
        break;
      case kControlArea:
        _impl_.type_details_.control_area_ = CreateMaybeMessage<::anduril::entitymanager::v1::ControlAreaDetails>(arena, *from._impl_.type_details_.control_area_);
        break;
      case kAcm:
        _impl_.type_details_.acm_ = CreateMaybeMessage<::anduril::entitymanager::v1::ACMDetails>(arena, *from._impl_.type_details_.acm_);
        break;
      case kMcm:
        _impl_.type_details_.mcm_ = CreateMaybeMessage<::anduril::entitymanager::v1::MCMDetails>(arena, *from._impl_.type_details_.mcm_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoDetails)
}
inline PROTOBUF_NDEBUG_INLINE GeoDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_details_{},
        _oneof_case_{} {}

inline void GeoDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, visual_details_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, visual_details_) +
               sizeof(Impl_::type_));
}
GeoDetails::~GeoDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.visual_details_;
  if (has_type_details()) {
    clear_type_details();
  }
  _impl_.~Impl_();
}

void GeoDetails::clear_type_details() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entitymanager.v1.GeoDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_details_case()) {
    case kEmergency: {
      if (GetArena() == nullptr) {
        delete _impl_.type_details_.emergency_;
      }
      break;
    }
    case kFscm: {
      if (GetArena() == nullptr) {
        delete _impl_.type_details_.fscm_;
      }
      break;
    }
    case kControlArea: {
      if (GetArena() == nullptr) {
        delete _impl_.type_details_.control_area_;
      }
      break;
    }
    case kAcm: {
      if (GetArena() == nullptr) {
        delete _impl_.type_details_.acm_;
      }
      break;
    }
    case kMcm: {
      if (GetArena() == nullptr) {
        delete _impl_.type_details_.mcm_;
      }
      break;
    }
    case TYPE_DETAILS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_DETAILS_NOT_SET;
}


PROTOBUF_NOINLINE void GeoDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.visual_details_ != nullptr);
    _impl_.visual_details_->Clear();
  }
  _impl_.type_ = 0;
  clear_type_details();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 7, 6, 0, 2> GeoDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_._has_bits_),
    0, // no _extensions_
    7, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.GeoType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GeoDetails, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.GeoVisualDetails visual_details = 3 [json_name = "visualDetails"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.visual_details_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.GeoType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.entitymanager.v1.EmergencyDetails emergency = 2 [json_name = "emergency"];
    {PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_details_.emergency_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoVisualDetails visual_details = 3 [json_name = "visualDetails"];
    {PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.visual_details_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.FSCMDetails fscm = 4 [json_name = "fscm"];
    {PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_details_.fscm_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.ControlAreaDetails control_area = 5 [json_name = "controlArea"];
    {PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_details_.control_area_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.ACMDetails acm = 6 [json_name = "acm"];
    {PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_details_.acm_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.MCMDetails mcm = 7 [json_name = "mcm"];
    {PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_details_.mcm_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::EmergencyDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoVisualDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FSCMDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ControlAreaDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ACMDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::MCMDetails>()},
  }}, {{
  }},
};

::uint8_t* GeoDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.GeoType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // .anduril.entitymanager.v1.EmergencyDetails emergency = 2 [json_name = "emergency"];
  if (type_details_case() == kEmergency) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::emergency(this),
        _Internal::emergency(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.GeoVisualDetails visual_details = 3 [json_name = "visualDetails"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::visual_details(this),
        _Internal::visual_details(this).GetCachedSize(), target, stream);
  }

  switch (type_details_case()) {
    case kFscm: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::fscm(this),
          _Internal::fscm(this).GetCachedSize(), target, stream);
      break;
    }
    case kControlArea: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::control_area(this),
          _Internal::control_area(this).GetCachedSize(), target, stream);
      break;
    }
    case kAcm: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::acm(this),
          _Internal::acm(this).GetCachedSize(), target, stream);
      break;
    }
    case kMcm: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::mcm(this),
          _Internal::mcm(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoDetails)
  return target;
}

::size_t GeoDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.entitymanager.v1.GeoVisualDetails visual_details = 3 [json_name = "visualDetails"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.visual_details_);
  }

  // .anduril.entitymanager.v1.GeoType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (type_details_case()) {
    // .anduril.entitymanager.v1.EmergencyDetails emergency = 2 [json_name = "emergency"];
    case kEmergency: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_details_.emergency_);
      break;
    }
    // .anduril.entitymanager.v1.FSCMDetails fscm = 4 [json_name = "fscm"];
    case kFscm: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_details_.fscm_);
      break;
    }
    // .anduril.entitymanager.v1.ControlAreaDetails control_area = 5 [json_name = "controlArea"];
    case kControlArea: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_details_.control_area_);
      break;
    }
    // .anduril.entitymanager.v1.ACMDetails acm = 6 [json_name = "acm"];
    case kAcm: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_details_.acm_);
      break;
    }
    // .anduril.entitymanager.v1.MCMDetails mcm = 7 [json_name = "mcm"];
    case kMcm: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_details_.mcm_);
      break;
    }
    case TYPE_DETAILS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoDetails::_class_data_ = {
    GeoDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoDetails::GetClassData() const {
  return &_class_data_;
}

void GeoDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoDetails*>(&to_msg);
  auto& from = static_cast<const GeoDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_visual_details()->::anduril::entitymanager::v1::GeoVisualDetails::MergeFrom(
        from._internal_visual_details());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  switch (from.type_details_case()) {
    case kEmergency: {
      _this->_internal_mutable_emergency()->::anduril::entitymanager::v1::EmergencyDetails::MergeFrom(
          from._internal_emergency());
      break;
    }
    case kFscm: {
      _this->_internal_mutable_fscm()->::anduril::entitymanager::v1::FSCMDetails::MergeFrom(
          from._internal_fscm());
      break;
    }
    case kControlArea: {
      _this->_internal_mutable_control_area()->::anduril::entitymanager::v1::ControlAreaDetails::MergeFrom(
          from._internal_control_area());
      break;
    }
    case kAcm: {
      _this->_internal_mutable_acm()->::anduril::entitymanager::v1::ACMDetails::MergeFrom(
          from._internal_acm());
      break;
    }
    case kMcm: {
      _this->_internal_mutable_mcm()->::anduril::entitymanager::v1::MCMDetails::MergeFrom(
          from._internal_mcm());
      break;
    }
    case TYPE_DETAILS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoDetails::CopyFrom(const GeoDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoDetails::InternalSwap(GeoDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.type_)
      + sizeof(GeoDetails::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(GeoDetails, _impl_.visual_details_)>(
          reinterpret_cast<char*>(&_impl_.visual_details_),
          reinterpret_cast<char*>(&other->_impl_.visual_details_));
  swap(_impl_.type_details_, other->_impl_.type_details_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GeoDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[0]);
}
// ===================================================================

class EmergencyDetails::_Internal {
 public:
};

EmergencyDetails::EmergencyDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.EmergencyDetails)
}
EmergencyDetails::EmergencyDetails(
    ::google::protobuf::Arena* arena, const EmergencyDetails& from)
    : EmergencyDetails(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EmergencyDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EmergencyDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, emergency_type_),
           0,
           offsetof(Impl_, personnel_involved_) -
               offsetof(Impl_, emergency_type_) +
               sizeof(Impl_::personnel_involved_));
}
EmergencyDetails::~EmergencyDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.EmergencyDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmergencyDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EmergencyDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.EmergencyDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.emergency_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.personnel_involved_) -
      reinterpret_cast<char*>(&_impl_.emergency_type_)) + sizeof(_impl_.personnel_involved_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmergencyDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EmergencyDetails::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EmergencyDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 personnel_involved = 2 [json_name = "personnelInvolved"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EmergencyDetails, _impl_.personnel_involved_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EmergencyDetails, _impl_.personnel_involved_)}},
    // .anduril.entitymanager.v1.EmergencyType emergency_type = 1 [json_name = "emergencyType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EmergencyDetails, _impl_.emergency_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EmergencyDetails, _impl_.emergency_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.EmergencyType emergency_type = 1 [json_name = "emergencyType"];
    {PROTOBUF_FIELD_OFFSET(EmergencyDetails, _impl_.emergency_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 personnel_involved = 2 [json_name = "personnelInvolved"];
    {PROTOBUF_FIELD_OFFSET(EmergencyDetails, _impl_.personnel_involved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EmergencyDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.EmergencyDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.EmergencyType emergency_type = 1 [json_name = "emergencyType"];
  if (this->_internal_emergency_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_emergency_type(), target);
  }

  // uint32 personnel_involved = 2 [json_name = "personnelInvolved"];
  if (this->_internal_personnel_involved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_personnel_involved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.EmergencyDetails)
  return target;
}

::size_t EmergencyDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.EmergencyDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.entitymanager.v1.EmergencyType emergency_type = 1 [json_name = "emergencyType"];
  if (this->_internal_emergency_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_emergency_type());
  }

  // uint32 personnel_involved = 2 [json_name = "personnelInvolved"];
  if (this->_internal_personnel_involved() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_personnel_involved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EmergencyDetails::_class_data_ = {
    EmergencyDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EmergencyDetails::GetClassData() const {
  return &_class_data_;
}

void EmergencyDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EmergencyDetails*>(&to_msg);
  auto& from = static_cast<const EmergencyDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.EmergencyDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_emergency_type() != 0) {
    _this->_internal_set_emergency_type(from._internal_emergency_type());
  }
  if (from._internal_personnel_involved() != 0) {
    _this->_internal_set_personnel_involved(from._internal_personnel_involved());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmergencyDetails::CopyFrom(const EmergencyDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.EmergencyDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmergencyDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EmergencyDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EmergencyDetails::InternalSwap(EmergencyDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmergencyDetails, _impl_.personnel_involved_)
      + sizeof(EmergencyDetails::_impl_.personnel_involved_)
      - PROTOBUF_FIELD_OFFSET(EmergencyDetails, _impl_.emergency_type_)>(
          reinterpret_cast<char*>(&_impl_.emergency_type_),
          reinterpret_cast<char*>(&other->_impl_.emergency_type_));
}

::google::protobuf::Metadata EmergencyDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[1]);
}
// ===================================================================

class GeoShape::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::GeoShape, _impl_._oneof_case_);
  static const ::anduril::entitymanager::v1::GeoPoint& point(const GeoShape* msg);
  static const ::anduril::entitymanager::v1::GeoLine& line(const GeoShape* msg);
  static const ::anduril::entitymanager::v1::GeoPolygon& polygon(const GeoShape* msg);
  static const ::anduril::entitymanager::v1::GeoEllipse& ellipse(const GeoShape* msg);
  static const ::anduril::entitymanager::v1::GeoEllipsoid& ellipsoid(const GeoShape* msg);
};

const ::anduril::entitymanager::v1::GeoPoint& GeoShape::_Internal::point(const GeoShape* msg) {
  return *msg->_impl_.shape_.point_;
}
const ::anduril::entitymanager::v1::GeoLine& GeoShape::_Internal::line(const GeoShape* msg) {
  return *msg->_impl_.shape_.line_;
}
const ::anduril::entitymanager::v1::GeoPolygon& GeoShape::_Internal::polygon(const GeoShape* msg) {
  return *msg->_impl_.shape_.polygon_;
}
const ::anduril::entitymanager::v1::GeoEllipse& GeoShape::_Internal::ellipse(const GeoShape* msg) {
  return *msg->_impl_.shape_.ellipse_;
}
const ::anduril::entitymanager::v1::GeoEllipsoid& GeoShape::_Internal::ellipsoid(const GeoShape* msg) {
  return *msg->_impl_.shape_.ellipsoid_;
}
void GeoShape::set_allocated_point(::anduril::entitymanager::v1::GeoPoint* point) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape();
  if (point) {
    ::google::protobuf::Arena* submessage_arena = point->GetArena();
    if (message_arena != submessage_arena) {
      point = ::google::protobuf::internal::GetOwnedMessage(message_arena, point, submessage_arena);
    }
    set_has_point();
    _impl_.shape_.point_ = point;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoShape.point)
}
void GeoShape::set_allocated_line(::anduril::entitymanager::v1::GeoLine* line) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape();
  if (line) {
    ::google::protobuf::Arena* submessage_arena = line->GetArena();
    if (message_arena != submessage_arena) {
      line = ::google::protobuf::internal::GetOwnedMessage(message_arena, line, submessage_arena);
    }
    set_has_line();
    _impl_.shape_.line_ = line;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoShape.line)
}
void GeoShape::set_allocated_polygon(::anduril::entitymanager::v1::GeoPolygon* polygon) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape();
  if (polygon) {
    ::google::protobuf::Arena* submessage_arena = polygon->GetArena();
    if (message_arena != submessage_arena) {
      polygon = ::google::protobuf::internal::GetOwnedMessage(message_arena, polygon, submessage_arena);
    }
    set_has_polygon();
    _impl_.shape_.polygon_ = polygon;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoShape.polygon)
}
void GeoShape::set_allocated_ellipse(::anduril::entitymanager::v1::GeoEllipse* ellipse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape();
  if (ellipse) {
    ::google::protobuf::Arena* submessage_arena = ellipse->GetArena();
    if (message_arena != submessage_arena) {
      ellipse = ::google::protobuf::internal::GetOwnedMessage(message_arena, ellipse, submessage_arena);
    }
    set_has_ellipse();
    _impl_.shape_.ellipse_ = ellipse;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoShape.ellipse)
}
void GeoShape::set_allocated_ellipsoid(::anduril::entitymanager::v1::GeoEllipsoid* ellipsoid) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape();
  if (ellipsoid) {
    ::google::protobuf::Arena* submessage_arena = ellipsoid->GetArena();
    if (message_arena != submessage_arena) {
      ellipsoid = ::google::protobuf::internal::GetOwnedMessage(message_arena, ellipsoid, submessage_arena);
    }
    set_has_ellipsoid();
    _impl_.shape_.ellipsoid_ = ellipsoid;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.GeoShape.ellipsoid)
}
GeoShape::GeoShape(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoShape)
}
inline PROTOBUF_NDEBUG_INLINE GeoShape::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : shape_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GeoShape::GeoShape(
    ::google::protobuf::Arena* arena,
    const GeoShape& from)
    : ::google::protobuf::Message(arena) {
  GeoShape* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (shape_case()) {
    case SHAPE_NOT_SET:
      break;
      case kPoint:
        _impl_.shape_.point_ = CreateMaybeMessage<::anduril::entitymanager::v1::GeoPoint>(arena, *from._impl_.shape_.point_);
        break;
      case kLine:
        _impl_.shape_.line_ = CreateMaybeMessage<::anduril::entitymanager::v1::GeoLine>(arena, *from._impl_.shape_.line_);
        break;
      case kPolygon:
        _impl_.shape_.polygon_ = CreateMaybeMessage<::anduril::entitymanager::v1::GeoPolygon>(arena, *from._impl_.shape_.polygon_);
        break;
      case kEllipse:
        _impl_.shape_.ellipse_ = CreateMaybeMessage<::anduril::entitymanager::v1::GeoEllipse>(arena, *from._impl_.shape_.ellipse_);
        break;
      case kEllipsoid:
        _impl_.shape_.ellipsoid_ = CreateMaybeMessage<::anduril::entitymanager::v1::GeoEllipsoid>(arena, *from._impl_.shape_.ellipsoid_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoShape)
}
inline PROTOBUF_NDEBUG_INLINE GeoShape::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shape_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GeoShape::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GeoShape::~GeoShape() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoShape)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoShape::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_shape()) {
    clear_shape();
  }
  _impl_.~Impl_();
}

void GeoShape::clear_shape() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entitymanager.v1.GeoShape)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (shape_case()) {
    case kPoint: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_.point_;
      }
      break;
    }
    case kLine: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_.line_;
      }
      break;
    }
    case kPolygon: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_.polygon_;
      }
      break;
    }
    case kEllipse: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_.ellipse_;
      }
      break;
    }
    case kEllipsoid: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_.ellipsoid_;
      }
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SHAPE_NOT_SET;
}


PROTOBUF_NOINLINE void GeoShape::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoShape)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_shape();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoShape::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2> GeoShape::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoShape_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.GeoPoint point = 1 [json_name = "point"];
    {PROTOBUF_FIELD_OFFSET(GeoShape, _impl_.shape_.point_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoLine line = 2 [json_name = "line"];
    {PROTOBUF_FIELD_OFFSET(GeoShape, _impl_.shape_.line_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoPolygon polygon = 3 [json_name = "polygon"];
    {PROTOBUF_FIELD_OFFSET(GeoShape, _impl_.shape_.polygon_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoEllipse ellipse = 4 [json_name = "ellipse"];
    {PROTOBUF_FIELD_OFFSET(GeoShape, _impl_.shape_.ellipse_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.GeoEllipsoid ellipsoid = 5 [json_name = "ellipsoid"];
    {PROTOBUF_FIELD_OFFSET(GeoShape, _impl_.shape_.ellipsoid_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoPoint>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoLine>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoPolygon>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoEllipse>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoEllipsoid>()},
  }}, {{
  }},
};

::uint8_t* GeoShape::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoShape)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (shape_case()) {
    case kPoint: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::point(this),
          _Internal::point(this).GetCachedSize(), target, stream);
      break;
    }
    case kLine: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::line(this),
          _Internal::line(this).GetCachedSize(), target, stream);
      break;
    }
    case kPolygon: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::polygon(this),
          _Internal::polygon(this).GetCachedSize(), target, stream);
      break;
    }
    case kEllipse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::ellipse(this),
          _Internal::ellipse(this).GetCachedSize(), target, stream);
      break;
    }
    case kEllipsoid: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::ellipsoid(this),
          _Internal::ellipsoid(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoShape)
  return target;
}

::size_t GeoShape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoShape)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (shape_case()) {
    // .anduril.entitymanager.v1.GeoPoint point = 1 [json_name = "point"];
    case kPoint: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.shape_.point_);
      break;
    }
    // .anduril.entitymanager.v1.GeoLine line = 2 [json_name = "line"];
    case kLine: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.shape_.line_);
      break;
    }
    // .anduril.entitymanager.v1.GeoPolygon polygon = 3 [json_name = "polygon"];
    case kPolygon: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.shape_.polygon_);
      break;
    }
    // .anduril.entitymanager.v1.GeoEllipse ellipse = 4 [json_name = "ellipse"];
    case kEllipse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.shape_.ellipse_);
      break;
    }
    // .anduril.entitymanager.v1.GeoEllipsoid ellipsoid = 5 [json_name = "ellipsoid"];
    case kEllipsoid: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.shape_.ellipsoid_);
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoShape::_class_data_ = {
    GeoShape::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoShape::GetClassData() const {
  return &_class_data_;
}

void GeoShape::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoShape*>(&to_msg);
  auto& from = static_cast<const GeoShape&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoShape)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.shape_case()) {
    case kPoint: {
      _this->_internal_mutable_point()->::anduril::entitymanager::v1::GeoPoint::MergeFrom(
          from._internal_point());
      break;
    }
    case kLine: {
      _this->_internal_mutable_line()->::anduril::entitymanager::v1::GeoLine::MergeFrom(
          from._internal_line());
      break;
    }
    case kPolygon: {
      _this->_internal_mutable_polygon()->::anduril::entitymanager::v1::GeoPolygon::MergeFrom(
          from._internal_polygon());
      break;
    }
    case kEllipse: {
      _this->_internal_mutable_ellipse()->::anduril::entitymanager::v1::GeoEllipse::MergeFrom(
          from._internal_ellipse());
      break;
    }
    case kEllipsoid: {
      _this->_internal_mutable_ellipsoid()->::anduril::entitymanager::v1::GeoEllipsoid::MergeFrom(
          from._internal_ellipsoid());
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoShape::CopyFrom(const GeoShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoShape::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoShape::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoShape::InternalSwap(GeoShape* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.shape_, other->_impl_.shape_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GeoShape::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[2]);
}
// ===================================================================

class GeoPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<GeoPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Position& position(const GeoPoint* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::entitymanager::v1::Position& GeoPoint::_Internal::position(const GeoPoint* msg) {
  return *msg->_impl_.position_;
}
void GeoPoint::clear_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GeoPoint::GeoPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoPoint)
}
inline PROTOBUF_NDEBUG_INLINE GeoPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GeoPoint::GeoPoint(
    ::google::protobuf::Arena* arena,
    const GeoPoint& from)
    : ::google::protobuf::Message(arena) {
  GeoPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.position_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoPoint)
}
inline PROTOBUF_NDEBUG_INLINE GeoPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_ = {};
}
GeoPoint::~GeoPoint() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GeoPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoPoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ != nullptr);
    _impl_.position_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GeoPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
  }}, {{
  }},
};

::uint8_t* GeoPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoPoint)
  return target;
}

::size_t GeoPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoPoint::_class_data_ = {
    GeoPoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoPoint::GetClassData() const {
  return &_class_data_;
}

void GeoPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoPoint*>(&to_msg);
  auto& from = static_cast<const GeoPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_position()->::anduril::entitymanager::v1::Position::MergeFrom(
        from._internal_position());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoPoint::CopyFrom(const GeoPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoPoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoPoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoPoint::InternalSwap(GeoPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.position_, other->_impl_.position_);
}

::google::protobuf::Metadata GeoPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[3]);
}
// ===================================================================

class GeoLine::_Internal {
 public:
};

void GeoLine::clear_positions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.positions_.Clear();
}
GeoLine::GeoLine(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoLine)
}
inline PROTOBUF_NDEBUG_INLINE GeoLine::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : positions_{visibility, arena, from.positions_},
        _cached_size_{0} {}

GeoLine::GeoLine(
    ::google::protobuf::Arena* arena,
    const GeoLine& from)
    : ::google::protobuf::Message(arena) {
  GeoLine* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoLine)
}
inline PROTOBUF_NDEBUG_INLINE GeoLine::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : positions_{visibility, arena},
        _cached_size_{0} {}

inline void GeoLine::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GeoLine::~GeoLine() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoLine)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoLine::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GeoLine::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoLine)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoLine::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GeoLine::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoLine_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entitymanager.v1.Position positions = 1 [json_name = "positions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GeoLine, _impl_.positions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.Position positions = 1 [json_name = "positions"];
    {PROTOBUF_FIELD_OFFSET(GeoLine, _impl_.positions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
  }}, {{
  }},
};

::uint8_t* GeoLine::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoLine)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.Position positions = 1 [json_name = "positions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_positions_size()); i < n; i++) {
    const auto& repfield = this->_internal_positions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoLine)
  return target;
}

::size_t GeoLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoLine)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.Position positions = 1 [json_name = "positions"];
  total_size += 1UL * this->_internal_positions_size();
  for (const auto& msg : this->_internal_positions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoLine::_class_data_ = {
    GeoLine::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoLine::GetClassData() const {
  return &_class_data_;
}

void GeoLine::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoLine*>(&to_msg);
  auto& from = static_cast<const GeoLine&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoLine)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoLine::CopyFrom(const GeoLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoLine::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoLine::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoLine::InternalSwap(GeoLine* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
}

::google::protobuf::Metadata GeoLine::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[4]);
}
// ===================================================================

class GeoPolygon::_Internal {
 public:
};

GeoPolygon::GeoPolygon(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoPolygon)
}
inline PROTOBUF_NDEBUG_INLINE GeoPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : rings_{visibility, arena, from.rings_},
        _cached_size_{0} {}

GeoPolygon::GeoPolygon(
    ::google::protobuf::Arena* arena,
    const GeoPolygon& from)
    : ::google::protobuf::Message(arena) {
  GeoPolygon* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.is_rectangle_ = from._impl_.is_rectangle_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoPolygon)
}
inline PROTOBUF_NDEBUG_INLINE GeoPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rings_{visibility, arena},
        _cached_size_{0} {}

inline void GeoPolygon::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_rectangle_ = {};
}
GeoPolygon::~GeoPolygon() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoPolygon)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoPolygon::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GeoPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoPolygon)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rings_.Clear();
  _impl_.is_rectangle_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoPolygon::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GeoPolygon::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoPolygon_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_rectangle = 2 [json_name = "isRectangle"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GeoPolygon, _impl_.is_rectangle_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GeoPolygon, _impl_.is_rectangle_)}},
    // repeated .anduril.entitymanager.v1.LinearRing rings = 1 [json_name = "rings"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GeoPolygon, _impl_.rings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.LinearRing rings = 1 [json_name = "rings"];
    {PROTOBUF_FIELD_OFFSET(GeoPolygon, _impl_.rings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_rectangle = 2 [json_name = "isRectangle"];
    {PROTOBUF_FIELD_OFFSET(GeoPolygon, _impl_.is_rectangle_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::LinearRing>()},
  }}, {{
  }},
};

::uint8_t* GeoPolygon::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoPolygon)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.LinearRing rings = 1 [json_name = "rings"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rings_size()); i < n; i++) {
    const auto& repfield = this->_internal_rings().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool is_rectangle = 2 [json_name = "isRectangle"];
  if (this->_internal_is_rectangle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_rectangle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoPolygon)
  return target;
}

::size_t GeoPolygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoPolygon)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.LinearRing rings = 1 [json_name = "rings"];
  total_size += 1UL * this->_internal_rings_size();
  for (const auto& msg : this->_internal_rings()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bool is_rectangle = 2 [json_name = "isRectangle"];
  if (this->_internal_is_rectangle() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoPolygon::_class_data_ = {
    GeoPolygon::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoPolygon::GetClassData() const {
  return &_class_data_;
}

void GeoPolygon::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoPolygon*>(&to_msg);
  auto& from = static_cast<const GeoPolygon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoPolygon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rings()->MergeFrom(
      from._internal_rings());
  if (from._internal_is_rectangle() != 0) {
    _this->_internal_set_is_rectangle(from._internal_is_rectangle());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoPolygon::CopyFrom(const GeoPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoPolygon::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoPolygon::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoPolygon::InternalSwap(GeoPolygon* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rings_.InternalSwap(&other->_impl_.rings_);
        swap(_impl_.is_rectangle_, other->_impl_.is_rectangle_);
}

::google::protobuf::Metadata GeoPolygon::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[5]);
}
// ===================================================================

class GeoEllipse::_Internal {
 public:
  using HasBits = decltype(std::declval<GeoEllipse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_._has_bits_);
  static const ::google::protobuf::DoubleValue& semi_major_axis_m(const GeoEllipse* msg);
  static void set_has_semi_major_axis_m(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::DoubleValue& semi_minor_axis_m(const GeoEllipse* msg);
  static void set_has_semi_minor_axis_m(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::DoubleValue& orientation_d(const GeoEllipse* msg);
  static void set_has_orientation_d(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::DoubleValue& height_m(const GeoEllipse* msg);
  static void set_has_height_m(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::google::protobuf::DoubleValue& GeoEllipse::_Internal::semi_major_axis_m(const GeoEllipse* msg) {
  return *msg->_impl_.semi_major_axis_m_;
}
const ::google::protobuf::DoubleValue& GeoEllipse::_Internal::semi_minor_axis_m(const GeoEllipse* msg) {
  return *msg->_impl_.semi_minor_axis_m_;
}
const ::google::protobuf::DoubleValue& GeoEllipse::_Internal::orientation_d(const GeoEllipse* msg) {
  return *msg->_impl_.orientation_d_;
}
const ::google::protobuf::DoubleValue& GeoEllipse::_Internal::height_m(const GeoEllipse* msg) {
  return *msg->_impl_.height_m_;
}
void GeoEllipse::clear_semi_major_axis_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.semi_major_axis_m_ != nullptr) _impl_.semi_major_axis_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GeoEllipse::clear_semi_minor_axis_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.semi_minor_axis_m_ != nullptr) _impl_.semi_minor_axis_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GeoEllipse::clear_orientation_d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.orientation_d_ != nullptr) _impl_.orientation_d_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GeoEllipse::clear_height_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.height_m_ != nullptr) _impl_.height_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GeoEllipse::GeoEllipse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoEllipse)
}
inline PROTOBUF_NDEBUG_INLINE GeoEllipse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GeoEllipse::GeoEllipse(
    ::google::protobuf::Arena* arena,
    const GeoEllipse& from)
    : ::google::protobuf::Message(arena) {
  GeoEllipse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.semi_major_axis_m_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.semi_major_axis_m_)
                : nullptr;
  _impl_.semi_minor_axis_m_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.semi_minor_axis_m_)
                : nullptr;
  _impl_.orientation_d_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.orientation_d_)
                : nullptr;
  _impl_.height_m_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.height_m_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoEllipse)
}
inline PROTOBUF_NDEBUG_INLINE GeoEllipse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoEllipse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, semi_major_axis_m_),
           0,
           offsetof(Impl_, height_m_) -
               offsetof(Impl_, semi_major_axis_m_) +
               sizeof(Impl_::height_m_));
}
GeoEllipse::~GeoEllipse() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoEllipse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoEllipse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.semi_major_axis_m_;
  delete _impl_.semi_minor_axis_m_;
  delete _impl_.orientation_d_;
  delete _impl_.height_m_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GeoEllipse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoEllipse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.semi_major_axis_m_ != nullptr);
      _impl_.semi_major_axis_m_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.semi_minor_axis_m_ != nullptr);
      _impl_.semi_minor_axis_m_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.orientation_d_ != nullptr);
      _impl_.orientation_d_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.height_m_ != nullptr);
      _impl_.height_m_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoEllipse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> GeoEllipse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967265,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoEllipse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.orientation_d_)}},
    // .google.protobuf.DoubleValue height_m = 5 [json_name = "heightM"];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.height_m_)}},
    // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.semi_major_axis_m_)}},
    // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.semi_minor_axis_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
    {PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.semi_major_axis_m_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
    {PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.semi_minor_axis_m_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
    {PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.orientation_d_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue height_m = 5 [json_name = "heightM"];
    {PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.height_m_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

::uint8_t* GeoEllipse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoEllipse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::semi_major_axis_m(this),
        _Internal::semi_major_axis_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::semi_minor_axis_m(this),
        _Internal::semi_minor_axis_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::orientation_d(this),
        _Internal::orientation_d(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue height_m = 5 [json_name = "heightM"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::height_m(this),
        _Internal::height_m(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoEllipse)
  return target;
}

::size_t GeoEllipse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoEllipse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .google.protobuf.DoubleValue semi_major_axis_m = 2 [json_name = "semiMajorAxisM"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.semi_major_axis_m_);
    }

    // .google.protobuf.DoubleValue semi_minor_axis_m = 3 [json_name = "semiMinorAxisM"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.semi_minor_axis_m_);
    }

    // .google.protobuf.DoubleValue orientation_d = 4 [json_name = "orientationD"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.orientation_d_);
    }

    // .google.protobuf.DoubleValue height_m = 5 [json_name = "heightM"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.height_m_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoEllipse::_class_data_ = {
    GeoEllipse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoEllipse::GetClassData() const {
  return &_class_data_;
}

void GeoEllipse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoEllipse*>(&to_msg);
  auto& from = static_cast<const GeoEllipse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoEllipse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_semi_major_axis_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_semi_major_axis_m());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_semi_minor_axis_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_semi_minor_axis_m());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_orientation_d()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_orientation_d());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_height_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_height_m());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoEllipse::CopyFrom(const GeoEllipse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoEllipse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoEllipse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoEllipse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoEllipse::InternalSwap(GeoEllipse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.height_m_)
      + sizeof(GeoEllipse::_impl_.height_m_)
      - PROTOBUF_FIELD_OFFSET(GeoEllipse, _impl_.semi_major_axis_m_)>(
          reinterpret_cast<char*>(&_impl_.semi_major_axis_m_),
          reinterpret_cast<char*>(&other->_impl_.semi_major_axis_m_));
}

::google::protobuf::Metadata GeoEllipse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[6]);
}
// ===================================================================

class GeoEllipsoid::_Internal {
 public:
  using HasBits = decltype(std::declval<GeoEllipsoid>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_._has_bits_);
  static const ::google::protobuf::DoubleValue& forward_axis_m(const GeoEllipsoid* msg);
  static void set_has_forward_axis_m(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::DoubleValue& side_axis_m(const GeoEllipsoid* msg);
  static void set_has_side_axis_m(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::DoubleValue& up_axis_m(const GeoEllipsoid* msg);
  static void set_has_up_axis_m(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::google::protobuf::DoubleValue& GeoEllipsoid::_Internal::forward_axis_m(const GeoEllipsoid* msg) {
  return *msg->_impl_.forward_axis_m_;
}
const ::google::protobuf::DoubleValue& GeoEllipsoid::_Internal::side_axis_m(const GeoEllipsoid* msg) {
  return *msg->_impl_.side_axis_m_;
}
const ::google::protobuf::DoubleValue& GeoEllipsoid::_Internal::up_axis_m(const GeoEllipsoid* msg) {
  return *msg->_impl_.up_axis_m_;
}
void GeoEllipsoid::clear_forward_axis_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.forward_axis_m_ != nullptr) _impl_.forward_axis_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GeoEllipsoid::clear_side_axis_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.side_axis_m_ != nullptr) _impl_.side_axis_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GeoEllipsoid::clear_up_axis_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.up_axis_m_ != nullptr) _impl_.up_axis_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GeoEllipsoid::GeoEllipsoid(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoEllipsoid)
}
inline PROTOBUF_NDEBUG_INLINE GeoEllipsoid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GeoEllipsoid::GeoEllipsoid(
    ::google::protobuf::Arena* arena,
    const GeoEllipsoid& from)
    : ::google::protobuf::Message(arena) {
  GeoEllipsoid* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.forward_axis_m_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.forward_axis_m_)
                : nullptr;
  _impl_.side_axis_m_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.side_axis_m_)
                : nullptr;
  _impl_.up_axis_m_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.up_axis_m_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoEllipsoid)
}
inline PROTOBUF_NDEBUG_INLINE GeoEllipsoid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoEllipsoid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, forward_axis_m_),
           0,
           offsetof(Impl_, up_axis_m_) -
               offsetof(Impl_, forward_axis_m_) +
               sizeof(Impl_::up_axis_m_));
}
GeoEllipsoid::~GeoEllipsoid() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoEllipsoid)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoEllipsoid::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.forward_axis_m_;
  delete _impl_.side_axis_m_;
  delete _impl_.up_axis_m_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GeoEllipsoid::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoEllipsoid)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.forward_axis_m_ != nullptr);
      _impl_.forward_axis_m_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.side_axis_m_ != nullptr);
      _impl_.side_axis_m_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.up_axis_m_ != nullptr);
      _impl_.up_axis_m_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoEllipsoid::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> GeoEllipsoid::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoEllipsoid_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.DoubleValue forward_axis_m = 1 [json_name = "forwardAxisM"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.forward_axis_m_)}},
    // .google.protobuf.DoubleValue side_axis_m = 2 [json_name = "sideAxisM"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.side_axis_m_)}},
    // .google.protobuf.DoubleValue up_axis_m = 3 [json_name = "upAxisM"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.up_axis_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue forward_axis_m = 1 [json_name = "forwardAxisM"];
    {PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.forward_axis_m_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue side_axis_m = 2 [json_name = "sideAxisM"];
    {PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.side_axis_m_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue up_axis_m = 3 [json_name = "upAxisM"];
    {PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.up_axis_m_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
  }},
};

::uint8_t* GeoEllipsoid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoEllipsoid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.DoubleValue forward_axis_m = 1 [json_name = "forwardAxisM"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::forward_axis_m(this),
        _Internal::forward_axis_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue side_axis_m = 2 [json_name = "sideAxisM"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::side_axis_m(this),
        _Internal::side_axis_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue up_axis_m = 3 [json_name = "upAxisM"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::up_axis_m(this),
        _Internal::up_axis_m(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoEllipsoid)
  return target;
}

::size_t GeoEllipsoid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoEllipsoid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.DoubleValue forward_axis_m = 1 [json_name = "forwardAxisM"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.forward_axis_m_);
    }

    // .google.protobuf.DoubleValue side_axis_m = 2 [json_name = "sideAxisM"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.side_axis_m_);
    }

    // .google.protobuf.DoubleValue up_axis_m = 3 [json_name = "upAxisM"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.up_axis_m_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoEllipsoid::_class_data_ = {
    GeoEllipsoid::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoEllipsoid::GetClassData() const {
  return &_class_data_;
}

void GeoEllipsoid::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoEllipsoid*>(&to_msg);
  auto& from = static_cast<const GeoEllipsoid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoEllipsoid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_forward_axis_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_forward_axis_m());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_side_axis_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_side_axis_m());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_up_axis_m()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_up_axis_m());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoEllipsoid::CopyFrom(const GeoEllipsoid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoEllipsoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoEllipsoid::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoEllipsoid::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoEllipsoid::InternalSwap(GeoEllipsoid* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.up_axis_m_)
      + sizeof(GeoEllipsoid::_impl_.up_axis_m_)
      - PROTOBUF_FIELD_OFFSET(GeoEllipsoid, _impl_.forward_axis_m_)>(
          reinterpret_cast<char*>(&_impl_.forward_axis_m_),
          reinterpret_cast<char*>(&other->_impl_.forward_axis_m_));
}

::google::protobuf::Metadata GeoEllipsoid::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[7]);
}
// ===================================================================

class LinearRing::_Internal {
 public:
};

void LinearRing::clear_points() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.points_.Clear();
}
LinearRing::LinearRing(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.LinearRing)
}
inline PROTOBUF_NDEBUG_INLINE LinearRing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : points_{visibility, arena, from.points_},
        positions_{visibility, arena, from.positions_},
        _cached_size_{0} {}

LinearRing::LinearRing(
    ::google::protobuf::Arena* arena,
    const LinearRing& from)
    : ::google::protobuf::Message(arena) {
  LinearRing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.LinearRing)
}
inline PROTOBUF_NDEBUG_INLINE LinearRing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : points_{visibility, arena},
        positions_{visibility, arena},
        _cached_size_{0} {}

inline void LinearRing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LinearRing::~LinearRing() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.LinearRing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LinearRing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LinearRing::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.LinearRing)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  _impl_.positions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LinearRing::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> LinearRing::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LinearRing_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entitymanager.v1.GeoPolygonPosition positions = 2 [json_name = "positions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(LinearRing, _impl_.positions_)}},
    // repeated .anduril.entitymanager.v1.Position points = 1 [json_name = "points", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LinearRing, _impl_.points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.Position points = 1 [json_name = "points", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(LinearRing, _impl_.points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entitymanager.v1.GeoPolygonPosition positions = 2 [json_name = "positions"];
    {PROTOBUF_FIELD_OFFSET(LinearRing, _impl_.positions_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::GeoPolygonPosition>()},
  }}, {{
  }},
};

::uint8_t* LinearRing::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.LinearRing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entitymanager.v1.Position points = 1 [json_name = "points", deprecated = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_points().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.entitymanager.v1.GeoPolygonPosition positions = 2 [json_name = "positions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_positions_size()); i < n; i++) {
    const auto& repfield = this->_internal_positions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.LinearRing)
  return target;
}

::size_t LinearRing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.LinearRing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.Position points = 1 [json_name = "points", deprecated = true];
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->_internal_points()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.entitymanager.v1.GeoPolygonPosition positions = 2 [json_name = "positions"];
  total_size += 1UL * this->_internal_positions_size();
  for (const auto& msg : this->_internal_positions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LinearRing::_class_data_ = {
    LinearRing::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LinearRing::GetClassData() const {
  return &_class_data_;
}

void LinearRing::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LinearRing*>(&to_msg);
  auto& from = static_cast<const LinearRing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.LinearRing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LinearRing::CopyFrom(const LinearRing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.LinearRing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LinearRing::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LinearRing::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LinearRing::InternalSwap(LinearRing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
}

::google::protobuf::Metadata LinearRing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[8]);
}
// ===================================================================

class GeoPolygonPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<GeoPolygonPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Position& position(const GeoPolygonPosition* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::FloatValue& height_m(const GeoPolygonPosition* msg);
  static void set_has_height_m(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::entitymanager::v1::Position& GeoPolygonPosition::_Internal::position(const GeoPolygonPosition* msg) {
  return *msg->_impl_.position_;
}
const ::google::protobuf::FloatValue& GeoPolygonPosition::_Internal::height_m(const GeoPolygonPosition* msg) {
  return *msg->_impl_.height_m_;
}
void GeoPolygonPosition::clear_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GeoPolygonPosition::clear_height_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.height_m_ != nullptr) _impl_.height_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GeoPolygonPosition::GeoPolygonPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoPolygonPosition)
}
inline PROTOBUF_NDEBUG_INLINE GeoPolygonPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GeoPolygonPosition::GeoPolygonPosition(
    ::google::protobuf::Arena* arena,
    const GeoPolygonPosition& from)
    : ::google::protobuf::Message(arena) {
  GeoPolygonPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Position>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.height_m_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.height_m_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoPolygonPosition)
}
inline PROTOBUF_NDEBUG_INLINE GeoPolygonPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoPolygonPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, height_m_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::height_m_));
}
GeoPolygonPosition::~GeoPolygonPosition() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoPolygonPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoPolygonPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  delete _impl_.height_m_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GeoPolygonPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoPolygonPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.height_m_ != nullptr);
      _impl_.height_m_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoPolygonPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GeoPolygonPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoPolygonPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.FloatValue height_m = 2 [json_name = "heightM"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_.height_m_)}},
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue height_m = 2 [json_name = "heightM"];
    {PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_.height_m_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Position>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
  }}, {{
  }},
};

::uint8_t* GeoPolygonPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoPolygonPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FloatValue height_m = 2 [json_name = "heightM"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::height_m(this),
        _Internal::height_m(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoPolygonPosition)
  return target;
}

::size_t GeoPolygonPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoPolygonPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.entitymanager.v1.Position position = 1 [json_name = "position"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // .google.protobuf.FloatValue height_m = 2 [json_name = "heightM"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.height_m_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoPolygonPosition::_class_data_ = {
    GeoPolygonPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoPolygonPosition::GetClassData() const {
  return &_class_data_;
}

void GeoPolygonPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoPolygonPosition*>(&to_msg);
  auto& from = static_cast<const GeoPolygonPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoPolygonPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position()->::anduril::entitymanager::v1::Position::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_height_m()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_height_m());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoPolygonPosition::CopyFrom(const GeoPolygonPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoPolygonPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoPolygonPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoPolygonPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoPolygonPosition::InternalSwap(GeoPolygonPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_.height_m_)
      + sizeof(GeoPolygonPosition::_impl_.height_m_)
      - PROTOBUF_FIELD_OFFSET(GeoPolygonPosition, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata GeoPolygonPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[9]);
}
// ===================================================================

class GeoVisualDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<GeoVisualDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_._has_bits_);
  static const ::anduril::type::Color& fill_color(const GeoVisualDetails* msg);
  static void set_has_fill_color(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::type::Color& line_color(const GeoVisualDetails* msg);
  static void set_has_line_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::type::Color& GeoVisualDetails::_Internal::fill_color(const GeoVisualDetails* msg) {
  return *msg->_impl_.fill_color_;
}
const ::anduril::type::Color& GeoVisualDetails::_Internal::line_color(const GeoVisualDetails* msg) {
  return *msg->_impl_.line_color_;
}
void GeoVisualDetails::clear_fill_color() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.fill_color_ != nullptr) _impl_.fill_color_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GeoVisualDetails::clear_line_color() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.line_color_ != nullptr) _impl_.line_color_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GeoVisualDetails::GeoVisualDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.GeoVisualDetails)
}
inline PROTOBUF_NDEBUG_INLINE GeoVisualDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GeoVisualDetails::GeoVisualDetails(
    ::google::protobuf::Arena* arena,
    const GeoVisualDetails& from)
    : ::google::protobuf::Message(arena) {
  GeoVisualDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.fill_color_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::type::Color>(arena, *from._impl_.fill_color_)
                : nullptr;
  _impl_.line_color_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::type::Color>(arena, *from._impl_.line_color_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.GeoVisualDetails)
}
inline PROTOBUF_NDEBUG_INLINE GeoVisualDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoVisualDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fill_color_),
           0,
           offsetof(Impl_, line_color_) -
               offsetof(Impl_, fill_color_) +
               sizeof(Impl_::line_color_));
}
GeoVisualDetails::~GeoVisualDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.GeoVisualDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GeoVisualDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.fill_color_;
  delete _impl_.line_color_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GeoVisualDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.GeoVisualDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.fill_color_ != nullptr);
      _impl_.fill_color_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.line_color_ != nullptr);
      _impl_.line_color_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GeoVisualDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GeoVisualDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GeoVisualDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.type.Color line_color = 2 [json_name = "lineColor"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_.line_color_)}},
    // .anduril.type.Color fill_color = 1 [json_name = "fillColor"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_.fill_color_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.type.Color fill_color = 1 [json_name = "fillColor"];
    {PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_.fill_color_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.Color line_color = 2 [json_name = "lineColor"];
    {PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_.line_color_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::type::Color>()},
    {::_pbi::TcParser::GetTable<::anduril::type::Color>()},
  }}, {{
  }},
};

::uint8_t* GeoVisualDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.GeoVisualDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.type.Color fill_color = 1 [json_name = "fillColor"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::fill_color(this),
        _Internal::fill_color(this).GetCachedSize(), target, stream);
  }

  // .anduril.type.Color line_color = 2 [json_name = "lineColor"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::line_color(this),
        _Internal::line_color(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.GeoVisualDetails)
  return target;
}

::size_t GeoVisualDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.GeoVisualDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.type.Color fill_color = 1 [json_name = "fillColor"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.fill_color_);
    }

    // .anduril.type.Color line_color = 2 [json_name = "lineColor"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.line_color_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GeoVisualDetails::_class_data_ = {
    GeoVisualDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GeoVisualDetails::GetClassData() const {
  return &_class_data_;
}

void GeoVisualDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GeoVisualDetails*>(&to_msg);
  auto& from = static_cast<const GeoVisualDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.GeoVisualDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_fill_color()->::anduril::type::Color::MergeFrom(
          from._internal_fill_color());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_line_color()->::anduril::type::Color::MergeFrom(
          from._internal_line_color());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoVisualDetails::CopyFrom(const GeoVisualDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.GeoVisualDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GeoVisualDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GeoVisualDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GeoVisualDetails::InternalSwap(GeoVisualDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_.line_color_)
      + sizeof(GeoVisualDetails::_impl_.line_color_)
      - PROTOBUF_FIELD_OFFSET(GeoVisualDetails, _impl_.fill_color_)>(
          reinterpret_cast<char*>(&_impl_.fill_color_),
          reinterpret_cast<char*>(&other->_impl_.fill_color_));
}

::google::protobuf::Metadata GeoVisualDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[10]);
}
// ===================================================================

class FSCMDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<FSCMDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::FiringAuthority& firing_authority(const FSCMDetails* msg);
  static void set_has_firing_authority(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::entitymanager::v1::FiringAuthority& FSCMDetails::_Internal::firing_authority(const FSCMDetails* msg) {
  return *msg->_impl_.firing_authority_;
}
FSCMDetails::FSCMDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.FSCMDetails)
}
inline PROTOBUF_NDEBUG_INLINE FSCMDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ammo_restrict_types_{visibility, arena, from.ammo_restrict_types_},
        _ammo_restrict_types_cached_byte_size_{0},
        fscm_description_(arena, from.fscm_description_) {}

FSCMDetails::FSCMDetails(
    ::google::protobuf::Arena* arena,
    const FSCMDetails& from)
    : ::google::protobuf::Message(arena) {
  FSCMDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.firing_authority_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::FiringAuthority>(arena, *from._impl_.firing_authority_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fscm_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fscm_type_),
           offsetof(Impl_, is_ground_) -
               offsetof(Impl_, fscm_type_) +
               sizeof(Impl_::is_ground_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.FSCMDetails)
}
inline PROTOBUF_NDEBUG_INLINE FSCMDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ammo_restrict_types_{visibility, arena},
        _ammo_restrict_types_cached_byte_size_{0},
        fscm_description_(arena) {}

inline void FSCMDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, firing_authority_),
           0,
           offsetof(Impl_, is_ground_) -
               offsetof(Impl_, firing_authority_) +
               sizeof(Impl_::is_ground_));
}
FSCMDetails::~FSCMDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.FSCMDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FSCMDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.fscm_description_.Destroy();
  delete _impl_.firing_authority_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FSCMDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.FSCMDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ammo_restrict_types_.Clear();
  _impl_.fscm_description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.firing_authority_ != nullptr);
    _impl_.firing_authority_->Clear();
  }
  ::memset(&_impl_.fscm_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_ground_) -
      reinterpret_cast<char*>(&_impl_.fscm_type_)) + sizeof(_impl_.is_ground_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FSCMDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 61, 2> FSCMDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FSCMDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.FSCMDetailType fscm_type = 1 [json_name = "fscmType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FSCMDetails, _impl_.fscm_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.fscm_type_)}},
    // string fscm_description = 2 [json_name = "fscmDescription"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.fscm_description_)}},
    // .anduril.entitymanager.v1.FiringAuthority firing_authority = 3 [json_name = "firingAuthority"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.firing_authority_)}},
    // .anduril.entitymanager.v1.AmmoRestrictionType ammo_restriction_type = 4 [json_name = "ammoRestrictionType", deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FSCMDetails, _impl_.ammo_restriction_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.ammo_restriction_type_)}},
    // .anduril.entitymanager.v1.RestrictiveMeasureType restrictive_measure_type = 5 [json_name = "restrictiveMeasureType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FSCMDetails, _impl_.restrictive_measure_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.restrictive_measure_type_)}},
    // repeated .anduril.entitymanager.v1.AmmoRestrictionType ammo_restrict_types = 6 [json_name = "ammoRestrictTypes"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.ammo_restrict_types_)}},
    // bool is_ground = 7 [json_name = "isGround"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FSCMDetails, _impl_.is_ground_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.is_ground_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.FSCMDetailType fscm_type = 1 [json_name = "fscmType"];
    {PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.fscm_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string fscm_description = 2 [json_name = "fscmDescription"];
    {PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.fscm_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.FiringAuthority firing_authority = 3 [json_name = "firingAuthority"];
    {PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.firing_authority_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.AmmoRestrictionType ammo_restriction_type = 4 [json_name = "ammoRestrictionType", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.ammo_restriction_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.entitymanager.v1.RestrictiveMeasureType restrictive_measure_type = 5 [json_name = "restrictiveMeasureType"];
    {PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.restrictive_measure_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .anduril.entitymanager.v1.AmmoRestrictionType ammo_restrict_types = 6 [json_name = "ammoRestrictTypes"];
    {PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.ammo_restrict_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // bool is_ground = 7 [json_name = "isGround"];
    {PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.is_ground_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::FiringAuthority>()},
  }}, {{
    "\44\0\20\0\0\0\0\0"
    "anduril.entitymanager.v1.FSCMDetails"
    "fscm_description"
  }},
};

::uint8_t* FSCMDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.FSCMDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.FSCMDetailType fscm_type = 1 [json_name = "fscmType"];
  if (this->_internal_fscm_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_fscm_type(), target);
  }

  // string fscm_description = 2 [json_name = "fscmDescription"];
  if (!this->_internal_fscm_description().empty()) {
    const std::string& _s = this->_internal_fscm_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.FSCMDetails.fscm_description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.FiringAuthority firing_authority = 3 [json_name = "firingAuthority"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::firing_authority(this),
        _Internal::firing_authority(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.AmmoRestrictionType ammo_restriction_type = 4 [json_name = "ammoRestrictionType", deprecated = true];
  if (this->_internal_ammo_restriction_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_ammo_restriction_type(), target);
  }

  // .anduril.entitymanager.v1.RestrictiveMeasureType restrictive_measure_type = 5 [json_name = "restrictiveMeasureType"];
  if (this->_internal_restrictive_measure_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_restrictive_measure_type(), target);
  }

  // repeated .anduril.entitymanager.v1.AmmoRestrictionType ammo_restrict_types = 6 [json_name = "ammoRestrictTypes"];
  {
    std::size_t byte_size = _impl_._ammo_restrict_types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(6, _internal_ammo_restrict_types(),
                                       byte_size, target);
    }
  }

  // bool is_ground = 7 [json_name = "isGround"];
  if (this->_internal_is_ground() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_is_ground(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.FSCMDetails)
  return target;
}

::size_t FSCMDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.FSCMDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.AmmoRestrictionType ammo_restrict_types = 6 [json_name = "ammoRestrictTypes"];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_ammo_restrict_types_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_ammo_restrict_types().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._ammo_restrict_types_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // string fscm_description = 2 [json_name = "fscmDescription"];
  if (!this->_internal_fscm_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_fscm_description());
  }

  // .anduril.entitymanager.v1.FiringAuthority firing_authority = 3 [json_name = "firingAuthority"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.firing_authority_);
  }

  // .anduril.entitymanager.v1.FSCMDetailType fscm_type = 1 [json_name = "fscmType"];
  if (this->_internal_fscm_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_fscm_type());
  }

  // .anduril.entitymanager.v1.AmmoRestrictionType ammo_restriction_type = 4 [json_name = "ammoRestrictionType", deprecated = true];
  if (this->_internal_ammo_restriction_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_ammo_restriction_type());
  }

  // .anduril.entitymanager.v1.RestrictiveMeasureType restrictive_measure_type = 5 [json_name = "restrictiveMeasureType"];
  if (this->_internal_restrictive_measure_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_restrictive_measure_type());
  }

  // bool is_ground = 7 [json_name = "isGround"];
  if (this->_internal_is_ground() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FSCMDetails::_class_data_ = {
    FSCMDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FSCMDetails::GetClassData() const {
  return &_class_data_;
}

void FSCMDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FSCMDetails*>(&to_msg);
  auto& from = static_cast<const FSCMDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.FSCMDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ammo_restrict_types()->MergeFrom(from._internal_ammo_restrict_types());
  if (!from._internal_fscm_description().empty()) {
    _this->_internal_set_fscm_description(from._internal_fscm_description());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_firing_authority()->::anduril::entitymanager::v1::FiringAuthority::MergeFrom(
        from._internal_firing_authority());
  }
  if (from._internal_fscm_type() != 0) {
    _this->_internal_set_fscm_type(from._internal_fscm_type());
  }
  if (from._internal_ammo_restriction_type() != 0) {
    _this->_internal_set_ammo_restriction_type(from._internal_ammo_restriction_type());
  }
  if (from._internal_restrictive_measure_type() != 0) {
    _this->_internal_set_restrictive_measure_type(from._internal_restrictive_measure_type());
  }
  if (from._internal_is_ground() != 0) {
    _this->_internal_set_is_ground(from._internal_is_ground());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FSCMDetails::CopyFrom(const FSCMDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.FSCMDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FSCMDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FSCMDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FSCMDetails::InternalSwap(FSCMDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ammo_restrict_types_.InternalSwap(&other->_impl_.ammo_restrict_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fscm_description_, &other->_impl_.fscm_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.is_ground_)
      + sizeof(FSCMDetails::_impl_.is_ground_)
      - PROTOBUF_FIELD_OFFSET(FSCMDetails, _impl_.firing_authority_)>(
          reinterpret_cast<char*>(&_impl_.firing_authority_),
          reinterpret_cast<char*>(&other->_impl_.firing_authority_));
}

::google::protobuf::Metadata FSCMDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[11]);
}
// ===================================================================

class ACMDetails::_Internal {
 public:
};

ACMDetails::ACMDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.ACMDetails)
}
inline PROTOBUF_NDEBUG_INLINE ACMDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : acm_description_(arena, from.acm_description_),
        _cached_size_{0} {}

ACMDetails::ACMDetails(
    ::google::protobuf::Arena* arena,
    const ACMDetails& from)
    : ::google::protobuf::Message(arena) {
  ACMDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.acm_type_ = from._impl_.acm_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.ACMDetails)
}
inline PROTOBUF_NDEBUG_INLINE ACMDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : acm_description_(arena),
        _cached_size_{0} {}

inline void ACMDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.acm_type_ = {};
}
ACMDetails::~ACMDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.ACMDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ACMDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.acm_description_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ACMDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.ACMDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.acm_description_.ClearToEmpty();
  _impl_.acm_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ACMDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> ACMDetails::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ACMDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string acm_description = 2 [json_name = "acmDescription"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ACMDetails, _impl_.acm_description_)}},
    // .anduril.entitymanager.v1.ACMDetailType acm_type = 1 [json_name = "acmType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ACMDetails, _impl_.acm_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ACMDetails, _impl_.acm_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.ACMDetailType acm_type = 1 [json_name = "acmType"];
    {PROTOBUF_FIELD_OFFSET(ACMDetails, _impl_.acm_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string acm_description = 2 [json_name = "acmDescription"];
    {PROTOBUF_FIELD_OFFSET(ACMDetails, _impl_.acm_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\17\0\0\0\0\0"
    "anduril.entitymanager.v1.ACMDetails"
    "acm_description"
  }},
};

::uint8_t* ACMDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.ACMDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.ACMDetailType acm_type = 1 [json_name = "acmType"];
  if (this->_internal_acm_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_acm_type(), target);
  }

  // string acm_description = 2 [json_name = "acmDescription"];
  if (!this->_internal_acm_description().empty()) {
    const std::string& _s = this->_internal_acm_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.ACMDetails.acm_description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.ACMDetails)
  return target;
}

::size_t ACMDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.ACMDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string acm_description = 2 [json_name = "acmDescription"];
  if (!this->_internal_acm_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_acm_description());
  }

  // .anduril.entitymanager.v1.ACMDetailType acm_type = 1 [json_name = "acmType"];
  if (this->_internal_acm_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_acm_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ACMDetails::_class_data_ = {
    ACMDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ACMDetails::GetClassData() const {
  return &_class_data_;
}

void ACMDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ACMDetails*>(&to_msg);
  auto& from = static_cast<const ACMDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.ACMDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_acm_description().empty()) {
    _this->_internal_set_acm_description(from._internal_acm_description());
  }
  if (from._internal_acm_type() != 0) {
    _this->_internal_set_acm_type(from._internal_acm_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ACMDetails::CopyFrom(const ACMDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.ACMDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ACMDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ACMDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ACMDetails::InternalSwap(ACMDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.acm_description_, &other->_impl_.acm_description_, arena);
  swap(_impl_.acm_type_, other->_impl_.acm_type_);
}

::google::protobuf::Metadata ACMDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[12]);
}
// ===================================================================

class MCMDetails::_Internal {
 public:
};

MCMDetails::MCMDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.MCMDetails)
}
inline PROTOBUF_NDEBUG_INLINE MCMDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : mcm_description_(arena, from.mcm_description_),
        _cached_size_{0} {}

MCMDetails::MCMDetails(
    ::google::protobuf::Arena* arena,
    const MCMDetails& from)
    : ::google::protobuf::Message(arena) {
  MCMDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mcm_type_ = from._impl_.mcm_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.MCMDetails)
}
inline PROTOBUF_NDEBUG_INLINE MCMDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mcm_description_(arena),
        _cached_size_{0} {}

inline void MCMDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mcm_type_ = {};
}
MCMDetails::~MCMDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.MCMDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MCMDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.mcm_description_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MCMDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.MCMDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mcm_description_.ClearToEmpty();
  _impl_.mcm_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MCMDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> MCMDetails::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MCMDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string mcm_description = 2 [json_name = "mcmDescription"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MCMDetails, _impl_.mcm_description_)}},
    // .anduril.entitymanager.v1.MCMDetailType mcm_type = 1 [json_name = "mcmType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MCMDetails, _impl_.mcm_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MCMDetails, _impl_.mcm_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.MCMDetailType mcm_type = 1 [json_name = "mcmType"];
    {PROTOBUF_FIELD_OFFSET(MCMDetails, _impl_.mcm_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string mcm_description = 2 [json_name = "mcmDescription"];
    {PROTOBUF_FIELD_OFFSET(MCMDetails, _impl_.mcm_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\17\0\0\0\0\0"
    "anduril.entitymanager.v1.MCMDetails"
    "mcm_description"
  }},
};

::uint8_t* MCMDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.MCMDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.MCMDetailType mcm_type = 1 [json_name = "mcmType"];
  if (this->_internal_mcm_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mcm_type(), target);
  }

  // string mcm_description = 2 [json_name = "mcmDescription"];
  if (!this->_internal_mcm_description().empty()) {
    const std::string& _s = this->_internal_mcm_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.MCMDetails.mcm_description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.MCMDetails)
  return target;
}

::size_t MCMDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.MCMDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mcm_description = 2 [json_name = "mcmDescription"];
  if (!this->_internal_mcm_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mcm_description());
  }

  // .anduril.entitymanager.v1.MCMDetailType mcm_type = 1 [json_name = "mcmType"];
  if (this->_internal_mcm_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mcm_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MCMDetails::_class_data_ = {
    MCMDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MCMDetails::GetClassData() const {
  return &_class_data_;
}

void MCMDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MCMDetails*>(&to_msg);
  auto& from = static_cast<const MCMDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.MCMDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mcm_description().empty()) {
    _this->_internal_set_mcm_description(from._internal_mcm_description());
  }
  if (from._internal_mcm_type() != 0) {
    _this->_internal_set_mcm_type(from._internal_mcm_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MCMDetails::CopyFrom(const MCMDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.MCMDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MCMDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MCMDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MCMDetails::InternalSwap(MCMDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mcm_description_, &other->_impl_.mcm_description_, arena);
  swap(_impl_.mcm_type_, other->_impl_.mcm_type_);
}

::google::protobuf::Metadata MCMDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[13]);
}
// ===================================================================

class FiringAuthority::_Internal {
 public:
};

FiringAuthority::FiringAuthority(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.FiringAuthority)
}
inline PROTOBUF_NDEBUG_INLINE FiringAuthority::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entity_ids_{visibility, arena, from.entity_ids_},
        _cached_size_{0} {}

FiringAuthority::FiringAuthority(
    ::google::protobuf::Arena* arena,
    const FiringAuthority& from)
    : ::google::protobuf::Message(arena) {
  FiringAuthority* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.FiringAuthority)
}
inline PROTOBUF_NDEBUG_INLINE FiringAuthority::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entity_ids_{visibility, arena},
        _cached_size_{0} {}

inline void FiringAuthority::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FiringAuthority::~FiringAuthority() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.FiringAuthority)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FiringAuthority::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FiringAuthority::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.FiringAuthority)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FiringAuthority::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> FiringAuthority::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FiringAuthority_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string entity_ids = 1 [json_name = "entityIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FiringAuthority, _impl_.entity_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string entity_ids = 1 [json_name = "entityIds"];
    {PROTOBUF_FIELD_OFFSET(FiringAuthority, _impl_.entity_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\50\12\0\0\0\0\0\0"
    "anduril.entitymanager.v1.FiringAuthority"
    "entity_ids"
  }},
};

::uint8_t* FiringAuthority::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.FiringAuthority)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string entity_ids = 1 [json_name = "entityIds"];
  for (int i = 0, n = this->_internal_entity_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_entity_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.FiringAuthority.entity_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.FiringAuthority)
  return target;
}

::size_t FiringAuthority::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.FiringAuthority)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string entity_ids = 1 [json_name = "entityIds"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_entity_ids().size());
  for (int i = 0, n = _internal_entity_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_entity_ids().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FiringAuthority::_class_data_ = {
    FiringAuthority::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FiringAuthority::GetClassData() const {
  return &_class_data_;
}

void FiringAuthority::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FiringAuthority*>(&to_msg);
  auto& from = static_cast<const FiringAuthority&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.FiringAuthority)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity_ids()->MergeFrom(from._internal_entity_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FiringAuthority::CopyFrom(const FiringAuthority& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.FiringAuthority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FiringAuthority::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FiringAuthority::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FiringAuthority::InternalSwap(FiringAuthority* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entity_ids_.InternalSwap(&other->_impl_.entity_ids_);
}

::google::protobuf::Metadata FiringAuthority::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[14]);
}
// ===================================================================

class ControlAreaDetails::_Internal {
 public:
};

ControlAreaDetails::ControlAreaDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.ControlAreaDetails)
}
ControlAreaDetails::ControlAreaDetails(
    ::google::protobuf::Arena* arena, const ControlAreaDetails& from)
    : ControlAreaDetails(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ControlAreaDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ControlAreaDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
ControlAreaDetails::~ControlAreaDetails() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.ControlAreaDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControlAreaDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ControlAreaDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.ControlAreaDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControlAreaDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ControlAreaDetails::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ControlAreaDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.ControlAreaType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlAreaDetails, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ControlAreaDetails, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.ControlAreaType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(ControlAreaDetails, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ControlAreaDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.ControlAreaDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.ControlAreaType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.ControlAreaDetails)
  return target;
}

::size_t ControlAreaDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.ControlAreaDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.entitymanager.v1.ControlAreaType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControlAreaDetails::_class_data_ = {
    ControlAreaDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ControlAreaDetails::GetClassData() const {
  return &_class_data_;
}

void ControlAreaDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControlAreaDetails*>(&to_msg);
  auto& from = static_cast<const ControlAreaDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.ControlAreaDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlAreaDetails::CopyFrom(const ControlAreaDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.ControlAreaDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControlAreaDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ControlAreaDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ControlAreaDetails::InternalSwap(ControlAreaDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata ControlAreaDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fgeoentity_2epub_2eproto[15]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
