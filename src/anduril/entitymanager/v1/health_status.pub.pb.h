// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/health_status.pub.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class ComponentHealth;
struct ComponentHealthDefaultTypeInternal;
extern ComponentHealthDefaultTypeInternal _ComponentHealth_default_instance_;
class ComponentMessage;
struct ComponentMessageDefaultTypeInternal;
extern ComponentMessageDefaultTypeInternal _ComponentMessage_default_instance_;
class Health;
struct HealthDefaultTypeInternal;
extern HealthDefaultTypeInternal _Health_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {
enum ConnectionStatus : int {
  CONNECTION_STATUS_INVALID = 0,
  CONNECTION_STATUS_ONLINE = 1,
  CONNECTION_STATUS_OFFLINE = 2,
  ConnectionStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ConnectionStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ConnectionStatus_IsValid(int value);
extern const uint32_t ConnectionStatus_internal_data_[];
constexpr ConnectionStatus ConnectionStatus_MIN = static_cast<ConnectionStatus>(0);
constexpr ConnectionStatus ConnectionStatus_MAX = static_cast<ConnectionStatus>(2);
constexpr int ConnectionStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ConnectionStatus_descriptor();
template <typename T>
const std::string& ConnectionStatus_Name(T value) {
  static_assert(std::is_same<T, ConnectionStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ConnectionStatus_Name().");
  return ConnectionStatus_Name(static_cast<ConnectionStatus>(value));
}
template <>
inline const std::string& ConnectionStatus_Name(ConnectionStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ConnectionStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ConnectionStatus_Parse(absl::string_view name, ConnectionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectionStatus>(
      ConnectionStatus_descriptor(), name, value);
}
enum HealthStatus : int {
  HEALTH_STATUS_INVALID = 0,
  HEALTH_STATUS_HEALTHY = 1,
  HEALTH_STATUS_WARN = 2,
  HEALTH_STATUS_FAIL = 3,
  HEALTH_STATUS_OFFLINE = 4,
  HEALTH_STATUS_NOT_READY = 5,
  HealthStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  HealthStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool HealthStatus_IsValid(int value);
extern const uint32_t HealthStatus_internal_data_[];
constexpr HealthStatus HealthStatus_MIN = static_cast<HealthStatus>(0);
constexpr HealthStatus HealthStatus_MAX = static_cast<HealthStatus>(5);
constexpr int HealthStatus_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
HealthStatus_descriptor();
template <typename T>
const std::string& HealthStatus_Name(T value) {
  static_assert(std::is_same<T, HealthStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to HealthStatus_Name().");
  return HealthStatus_Name(static_cast<HealthStatus>(value));
}
template <>
inline const std::string& HealthStatus_Name(HealthStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<HealthStatus_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool HealthStatus_Parse(absl::string_view name, HealthStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HealthStatus>(
      HealthStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ComponentMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.ComponentMessage) */ {
 public:
  inline ComponentMessage() : ComponentMessage(nullptr) {}
  ~ComponentMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComponentMessage(const ComponentMessage& from) : ComponentMessage(nullptr, from) {}
  inline ComponentMessage(ComponentMessage&& from) noexcept
      : ComponentMessage(nullptr, std::move(from)) {}
  inline ComponentMessage& operator=(const ComponentMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentMessage& operator=(ComponentMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentMessage* internal_default_instance() {
    return reinterpret_cast<const ComponentMessage*>(
        &_ComponentMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ComponentMessage& a, ComponentMessage& b) { a.Swap(&b); }
  inline void Swap(ComponentMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ComponentMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComponentMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComponentMessage& from) { ComponentMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ComponentMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.ComponentMessage"; }

 protected:
  explicit ComponentMessage(::google::protobuf::Arena* arena);
  ComponentMessage(::google::protobuf::Arena* arena, const ComponentMessage& from);
  ComponentMessage(::google::protobuf::Arena* arena, ComponentMessage&& from) noexcept
      : ComponentMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .anduril.entitymanager.v1.HealthStatus status = 1 [json_name = "status"];
  void clear_status() ;
  ::anduril::entitymanager::v1::HealthStatus status() const;
  void set_status(::anduril::entitymanager::v1::HealthStatus value);

  private:
  ::anduril::entitymanager::v1::HealthStatus _internal_status() const;
  void _internal_set_status(::anduril::entitymanager::v1::HealthStatus value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.ComponentMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ComponentMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ComponentMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto;
};
// -------------------------------------------------------------------

class ComponentHealth final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.ComponentHealth) */ {
 public:
  inline ComponentHealth() : ComponentHealth(nullptr) {}
  ~ComponentHealth() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentHealth(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComponentHealth(const ComponentHealth& from) : ComponentHealth(nullptr, from) {}
  inline ComponentHealth(ComponentHealth&& from) noexcept
      : ComponentHealth(nullptr, std::move(from)) {}
  inline ComponentHealth& operator=(const ComponentHealth& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentHealth& operator=(ComponentHealth&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentHealth& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentHealth* internal_default_instance() {
    return reinterpret_cast<const ComponentHealth*>(
        &_ComponentHealth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ComponentHealth& a, ComponentHealth& b) { a.Swap(&b); }
  inline void Swap(ComponentHealth* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentHealth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentHealth* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ComponentHealth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComponentHealth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComponentHealth& from) { ComponentHealth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ComponentHealth* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.ComponentHealth"; }

 protected:
  explicit ComponentHealth(::google::protobuf::Arena* arena);
  ComponentHealth(::google::protobuf::Arena* arena, const ComponentHealth& from);
  ComponentHealth(::google::protobuf::Arena* arena, ComponentHealth&& from) noexcept
      : ComponentHealth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 4,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kUpdateTimeFieldNumber = 5,
    kHealthFieldNumber = 3,
  };
  // repeated .anduril.entitymanager.v1.ComponentMessage messages = 4 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::anduril::entitymanager::v1::ComponentMessage* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>* _internal_mutable_messages();
  public:
  const ::anduril::entitymanager::v1::ComponentMessage& messages(int index) const;
  ::anduril::entitymanager::v1::ComponentMessage* add_messages();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>& messages() const;
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Timestamp update_time = 5 [json_name = "updateTime"];
  bool has_update_time() const;
  void clear_update_time() ;
  const ::google::protobuf::Timestamp& update_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_update_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_update_time();

  private:
  const ::google::protobuf::Timestamp& _internal_update_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_update_time();

  public:
  // .anduril.entitymanager.v1.HealthStatus health = 3 [json_name = "health"];
  void clear_health() ;
  ::anduril::entitymanager::v1::HealthStatus health() const;
  void set_health(::anduril::entitymanager::v1::HealthStatus value);

  private:
  ::anduril::entitymanager::v1::HealthStatus _internal_health() const;
  void _internal_set_health(::anduril::entitymanager::v1::HealthStatus value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.ComponentHealth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ComponentHealth_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ComponentHealth& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::ComponentMessage > messages_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Timestamp* update_time_;
    int health_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto;
};
// -------------------------------------------------------------------

class Health final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Health) */ {
 public:
  inline Health() : Health(nullptr) {}
  ~Health() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Health(
      ::google::protobuf::internal::ConstantInitialized);

  inline Health(const Health& from) : Health(nullptr, from) {}
  inline Health(Health&& from) noexcept
      : Health(nullptr, std::move(from)) {}
  inline Health& operator=(const Health& from) {
    CopyFrom(from);
    return *this;
  }
  inline Health& operator=(Health&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Health& default_instance() {
    return *internal_default_instance();
  }
  static inline const Health* internal_default_instance() {
    return reinterpret_cast<const Health*>(
        &_Health_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Health& a, Health& b) { a.Swap(&b); }
  inline void Swap(Health* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Health* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Health* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Health>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Health& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Health& from) { Health::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Health* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Health"; }

 protected:
  explicit Health(::google::protobuf::Arena* arena);
  Health(::google::protobuf::Arena* arena, const Health& from);
  Health(::google::protobuf::Arena* arena, Health&& from) noexcept
      : Health(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentsFieldNumber = 3,
    kUpdateTimeFieldNumber = 4,
    kConnectionStatusFieldNumber = 1,
    kHealthStatusFieldNumber = 2,
  };
  // repeated .anduril.entitymanager.v1.ComponentHealth components = 3 [json_name = "components"];
  int components_size() const;
  private:
  int _internal_components_size() const;

  public:
  void clear_components() ;
  ::anduril::entitymanager::v1::ComponentHealth* mutable_components(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>* mutable_components();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>& _internal_components() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>* _internal_mutable_components();
  public:
  const ::anduril::entitymanager::v1::ComponentHealth& components(int index) const;
  ::anduril::entitymanager::v1::ComponentHealth* add_components();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>& components() const;
  // .google.protobuf.Timestamp update_time = 4 [json_name = "updateTime"];
  bool has_update_time() const;
  void clear_update_time() ;
  const ::google::protobuf::Timestamp& update_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_update_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_update_time();

  private:
  const ::google::protobuf::Timestamp& _internal_update_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_update_time();

  public:
  // .anduril.entitymanager.v1.ConnectionStatus connection_status = 1 [json_name = "connectionStatus"];
  void clear_connection_status() ;
  ::anduril::entitymanager::v1::ConnectionStatus connection_status() const;
  void set_connection_status(::anduril::entitymanager::v1::ConnectionStatus value);

  private:
  ::anduril::entitymanager::v1::ConnectionStatus _internal_connection_status() const;
  void _internal_set_connection_status(::anduril::entitymanager::v1::ConnectionStatus value);

  public:
  // .anduril.entitymanager.v1.HealthStatus health_status = 2 [json_name = "healthStatus"];
  void clear_health_status() ;
  ::anduril::entitymanager::v1::HealthStatus health_status() const;
  void set_health_status(::anduril::entitymanager::v1::HealthStatus value);

  private:
  ::anduril::entitymanager::v1::HealthStatus _internal_health_status() const;
  void _internal_set_health_status(::anduril::entitymanager::v1::HealthStatus value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Health)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Health_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Health& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::ComponentHealth > components_;
    ::google::protobuf::Timestamp* update_time_;
    int connection_status_;
    int health_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ComponentMessage

// .anduril.entitymanager.v1.HealthStatus status = 1 [json_name = "status"];
inline void ComponentMessage::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::anduril::entitymanager::v1::HealthStatus ComponentMessage::status() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ComponentMessage.status)
  return _internal_status();
}
inline void ComponentMessage::set_status(::anduril::entitymanager::v1::HealthStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.ComponentMessage.status)
}
inline ::anduril::entitymanager::v1::HealthStatus ComponentMessage::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::HealthStatus>(_impl_.status_);
}
inline void ComponentMessage::_internal_set_status(::anduril::entitymanager::v1::HealthStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string message = 2 [json_name = "message"];
inline void ComponentMessage::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ComponentMessage::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ComponentMessage.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentMessage::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.ComponentMessage.message)
}
inline std::string* ComponentMessage::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ComponentMessage.message)
  return _s;
}
inline const std::string& ComponentMessage::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ComponentMessage::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ComponentMessage::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ComponentMessage::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ComponentMessage.message)
  return _impl_.message_.Release();
}
inline void ComponentMessage::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ComponentMessage.message)
}

// -------------------------------------------------------------------

// ComponentHealth

// string id = 1 [json_name = "id"];
inline void ComponentHealth::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ComponentHealth::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ComponentHealth.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentHealth::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.ComponentHealth.id)
}
inline std::string* ComponentHealth::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ComponentHealth.id)
  return _s;
}
inline const std::string& ComponentHealth::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ComponentHealth::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ComponentHealth::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ComponentHealth::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ComponentHealth.id)
  return _impl_.id_.Release();
}
inline void ComponentHealth::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ComponentHealth.id)
}

// string name = 2 [json_name = "name"];
inline void ComponentHealth::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ComponentHealth::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ComponentHealth.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentHealth::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.ComponentHealth.name)
}
inline std::string* ComponentHealth::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ComponentHealth.name)
  return _s;
}
inline const std::string& ComponentHealth::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ComponentHealth::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ComponentHealth::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ComponentHealth::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ComponentHealth.name)
  return _impl_.name_.Release();
}
inline void ComponentHealth::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ComponentHealth.name)
}

// .anduril.entitymanager.v1.HealthStatus health = 3 [json_name = "health"];
inline void ComponentHealth::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_ = 0;
}
inline ::anduril::entitymanager::v1::HealthStatus ComponentHealth::health() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ComponentHealth.health)
  return _internal_health();
}
inline void ComponentHealth::set_health(::anduril::entitymanager::v1::HealthStatus value) {
  _internal_set_health(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.ComponentHealth.health)
}
inline ::anduril::entitymanager::v1::HealthStatus ComponentHealth::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::HealthStatus>(_impl_.health_);
}
inline void ComponentHealth::_internal_set_health(::anduril::entitymanager::v1::HealthStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_ = value;
}

// repeated .anduril.entitymanager.v1.ComponentMessage messages = 4 [json_name = "messages"];
inline int ComponentHealth::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int ComponentHealth::messages_size() const {
  return _internal_messages_size();
}
inline void ComponentHealth::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline ::anduril::entitymanager::v1::ComponentMessage* ComponentHealth::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ComponentHealth.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>* ComponentHealth::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.ComponentHealth.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::anduril::entitymanager::v1::ComponentMessage& ComponentHealth::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ComponentHealth.messages)
  return _internal_messages().Get(index);
}
inline ::anduril::entitymanager::v1::ComponentMessage* ComponentHealth::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::ComponentMessage* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.ComponentHealth.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>& ComponentHealth::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.ComponentHealth.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>&
ComponentHealth::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentMessage>*
ComponentHealth::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// .google.protobuf.Timestamp update_time = 5 [json_name = "updateTime"];
inline bool ComponentHealth::has_update_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ComponentHealth::_internal_update_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.update_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ComponentHealth::update_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ComponentHealth.update_time)
  return _internal_update_time();
}
inline void ComponentHealth::unsafe_arena_set_allocated_update_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_time_);
  }
  _impl_.update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.ComponentHealth.update_time)
}
inline ::google::protobuf::Timestamp* ComponentHealth::release_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.update_time_;
  _impl_.update_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ComponentHealth::unsafe_arena_release_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.ComponentHealth.update_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.update_time_;
  _impl_.update_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ComponentHealth::_internal_mutable_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.update_time_;
}
inline ::google::protobuf::Timestamp* ComponentHealth::mutable_update_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_update_time();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ComponentHealth.update_time)
  return _msg;
}
inline void ComponentHealth::set_allocated_update_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.ComponentHealth.update_time)
}

// -------------------------------------------------------------------

// Health

// .anduril.entitymanager.v1.ConnectionStatus connection_status = 1 [json_name = "connectionStatus"];
inline void Health::clear_connection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_status_ = 0;
}
inline ::anduril::entitymanager::v1::ConnectionStatus Health::connection_status() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Health.connection_status)
  return _internal_connection_status();
}
inline void Health::set_connection_status(::anduril::entitymanager::v1::ConnectionStatus value) {
  _internal_set_connection_status(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.Health.connection_status)
}
inline ::anduril::entitymanager::v1::ConnectionStatus Health::_internal_connection_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::ConnectionStatus>(_impl_.connection_status_);
}
inline void Health::_internal_set_connection_status(::anduril::entitymanager::v1::ConnectionStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_status_ = value;
}

// .anduril.entitymanager.v1.HealthStatus health_status = 2 [json_name = "healthStatus"];
inline void Health::clear_health_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_status_ = 0;
}
inline ::anduril::entitymanager::v1::HealthStatus Health::health_status() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Health.health_status)
  return _internal_health_status();
}
inline void Health::set_health_status(::anduril::entitymanager::v1::HealthStatus value) {
  _internal_set_health_status(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.Health.health_status)
}
inline ::anduril::entitymanager::v1::HealthStatus Health::_internal_health_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::HealthStatus>(_impl_.health_status_);
}
inline void Health::_internal_set_health_status(::anduril::entitymanager::v1::HealthStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_status_ = value;
}

// repeated .anduril.entitymanager.v1.ComponentHealth components = 3 [json_name = "components"];
inline int Health::_internal_components_size() const {
  return _internal_components().size();
}
inline int Health::components_size() const {
  return _internal_components_size();
}
inline void Health::clear_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.components_.Clear();
}
inline ::anduril::entitymanager::v1::ComponentHealth* Health::mutable_components(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Health.components)
  return _internal_mutable_components()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>* Health::mutable_components()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.Health.components)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_components();
}
inline const ::anduril::entitymanager::v1::ComponentHealth& Health::components(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Health.components)
  return _internal_components().Get(index);
}
inline ::anduril::entitymanager::v1::ComponentHealth* Health::add_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::ComponentHealth* _add = _internal_mutable_components()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.Health.components)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>& Health::components() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.Health.components)
  return _internal_components();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>&
Health::_internal_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.components_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::ComponentHealth>*
Health::_internal_mutable_components() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.components_;
}

// .google.protobuf.Timestamp update_time = 4 [json_name = "updateTime"];
inline bool Health::has_update_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Health::_internal_update_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.update_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Health::update_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Health.update_time)
  return _internal_update_time();
}
inline void Health::unsafe_arena_set_allocated_update_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_time_);
  }
  _impl_.update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.Health.update_time)
}
inline ::google::protobuf::Timestamp* Health::release_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.update_time_;
  _impl_.update_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Health::unsafe_arena_release_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Health.update_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.update_time_;
  _impl_.update_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Health::_internal_mutable_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.update_time_;
}
inline ::google::protobuf::Timestamp* Health::mutable_update_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_update_time();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Health.update_time)
  return _msg;
}
inline void Health::set_allocated_update_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Health.update_time)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::entitymanager::v1::ConnectionStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::ConnectionStatus>() {
  return ::anduril::entitymanager::v1::ConnectionStatus_descriptor();
}
template <>
struct is_proto_enum<::anduril::entitymanager::v1::HealthStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::HealthStatus>() {
  return ::anduril::entitymanager::v1::HealthStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_2epb_2eh
