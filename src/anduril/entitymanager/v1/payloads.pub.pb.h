// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/payloads.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto_2epb_2eh
#define anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "anduril/entitymanager/v1/options.pub.pb.h"
#include "anduril/ontology/v1/type.pub.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class Payload;
struct PayloadDefaultTypeInternal;
extern PayloadDefaultTypeInternal _Payload_default_instance_;
class PayloadConfiguration;
struct PayloadConfigurationDefaultTypeInternal;
extern PayloadConfigurationDefaultTypeInternal _PayloadConfiguration_default_instance_;
class Payloads;
struct PayloadsDefaultTypeInternal;
extern PayloadsDefaultTypeInternal _Payloads_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {
enum PayloadOperationalState : int {
  PAYLOAD_OPERATIONAL_STATE_INVALID = 0,
  PAYLOAD_OPERATIONAL_STATE_OFF = 1,
  PAYLOAD_OPERATIONAL_STATE_NON_OPERATIONAL = 2,
  PAYLOAD_OPERATIONAL_STATE_DEGRADED = 3,
  PAYLOAD_OPERATIONAL_STATE_OPERATIONAL = 4,
  PAYLOAD_OPERATIONAL_STATE_OUT_OF_SERVICE = 5,
  PAYLOAD_OPERATIONAL_STATE_UNKNOWN = 6,
  PayloadOperationalState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PayloadOperationalState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PayloadOperationalState_IsValid(int value);
extern const uint32_t PayloadOperationalState_internal_data_[];
constexpr PayloadOperationalState PayloadOperationalState_MIN = static_cast<PayloadOperationalState>(0);
constexpr PayloadOperationalState PayloadOperationalState_MAX = static_cast<PayloadOperationalState>(6);
constexpr int PayloadOperationalState_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
PayloadOperationalState_descriptor();
template <typename T>
const std::string& PayloadOperationalState_Name(T value) {
  static_assert(std::is_same<T, PayloadOperationalState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PayloadOperationalState_Name().");
  return PayloadOperationalState_Name(static_cast<PayloadOperationalState>(value));
}
template <>
inline const std::string& PayloadOperationalState_Name(PayloadOperationalState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PayloadOperationalState_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool PayloadOperationalState_Parse(absl::string_view name, PayloadOperationalState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PayloadOperationalState>(
      PayloadOperationalState_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PayloadConfiguration final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.PayloadConfiguration) */ {
 public:
  inline PayloadConfiguration() : PayloadConfiguration(nullptr) {}
  ~PayloadConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PayloadConfiguration* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PayloadConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PayloadConfiguration(
      ::google::protobuf::internal::ConstantInitialized);

  inline PayloadConfiguration(const PayloadConfiguration& from) : PayloadConfiguration(nullptr, from) {}
  inline PayloadConfiguration(PayloadConfiguration&& from) noexcept
      : PayloadConfiguration(nullptr, std::move(from)) {}
  inline PayloadConfiguration& operator=(const PayloadConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline PayloadConfiguration& operator=(PayloadConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PayloadConfiguration& default_instance() {
    return *internal_default_instance();
  }
  static inline const PayloadConfiguration* internal_default_instance() {
    return reinterpret_cast<const PayloadConfiguration*>(
        &_PayloadConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PayloadConfiguration& a, PayloadConfiguration& b) { a.Swap(&b); }
  inline void Swap(PayloadConfiguration* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PayloadConfiguration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PayloadConfiguration* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PayloadConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PayloadConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PayloadConfiguration& from) { PayloadConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PayloadConfiguration* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.PayloadConfiguration"; }

 protected:
  explicit PayloadConfiguration(::google::protobuf::Arena* arena);
  PayloadConfiguration(::google::protobuf::Arena* arena, const PayloadConfiguration& from);
  PayloadConfiguration(::google::protobuf::Arena* arena, PayloadConfiguration&& from) noexcept
      : PayloadConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEffectiveEnvironmentFieldNumber = 5,
    kCapabilityIdFieldNumber = 1,
    kPayloadDescriptionFieldNumber = 7,
    kQuantityFieldNumber = 4,
    kPayloadOperationalStateFieldNumber = 6,
  };
  // repeated .anduril.ontology.v1.Environment effective_environment = 5 [json_name = "effectiveEnvironment"];
  int effective_environment_size() const;
  private:
  int _internal_effective_environment_size() const;

  public:
  void clear_effective_environment() ;
  public:
  ::anduril::ontology::v1::Environment effective_environment(int index) const;
  void set_effective_environment(int index, ::anduril::ontology::v1::Environment value);
  void add_effective_environment(::anduril::ontology::v1::Environment value);
  const ::google::protobuf::RepeatedField<int>& effective_environment() const;
  ::google::protobuf::RepeatedField<int>* mutable_effective_environment();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_effective_environment() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_effective_environment();

  public:
  // string capability_id = 1 [json_name = "capabilityId"];
  void clear_capability_id() ;
  const std::string& capability_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_capability_id(Arg_&& arg, Args_... args);
  std::string* mutable_capability_id();
  PROTOBUF_NODISCARD std::string* release_capability_id();
  void set_allocated_capability_id(std::string* value);

  private:
  const std::string& _internal_capability_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_capability_id(
      const std::string& value);
  std::string* _internal_mutable_capability_id();

  public:
  // string payload_description = 7 [json_name = "payloadDescription"];
  void clear_payload_description() ;
  const std::string& payload_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload_description(Arg_&& arg, Args_... args);
  std::string* mutable_payload_description();
  PROTOBUF_NODISCARD std::string* release_payload_description();
  void set_allocated_payload_description(std::string* value);

  private:
  const std::string& _internal_payload_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload_description(
      const std::string& value);
  std::string* _internal_mutable_payload_description();

  public:
  // uint32 quantity = 4 [json_name = "quantity"];
  void clear_quantity() ;
  ::uint32_t quantity() const;
  void set_quantity(::uint32_t value);

  private:
  ::uint32_t _internal_quantity() const;
  void _internal_set_quantity(::uint32_t value);

  public:
  // .anduril.entitymanager.v1.PayloadOperationalState payload_operational_state = 6 [json_name = "payloadOperationalState"];
  void clear_payload_operational_state() ;
  ::anduril::entitymanager::v1::PayloadOperationalState payload_operational_state() const;
  void set_payload_operational_state(::anduril::entitymanager::v1::PayloadOperationalState value);

  private:
  ::anduril::entitymanager::v1::PayloadOperationalState _internal_payload_operational_state() const;
  void _internal_set_payload_operational_state(::anduril::entitymanager::v1::PayloadOperationalState value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.PayloadConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      86, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PayloadConfiguration& from_msg);
    ::google::protobuf::RepeatedField<int> effective_environment_;
    ::google::protobuf::internal::CachedSize _effective_environment_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr capability_id_;
    ::google::protobuf::internal::ArenaStringPtr payload_description_;
    ::uint32_t quantity_;
    int payload_operational_state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto;
};
// -------------------------------------------------------------------

class Payload final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Payload) */ {
 public:
  inline Payload() : Payload(nullptr) {}
  ~Payload() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Payload* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Payload));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Payload(
      ::google::protobuf::internal::ConstantInitialized);

  inline Payload(const Payload& from) : Payload(nullptr, from) {}
  inline Payload(Payload&& from) noexcept
      : Payload(nullptr, std::move(from)) {}
  inline Payload& operator=(const Payload& from) {
    CopyFrom(from);
    return *this;
  }
  inline Payload& operator=(Payload&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Payload& default_instance() {
    return *internal_default_instance();
  }
  static inline const Payload* internal_default_instance() {
    return reinterpret_cast<const Payload*>(
        &_Payload_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Payload& a, Payload& b) { a.Swap(&b); }
  inline void Swap(Payload* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Payload* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Payload* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Payload>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Payload& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Payload& from) { Payload::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Payload* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Payload"; }

 protected:
  explicit Payload(::google::protobuf::Arena* arena);
  Payload(::google::protobuf::Arena* arena, const Payload& from);
  Payload(::google::protobuf::Arena* arena, Payload&& from) noexcept
      : Payload(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfigFieldNumber = 1,
  };
  // .anduril.entitymanager.v1.PayloadConfiguration config = 1 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::anduril::entitymanager::v1::PayloadConfiguration& config() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::PayloadConfiguration* release_config();
  ::anduril::entitymanager::v1::PayloadConfiguration* mutable_config();
  void set_allocated_config(::anduril::entitymanager::v1::PayloadConfiguration* value);
  void unsafe_arena_set_allocated_config(::anduril::entitymanager::v1::PayloadConfiguration* value);
  ::anduril::entitymanager::v1::PayloadConfiguration* unsafe_arena_release_config();

  private:
  const ::anduril::entitymanager::v1::PayloadConfiguration& _internal_config() const;
  ::anduril::entitymanager::v1::PayloadConfiguration* _internal_mutable_config();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Payload)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Payload& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::PayloadConfiguration* config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto;
};
// -------------------------------------------------------------------

class Payloads final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Payloads) */ {
 public:
  inline Payloads() : Payloads(nullptr) {}
  ~Payloads() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Payloads* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Payloads));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Payloads(
      ::google::protobuf::internal::ConstantInitialized);

  inline Payloads(const Payloads& from) : Payloads(nullptr, from) {}
  inline Payloads(Payloads&& from) noexcept
      : Payloads(nullptr, std::move(from)) {}
  inline Payloads& operator=(const Payloads& from) {
    CopyFrom(from);
    return *this;
  }
  inline Payloads& operator=(Payloads&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Payloads& default_instance() {
    return *internal_default_instance();
  }
  static inline const Payloads* internal_default_instance() {
    return reinterpret_cast<const Payloads*>(
        &_Payloads_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Payloads& a, Payloads& b) { a.Swap(&b); }
  inline void Swap(Payloads* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Payloads* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Payloads* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Payloads>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Payloads& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Payloads& from) { Payloads::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Payloads* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Payloads"; }

 protected:
  explicit Payloads(::google::protobuf::Arena* arena);
  Payloads(::google::protobuf::Arena* arena, const Payloads& from);
  Payloads(::google::protobuf::Arena* arena, Payloads&& from) noexcept
      : Payloads(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadConfigurationsFieldNumber = 1,
  };
  // repeated .anduril.entitymanager.v1.Payload payload_configurations = 1 [json_name = "payloadConfigurations", (.anduril.entitymanager.v1.overridable) = true];
  int payload_configurations_size() const;
  private:
  int _internal_payload_configurations_size() const;

  public:
  void clear_payload_configurations() ;
  ::anduril::entitymanager::v1::Payload* mutable_payload_configurations(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>* mutable_payload_configurations();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>& _internal_payload_configurations() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>* _internal_mutable_payload_configurations();
  public:
  const ::anduril::entitymanager::v1::Payload& payload_configurations(int index) const;
  ::anduril::entitymanager::v1::Payload* add_payload_configurations();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>& payload_configurations() const;
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Payloads)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Payloads& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::Payload > payload_configurations_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Payloads

// repeated .anduril.entitymanager.v1.Payload payload_configurations = 1 [json_name = "payloadConfigurations", (.anduril.entitymanager.v1.overridable) = true];
inline int Payloads::_internal_payload_configurations_size() const {
  return _internal_payload_configurations().size();
}
inline int Payloads::payload_configurations_size() const {
  return _internal_payload_configurations_size();
}
inline void Payloads::clear_payload_configurations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_configurations_.Clear();
}
inline ::anduril::entitymanager::v1::Payload* Payloads::mutable_payload_configurations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Payloads.payload_configurations)
  return _internal_mutable_payload_configurations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>* Payloads::mutable_payload_configurations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.Payloads.payload_configurations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_payload_configurations();
}
inline const ::anduril::entitymanager::v1::Payload& Payloads::payload_configurations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Payloads.payload_configurations)
  return _internal_payload_configurations().Get(index);
}
inline ::anduril::entitymanager::v1::Payload* Payloads::add_payload_configurations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::Payload* _add = _internal_mutable_payload_configurations()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.Payloads.payload_configurations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>& Payloads::payload_configurations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.Payloads.payload_configurations)
  return _internal_payload_configurations();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>&
Payloads::_internal_payload_configurations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_configurations_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::Payload>*
Payloads::_internal_mutable_payload_configurations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.payload_configurations_;
}

// -------------------------------------------------------------------

// Payload

// .anduril.entitymanager.v1.PayloadConfiguration config = 1 [json_name = "config"];
inline bool Payload::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline void Payload::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::PayloadConfiguration& Payload::_internal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::PayloadConfiguration* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::PayloadConfiguration&>(::anduril::entitymanager::v1::_PayloadConfiguration_default_instance_);
}
inline const ::anduril::entitymanager::v1::PayloadConfiguration& Payload::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Payload.config)
  return _internal_config();
}
inline void Payload::unsafe_arena_set_allocated_config(::anduril::entitymanager::v1::PayloadConfiguration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::anduril::entitymanager::v1::PayloadConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.Payload.config)
}
inline ::anduril::entitymanager::v1::PayloadConfiguration* Payload::release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::PayloadConfiguration* released = _impl_.config_;
  _impl_.config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::PayloadConfiguration* Payload::unsafe_arena_release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Payload.config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::PayloadConfiguration* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::PayloadConfiguration* Payload::_internal_mutable_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::PayloadConfiguration>(GetArena());
    _impl_.config_ = reinterpret_cast<::anduril::entitymanager::v1::PayloadConfiguration*>(p);
  }
  return _impl_.config_;
}
inline ::anduril::entitymanager::v1::PayloadConfiguration* Payload::mutable_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::PayloadConfiguration* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Payload.config)
  return _msg;
}
inline void Payload::set_allocated_config(::anduril::entitymanager::v1::PayloadConfiguration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.config_ = reinterpret_cast<::anduril::entitymanager::v1::PayloadConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Payload.config)
}

// -------------------------------------------------------------------

// PayloadConfiguration

// string capability_id = 1 [json_name = "capabilityId"];
inline void PayloadConfiguration::clear_capability_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capability_id_.ClearToEmpty();
}
inline const std::string& PayloadConfiguration::capability_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PayloadConfiguration.capability_id)
  return _internal_capability_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayloadConfiguration::set_capability_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capability_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PayloadConfiguration.capability_id)
}
inline std::string* PayloadConfiguration::mutable_capability_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_capability_id();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PayloadConfiguration.capability_id)
  return _s;
}
inline const std::string& PayloadConfiguration::_internal_capability_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capability_id_.Get();
}
inline void PayloadConfiguration::_internal_set_capability_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capability_id_.Set(value, GetArena());
}
inline std::string* PayloadConfiguration::_internal_mutable_capability_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.capability_id_.Mutable( GetArena());
}
inline std::string* PayloadConfiguration::release_capability_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PayloadConfiguration.capability_id)
  return _impl_.capability_id_.Release();
}
inline void PayloadConfiguration::set_allocated_capability_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capability_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.capability_id_.IsDefault()) {
    _impl_.capability_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PayloadConfiguration.capability_id)
}

// uint32 quantity = 4 [json_name = "quantity"];
inline void PayloadConfiguration::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0u;
}
inline ::uint32_t PayloadConfiguration::quantity() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PayloadConfiguration.quantity)
  return _internal_quantity();
}
inline void PayloadConfiguration::set_quantity(::uint32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PayloadConfiguration.quantity)
}
inline ::uint32_t PayloadConfiguration::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void PayloadConfiguration::_internal_set_quantity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// repeated .anduril.ontology.v1.Environment effective_environment = 5 [json_name = "effectiveEnvironment"];
inline int PayloadConfiguration::_internal_effective_environment_size() const {
  return _internal_effective_environment().size();
}
inline int PayloadConfiguration::effective_environment_size() const {
  return _internal_effective_environment_size();
}
inline void PayloadConfiguration::clear_effective_environment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effective_environment_.Clear();
}
inline ::anduril::ontology::v1::Environment PayloadConfiguration::effective_environment(int index) const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PayloadConfiguration.effective_environment)
  return static_cast<::anduril::ontology::v1::Environment>(_internal_effective_environment().Get(index));
}
inline void PayloadConfiguration::set_effective_environment(int index, ::anduril::ontology::v1::Environment value) {
  _internal_mutable_effective_environment()->Set(index, value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PayloadConfiguration.effective_environment)
}
inline void PayloadConfiguration::add_effective_environment(::anduril::ontology::v1::Environment value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_effective_environment()->Add(value);
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.PayloadConfiguration.effective_environment)
}
inline const ::google::protobuf::RepeatedField<int>& PayloadConfiguration::effective_environment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.PayloadConfiguration.effective_environment)
  return _internal_effective_environment();
}
inline ::google::protobuf::RepeatedField<int>* PayloadConfiguration::mutable_effective_environment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.PayloadConfiguration.effective_environment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_effective_environment();
}
inline const ::google::protobuf::RepeatedField<int>& PayloadConfiguration::_internal_effective_environment()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.effective_environment_;
}
inline ::google::protobuf::RepeatedField<int>* PayloadConfiguration::_internal_mutable_effective_environment() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.effective_environment_;
}

// .anduril.entitymanager.v1.PayloadOperationalState payload_operational_state = 6 [json_name = "payloadOperationalState"];
inline void PayloadConfiguration::clear_payload_operational_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_operational_state_ = 0;
}
inline ::anduril::entitymanager::v1::PayloadOperationalState PayloadConfiguration::payload_operational_state() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PayloadConfiguration.payload_operational_state)
  return _internal_payload_operational_state();
}
inline void PayloadConfiguration::set_payload_operational_state(::anduril::entitymanager::v1::PayloadOperationalState value) {
  _internal_set_payload_operational_state(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PayloadConfiguration.payload_operational_state)
}
inline ::anduril::entitymanager::v1::PayloadOperationalState PayloadConfiguration::_internal_payload_operational_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::PayloadOperationalState>(_impl_.payload_operational_state_);
}
inline void PayloadConfiguration::_internal_set_payload_operational_state(::anduril::entitymanager::v1::PayloadOperationalState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_operational_state_ = value;
}

// string payload_description = 7 [json_name = "payloadDescription"];
inline void PayloadConfiguration::clear_payload_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_description_.ClearToEmpty();
}
inline const std::string& PayloadConfiguration::payload_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.PayloadConfiguration.payload_description)
  return _internal_payload_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayloadConfiguration::set_payload_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.PayloadConfiguration.payload_description)
}
inline std::string* PayloadConfiguration::mutable_payload_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload_description();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.PayloadConfiguration.payload_description)
  return _s;
}
inline const std::string& PayloadConfiguration::_internal_payload_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_description_.Get();
}
inline void PayloadConfiguration::_internal_set_payload_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_description_.Set(value, GetArena());
}
inline std::string* PayloadConfiguration::_internal_mutable_payload_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payload_description_.Mutable( GetArena());
}
inline std::string* PayloadConfiguration::release_payload_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.PayloadConfiguration.payload_description)
  return _impl_.payload_description_.Release();
}
inline void PayloadConfiguration::set_allocated_payload_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_description_.IsDefault()) {
    _impl_.payload_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.PayloadConfiguration.payload_description)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::entitymanager::v1::PayloadOperationalState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::PayloadOperationalState>() {
  return ::anduril::entitymanager::v1::PayloadOperationalState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2fentitymanager_2fv1_2fpayloads_2epub_2eproto_2epb_2eh
