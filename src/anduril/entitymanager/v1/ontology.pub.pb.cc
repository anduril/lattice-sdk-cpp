// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/ontology.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/entitymanager/v1/ontology.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr Ontology::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : platform_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        specific_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        template__{static_cast< ::anduril::entitymanager::v1::Template >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Ontology::Ontology(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OntologyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OntologyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OntologyDefaultTypeInternal() {}
  union {
    Ontology _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OntologyDefaultTypeInternal _Ontology_default_instance_;

inline constexpr MilView::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : disposition_{static_cast< ::anduril::ontology::v1::Disposition >(0)},
        environment_{static_cast< ::anduril::ontology::v1::Environment >(0)},
        nationality_{static_cast< ::anduril::ontology::v1::Nationality >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MilView::MilView(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MilViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MilViewDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MilViewDefaultTypeInternal() {}
  union {
    MilView _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MilViewDefaultTypeInternal _MilView_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MilView, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MilView, _impl_.disposition_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MilView, _impl_.environment_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MilView, _impl_.nationality_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Ontology, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Ontology, _impl_.platform_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Ontology, _impl_.specific_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Ontology, _impl_.template__),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::entitymanager::v1::MilView)},
        {11, -1, -1, sizeof(::anduril::entitymanager::v1::Ontology)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_MilView_default_instance_._instance,
    &::anduril::entitymanager::v1::_Ontology_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n+anduril/entitymanager/v1/ontology.pub."
    "proto\022\030anduril.entitymanager.v1\032*anduril"
    "/entitymanager/v1/options.pub.proto\032(and"
    "uril/entitymanager/v1/types.pub.proto\032\"a"
    "nduril/ontology/v1/type.pub.proto\"\344\001\n\007Mi"
    "lView\022G\n\013disposition\030\001 \001(\0162 .anduril.ont"
    "ology.v1.DispositionB\003\310>\001R\013disposition\022G"
    "\n\013environment\030\002 \001(\0162 .anduril.ontology.v"
    "1.EnvironmentB\003\310>\001R\013environment\022G\n\013natio"
    "nality\030\003 \001(\0162 .anduril.ontology.v1.Natio"
    "nalityB\003\310>\001R\013nationality\"\261\001\n\010Ontology\022(\n"
    "\rplatform_type\030\003 \001(\tB\003\310>\001R\014platformType\022"
    "(\n\rspecific_type\030\004 \001(\tB\003\310>\001R\014specificTyp"
    "e\022>\n\010template\030\002 \001(\0162\".anduril.entitymana"
    "ger.v1.TemplateR\010templateJ\004\010\001\020\002R\013descrip"
    "torsB\201\002\n\034com.anduril.entitymanager.v1B\020O"
    "ntologyPubProtoP\001ZMghe.anduril.dev/andur"
    "il/andurilapis-go/anduril/entitymanager/"
    "v1;entitymanager\242\002\003AEX\252\002\030Anduril.Entitym"
    "anager.V1\312\002\030Anduril\\Entitymanager\\V1\342\002$A"
    "nduril\\Entitymanager\\V1\\GPBMetadata\352\002\032An"
    "duril::Entitymanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto_deps[3] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2foptions_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ftypes_2epub_2eproto,
        &::descriptor_table_anduril_2fontology_2fv1_2ftype_2epub_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto = {
    false,
    false,
    872,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto,
    "anduril/entitymanager/v1/ontology.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto,
};
namespace anduril {
namespace entitymanager {
namespace v1 {
// ===================================================================

class MilView::_Internal {
 public:
};

MilView::MilView(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.MilView)
}
MilView::MilView(
    ::google::protobuf::Arena* arena, const MilView& from)
    : MilView(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MilView::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MilView::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, disposition_),
           0,
           offsetof(Impl_, nationality_) -
               offsetof(Impl_, disposition_) +
               sizeof(Impl_::nationality_));
}
MilView::~MilView() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.MilView)
  SharedDtor(*this);
}
inline void MilView::SharedDtor(MessageLite& self) {
  MilView& this_ = static_cast<MilView&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MilView::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MilView(arena);
}
constexpr auto MilView::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MilView),
                                            alignof(MilView));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MilView::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MilView_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MilView::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MilView>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MilView::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MilView>(), &MilView::ByteSizeLong,
            &MilView::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MilView, _impl_._cached_size_),
        false,
    },
    &MilView::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MilView::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MilView::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::MilView>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.ontology.v1.Disposition disposition = 1 [json_name = "disposition", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MilView, _impl_.disposition_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MilView, _impl_.disposition_)}},
    // .anduril.ontology.v1.Environment environment = 2 [json_name = "environment", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MilView, _impl_.environment_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MilView, _impl_.environment_)}},
    // .anduril.ontology.v1.Nationality nationality = 3 [json_name = "nationality", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MilView, _impl_.nationality_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MilView, _impl_.nationality_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.ontology.v1.Disposition disposition = 1 [json_name = "disposition", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(MilView, _impl_.disposition_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.ontology.v1.Environment environment = 2 [json_name = "environment", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(MilView, _impl_.environment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.ontology.v1.Nationality nationality = 3 [json_name = "nationality", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(MilView, _impl_.nationality_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MilView::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.MilView)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.disposition_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.nationality_) -
      reinterpret_cast<char*>(&_impl_.disposition_)) + sizeof(_impl_.nationality_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MilView::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MilView& this_ = static_cast<const MilView&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MilView::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MilView& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.MilView)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.ontology.v1.Disposition disposition = 1 [json_name = "disposition", (.anduril.entitymanager.v1.overridable) = true];
          if (this_._internal_disposition() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_disposition(), target);
          }

          // .anduril.ontology.v1.Environment environment = 2 [json_name = "environment", (.anduril.entitymanager.v1.overridable) = true];
          if (this_._internal_environment() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_environment(), target);
          }

          // .anduril.ontology.v1.Nationality nationality = 3 [json_name = "nationality", (.anduril.entitymanager.v1.overridable) = true];
          if (this_._internal_nationality() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_nationality(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.MilView)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MilView::ByteSizeLong(const MessageLite& base) {
          const MilView& this_ = static_cast<const MilView&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MilView::ByteSizeLong() const {
          const MilView& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.MilView)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .anduril.ontology.v1.Disposition disposition = 1 [json_name = "disposition", (.anduril.entitymanager.v1.overridable) = true];
            if (this_._internal_disposition() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_disposition());
            }
            // .anduril.ontology.v1.Environment environment = 2 [json_name = "environment", (.anduril.entitymanager.v1.overridable) = true];
            if (this_._internal_environment() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_environment());
            }
            // .anduril.ontology.v1.Nationality nationality = 3 [json_name = "nationality", (.anduril.entitymanager.v1.overridable) = true];
            if (this_._internal_nationality() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_nationality());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MilView::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MilView*>(&to_msg);
  auto& from = static_cast<const MilView&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.MilView)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_disposition() != 0) {
    _this->_impl_.disposition_ = from._impl_.disposition_;
  }
  if (from._internal_environment() != 0) {
    _this->_impl_.environment_ = from._impl_.environment_;
  }
  if (from._internal_nationality() != 0) {
    _this->_impl_.nationality_ = from._impl_.nationality_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MilView::CopyFrom(const MilView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.MilView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MilView::InternalSwap(MilView* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MilView, _impl_.nationality_)
      + sizeof(MilView::_impl_.nationality_)
      - PROTOBUF_FIELD_OFFSET(MilView, _impl_.disposition_)>(
          reinterpret_cast<char*>(&_impl_.disposition_),
          reinterpret_cast<char*>(&other->_impl_.disposition_));
}

::google::protobuf::Metadata MilView::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ontology::_Internal {
 public:
};

Ontology::Ontology(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Ontology)
}
inline PROTOBUF_NDEBUG_INLINE Ontology::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Ontology& from_msg)
      : platform_type_(arena, from.platform_type_),
        specific_type_(arena, from.specific_type_),
        _cached_size_{0} {}

Ontology::Ontology(
    ::google::protobuf::Arena* arena,
    const Ontology& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Ontology* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.template__ = from._impl_.template__;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Ontology)
}
inline PROTOBUF_NDEBUG_INLINE Ontology::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : platform_type_(arena),
        specific_type_(arena),
        _cached_size_{0} {}

inline void Ontology::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.template__ = {};
}
Ontology::~Ontology() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Ontology)
  SharedDtor(*this);
}
inline void Ontology::SharedDtor(MessageLite& self) {
  Ontology& this_ = static_cast<Ontology&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.platform_type_.Destroy();
  this_._impl_.specific_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Ontology::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Ontology(arena);
}
constexpr auto Ontology::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Ontology),
                                            alignof(Ontology));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Ontology::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Ontology_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Ontology::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Ontology>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Ontology::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Ontology>(), &Ontology::ByteSizeLong,
            &Ontology::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Ontology, _impl_._cached_size_),
        false,
    },
    &Ontology::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Ontology::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 68, 2> Ontology::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967281,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Ontology>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string specific_type = 4 [json_name = "specificType", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Ontology, _impl_.specific_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.Template template = 2 [json_name = "template"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Ontology, _impl_.template__), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Ontology, _impl_.template__)}},
    // string platform_type = 3 [json_name = "platformType", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Ontology, _impl_.platform_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Template template = 2 [json_name = "template"];
    {PROTOBUF_FIELD_OFFSET(Ontology, _impl_.template__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string platform_type = 3 [json_name = "platformType", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Ontology, _impl_.platform_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string specific_type = 4 [json_name = "specificType", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Ontology, _impl_.specific_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\15\15\0\0\0\0"
    "anduril.entitymanager.v1.Ontology"
    "platform_type"
    "specific_type"
  }},
};

PROTOBUF_NOINLINE void Ontology::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Ontology)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.platform_type_.ClearToEmpty();
  _impl_.specific_type_.ClearToEmpty();
  _impl_.template__ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Ontology::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Ontology& this_ = static_cast<const Ontology&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Ontology::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Ontology& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Ontology)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.entitymanager.v1.Template template = 2 [json_name = "template"];
          if (this_._internal_template_() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_template_(), target);
          }

          // string platform_type = 3 [json_name = "platformType", (.anduril.entitymanager.v1.overridable) = true];
          if (!this_._internal_platform_type().empty()) {
            const std::string& _s = this_._internal_platform_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Ontology.platform_type");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string specific_type = 4 [json_name = "specificType", (.anduril.entitymanager.v1.overridable) = true];
          if (!this_._internal_specific_type().empty()) {
            const std::string& _s = this_._internal_specific_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.Ontology.specific_type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Ontology)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Ontology::ByteSizeLong(const MessageLite& base) {
          const Ontology& this_ = static_cast<const Ontology&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Ontology::ByteSizeLong() const {
          const Ontology& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Ontology)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string platform_type = 3 [json_name = "platformType", (.anduril.entitymanager.v1.overridable) = true];
            if (!this_._internal_platform_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_platform_type());
            }
            // string specific_type = 4 [json_name = "specificType", (.anduril.entitymanager.v1.overridable) = true];
            if (!this_._internal_specific_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_specific_type());
            }
            // .anduril.entitymanager.v1.Template template = 2 [json_name = "template"];
            if (this_._internal_template_() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_template_());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Ontology::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ontology*>(&to_msg);
  auto& from = static_cast<const Ontology&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Ontology)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_platform_type().empty()) {
    _this->_internal_set_platform_type(from._internal_platform_type());
  }
  if (!from._internal_specific_type().empty()) {
    _this->_internal_set_specific_type(from._internal_specific_type());
  }
  if (from._internal_template_() != 0) {
    _this->_impl_.template__ = from._impl_.template__;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ontology::CopyFrom(const Ontology& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Ontology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ontology::InternalSwap(Ontology* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.platform_type_, &other->_impl_.platform_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.specific_type_, &other->_impl_.specific_type_, arena);
  swap(_impl_.template__, other->_impl_.template__);
}

::google::protobuf::Metadata Ontology::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fontology_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
