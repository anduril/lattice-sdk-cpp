// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/health_status.pub.proto

#include "anduril/entitymanager/v1/health_status.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr ComponentMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::anduril::entitymanager::v1::HealthStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ComponentMessage::ComponentMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ComponentMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentMessageDefaultTypeInternal() {}
  union {
    ComponentMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentMessageDefaultTypeInternal _ComponentMessage_default_instance_;

inline constexpr ComponentHealth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        messages_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        update_time_{nullptr},
        health_{static_cast< ::anduril::entitymanager::v1::HealthStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ComponentHealth::ComponentHealth(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ComponentHealthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentHealthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentHealthDefaultTypeInternal() {}
  union {
    ComponentHealth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentHealthDefaultTypeInternal _ComponentHealth_default_instance_;

inline constexpr Health::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        components_{},
        update_time_{nullptr},
        connection_status_{static_cast< ::anduril::entitymanager::v1::ConnectionStatus >(0)},
        health_status_{static_cast< ::anduril::entitymanager::v1::HealthStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Health::Health(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HealthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthDefaultTypeInternal() {}
  union {
    Health _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthDefaultTypeInternal _Health_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentMessage, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentMessage, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentHealth, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentHealth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentHealth, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentHealth, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentHealth, _impl_.health_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentHealth, _impl_.messages_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::ComponentHealth, _impl_.update_time_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Health, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Health, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Health, _impl_.connection_status_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Health, _impl_.health_status_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Health, _impl_.components_),
    PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Health, _impl_.update_time_),
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::entitymanager::v1::ComponentMessage)},
        {10, 23, -1, sizeof(::anduril::entitymanager::v1::ComponentHealth)},
        {28, 40, -1, sizeof(::anduril::entitymanager::v1::Health)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_ComponentMessage_default_instance_._instance,
    &::anduril::entitymanager::v1::_ComponentHealth_default_instance_._instance,
    &::anduril::entitymanager::v1::_Health_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n0anduril/entitymanager/v1/health_status"
    ".pub.proto\022\030anduril.entitymanager.v1\032\037go"
    "ogle/protobuf/timestamp.proto\"l\n\020Compone"
    "ntMessage\022>\n\006status\030\001 \001(\0162&.anduril.enti"
    "tymanager.v1.HealthStatusR\006status\022\030\n\007mes"
    "sage\030\002 \001(\tR\007message\"\372\001\n\017ComponentHealth\022"
    "\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022>\n\006h"
    "ealth\030\003 \001(\0162&.anduril.entitymanager.v1.H"
    "ealthStatusR\006health\022F\n\010messages\030\004 \003(\0132*."
    "anduril.entitymanager.v1.ComponentMessag"
    "eR\010messages\022;\n\013update_time\030\005 \001(\0132\032.googl"
    "e.protobuf.TimestampR\nupdateTime\"\266\002\n\006Hea"
    "lth\022W\n\021connection_status\030\001 \001(\0162*.anduril"
    ".entitymanager.v1.ConnectionStatusR\020conn"
    "ectionStatus\022K\n\rhealth_status\030\002 \001(\0162&.an"
    "duril.entitymanager.v1.HealthStatusR\014hea"
    "lthStatus\022I\n\ncomponents\030\003 \003(\0132).anduril."
    "entitymanager.v1.ComponentHealthR\ncompon"
    "ents\022;\n\013update_time\030\004 \001(\0132\032.google.proto"
    "buf.TimestampR\nupdateTime*n\n\020ConnectionS"
    "tatus\022\035\n\031CONNECTION_STATUS_INVALID\020\000\022\034\n\030"
    "CONNECTION_STATUS_ONLINE\020\001\022\035\n\031CONNECTION"
    "_STATUS_OFFLINE\020\002*\254\001\n\014HealthStatus\022\031\n\025HE"
    "ALTH_STATUS_INVALID\020\000\022\031\n\025HEALTH_STATUS_H"
    "EALTHY\020\001\022\026\n\022HEALTH_STATUS_WARN\020\002\022\026\n\022HEAL"
    "TH_STATUS_FAIL\020\003\022\031\n\025HEALTH_STATUS_OFFLIN"
    "E\020\004\022\033\n\027HEALTH_STATUS_NOT_READY\020\005B\205\002\n\034com"
    ".anduril.entitymanager.v1B\024HealthStatusP"
    "ubProtoP\001ZMghe.anduril.dev/anduril/andur"
    "ilapis-go/anduril/entitymanager/v1;entit"
    "ymanager\242\002\003AEX\252\002\030Anduril.Entitymanager.V"
    "1\312\002\030Anduril\\Entitymanager\\V1\342\002$Anduril\\E"
    "ntitymanager\\V1\\GPBMetadata\352\002\032Anduril::E"
    "ntitymanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto = {
    false,
    false,
    1344,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto,
    "anduril/entitymanager/v1/health_status.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto(&descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto);
namespace anduril {
namespace entitymanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* ConnectionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ConnectionStatus_internal_data_[] = {
    196608u, 0u, };
bool ConnectionStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* HealthStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t HealthStatus_internal_data_[] = {
    393216u, 0u, };
bool HealthStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

class ComponentMessage::_Internal {
 public:
};

ComponentMessage::ComponentMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.ComponentMessage)
}
inline PROTOBUF_NDEBUG_INLINE ComponentMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

ComponentMessage::ComponentMessage(
    ::google::protobuf::Arena* arena,
    const ComponentMessage& from)
    : ::google::protobuf::Message(arena) {
  ComponentMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.ComponentMessage)
}
inline PROTOBUF_NDEBUG_INLINE ComponentMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void ComponentMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ComponentMessage::~ComponentMessage() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.ComponentMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ComponentMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ComponentMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.ComponentMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ComponentMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> ComponentMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ComponentMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentMessage, _impl_.message_)}},
    // .anduril.entitymanager.v1.HealthStatus status = 1 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComponentMessage, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentMessage, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.HealthStatus status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ComponentMessage, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(ComponentMessage, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\0\7\0\0\0\0\0"
    "anduril.entitymanager.v1.ComponentMessage"
    "message"
  }},
};

::uint8_t* ComponentMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.ComponentMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.HealthStatus status = 1 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  // string message = 2 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.ComponentMessage.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.ComponentMessage)
  return target;
}

::size_t ComponentMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.ComponentMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // .anduril.entitymanager.v1.HealthStatus status = 1 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ComponentMessage::_class_data_ = {
    ComponentMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ComponentMessage::GetClassData() const {
  return &_class_data_;
}

void ComponentMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ComponentMessage*>(&to_msg);
  auto& from = static_cast<const ComponentMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.ComponentMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ComponentMessage::CopyFrom(const ComponentMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.ComponentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ComponentMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ComponentMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ComponentMessage::InternalSwap(ComponentMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ComponentMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[0]);
}
// ===================================================================

class ComponentHealth::_Internal {
 public:
  using HasBits = decltype(std::declval<ComponentHealth>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& update_time(const ComponentHealth* msg);
  static void set_has_update_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& ComponentHealth::_Internal::update_time(const ComponentHealth* msg) {
  return *msg->_impl_.update_time_;
}
void ComponentHealth::clear_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.update_time_ != nullptr) _impl_.update_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ComponentHealth::ComponentHealth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.ComponentHealth)
}
inline PROTOBUF_NDEBUG_INLINE ComponentHealth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        messages_{visibility, arena, from.messages_},
        id_(arena, from.id_),
        name_(arena, from.name_) {}

ComponentHealth::ComponentHealth(
    ::google::protobuf::Arena* arena,
    const ComponentHealth& from)
    : ::google::protobuf::Message(arena) {
  ComponentHealth* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.update_time_)
                : nullptr;
  _impl_.health_ = from._impl_.health_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.ComponentHealth)
}
inline PROTOBUF_NDEBUG_INLINE ComponentHealth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        messages_{visibility, arena},
        id_(arena),
        name_(arena) {}

inline void ComponentHealth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_time_),
           0,
           offsetof(Impl_, health_) -
               offsetof(Impl_, update_time_) +
               sizeof(Impl_::health_));
}
ComponentHealth::~ComponentHealth() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.ComponentHealth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ComponentHealth::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  delete _impl_.update_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ComponentHealth::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.ComponentHealth)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.update_time_ != nullptr);
    _impl_.update_time_->Clear();
  }
  _impl_.health_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ComponentHealth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 55, 2> ComponentHealth::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ComponentHealth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.name_)}},
    // .anduril.entitymanager.v1.HealthStatus health = 3 [json_name = "health"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComponentHealth, _impl_.health_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.health_)}},
    // repeated .anduril.entitymanager.v1.ComponentMessage messages = 4 [json_name = "messages"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.messages_)}},
    // .google.protobuf.Timestamp update_time = 5 [json_name = "updateTime"];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 1, PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.update_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.HealthStatus health = 3 [json_name = "health"];
    {PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.health_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .anduril.entitymanager.v1.ComponentMessage messages = 4 [json_name = "messages"];
    {PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.messages_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp update_time = 5 [json_name = "updateTime"];
    {PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.update_time_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ComponentMessage>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\50\2\4\0\0\0\0\0"
    "anduril.entitymanager.v1.ComponentHealth"
    "id"
    "name"
  }},
};

::uint8_t* ComponentHealth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.ComponentHealth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.ComponentHealth.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.ComponentHealth.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .anduril.entitymanager.v1.HealthStatus health = 3 [json_name = "health"];
  if (this->_internal_health() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_health(), target);
  }

  // repeated .anduril.entitymanager.v1.ComponentMessage messages = 4 [json_name = "messages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp update_time = 5 [json_name = "updateTime"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::update_time(this),
        _Internal::update_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.ComponentHealth)
  return target;
}

::size_t ComponentHealth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.ComponentHealth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.ComponentMessage messages = 4 [json_name = "messages"];
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_internal_messages()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .google.protobuf.Timestamp update_time = 5 [json_name = "updateTime"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_time_);
  }

  // .anduril.entitymanager.v1.HealthStatus health = 3 [json_name = "health"];
  if (this->_internal_health() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_health());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ComponentHealth::_class_data_ = {
    ComponentHealth::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ComponentHealth::GetClassData() const {
  return &_class_data_;
}

void ComponentHealth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ComponentHealth*>(&to_msg);
  auto& from = static_cast<const ComponentHealth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.ComponentHealth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_update_time());
  }
  if (from._internal_health() != 0) {
    _this->_internal_set_health(from._internal_health());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ComponentHealth::CopyFrom(const ComponentHealth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.ComponentHealth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ComponentHealth::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ComponentHealth::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ComponentHealth::InternalSwap(ComponentHealth* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.health_)
      + sizeof(ComponentHealth::_impl_.health_)
      - PROTOBUF_FIELD_OFFSET(ComponentHealth, _impl_.update_time_)>(
          reinterpret_cast<char*>(&_impl_.update_time_),
          reinterpret_cast<char*>(&other->_impl_.update_time_));
}

::google::protobuf::Metadata ComponentHealth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[1]);
}
// ===================================================================

class Health::_Internal {
 public:
  using HasBits = decltype(std::declval<Health>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Health, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& update_time(const Health* msg);
  static void set_has_update_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& Health::_Internal::update_time(const Health* msg) {
  return *msg->_impl_.update_time_;
}
void Health::clear_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.update_time_ != nullptr) _impl_.update_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Health::Health(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Health)
}
inline PROTOBUF_NDEBUG_INLINE Health::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        components_{visibility, arena, from.components_} {}

Health::Health(
    ::google::protobuf::Arena* arena,
    const Health& from)
    : ::google::protobuf::Message(arena) {
  Health* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.update_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, connection_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, connection_status_),
           offsetof(Impl_, health_status_) -
               offsetof(Impl_, connection_status_) +
               sizeof(Impl_::health_status_));

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Health)
}
inline PROTOBUF_NDEBUG_INLINE Health::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        components_{visibility, arena} {}

inline void Health::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_time_),
           0,
           offsetof(Impl_, health_status_) -
               offsetof(Impl_, update_time_) +
               sizeof(Impl_::health_status_));
}
Health::~Health() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Health)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Health::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.update_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Health::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Health)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.components_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.update_time_ != nullptr);
    _impl_.update_time_->Clear();
  }
  ::memset(&_impl_.connection_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.health_status_) -
      reinterpret_cast<char*>(&_impl_.connection_status_)) + sizeof(_impl_.health_status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Health::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> Health::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Health, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Health_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp update_time = 4 [json_name = "updateTime"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(Health, _impl_.update_time_)}},
    // .anduril.entitymanager.v1.ConnectionStatus connection_status = 1 [json_name = "connectionStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Health, _impl_.connection_status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.connection_status_)}},
    // .anduril.entitymanager.v1.HealthStatus health_status = 2 [json_name = "healthStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Health, _impl_.health_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.health_status_)}},
    // repeated .anduril.entitymanager.v1.ComponentHealth components = 3 [json_name = "components"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.components_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.ConnectionStatus connection_status = 1 [json_name = "connectionStatus"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.connection_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.entitymanager.v1.HealthStatus health_status = 2 [json_name = "healthStatus"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.health_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .anduril.entitymanager.v1.ComponentHealth components = 3 [json_name = "components"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.components_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp update_time = 4 [json_name = "updateTime"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.update_time_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::ComponentHealth>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* Health::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Health)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entitymanager.v1.ConnectionStatus connection_status = 1 [json_name = "connectionStatus"];
  if (this->_internal_connection_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_connection_status(), target);
  }

  // .anduril.entitymanager.v1.HealthStatus health_status = 2 [json_name = "healthStatus"];
  if (this->_internal_health_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_health_status(), target);
  }

  // repeated .anduril.entitymanager.v1.ComponentHealth components = 3 [json_name = "components"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_components_size()); i < n; i++) {
    const auto& repfield = this->_internal_components().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp update_time = 4 [json_name = "updateTime"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::update_time(this),
        _Internal::update_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Health)
  return target;
}

::size_t Health::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Health)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entitymanager.v1.ComponentHealth components = 3 [json_name = "components"];
  total_size += 1UL * this->_internal_components_size();
  for (const auto& msg : this->_internal_components()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .google.protobuf.Timestamp update_time = 4 [json_name = "updateTime"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_time_);
  }

  // .anduril.entitymanager.v1.ConnectionStatus connection_status = 1 [json_name = "connectionStatus"];
  if (this->_internal_connection_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_connection_status());
  }

  // .anduril.entitymanager.v1.HealthStatus health_status = 2 [json_name = "healthStatus"];
  if (this->_internal_health_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_health_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Health::_class_data_ = {
    Health::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Health::GetClassData() const {
  return &_class_data_;
}

void Health::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Health*>(&to_msg);
  auto& from = static_cast<const Health&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Health)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_components()->MergeFrom(
      from._internal_components());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_update_time());
  }
  if (from._internal_connection_status() != 0) {
    _this->_internal_set_connection_status(from._internal_connection_status());
  }
  if (from._internal_health_status() != 0) {
    _this->_internal_set_health_status(from._internal_health_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Health::CopyFrom(const Health& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Health)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Health::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Health::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Health::InternalSwap(Health* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.components_.InternalSwap(&other->_impl_.components_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Health, _impl_.health_status_)
      + sizeof(Health::_impl_.health_status_)
      - PROTOBUF_FIELD_OFFSET(Health, _impl_.update_time_)>(
          reinterpret_cast<char*>(&_impl_.update_time_),
          reinterpret_cast<char*>(&other->_impl_.update_time_));
}

::google::protobuf::Metadata Health::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_getter, &descriptor_table_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto_once,
      file_level_metadata_anduril_2fentitymanager_2fv1_2fhealth_5fstatus_2epub_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
