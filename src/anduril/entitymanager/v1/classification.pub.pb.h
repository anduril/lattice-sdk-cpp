// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/classification.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto_2epb_2eh
#define anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto;
namespace anduril {
namespace entitymanager {
namespace v1 {
class Classification;
struct ClassificationDefaultTypeInternal;
extern ClassificationDefaultTypeInternal _Classification_default_instance_;
class ClassificationInformation;
struct ClassificationInformationDefaultTypeInternal;
extern ClassificationInformationDefaultTypeInternal _ClassificationInformation_default_instance_;
class FieldClassificationInformation;
struct FieldClassificationInformationDefaultTypeInternal;
extern FieldClassificationInformationDefaultTypeInternal _FieldClassificationInformation_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entitymanager {
namespace v1 {
enum ClassificationLevels : int {
  CLASSIFICATION_LEVELS_INVALID = 0,
  CLASSIFICATION_LEVELS_UNCLASSIFIED = 1,
  CLASSIFICATION_LEVELS_CONTROLLED_UNCLASSIFIED = 2,
  CLASSIFICATION_LEVELS_CONFIDENTIAL = 3,
  CLASSIFICATION_LEVELS_SECRET = 4,
  CLASSIFICATION_LEVELS_TOP_SECRET = 5,
  ClassificationLevels_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ClassificationLevels_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ClassificationLevels_IsValid(int value);
extern const uint32_t ClassificationLevels_internal_data_[];
constexpr ClassificationLevels ClassificationLevels_MIN = static_cast<ClassificationLevels>(0);
constexpr ClassificationLevels ClassificationLevels_MAX = static_cast<ClassificationLevels>(5);
constexpr int ClassificationLevels_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ClassificationLevels_descriptor();
template <typename T>
const std::string& ClassificationLevels_Name(T value) {
  static_assert(std::is_same<T, ClassificationLevels>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ClassificationLevels_Name().");
  return ClassificationLevels_Name(static_cast<ClassificationLevels>(value));
}
template <>
inline const std::string& ClassificationLevels_Name(ClassificationLevels value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ClassificationLevels_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ClassificationLevels_Parse(absl::string_view name, ClassificationLevels* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClassificationLevels>(
      ClassificationLevels_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ClassificationInformation final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.ClassificationInformation) */ {
 public:
  inline ClassificationInformation() : ClassificationInformation(nullptr) {}
  ~ClassificationInformation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClassificationInformation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClassificationInformation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClassificationInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClassificationInformation(const ClassificationInformation& from) : ClassificationInformation(nullptr, from) {}
  inline ClassificationInformation(ClassificationInformation&& from) noexcept
      : ClassificationInformation(nullptr, std::move(from)) {}
  inline ClassificationInformation& operator=(const ClassificationInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClassificationInformation& operator=(ClassificationInformation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClassificationInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClassificationInformation* internal_default_instance() {
    return reinterpret_cast<const ClassificationInformation*>(
        &_ClassificationInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ClassificationInformation& a, ClassificationInformation& b) { a.Swap(&b); }
  inline void Swap(ClassificationInformation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClassificationInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClassificationInformation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClassificationInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClassificationInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClassificationInformation& from) { ClassificationInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClassificationInformation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.ClassificationInformation"; }

 protected:
  explicit ClassificationInformation(::google::protobuf::Arena* arena);
  ClassificationInformation(::google::protobuf::Arena* arena, const ClassificationInformation& from);
  ClassificationInformation(::google::protobuf::Arena* arena, ClassificationInformation&& from) noexcept
      : ClassificationInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCaveatsFieldNumber = 2,
    kLevelFieldNumber = 1,
  };
  // repeated string caveats = 2 [json_name = "caveats"];
  int caveats_size() const;
  private:
  int _internal_caveats_size() const;

  public:
  void clear_caveats() ;
  const std::string& caveats(int index) const;
  std::string* mutable_caveats(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_caveats(int index, Arg_&& value, Args_... args);
  std::string* add_caveats();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_caveats(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& caveats() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_caveats();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_caveats() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_caveats();

  public:
  // .anduril.entitymanager.v1.ClassificationLevels level = 1 [json_name = "level"];
  void clear_level() ;
  ::anduril::entitymanager::v1::ClassificationLevels level() const;
  void set_level(::anduril::entitymanager::v1::ClassificationLevels value);

  private:
  ::anduril::entitymanager::v1::ClassificationLevels _internal_level() const;
  void _internal_set_level(::anduril::entitymanager::v1::ClassificationLevels value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.ClassificationInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClassificationInformation& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> caveats_;
    int level_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto;
};
// -------------------------------------------------------------------

class FieldClassificationInformation final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.FieldClassificationInformation) */ {
 public:
  inline FieldClassificationInformation() : FieldClassificationInformation(nullptr) {}
  ~FieldClassificationInformation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FieldClassificationInformation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FieldClassificationInformation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FieldClassificationInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline FieldClassificationInformation(const FieldClassificationInformation& from) : FieldClassificationInformation(nullptr, from) {}
  inline FieldClassificationInformation(FieldClassificationInformation&& from) noexcept
      : FieldClassificationInformation(nullptr, std::move(from)) {}
  inline FieldClassificationInformation& operator=(const FieldClassificationInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldClassificationInformation& operator=(FieldClassificationInformation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FieldClassificationInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const FieldClassificationInformation* internal_default_instance() {
    return reinterpret_cast<const FieldClassificationInformation*>(
        &_FieldClassificationInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FieldClassificationInformation& a, FieldClassificationInformation& b) { a.Swap(&b); }
  inline void Swap(FieldClassificationInformation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FieldClassificationInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FieldClassificationInformation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FieldClassificationInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FieldClassificationInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FieldClassificationInformation& from) { FieldClassificationInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FieldClassificationInformation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.FieldClassificationInformation"; }

 protected:
  explicit FieldClassificationInformation(::google::protobuf::Arena* arena);
  FieldClassificationInformation(::google::protobuf::Arena* arena, const FieldClassificationInformation& from);
  FieldClassificationInformation(::google::protobuf::Arena* arena, FieldClassificationInformation&& from) noexcept
      : FieldClassificationInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldPathFieldNumber = 1,
    kClassificationInformationFieldNumber = 2,
  };
  // string field_path = 1 [json_name = "fieldPath"];
  void clear_field_path() ;
  const std::string& field_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field_path(Arg_&& arg, Args_... args);
  std::string* mutable_field_path();
  PROTOBUF_NODISCARD std::string* release_field_path();
  void set_allocated_field_path(std::string* value);

  private:
  const std::string& _internal_field_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field_path(
      const std::string& value);
  std::string* _internal_mutable_field_path();

  public:
  // .anduril.entitymanager.v1.ClassificationInformation classification_information = 2 [json_name = "classificationInformation"];
  bool has_classification_information() const;
  void clear_classification_information() ;
  const ::anduril::entitymanager::v1::ClassificationInformation& classification_information() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::ClassificationInformation* release_classification_information();
  ::anduril::entitymanager::v1::ClassificationInformation* mutable_classification_information();
  void set_allocated_classification_information(::anduril::entitymanager::v1::ClassificationInformation* value);
  void unsafe_arena_set_allocated_classification_information(::anduril::entitymanager::v1::ClassificationInformation* value);
  ::anduril::entitymanager::v1::ClassificationInformation* unsafe_arena_release_classification_information();

  private:
  const ::anduril::entitymanager::v1::ClassificationInformation& _internal_classification_information() const;
  ::anduril::entitymanager::v1::ClassificationInformation* _internal_mutable_classification_information();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.FieldClassificationInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FieldClassificationInformation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr field_path_;
    ::anduril::entitymanager::v1::ClassificationInformation* classification_information_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto;
};
// -------------------------------------------------------------------

class Classification final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entitymanager.v1.Classification) */ {
 public:
  inline Classification() : Classification(nullptr) {}
  ~Classification() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Classification* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Classification));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Classification(
      ::google::protobuf::internal::ConstantInitialized);

  inline Classification(const Classification& from) : Classification(nullptr, from) {}
  inline Classification(Classification&& from) noexcept
      : Classification(nullptr, std::move(from)) {}
  inline Classification& operator=(const Classification& from) {
    CopyFrom(from);
    return *this;
  }
  inline Classification& operator=(Classification&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Classification& default_instance() {
    return *internal_default_instance();
  }
  static inline const Classification* internal_default_instance() {
    return reinterpret_cast<const Classification*>(
        &_Classification_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Classification& a, Classification& b) { a.Swap(&b); }
  inline void Swap(Classification* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Classification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Classification* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Classification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Classification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Classification& from) { Classification::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Classification* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.entitymanager.v1.Classification"; }

 protected:
  explicit Classification(::google::protobuf::Arena* arena);
  Classification(::google::protobuf::Arena* arena, const Classification& from);
  Classification(::google::protobuf::Arena* arena, Classification&& from) noexcept
      : Classification(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldsFieldNumber = 3,
    kDefaultFieldNumber = 2,
  };
  // repeated .anduril.entitymanager.v1.FieldClassificationInformation fields = 3 [json_name = "fields"];
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::anduril::entitymanager::v1::FieldClassificationInformation* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>* mutable_fields();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>* _internal_mutable_fields();
  public:
  const ::anduril::entitymanager::v1::FieldClassificationInformation& fields(int index) const;
  ::anduril::entitymanager::v1::FieldClassificationInformation* add_fields();
  const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>& fields() const;
  // .anduril.entitymanager.v1.ClassificationInformation default = 2 [json_name = "default"];
  bool has_default_() const;
  void clear_default_() ;
  const ::anduril::entitymanager::v1::ClassificationInformation& default_() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::ClassificationInformation* release_default_();
  ::anduril::entitymanager::v1::ClassificationInformation* mutable_default_();
  void set_allocated_default_(::anduril::entitymanager::v1::ClassificationInformation* value);
  void unsafe_arena_set_allocated_default_(::anduril::entitymanager::v1::ClassificationInformation* value);
  ::anduril::entitymanager::v1::ClassificationInformation* unsafe_arena_release_default_();

  private:
  const ::anduril::entitymanager::v1::ClassificationInformation& _internal_default_() const;
  ::anduril::entitymanager::v1::ClassificationInformation* _internal_mutable_default_();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Classification)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Classification& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::anduril::entitymanager::v1::FieldClassificationInformation > fields_;
    ::anduril::entitymanager::v1::ClassificationInformation* default__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Classification

// .anduril.entitymanager.v1.ClassificationInformation default = 2 [json_name = "default"];
inline bool Classification::has_default_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.default__ != nullptr);
  return value;
}
inline void Classification::clear_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.default__ != nullptr) _impl_.default__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::ClassificationInformation& Classification::_internal_default_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::ClassificationInformation* p = _impl_.default__;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::ClassificationInformation&>(::anduril::entitymanager::v1::_ClassificationInformation_default_instance_);
}
inline const ::anduril::entitymanager::v1::ClassificationInformation& Classification::default_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Classification.default)
  return _internal_default_();
}
inline void Classification::unsafe_arena_set_allocated_default_(::anduril::entitymanager::v1::ClassificationInformation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.default__);
  }
  _impl_.default__ = reinterpret_cast<::anduril::entitymanager::v1::ClassificationInformation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.Classification.default)
}
inline ::anduril::entitymanager::v1::ClassificationInformation* Classification::release_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::ClassificationInformation* released = _impl_.default__;
  _impl_.default__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::ClassificationInformation* Classification::unsafe_arena_release_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.Classification.default)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::ClassificationInformation* temp = _impl_.default__;
  _impl_.default__ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::ClassificationInformation* Classification::_internal_mutable_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.default__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::ClassificationInformation>(GetArena());
    _impl_.default__ = reinterpret_cast<::anduril::entitymanager::v1::ClassificationInformation*>(p);
  }
  return _impl_.default__;
}
inline ::anduril::entitymanager::v1::ClassificationInformation* Classification::mutable_default_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::ClassificationInformation* _msg = _internal_mutable_default_();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Classification.default)
  return _msg;
}
inline void Classification::set_allocated_default_(::anduril::entitymanager::v1::ClassificationInformation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.default__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.default__ = reinterpret_cast<::anduril::entitymanager::v1::ClassificationInformation*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.Classification.default)
}

// repeated .anduril.entitymanager.v1.FieldClassificationInformation fields = 3 [json_name = "fields"];
inline int Classification::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int Classification::fields_size() const {
  return _internal_fields_size();
}
inline void Classification::clear_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_.Clear();
}
inline ::anduril::entitymanager::v1::FieldClassificationInformation* Classification::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.Classification.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>* Classification::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.Classification.fields)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_fields();
}
inline const ::anduril::entitymanager::v1::FieldClassificationInformation& Classification::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.Classification.fields)
  return _internal_fields().Get(index);
}
inline ::anduril::entitymanager::v1::FieldClassificationInformation* Classification::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entitymanager::v1::FieldClassificationInformation* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.Classification.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>& Classification::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.Classification.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>&
Classification::_internal_fields() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entitymanager::v1::FieldClassificationInformation>*
Classification::_internal_mutable_fields() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// FieldClassificationInformation

// string field_path = 1 [json_name = "fieldPath"];
inline void FieldClassificationInformation::clear_field_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_path_.ClearToEmpty();
}
inline const std::string& FieldClassificationInformation::field_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldClassificationInformation.field_path)
  return _internal_field_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FieldClassificationInformation::set_field_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.FieldClassificationInformation.field_path)
}
inline std::string* FieldClassificationInformation::mutable_field_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_field_path();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.FieldClassificationInformation.field_path)
  return _s;
}
inline const std::string& FieldClassificationInformation::_internal_field_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_path_.Get();
}
inline void FieldClassificationInformation::_internal_set_field_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_path_.Set(value, GetArena());
}
inline std::string* FieldClassificationInformation::_internal_mutable_field_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.field_path_.Mutable( GetArena());
}
inline std::string* FieldClassificationInformation::release_field_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.FieldClassificationInformation.field_path)
  return _impl_.field_path_.Release();
}
inline void FieldClassificationInformation::set_allocated_field_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.field_path_.IsDefault()) {
    _impl_.field_path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.FieldClassificationInformation.field_path)
}

// .anduril.entitymanager.v1.ClassificationInformation classification_information = 2 [json_name = "classificationInformation"];
inline bool FieldClassificationInformation::has_classification_information() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.classification_information_ != nullptr);
  return value;
}
inline void FieldClassificationInformation::clear_classification_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.classification_information_ != nullptr) _impl_.classification_information_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::entitymanager::v1::ClassificationInformation& FieldClassificationInformation::_internal_classification_information() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::ClassificationInformation* p = _impl_.classification_information_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::ClassificationInformation&>(::anduril::entitymanager::v1::_ClassificationInformation_default_instance_);
}
inline const ::anduril::entitymanager::v1::ClassificationInformation& FieldClassificationInformation::classification_information() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.FieldClassificationInformation.classification_information)
  return _internal_classification_information();
}
inline void FieldClassificationInformation::unsafe_arena_set_allocated_classification_information(::anduril::entitymanager::v1::ClassificationInformation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.classification_information_);
  }
  _impl_.classification_information_ = reinterpret_cast<::anduril::entitymanager::v1::ClassificationInformation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entitymanager.v1.FieldClassificationInformation.classification_information)
}
inline ::anduril::entitymanager::v1::ClassificationInformation* FieldClassificationInformation::release_classification_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::ClassificationInformation* released = _impl_.classification_information_;
  _impl_.classification_information_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::entitymanager::v1::ClassificationInformation* FieldClassificationInformation::unsafe_arena_release_classification_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entitymanager.v1.FieldClassificationInformation.classification_information)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::ClassificationInformation* temp = _impl_.classification_information_;
  _impl_.classification_information_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::ClassificationInformation* FieldClassificationInformation::_internal_mutable_classification_information() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.classification_information_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::ClassificationInformation>(GetArena());
    _impl_.classification_information_ = reinterpret_cast<::anduril::entitymanager::v1::ClassificationInformation*>(p);
  }
  return _impl_.classification_information_;
}
inline ::anduril::entitymanager::v1::ClassificationInformation* FieldClassificationInformation::mutable_classification_information() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::ClassificationInformation* _msg = _internal_mutable_classification_information();
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.FieldClassificationInformation.classification_information)
  return _msg;
}
inline void FieldClassificationInformation::set_allocated_classification_information(::anduril::entitymanager::v1::ClassificationInformation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.classification_information_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.classification_information_ = reinterpret_cast<::anduril::entitymanager::v1::ClassificationInformation*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entitymanager.v1.FieldClassificationInformation.classification_information)
}

// -------------------------------------------------------------------

// ClassificationInformation

// .anduril.entitymanager.v1.ClassificationLevels level = 1 [json_name = "level"];
inline void ClassificationInformation::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
}
inline ::anduril::entitymanager::v1::ClassificationLevels ClassificationInformation::level() const {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ClassificationInformation.level)
  return _internal_level();
}
inline void ClassificationInformation::set_level(::anduril::entitymanager::v1::ClassificationLevels value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.ClassificationInformation.level)
}
inline ::anduril::entitymanager::v1::ClassificationLevels ClassificationInformation::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entitymanager::v1::ClassificationLevels>(_impl_.level_);
}
inline void ClassificationInformation::_internal_set_level(::anduril::entitymanager::v1::ClassificationLevels value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// repeated string caveats = 2 [json_name = "caveats"];
inline int ClassificationInformation::_internal_caveats_size() const {
  return _internal_caveats().size();
}
inline int ClassificationInformation::caveats_size() const {
  return _internal_caveats_size();
}
inline void ClassificationInformation::clear_caveats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.caveats_.Clear();
}
inline std::string* ClassificationInformation::add_caveats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_caveats()->Add();
  // @@protoc_insertion_point(field_add_mutable:anduril.entitymanager.v1.ClassificationInformation.caveats)
  return _s;
}
inline const std::string& ClassificationInformation::caveats(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entitymanager.v1.ClassificationInformation.caveats)
  return _internal_caveats().Get(index);
}
inline std::string* ClassificationInformation::mutable_caveats(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entitymanager.v1.ClassificationInformation.caveats)
  return _internal_mutable_caveats()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ClassificationInformation::set_caveats(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_caveats()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:anduril.entitymanager.v1.ClassificationInformation.caveats)
}
template <typename Arg_, typename... Args_>
inline void ClassificationInformation::add_caveats(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_caveats(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:anduril.entitymanager.v1.ClassificationInformation.caveats)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ClassificationInformation::caveats() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entitymanager.v1.ClassificationInformation.caveats)
  return _internal_caveats();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ClassificationInformation::mutable_caveats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entitymanager.v1.ClassificationInformation.caveats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_caveats();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ClassificationInformation::_internal_caveats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.caveats_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ClassificationInformation::_internal_mutable_caveats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.caveats_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::entitymanager::v1::ClassificationLevels> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entitymanager::v1::ClassificationLevels>() {
  return ::anduril::entitymanager::v1::ClassificationLevels_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2fentitymanager_2fv1_2fclassification_2epub_2eproto_2epb_2eh
