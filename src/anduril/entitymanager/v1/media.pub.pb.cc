// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/media.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/entitymanager/v1/media.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entitymanager {
namespace v1 {

inline constexpr MediaItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        relative_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::anduril::entitymanager::v1::MediaType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MediaItem::MediaItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MediaItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MediaItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MediaItemDefaultTypeInternal() {}
  union {
    MediaItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MediaItemDefaultTypeInternal _MediaItem_default_instance_;

inline constexpr Media::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : media_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Media::Media(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MediaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MediaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MediaDefaultTypeInternal() {}
  union {
    Media _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MediaDefaultTypeInternal _Media_default_instance_;
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Media, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::Media, _impl_.media_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MediaItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MediaItem, _impl_.url_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MediaItem, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::anduril::entitymanager::v1::MediaItem, _impl_.relative_path_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::entitymanager::v1::Media)},
        {9, -1, -1, sizeof(::anduril::entitymanager::v1::MediaItem)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entitymanager::v1::_Media_default_instance_._instance,
    &::anduril::entitymanager::v1::_MediaItem_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(anduril/entitymanager/v1/media.pub.pro"
    "to\022\030anduril.entitymanager.v1\032*anduril/en"
    "titymanager/v1/options.pub.proto\"G\n\005Medi"
    "a\022>\n\005media\030\001 \003(\0132#.anduril.entitymanager"
    ".v1.MediaItemB\003\310>\001R\005media\"{\n\tMediaItem\022\020"
    "\n\003url\030\001 \001(\tR\003url\0227\n\004type\030\002 \001(\0162#.anduril"
    ".entitymanager.v1.MediaTypeR\004type\022#\n\rrel"
    "ative_path\030\003 \001(\tR\014relativePath*\206\001\n\tMedia"
    "Type\022\026\n\022MEDIA_TYPE_INVALID\020\000\022\030\n\024MEDIA_TY"
    "PE_THUMBNAIL\020\001\022\024\n\020MEDIA_TYPE_IMAGE\020\002\022\024\n\020"
    "MEDIA_TYPE_VIDEO\020\003\022\033\n\027MEDIA_TYPE_SLIPPY_"
    "TILES\020\004B\376\001\n\034com.anduril.entitymanager.v1"
    "B\rMediaPubProtoP\001ZMghe.anduril.dev/andur"
    "il/andurilapis-go/anduril/entitymanager/"
    "v1;entitymanager\242\002\003AEX\252\002\030Anduril.Entitym"
    "anager.V1\312\002\030Anduril\\Entitymanager\\V1\342\002$A"
    "nduril\\Entitymanager\\V1\\GPBMetadata\352\002\032An"
    "duril::Entitymanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto_deps[1] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2foptions_2epub_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto = {
    false,
    false,
    712,
    descriptor_table_protodef_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto,
    "anduril/entitymanager/v1/media.pub.proto",
    &descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto_once,
    descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto,
};
namespace anduril {
namespace entitymanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* MediaType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MediaType_internal_data_[] = {
    327680u, 0u, };
bool MediaType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class Media::_Internal {
 public:
};

Media::Media(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.Media)
}
inline PROTOBUF_NDEBUG_INLINE Media::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::Media& from_msg)
      : media_{visibility, arena, from.media_},
        _cached_size_{0} {}

Media::Media(
    ::google::protobuf::Arena* arena,
    const Media& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Media* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.Media)
}
inline PROTOBUF_NDEBUG_INLINE Media::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : media_{visibility, arena},
        _cached_size_{0} {}

inline void Media::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Media::~Media() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.Media)
  SharedDtor(*this);
}
inline void Media::SharedDtor(MessageLite& self) {
  Media& this_ = static_cast<Media&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Media::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Media(arena);
}
constexpr auto Media::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Media, _impl_.media_) +
          decltype(Media::_impl_.media_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Media), alignof(Media), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Media::PlacementNew_,
                                 sizeof(Media),
                                 alignof(Media));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Media::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Media_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Media::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Media>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Media::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Media>(), &Media::ByteSizeLong,
            &Media::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Media, _impl_._cached_size_),
        false,
    },
    &Media::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Media::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Media::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Media>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.entitymanager.v1.MediaItem media = 1 [json_name = "media", (.anduril.entitymanager.v1.overridable) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Media, _impl_.media_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entitymanager.v1.MediaItem media = 1 [json_name = "media", (.anduril.entitymanager.v1.overridable) = true];
    {PROTOBUF_FIELD_OFFSET(Media, _impl_.media_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::MediaItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Media::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.Media)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.media_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Media::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Media& this_ = static_cast<const Media&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Media::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Media& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.Media)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.entitymanager.v1.MediaItem media = 1 [json_name = "media", (.anduril.entitymanager.v1.overridable) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_media_size());
               i < n; i++) {
            const auto& repfield = this_._internal_media().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.Media)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Media::ByteSizeLong(const MessageLite& base) {
          const Media& this_ = static_cast<const Media&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Media::ByteSizeLong() const {
          const Media& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.Media)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.entitymanager.v1.MediaItem media = 1 [json_name = "media", (.anduril.entitymanager.v1.overridable) = true];
            {
              total_size += 1UL * this_._internal_media_size();
              for (const auto& msg : this_._internal_media()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Media::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Media*>(&to_msg);
  auto& from = static_cast<const Media&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.Media)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_media()->MergeFrom(
      from._internal_media());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Media::CopyFrom(const Media& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.Media)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Media::InternalSwap(Media* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.media_.InternalSwap(&other->_impl_.media_);
}

::google::protobuf::Metadata Media::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MediaItem::_Internal {
 public:
};

MediaItem::MediaItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entitymanager.v1.MediaItem)
}
inline PROTOBUF_NDEBUG_INLINE MediaItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entitymanager::v1::MediaItem& from_msg)
      : url_(arena, from.url_),
        relative_path_(arena, from.relative_path_),
        _cached_size_{0} {}

MediaItem::MediaItem(
    ::google::protobuf::Arena* arena,
    const MediaItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MediaItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:anduril.entitymanager.v1.MediaItem)
}
inline PROTOBUF_NDEBUG_INLINE MediaItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : url_(arena),
        relative_path_(arena),
        _cached_size_{0} {}

inline void MediaItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
MediaItem::~MediaItem() {
  // @@protoc_insertion_point(destructor:anduril.entitymanager.v1.MediaItem)
  SharedDtor(*this);
}
inline void MediaItem::SharedDtor(MessageLite& self) {
  MediaItem& this_ = static_cast<MediaItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.url_.Destroy();
  this_._impl_.relative_path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MediaItem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MediaItem(arena);
}
constexpr auto MediaItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MediaItem),
                                            alignof(MediaItem));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MediaItem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MediaItem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MediaItem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MediaItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MediaItem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MediaItem>(), &MediaItem::ByteSizeLong,
            &MediaItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MediaItem, _impl_._cached_size_),
        false,
    },
    &MediaItem::kDescriptorMethods,
    &descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MediaItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2> MediaItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::MediaItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string url = 1 [json_name = "url"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MediaItem, _impl_.url_)}},
    // .anduril.entitymanager.v1.MediaType type = 2 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MediaItem, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MediaItem, _impl_.type_)}},
    // string relative_path = 3 [json_name = "relativePath"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MediaItem, _impl_.relative_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url = 1 [json_name = "url"];
    {PROTOBUF_FIELD_OFFSET(MediaItem, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entitymanager.v1.MediaType type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(MediaItem, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string relative_path = 3 [json_name = "relativePath"];
    {PROTOBUF_FIELD_OFFSET(MediaItem, _impl_.relative_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\3\0\15\0\0\0\0"
    "anduril.entitymanager.v1.MediaItem"
    "url"
    "relative_path"
  }},
};

PROTOBUF_NOINLINE void MediaItem::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entitymanager.v1.MediaItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _impl_.relative_path_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MediaItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MediaItem& this_ = static_cast<const MediaItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MediaItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MediaItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.entitymanager.v1.MediaItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string url = 1 [json_name = "url"];
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.MediaItem.url");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .anduril.entitymanager.v1.MediaType type = 2 [json_name = "type"];
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          // string relative_path = 3 [json_name = "relativePath"];
          if (!this_._internal_relative_path().empty()) {
            const std::string& _s = this_._internal_relative_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entitymanager.v1.MediaItem.relative_path");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.entitymanager.v1.MediaItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MediaItem::ByteSizeLong(const MessageLite& base) {
          const MediaItem& this_ = static_cast<const MediaItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MediaItem::ByteSizeLong() const {
          const MediaItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.entitymanager.v1.MediaItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string url = 1 [json_name = "url"];
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
            // string relative_path = 3 [json_name = "relativePath"];
            if (!this_._internal_relative_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_relative_path());
            }
            // .anduril.entitymanager.v1.MediaType type = 2 [json_name = "type"];
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MediaItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MediaItem*>(&to_msg);
  auto& from = static_cast<const MediaItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entitymanager.v1.MediaItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (!from._internal_relative_path().empty()) {
    _this->_internal_set_relative_path(from._internal_relative_path());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MediaItem::CopyFrom(const MediaItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entitymanager.v1.MediaItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MediaItem::InternalSwap(MediaItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.relative_path_, &other->_impl_.relative_path_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata MediaItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entitymanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fentitymanager_2fv1_2fmedia_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
