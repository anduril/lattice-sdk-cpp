// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/taskmanager/v1/task_manager_grpcapi.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/taskmanager/v1/task_manager_grpcapi.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace taskmanager {
namespace v1 {

inline constexpr RateLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : update_per_task_limit_ms_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RateLimit::RateLimit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RateLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RateLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RateLimitDefaultTypeInternal() {}
  union {
    RateLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RateLimitDefaultTypeInternal _RateLimit_default_instance_;

inline constexpr QueryTasksRequest_StatusFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{},
        _status_cached_byte_size_{0},
        filter_type_{static_cast< ::anduril::taskmanager::v1::QueryTasksRequest_FilterType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryTasksRequest_StatusFilter::QueryTasksRequest_StatusFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryTasksRequest_StatusFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTasksRequest_StatusFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTasksRequest_StatusFilterDefaultTypeInternal() {}
  union {
    QueryTasksRequest_StatusFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTasksRequest_StatusFilterDefaultTypeInternal _QueryTasksRequest_StatusFilter_default_instance_;

inline constexpr GetTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        definition_version_{0u},
        task_view_{static_cast< ::anduril::taskmanager::v1::TaskView >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTaskRequest::GetTaskRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTaskRequestDefaultTypeInternal() {}
  union {
    GetTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTaskRequestDefaultTypeInternal _GetTaskRequest_default_instance_;

inline constexpr EntityIds::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entity_ids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntityIds::EntityIds(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityIdsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityIdsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityIdsDefaultTypeInternal() {}
  union {
    EntityIds _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityIdsDefaultTypeInternal _EntityIds_default_instance_;

inline constexpr QueryTasksRequest_TimeRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_start_time_{nullptr},
        update_end_time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryTasksRequest_TimeRange::QueryTasksRequest_TimeRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryTasksRequest_TimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTasksRequest_TimeRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTasksRequest_TimeRangeDefaultTypeInternal() {}
  union {
    QueryTasksRequest_TimeRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTasksRequest_TimeRangeDefaultTypeInternal _QueryTasksRequest_TimeRange_default_instance_;

inline constexpr ListenAsAgentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : agent_selector_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ListenAsAgentRequest::ListenAsAgentRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListenAsAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListenAsAgentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListenAsAgentRequestDefaultTypeInternal() {}
  union {
    ListenAsAgentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListenAsAgentRequestDefaultTypeInternal _ListenAsAgentRequest_default_instance_;

inline constexpr Heartbeat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Heartbeat::Heartbeat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatDefaultTypeInternal() {}
  union {
    Heartbeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;

inline constexpr QueryTasksRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parent_task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_filter_{nullptr},
        update_time_range_{nullptr},
        view_{static_cast< ::anduril::taskmanager::v1::TaskView >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryTasksRequest::QueryTasksRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryTasksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTasksRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTasksRequestDefaultTypeInternal() {}
  union {
    QueryTasksRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTasksRequestDefaultTypeInternal _QueryTasksRequest_default_instance_;

inline constexpr UpdateStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateStatusRequest::UpdateStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStatusRequestDefaultTypeInternal() {}
  union {
    UpdateStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStatusRequestDefaultTypeInternal _UpdateStatusRequest_default_instance_;

inline constexpr CreateTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        initial_entities_{},
        display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        specification_{nullptr},
        author_{nullptr},
        relations_{nullptr},
        is_executed_elsewhere_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTaskRequest::CreateTaskRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTaskRequestDefaultTypeInternal() {}
  union {
    CreateTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTaskRequestDefaultTypeInternal _CreateTaskRequest_default_instance_;

inline constexpr UpdateStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateStatusResponse::UpdateStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStatusResponseDefaultTypeInternal() {}
  union {
    UpdateStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStatusResponseDefaultTypeInternal _UpdateStatusResponse_default_instance_;

inline constexpr QueryTasksResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tasks_{},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryTasksResponse::QueryTasksResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryTasksResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTasksResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTasksResponseDefaultTypeInternal() {}
  union {
    QueryTasksResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTasksResponseDefaultTypeInternal _QueryTasksResponse_default_instance_;

inline constexpr GetTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTaskResponse::GetTaskResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTaskResponseDefaultTypeInternal() {}
  union {
    GetTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTaskResponseDefaultTypeInternal _GetTaskResponse_default_instance_;

inline constexpr CreateTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTaskResponse::CreateTaskResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTaskResponseDefaultTypeInternal() {}
  union {
    CreateTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTaskResponseDefaultTypeInternal _CreateTaskResponse_default_instance_;

inline constexpr ListenAsAgentResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ListenAsAgentResponse::ListenAsAgentResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListenAsAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListenAsAgentResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListenAsAgentResponseDefaultTypeInternal() {}
  union {
    ListenAsAgentResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListenAsAgentResponseDefaultTypeInternal _ListenAsAgentResponse_default_instance_;
}  // namespace v1
}  // namespace taskmanager
}  // namespace anduril
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.display_name_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.specification_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.author_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.relations_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.is_executed_elsewhere_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.initial_entities_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskResponse, _impl_.task_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _impl_.definition_version_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _impl_.task_view_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskResponse, _impl_.task_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest_TimeRange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest_TimeRange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest_TimeRange, _impl_.update_start_time_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest_TimeRange, _impl_.update_end_time_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter, _impl_.filter_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest, _impl_.parent_task_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest, _impl_.page_token_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest, _impl_.status_filter_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest, _impl_.update_time_range_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksRequest, _impl_.view_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksResponse, _impl_.tasks_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::QueryTasksResponse, _impl_.page_token_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusRequest, _impl_.status_update_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusResponse, _impl_.task_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentRequest, _impl_.agent_selector_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentResponse, _impl_.request_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::RateLimit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::RateLimit, _impl_.update_per_task_limit_ms_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::Heartbeat, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::Heartbeat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::Heartbeat, _impl_.timestamp_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::EntityIds, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::EntityIds, _impl_.entity_ids_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::anduril::taskmanager::v1::CreateTaskRequest)},
        {24, 33, -1, sizeof(::anduril::taskmanager::v1::CreateTaskResponse)},
        {34, -1, -1, sizeof(::anduril::taskmanager::v1::GetTaskRequest)},
        {45, 54, -1, sizeof(::anduril::taskmanager::v1::GetTaskResponse)},
        {55, 65, -1, sizeof(::anduril::taskmanager::v1::QueryTasksRequest_TimeRange)},
        {67, -1, -1, sizeof(::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter)},
        {77, 90, -1, sizeof(::anduril::taskmanager::v1::QueryTasksRequest)},
        {95, -1, -1, sizeof(::anduril::taskmanager::v1::QueryTasksResponse)},
        {105, 114, -1, sizeof(::anduril::taskmanager::v1::UpdateStatusRequest)},
        {115, 124, -1, sizeof(::anduril::taskmanager::v1::UpdateStatusResponse)},
        {125, -1, -1, sizeof(::anduril::taskmanager::v1::ListenAsAgentRequest)},
        {135, -1, -1, sizeof(::anduril::taskmanager::v1::ListenAsAgentResponse)},
        {147, -1, -1, sizeof(::anduril::taskmanager::v1::RateLimit)},
        {156, 165, -1, sizeof(::anduril::taskmanager::v1::Heartbeat)},
        {166, -1, -1, sizeof(::anduril::taskmanager::v1::EntityIds)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::taskmanager::v1::_CreateTaskRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_CreateTaskResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_GetTaskRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_GetTaskResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_QueryTasksRequest_TimeRange_default_instance_._instance,
    &::anduril::taskmanager::v1::_QueryTasksRequest_StatusFilter_default_instance_._instance,
    &::anduril::taskmanager::v1::_QueryTasksRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_QueryTasksResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_UpdateStatusRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_UpdateStatusResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_ListenAsAgentRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_ListenAsAgentResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_RateLimit_default_instance_._instance,
    &::anduril::taskmanager::v1::_Heartbeat_default_instance_._instance,
    &::anduril::taskmanager::v1::_EntityIds_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n5anduril/taskmanager/v1/task_manager_gr"
    "pcapi.pub.proto\022\026anduril.taskmanager.v1\032"
    "%anduril/taskmanager/v1/task.pub.proto\032)"
    "anduril/taskmanager/v1/task_api.pub.prot"
    "o\032\031google/protobuf/any.proto\032\037google/pro"
    "tobuf/timestamp.proto\"\270\003\n\021CreateTaskRequ"
    "est\022!\n\014display_name\030\001 \001(\tR\013displayName\022:"
    "\n\rspecification\030\002 \001(\0132\024.google.protobuf."
    "AnyR\rspecification\0229\n\006author\030\003 \001(\0132!.and"
    "uril.taskmanager.v1.PrincipalR\006author\022\?\n"
    "\trelations\030\005 \001(\0132!.anduril.taskmanager.v"
    "1.RelationsR\trelations\022 \n\013description\030\006 "
    "\001(\tR\013description\0222\n\025is_executed_elsewher"
    "e\030\007 \001(\010R\023isExecutedElsewhere\022\027\n\007task_id\030"
    "\010 \001(\tR\006taskId\022M\n\020initial_entities\030\t \003(\0132"
    "\".anduril.taskmanager.v1.TaskEntityR\017ini"
    "tialEntitiesJ\004\010\004\020\005J\004\010\n\020\013\"F\n\022CreateTaskRe"
    "sponse\0220\n\004task\030\001 \001(\0132\034.anduril.taskmanag"
    "er.v1.TaskR\004task\"\227\001\n\016GetTaskRequest\022\027\n\007t"
    "ask_id\030\001 \001(\tR\006taskId\022-\n\022definition_versi"
    "on\030\002 \001(\rR\021definitionVersion\022=\n\ttask_view"
    "\030\003 \001(\0162 .anduril.taskmanager.v1.TaskView"
    "R\010taskView\"C\n\017GetTaskResponse\0220\n\004task\030\001 "
    "\001(\0132\034.anduril.taskmanager.v1.TaskR\004task\""
    "\351\005\n\021QueryTasksRequest\022$\n\016parent_task_id\030"
    "\001 \001(\tR\014parentTaskId\022\035\n\npage_token\030\003 \001(\tR"
    "\tpageToken\022[\n\rstatus_filter\030\004 \001(\01326.andu"
    "ril.taskmanager.v1.QueryTasksRequest.Sta"
    "tusFilterR\014statusFilter\022_\n\021update_time_r"
    "ange\030\005 \001(\01323.anduril.taskmanager.v1.Quer"
    "yTasksRequest.TimeRangeR\017updateTimeRange"
    "\0224\n\004view\030\006 \001(\0162 .anduril.taskmanager.v1."
    "TaskViewR\004view\032\227\001\n\tTimeRange\022F\n\021update_s"
    "tart_time\030\001 \001(\0132\032.google.protobuf.Timest"
    "ampR\017updateStartTime\022B\n\017update_end_time\030"
    "\002 \001(\0132\032.google.protobuf.TimestampR\rupdat"
    "eEndTime\032\235\001\n\014StatusFilter\0226\n\006status\030\001 \003("
    "\0162\036.anduril.taskmanager.v1.StatusR\006statu"
    "s\022U\n\013filter_type\030\002 \001(\01624.anduril.taskman"
    "ager.v1.QueryTasksRequest.FilterTypeR\nfi"
    "lterType\"[\n\nFilterType\022\027\n\023FILTER_TYPE_IN"
    "VALID\020\000\022\031\n\025FILTER_TYPE_INCLUSIVE\020\001\022\031\n\025FI"
    "LTER_TYPE_EXCLUSIVE\020\002J\004\010\002\020\003\"g\n\022QueryTask"
    "sResponse\0222\n\005tasks\030\001 \003(\0132\034.anduril.taskm"
    "anager.v1.TaskR\005tasks\022\035\n\npage_token\030\002 \001("
    "\tR\tpageToken\"`\n\023UpdateStatusRequest\022I\n\rs"
    "tatus_update\030\001 \001(\0132$.anduril.taskmanager"
    ".v1.StatusUpdateR\014statusUpdate\"H\n\024Update"
    "StatusResponse\0220\n\004task\030\001 \001(\0132\034.anduril.t"
    "askmanager.v1.TaskR\004task\"l\n\024ListenAsAgen"
    "tRequest\022B\n\nentity_ids\030\001 \001(\0132!.anduril.t"
    "askmanager.v1.EntityIdsH\000R\tentityIdsB\020\n\016"
    "agent_selector\"\233\002\n\025ListenAsAgentResponse"
    "\022Q\n\017execute_request\030\001 \001(\0132&.anduril.task"
    "manager.v1.ExecuteRequestH\000R\016executeRequ"
    "est\022N\n\016cancel_request\030\002 \001(\0132%.anduril.ta"
    "skmanager.v1.CancelRequestH\000R\rcancelRequ"
    "est\022T\n\020complete_request\030\003 \001(\0132\'.anduril."
    "taskmanager.v1.CompleteRequestH\000R\017comple"
    "teRequestB\t\n\007request\"C\n\tRateLimit\0226\n\030upd"
    "ate_per_task_limit_ms\030\001 \001(\rR\024updatePerTa"
    "skLimitMs\"E\n\tHeartbeat\0228\n\ttimestamp\030\001 \001("
    "\0132\032.google.protobuf.TimestampR\ttimestamp"
    "\"*\n\tEntityIds\022\035\n\nentity_ids\030\001 \003(\tR\tentit"
    "yIds2\221\004\n\016TaskManagerAPI\022c\n\nCreateTask\022)."
    "anduril.taskmanager.v1.CreateTaskRequest"
    "\032*.anduril.taskmanager.v1.CreateTaskResp"
    "onse\022Z\n\007GetTask\022&.anduril.taskmanager.v1"
    ".GetTaskRequest\032\'.anduril.taskmanager.v1"
    ".GetTaskResponse\022c\n\nQueryTasks\022).anduril"
    ".taskmanager.v1.QueryTasksRequest\032*.andu"
    "ril.taskmanager.v1.QueryTasksResponse\022i\n"
    "\014UpdateStatus\022+.anduril.taskmanager.v1.U"
    "pdateStatusRequest\032,.anduril.taskmanager"
    ".v1.UpdateStatusResponse\022n\n\rListenAsAgen"
    "t\022,.anduril.taskmanager.v1.ListenAsAgent"
    "Request\032-.anduril.taskmanager.v1.ListenA"
    "sAgentResponse0\001B\375\001\n\032com.anduril.taskman"
    "ager.v1B\032TaskManagerGrpcapiPubProtoP\001ZIg"
    "he.anduril.dev/anduril/andurilapis-go/an"
    "duril/taskmanager/v1;taskmanager\242\002\003ATX\252\002"
    "\026Anduril.Taskmanager.V1\312\002\026Anduril\\Taskma"
    "nager\\V1\342\002\"Anduril\\Taskmanager\\V1\\GPBMet"
    "adata\352\002\030Anduril::Taskmanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto_deps[4] =
    {
        &::descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_2epub_2eproto,
        &::descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto = {
    false,
    false,
    3360,
    descriptor_table_protodef_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    "anduril/taskmanager/v1/task_manager_grpcapi.pub.proto",
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto_once,
    descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto_deps,
    4,
    15,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
};
namespace anduril {
namespace taskmanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* QueryTasksRequest_FilterType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t QueryTasksRequest_FilterType_internal_data_[] = {
    196608u, 0u, };
bool QueryTasksRequest_FilterType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr QueryTasksRequest_FilterType QueryTasksRequest::FILTER_TYPE_INVALID;
constexpr QueryTasksRequest_FilterType QueryTasksRequest::FILTER_TYPE_INCLUSIVE;
constexpr QueryTasksRequest_FilterType QueryTasksRequest::FILTER_TYPE_EXCLUSIVE;
constexpr QueryTasksRequest_FilterType QueryTasksRequest::FilterType_MIN;
constexpr QueryTasksRequest_FilterType QueryTasksRequest::FilterType_MAX;
constexpr int QueryTasksRequest::FilterType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class CreateTaskRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTaskRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_._has_bits_);
};

void CreateTaskRequest::clear_specification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.specification_ != nullptr) _impl_.specification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CreateTaskRequest::clear_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.author_ != nullptr) _impl_.author_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CreateTaskRequest::clear_relations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relations_ != nullptr) _impl_.relations_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CreateTaskRequest::clear_initial_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_entities_.Clear();
}
CreateTaskRequest::CreateTaskRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.CreateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::CreateTaskRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        initial_entities_{visibility, arena, from.initial_entities_},
        display_name_(arena, from.display_name_),
        description_(arena, from.description_),
        task_id_(arena, from.task_id_) {}

CreateTaskRequest::CreateTaskRequest(
    ::google::protobuf::Arena* arena,
    const CreateTaskRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.specification_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.specification_)
                        : nullptr;
  _impl_.author_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Principal>(
                              arena, *from._impl_.author_)
                        : nullptr;
  _impl_.relations_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Relations>(
                              arena, *from._impl_.relations_)
                        : nullptr;
  _impl_.is_executed_elsewhere_ = from._impl_.is_executed_elsewhere_;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.CreateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        initial_entities_{visibility, arena},
        display_name_(arena),
        description_(arena),
        task_id_(arena) {}

inline void CreateTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, specification_),
           0,
           offsetof(Impl_, is_executed_elsewhere_) -
               offsetof(Impl_, specification_) +
               sizeof(Impl_::is_executed_elsewhere_));
}
CreateTaskRequest::~CreateTaskRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.CreateTaskRequest)
  SharedDtor(*this);
}
inline void CreateTaskRequest::SharedDtor(MessageLite& self) {
  CreateTaskRequest& this_ = static_cast<CreateTaskRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.display_name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.task_id_.Destroy();
  delete this_._impl_.specification_;
  delete this_._impl_.author_;
  delete this_._impl_.relations_;
  this_._impl_.~Impl_();
}

inline void* CreateTaskRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateTaskRequest(arena);
}
constexpr auto CreateTaskRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.initial_entities_) +
          decltype(CreateTaskRequest::_impl_.initial_entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CreateTaskRequest), alignof(CreateTaskRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateTaskRequest::PlacementNew_,
                                 sizeof(CreateTaskRequest),
                                 alignof(CreateTaskRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateTaskRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateTaskRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateTaskRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateTaskRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateTaskRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateTaskRequest>(), &CreateTaskRequest::ByteSizeLong,
            &CreateTaskRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_._cached_size_),
        false,
    },
    &CreateTaskRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateTaskRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 4, 87, 2> CreateTaskRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966792,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CreateTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string display_name = 1 [json_name = "displayName"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.display_name_)}},
    // .google.protobuf.Any specification = 2 [json_name = "specification"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.specification_)}},
    // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.author_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.relations_)}},
    // string description = 6 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.description_)}},
    // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreateTaskRequest, _impl_.is_executed_elsewhere_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.is_executed_elsewhere_)}},
    // string task_id = 8 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.task_id_)}},
    // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 3, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.initial_entities_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string display_name = 1 [json_name = "displayName"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.display_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any specification = 2 [json_name = "specification"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.specification_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.author_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.relations_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 6 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.is_executed_elsewhere_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string task_id = 8 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.task_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.initial_entities_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Principal>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Relations>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::TaskEntity>()},
  }}, {{
    "\50\14\0\0\0\13\0\7\0\0\0\0\0\0\0\0"
    "anduril.taskmanager.v1.CreateTaskRequest"
    "display_name"
    "description"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void CreateTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.CreateTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.initial_entities_.Clear();
  _impl_.display_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.task_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.specification_ != nullptr);
      _impl_.specification_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.author_ != nullptr);
      _impl_.author_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.relations_ != nullptr);
      _impl_.relations_->Clear();
    }
  }
  _impl_.is_executed_elsewhere_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateTaskRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateTaskRequest& this_ = static_cast<const CreateTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateTaskRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.CreateTaskRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string display_name = 1 [json_name = "displayName"];
          if (!this_._internal_display_name().empty()) {
            const std::string& _s = this_._internal_display_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CreateTaskRequest.display_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any specification = 2 [json_name = "specification"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.specification_, this_._impl_.specification_->GetCachedSize(), target,
                stream);
          }

          // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.author_, this_._impl_.author_->GetCachedSize(), target,
                stream);
          }

          // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.relations_, this_._impl_.relations_->GetCachedSize(), target,
                stream);
          }

          // string description = 6 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CreateTaskRequest.description");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
          if (this_._internal_is_executed_elsewhere() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_is_executed_elsewhere(), target);
          }

          // string task_id = 8 [json_name = "taskId"];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CreateTaskRequest.task_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_initial_entities_size());
               i < n; i++) {
            const auto& repfield = this_._internal_initial_entities().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.CreateTaskRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateTaskRequest::ByteSizeLong(const MessageLite& base) {
          const CreateTaskRequest& this_ = static_cast<const CreateTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateTaskRequest::ByteSizeLong() const {
          const CreateTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.CreateTaskRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
            {
              total_size += 1UL * this_._internal_initial_entities_size();
              for (const auto& msg : this_._internal_initial_entities()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string display_name = 1 [json_name = "displayName"];
            if (!this_._internal_display_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_display_name());
            }
            // string description = 6 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string task_id = 8 [json_name = "taskId"];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .google.protobuf.Any specification = 2 [json_name = "specification"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.specification_);
            }
            // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.author_);
            }
            // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.relations_);
            }
          }
           {
            // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
            if (this_._internal_is_executed_elsewhere() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTaskRequest*>(&to_msg);
  auto& from = static_cast<const CreateTaskRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.CreateTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_initial_entities()->MergeFrom(
      from._internal_initial_entities());
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.specification_ != nullptr);
      if (_this->_impl_.specification_ == nullptr) {
        _this->_impl_.specification_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.specification_);
      } else {
        _this->_impl_.specification_->MergeFrom(*from._impl_.specification_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.author_ != nullptr);
      if (_this->_impl_.author_ == nullptr) {
        _this->_impl_.author_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Principal>(arena, *from._impl_.author_);
      } else {
        _this->_impl_.author_->MergeFrom(*from._impl_.author_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.relations_ != nullptr);
      if (_this->_impl_.relations_ == nullptr) {
        _this->_impl_.relations_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Relations>(arena, *from._impl_.relations_);
      } else {
        _this->_impl_.relations_->MergeFrom(*from._impl_.relations_);
      }
    }
  }
  if (from._internal_is_executed_elsewhere() != 0) {
    _this->_impl_.is_executed_elsewhere_ = from._impl_.is_executed_elsewhere_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTaskRequest::CopyFrom(const CreateTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.CreateTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTaskRequest::InternalSwap(CreateTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.initial_entities_.InternalSwap(&other->_impl_.initial_entities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_name_, &other->_impl_.display_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.is_executed_elsewhere_)
      + sizeof(CreateTaskRequest::_impl_.is_executed_elsewhere_)
      - PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.specification_)>(
          reinterpret_cast<char*>(&_impl_.specification_),
          reinterpret_cast<char*>(&other->_impl_.specification_));
}

::google::protobuf::Metadata CreateTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTaskResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTaskResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_._has_bits_);
};

void CreateTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CreateTaskResponse::CreateTaskResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.CreateTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::CreateTaskResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateTaskResponse::CreateTaskResponse(
    ::google::protobuf::Arena* arena,
    const CreateTaskResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.CreateTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
CreateTaskResponse::~CreateTaskResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.CreateTaskResponse)
  SharedDtor(*this);
}
inline void CreateTaskResponse::SharedDtor(MessageLite& self) {
  CreateTaskResponse& this_ = static_cast<CreateTaskResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* CreateTaskResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateTaskResponse(arena);
}
constexpr auto CreateTaskResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateTaskResponse),
                                            alignof(CreateTaskResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateTaskResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateTaskResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateTaskResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateTaskResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateTaskResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateTaskResponse>(), &CreateTaskResponse::ByteSizeLong,
            &CreateTaskResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_._cached_size_),
        false,
    },
    &CreateTaskResponse::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateTaskResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateTaskResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CreateTaskResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.CreateTaskResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateTaskResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateTaskResponse& this_ = static_cast<const CreateTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateTaskResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.CreateTaskResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.CreateTaskResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateTaskResponse::ByteSizeLong(const MessageLite& base) {
          const CreateTaskResponse& this_ = static_cast<const CreateTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateTaskResponse::ByteSizeLong() const {
          const CreateTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.CreateTaskResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateTaskResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTaskResponse*>(&to_msg);
  auto& from = static_cast<const CreateTaskResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.CreateTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTaskResponse::CopyFrom(const CreateTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.CreateTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTaskResponse::InternalSwap(CreateTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata CreateTaskResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTaskRequest::_Internal {
 public:
};

GetTaskRequest::GetTaskRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.GetTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::GetTaskRequest& from_msg)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GetTaskRequest::GetTaskRequest(
    ::google::protobuf::Arena* arena,
    const GetTaskRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, definition_version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, definition_version_),
           offsetof(Impl_, task_view_) -
               offsetof(Impl_, definition_version_) +
               sizeof(Impl_::task_view_));

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.GetTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GetTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, definition_version_),
           0,
           offsetof(Impl_, task_view_) -
               offsetof(Impl_, definition_version_) +
               sizeof(Impl_::task_view_));
}
GetTaskRequest::~GetTaskRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.GetTaskRequest)
  SharedDtor(*this);
}
inline void GetTaskRequest::SharedDtor(MessageLite& self) {
  GetTaskRequest& this_ = static_cast<GetTaskRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetTaskRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTaskRequest(arena);
}
constexpr auto GetTaskRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTaskRequest),
                                            alignof(GetTaskRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTaskRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTaskRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTaskRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTaskRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTaskRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTaskRequest>(), &GetTaskRequest::ByteSizeLong,
            &GetTaskRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_._cached_size_),
        false,
    },
    &GetTaskRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTaskRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 53, 2> GetTaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::GetTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string task_id = 1 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_id_)}},
    // uint32 definition_version = 2 [json_name = "definitionVersion"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTaskRequest, _impl_.definition_version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.definition_version_)}},
    // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTaskRequest, _impl_.task_view_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_view_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 definition_version = 2 [json_name = "definitionVersion"];
    {PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.definition_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
    {PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_view_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\45\7\0\0\0\0\0\0"
    "anduril.taskmanager.v1.GetTaskRequest"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void GetTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.GetTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  ::memset(&_impl_.definition_version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.task_view_) -
      reinterpret_cast<char*>(&_impl_.definition_version_)) + sizeof(_impl_.task_view_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTaskRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTaskRequest& this_ = static_cast<const GetTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTaskRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.GetTaskRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1 [json_name = "taskId"];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.GetTaskRequest.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 definition_version = 2 [json_name = "definitionVersion"];
          if (this_._internal_definition_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_definition_version(), target);
          }

          // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
          if (this_._internal_task_view() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_task_view(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.GetTaskRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTaskRequest::ByteSizeLong(const MessageLite& base) {
          const GetTaskRequest& this_ = static_cast<const GetTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTaskRequest::ByteSizeLong() const {
          const GetTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.GetTaskRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1 [json_name = "taskId"];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // uint32 definition_version = 2 [json_name = "definitionVersion"];
            if (this_._internal_definition_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_definition_version());
            }
            // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
            if (this_._internal_task_view() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_task_view());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTaskRequest*>(&to_msg);
  auto& from = static_cast<const GetTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.GetTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_definition_version() != 0) {
    _this->_impl_.definition_version_ = from._impl_.definition_version_;
  }
  if (from._internal_task_view() != 0) {
    _this->_impl_.task_view_ = from._impl_.task_view_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTaskRequest::CopyFrom(const GetTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.GetTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTaskRequest::InternalSwap(GetTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_view_)
      + sizeof(GetTaskRequest::_impl_.task_view_)
      - PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.definition_version_)>(
          reinterpret_cast<char*>(&_impl_.definition_version_),
          reinterpret_cast<char*>(&other->_impl_.definition_version_));
}

::google::protobuf::Metadata GetTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTaskResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTaskResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_._has_bits_);
};

void GetTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetTaskResponse::GetTaskResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.GetTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::GetTaskResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTaskResponse::GetTaskResponse(
    ::google::protobuf::Arena* arena,
    const GetTaskResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.GetTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
GetTaskResponse::~GetTaskResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.GetTaskResponse)
  SharedDtor(*this);
}
inline void GetTaskResponse::SharedDtor(MessageLite& self) {
  GetTaskResponse& this_ = static_cast<GetTaskResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* GetTaskResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTaskResponse(arena);
}
constexpr auto GetTaskResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTaskResponse),
                                            alignof(GetTaskResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTaskResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTaskResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTaskResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTaskResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTaskResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTaskResponse>(), &GetTaskResponse::ByteSizeLong,
            &GetTaskResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_._cached_size_),
        false,
    },
    &GetTaskResponse::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTaskResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTaskResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::GetTaskResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.GetTaskResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTaskResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTaskResponse& this_ = static_cast<const GetTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTaskResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.GetTaskResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.GetTaskResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTaskResponse::ByteSizeLong(const MessageLite& base) {
          const GetTaskResponse& this_ = static_cast<const GetTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTaskResponse::ByteSizeLong() const {
          const GetTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.GetTaskResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTaskResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTaskResponse*>(&to_msg);
  auto& from = static_cast<const GetTaskResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.GetTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTaskResponse::CopyFrom(const GetTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.GetTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTaskResponse::InternalSwap(GetTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata GetTaskResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryTasksRequest_TimeRange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryTasksRequest_TimeRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_._has_bits_);
};

void QueryTasksRequest_TimeRange::clear_update_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_start_time_ != nullptr) _impl_.update_start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void QueryTasksRequest_TimeRange::clear_update_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_end_time_ != nullptr) _impl_.update_end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
QueryTasksRequest_TimeRange::QueryTasksRequest_TimeRange(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksRequest_TimeRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::QueryTasksRequest_TimeRange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryTasksRequest_TimeRange::QueryTasksRequest_TimeRange(
    ::google::protobuf::Arena* arena,
    const QueryTasksRequest_TimeRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryTasksRequest_TimeRange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_start_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.update_start_time_)
                        : nullptr;
  _impl_.update_end_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.update_end_time_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksRequest_TimeRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryTasksRequest_TimeRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_start_time_),
           0,
           offsetof(Impl_, update_end_time_) -
               offsetof(Impl_, update_start_time_) +
               sizeof(Impl_::update_end_time_));
}
QueryTasksRequest_TimeRange::~QueryTasksRequest_TimeRange() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
  SharedDtor(*this);
}
inline void QueryTasksRequest_TimeRange::SharedDtor(MessageLite& self) {
  QueryTasksRequest_TimeRange& this_ = static_cast<QueryTasksRequest_TimeRange&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.update_start_time_;
  delete this_._impl_.update_end_time_;
  this_._impl_.~Impl_();
}

inline void* QueryTasksRequest_TimeRange::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryTasksRequest_TimeRange(arena);
}
constexpr auto QueryTasksRequest_TimeRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryTasksRequest_TimeRange),
                                            alignof(QueryTasksRequest_TimeRange));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryTasksRequest_TimeRange::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryTasksRequest_TimeRange_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryTasksRequest_TimeRange::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryTasksRequest_TimeRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryTasksRequest_TimeRange::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryTasksRequest_TimeRange>(), &QueryTasksRequest_TimeRange::ByteSizeLong,
            &QueryTasksRequest_TimeRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_._cached_size_),
        false,
    },
    &QueryTasksRequest_TimeRange::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryTasksRequest_TimeRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryTasksRequest_TimeRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::QueryTasksRequest_TimeRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp update_end_time = 2 [json_name = "updateEndTime"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_.update_end_time_)}},
    // .google.protobuf.Timestamp update_start_time = 1 [json_name = "updateStartTime"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_.update_start_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp update_start_time = 1 [json_name = "updateStartTime"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_.update_start_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp update_end_time = 2 [json_name = "updateEndTime"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_.update_end_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryTasksRequest_TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.update_start_time_ != nullptr);
      _impl_.update_start_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.update_end_time_ != nullptr);
      _impl_.update_end_time_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryTasksRequest_TimeRange::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryTasksRequest_TimeRange& this_ = static_cast<const QueryTasksRequest_TimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryTasksRequest_TimeRange::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryTasksRequest_TimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp update_start_time = 1 [json_name = "updateStartTime"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.update_start_time_, this_._impl_.update_start_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp update_end_time = 2 [json_name = "updateEndTime"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.update_end_time_, this_._impl_.update_end_time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryTasksRequest_TimeRange::ByteSizeLong(const MessageLite& base) {
          const QueryTasksRequest_TimeRange& this_ = static_cast<const QueryTasksRequest_TimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryTasksRequest_TimeRange::ByteSizeLong() const {
          const QueryTasksRequest_TimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp update_start_time = 1 [json_name = "updateStartTime"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_start_time_);
            }
            // .google.protobuf.Timestamp update_end_time = 2 [json_name = "updateEndTime"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_end_time_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryTasksRequest_TimeRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryTasksRequest_TimeRange*>(&to_msg);
  auto& from = static_cast<const QueryTasksRequest_TimeRange&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.update_start_time_ != nullptr);
      if (_this->_impl_.update_start_time_ == nullptr) {
        _this->_impl_.update_start_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.update_start_time_);
      } else {
        _this->_impl_.update_start_time_->MergeFrom(*from._impl_.update_start_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.update_end_time_ != nullptr);
      if (_this->_impl_.update_end_time_ == nullptr) {
        _this->_impl_.update_end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.update_end_time_);
      } else {
        _this->_impl_.update_end_time_->MergeFrom(*from._impl_.update_end_time_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTasksRequest_TimeRange::CopyFrom(const QueryTasksRequest_TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.QueryTasksRequest.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryTasksRequest_TimeRange::InternalSwap(QueryTasksRequest_TimeRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_.update_end_time_)
      + sizeof(QueryTasksRequest_TimeRange::_impl_.update_end_time_)
      - PROTOBUF_FIELD_OFFSET(QueryTasksRequest_TimeRange, _impl_.update_start_time_)>(
          reinterpret_cast<char*>(&_impl_.update_start_time_),
          reinterpret_cast<char*>(&other->_impl_.update_start_time_));
}

::google::protobuf::Metadata QueryTasksRequest_TimeRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryTasksRequest_StatusFilter::_Internal {
 public:
};

QueryTasksRequest_StatusFilter::QueryTasksRequest_StatusFilter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksRequest_StatusFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter& from_msg)
      : status_{visibility, arena, from.status_},
        _status_cached_byte_size_{0},
        _cached_size_{0} {}

QueryTasksRequest_StatusFilter::QueryTasksRequest_StatusFilter(
    ::google::protobuf::Arena* arena,
    const QueryTasksRequest_StatusFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryTasksRequest_StatusFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.filter_type_ = from._impl_.filter_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksRequest_StatusFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_{visibility, arena},
        _status_cached_byte_size_{0},
        _cached_size_{0} {}

inline void QueryTasksRequest_StatusFilter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.filter_type_ = {};
}
QueryTasksRequest_StatusFilter::~QueryTasksRequest_StatusFilter() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
  SharedDtor(*this);
}
inline void QueryTasksRequest_StatusFilter::SharedDtor(MessageLite& self) {
  QueryTasksRequest_StatusFilter& this_ = static_cast<QueryTasksRequest_StatusFilter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* QueryTasksRequest_StatusFilter::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryTasksRequest_StatusFilter(arena);
}
constexpr auto QueryTasksRequest_StatusFilter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryTasksRequest_StatusFilter, _impl_.status_) +
          decltype(QueryTasksRequest_StatusFilter::_impl_.status_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryTasksRequest_StatusFilter), alignof(QueryTasksRequest_StatusFilter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryTasksRequest_StatusFilter::PlacementNew_,
                                 sizeof(QueryTasksRequest_StatusFilter),
                                 alignof(QueryTasksRequest_StatusFilter));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryTasksRequest_StatusFilter::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryTasksRequest_StatusFilter_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryTasksRequest_StatusFilter::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryTasksRequest_StatusFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryTasksRequest_StatusFilter::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryTasksRequest_StatusFilter>(), &QueryTasksRequest_StatusFilter::ByteSizeLong,
            &QueryTasksRequest_StatusFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryTasksRequest_StatusFilter, _impl_._cached_size_),
        false,
    },
    &QueryTasksRequest_StatusFilter::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryTasksRequest_StatusFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> QueryTasksRequest_StatusFilter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.QueryTasksRequest.FilterType filter_type = 2 [json_name = "filterType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryTasksRequest_StatusFilter, _impl_.filter_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTasksRequest_StatusFilter, _impl_.filter_type_)}},
    // repeated .anduril.taskmanager.v1.Status status = 1 [json_name = "status"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTasksRequest_StatusFilter, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.taskmanager.v1.Status status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest_StatusFilter, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .anduril.taskmanager.v1.QueryTasksRequest.FilterType filter_type = 2 [json_name = "filterType"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest_StatusFilter, _impl_.filter_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void QueryTasksRequest_StatusFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.Clear();
  _impl_.filter_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryTasksRequest_StatusFilter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryTasksRequest_StatusFilter& this_ = static_cast<const QueryTasksRequest_StatusFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryTasksRequest_StatusFilter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryTasksRequest_StatusFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.taskmanager.v1.Status status = 1 [json_name = "status"];
          {
            std::size_t byte_size =
                                              this_._impl_._status_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  1, this_._internal_status(), byte_size, target);
            }
          }

          // .anduril.taskmanager.v1.QueryTasksRequest.FilterType filter_type = 2 [json_name = "filterType"];
          if (this_._internal_filter_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_filter_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryTasksRequest_StatusFilter::ByteSizeLong(const MessageLite& base) {
          const QueryTasksRequest_StatusFilter& this_ = static_cast<const QueryTasksRequest_StatusFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryTasksRequest_StatusFilter::ByteSizeLong() const {
          const QueryTasksRequest_StatusFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.taskmanager.v1.Status status = 1 [json_name = "status"];
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_status(), 1, this_._impl_._status_cached_byte_size_);
            }
          }
           {
            // .anduril.taskmanager.v1.QueryTasksRequest.FilterType filter_type = 2 [json_name = "filterType"];
            if (this_._internal_filter_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_filter_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryTasksRequest_StatusFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryTasksRequest_StatusFilter*>(&to_msg);
  auto& from = static_cast<const QueryTasksRequest_StatusFilter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_status()->MergeFrom(from._internal_status());
  if (from._internal_filter_type() != 0) {
    _this->_impl_.filter_type_ = from._impl_.filter_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTasksRequest_StatusFilter::CopyFrom(const QueryTasksRequest_StatusFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.QueryTasksRequest.StatusFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryTasksRequest_StatusFilter::InternalSwap(QueryTasksRequest_StatusFilter* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.status_.InternalSwap(&other->_impl_.status_);
  swap(_impl_.filter_type_, other->_impl_.filter_type_);
}

::google::protobuf::Metadata QueryTasksRequest_StatusFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryTasksRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryTasksRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_._has_bits_);
};

QueryTasksRequest::QueryTasksRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.QueryTasksRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::QueryTasksRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parent_task_id_(arena, from.parent_task_id_),
        page_token_(arena, from.page_token_) {}

QueryTasksRequest::QueryTasksRequest(
    ::google::protobuf::Arena* arena,
    const QueryTasksRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryTasksRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_filter_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter>(
                              arena, *from._impl_.status_filter_)
                        : nullptr;
  _impl_.update_time_range_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::QueryTasksRequest_TimeRange>(
                              arena, *from._impl_.update_time_range_)
                        : nullptr;
  _impl_.view_ = from._impl_.view_;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.QueryTasksRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        parent_task_id_(arena),
        page_token_(arena) {}

inline void QueryTasksRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_filter_),
           0,
           offsetof(Impl_, view_) -
               offsetof(Impl_, status_filter_) +
               sizeof(Impl_::view_));
}
QueryTasksRequest::~QueryTasksRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.QueryTasksRequest)
  SharedDtor(*this);
}
inline void QueryTasksRequest::SharedDtor(MessageLite& self) {
  QueryTasksRequest& this_ = static_cast<QueryTasksRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.parent_task_id_.Destroy();
  this_._impl_.page_token_.Destroy();
  delete this_._impl_.status_filter_;
  delete this_._impl_.update_time_range_;
  this_._impl_.~Impl_();
}

inline void* QueryTasksRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryTasksRequest(arena);
}
constexpr auto QueryTasksRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryTasksRequest),
                                            alignof(QueryTasksRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryTasksRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryTasksRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryTasksRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryTasksRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryTasksRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryTasksRequest>(), &QueryTasksRequest::ByteSizeLong,
            &QueryTasksRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_._cached_size_),
        false,
    },
    &QueryTasksRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryTasksRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 73, 2> QueryTasksRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967234,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::QueryTasksRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string parent_task_id = 1 [json_name = "parentTaskId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.parent_task_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string page_token = 3 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.page_token_)}},
    // .anduril.taskmanager.v1.QueryTasksRequest.StatusFilter status_filter = 4 [json_name = "statusFilter"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.status_filter_)}},
    // .anduril.taskmanager.v1.QueryTasksRequest.TimeRange update_time_range = 5 [json_name = "updateTimeRange"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.update_time_range_)}},
    // .anduril.taskmanager.v1.TaskView view = 6 [json_name = "view"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryTasksRequest, _impl_.view_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.view_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string parent_task_id = 1 [json_name = "parentTaskId"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.parent_task_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string page_token = 3 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.page_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.taskmanager.v1.QueryTasksRequest.StatusFilter status_filter = 4 [json_name = "statusFilter"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.status_filter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.QueryTasksRequest.TimeRange update_time_range = 5 [json_name = "updateTimeRange"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.update_time_range_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.TaskView view = 6 [json_name = "view"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.view_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::QueryTasksRequest_TimeRange>()},
  }}, {{
    "\50\16\12\0\0\0\0\0"
    "anduril.taskmanager.v1.QueryTasksRequest"
    "parent_task_id"
    "page_token"
  }},
};

PROTOBUF_NOINLINE void QueryTasksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.QueryTasksRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_task_id_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_filter_ != nullptr);
      _impl_.status_filter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.update_time_range_ != nullptr);
      _impl_.update_time_range_->Clear();
    }
  }
  _impl_.view_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryTasksRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryTasksRequest& this_ = static_cast<const QueryTasksRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryTasksRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryTasksRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.QueryTasksRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string parent_task_id = 1 [json_name = "parentTaskId"];
          if (!this_._internal_parent_task_id().empty()) {
            const std::string& _s = this_._internal_parent_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.QueryTasksRequest.parent_task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string page_token = 3 [json_name = "pageToken"];
          if (!this_._internal_page_token().empty()) {
            const std::string& _s = this_._internal_page_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.QueryTasksRequest.page_token");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.taskmanager.v1.QueryTasksRequest.StatusFilter status_filter = 4 [json_name = "statusFilter"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.status_filter_, this_._impl_.status_filter_->GetCachedSize(), target,
                stream);
          }

          // .anduril.taskmanager.v1.QueryTasksRequest.TimeRange update_time_range = 5 [json_name = "updateTimeRange"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.update_time_range_, this_._impl_.update_time_range_->GetCachedSize(), target,
                stream);
          }

          // .anduril.taskmanager.v1.TaskView view = 6 [json_name = "view"];
          if (this_._internal_view() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_view(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.QueryTasksRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryTasksRequest::ByteSizeLong(const MessageLite& base) {
          const QueryTasksRequest& this_ = static_cast<const QueryTasksRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryTasksRequest::ByteSizeLong() const {
          const QueryTasksRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.QueryTasksRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string parent_task_id = 1 [json_name = "parentTaskId"];
            if (!this_._internal_parent_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent_task_id());
            }
            // string page_token = 3 [json_name = "pageToken"];
            if (!this_._internal_page_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_page_token());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.taskmanager.v1.QueryTasksRequest.StatusFilter status_filter = 4 [json_name = "statusFilter"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_filter_);
            }
            // .anduril.taskmanager.v1.QueryTasksRequest.TimeRange update_time_range = 5 [json_name = "updateTimeRange"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_time_range_);
            }
          }
           {
            // .anduril.taskmanager.v1.TaskView view = 6 [json_name = "view"];
            if (this_._internal_view() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_view());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryTasksRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryTasksRequest*>(&to_msg);
  auto& from = static_cast<const QueryTasksRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.QueryTasksRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent_task_id().empty()) {
    _this->_internal_set_parent_task_id(from._internal_parent_task_id());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.status_filter_ != nullptr);
      if (_this->_impl_.status_filter_ == nullptr) {
        _this->_impl_.status_filter_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::QueryTasksRequest_StatusFilter>(arena, *from._impl_.status_filter_);
      } else {
        _this->_impl_.status_filter_->MergeFrom(*from._impl_.status_filter_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.update_time_range_ != nullptr);
      if (_this->_impl_.update_time_range_ == nullptr) {
        _this->_impl_.update_time_range_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::QueryTasksRequest_TimeRange>(arena, *from._impl_.update_time_range_);
      } else {
        _this->_impl_.update_time_range_->MergeFrom(*from._impl_.update_time_range_);
      }
    }
  }
  if (from._internal_view() != 0) {
    _this->_impl_.view_ = from._impl_.view_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTasksRequest::CopyFrom(const QueryTasksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.QueryTasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryTasksRequest::InternalSwap(QueryTasksRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_task_id_, &other->_impl_.parent_task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.view_)
      + sizeof(QueryTasksRequest::_impl_.view_)
      - PROTOBUF_FIELD_OFFSET(QueryTasksRequest, _impl_.status_filter_)>(
          reinterpret_cast<char*>(&_impl_.status_filter_),
          reinterpret_cast<char*>(&other->_impl_.status_filter_));
}

::google::protobuf::Metadata QueryTasksRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryTasksResponse::_Internal {
 public:
};

void QueryTasksResponse::clear_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_.Clear();
}
QueryTasksResponse::QueryTasksResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.QueryTasksResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::QueryTasksResponse& from_msg)
      : tasks_{visibility, arena, from.tasks_},
        page_token_(arena, from.page_token_),
        _cached_size_{0} {}

QueryTasksResponse::QueryTasksResponse(
    ::google::protobuf::Arena* arena,
    const QueryTasksResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryTasksResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.QueryTasksResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryTasksResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tasks_{visibility, arena},
        page_token_(arena),
        _cached_size_{0} {}

inline void QueryTasksResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryTasksResponse::~QueryTasksResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.QueryTasksResponse)
  SharedDtor(*this);
}
inline void QueryTasksResponse::SharedDtor(MessageLite& self) {
  QueryTasksResponse& this_ = static_cast<QueryTasksResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* QueryTasksResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryTasksResponse(arena);
}
constexpr auto QueryTasksResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryTasksResponse, _impl_.tasks_) +
          decltype(QueryTasksResponse::_impl_.tasks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(QueryTasksResponse), alignof(QueryTasksResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryTasksResponse::PlacementNew_,
                                 sizeof(QueryTasksResponse),
                                 alignof(QueryTasksResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryTasksResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryTasksResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryTasksResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryTasksResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryTasksResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryTasksResponse>(), &QueryTasksResponse::ByteSizeLong,
            &QueryTasksResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryTasksResponse, _impl_._cached_size_),
        false,
    },
    &QueryTasksResponse::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryTasksResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 60, 2> QueryTasksResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::QueryTasksResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string page_token = 2 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTasksResponse, _impl_.page_token_)}},
    // repeated .anduril.taskmanager.v1.Task tasks = 1 [json_name = "tasks"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTasksResponse, _impl_.tasks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.taskmanager.v1.Task tasks = 1 [json_name = "tasks"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksResponse, _impl_.tasks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string page_token = 2 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(QueryTasksResponse, _impl_.page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
    "\51\0\12\0\0\0\0\0"
    "anduril.taskmanager.v1.QueryTasksResponse"
    "page_token"
  }},
};

PROTOBUF_NOINLINE void QueryTasksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.QueryTasksResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tasks_.Clear();
  _impl_.page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryTasksResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryTasksResponse& this_ = static_cast<const QueryTasksResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryTasksResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryTasksResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.QueryTasksResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.taskmanager.v1.Task tasks = 1 [json_name = "tasks"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tasks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tasks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string page_token = 2 [json_name = "pageToken"];
          if (!this_._internal_page_token().empty()) {
            const std::string& _s = this_._internal_page_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.QueryTasksResponse.page_token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.QueryTasksResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryTasksResponse::ByteSizeLong(const MessageLite& base) {
          const QueryTasksResponse& this_ = static_cast<const QueryTasksResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryTasksResponse::ByteSizeLong() const {
          const QueryTasksResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.QueryTasksResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.taskmanager.v1.Task tasks = 1 [json_name = "tasks"];
            {
              total_size += 1UL * this_._internal_tasks_size();
              for (const auto& msg : this_._internal_tasks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string page_token = 2 [json_name = "pageToken"];
            if (!this_._internal_page_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_page_token());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryTasksResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryTasksResponse*>(&to_msg);
  auto& from = static_cast<const QueryTasksResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.QueryTasksResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tasks()->MergeFrom(
      from._internal_tasks());
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTasksResponse::CopyFrom(const QueryTasksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.QueryTasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryTasksResponse::InternalSwap(QueryTasksResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tasks_.InternalSwap(&other->_impl_.tasks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
}

::google::protobuf::Metadata QueryTasksResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateStatusRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_._has_bits_);
};

void UpdateStatusRequest::clear_status_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_update_ != nullptr) _impl_.status_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateStatusRequest::UpdateStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::UpdateStatusRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateStatusRequest::UpdateStatusRequest(
    ::google::protobuf::Arena* arena,
    const UpdateStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_update_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::StatusUpdate>(
                              arena, *from._impl_.status_update_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_update_ = {};
}
UpdateStatusRequest::~UpdateStatusRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.UpdateStatusRequest)
  SharedDtor(*this);
}
inline void UpdateStatusRequest::SharedDtor(MessageLite& self) {
  UpdateStatusRequest& this_ = static_cast<UpdateStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_update_;
  this_._impl_.~Impl_();
}

inline void* UpdateStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateStatusRequest(arena);
}
constexpr auto UpdateStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateStatusRequest),
                                            alignof(UpdateStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateStatusRequest>(), &UpdateStatusRequest::ByteSizeLong,
            &UpdateStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_._cached_size_),
        false,
    },
    &UpdateStatusRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::UpdateStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.status_update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.status_update_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::StatusUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.UpdateStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_update_ != nullptr);
    _impl_.status_update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateStatusRequest& this_ = static_cast<const UpdateStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.UpdateStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.status_update_, this_._impl_.status_update_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.UpdateStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateStatusRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateStatusRequest& this_ = static_cast<const UpdateStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateStatusRequest::ByteSizeLong() const {
          const UpdateStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.UpdateStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_update_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateStatusRequest*>(&to_msg);
  auto& from = static_cast<const UpdateStatusRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.UpdateStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.status_update_ != nullptr);
    if (_this->_impl_.status_update_ == nullptr) {
      _this->_impl_.status_update_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::StatusUpdate>(arena, *from._impl_.status_update_);
    } else {
      _this->_impl_.status_update_->MergeFrom(*from._impl_.status_update_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStatusRequest::CopyFrom(const UpdateStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.UpdateStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateStatusRequest::InternalSwap(UpdateStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_update_, other->_impl_.status_update_);
}

::google::protobuf::Metadata UpdateStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_._has_bits_);
};

void UpdateStatusResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateStatusResponse::UpdateStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.UpdateStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::UpdateStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateStatusResponse::UpdateStatusResponse(
    ::google::protobuf::Arena* arena,
    const UpdateStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.UpdateStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
UpdateStatusResponse::~UpdateStatusResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.UpdateStatusResponse)
  SharedDtor(*this);
}
inline void UpdateStatusResponse::SharedDtor(MessageLite& self) {
  UpdateStatusResponse& this_ = static_cast<UpdateStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* UpdateStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateStatusResponse(arena);
}
constexpr auto UpdateStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateStatusResponse),
                                            alignof(UpdateStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateStatusResponse>(), &UpdateStatusResponse::ByteSizeLong,
            &UpdateStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_._cached_size_),
        false,
    },
    &UpdateStatusResponse::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::UpdateStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.UpdateStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateStatusResponse& this_ = static_cast<const UpdateStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.UpdateStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.UpdateStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateStatusResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateStatusResponse& this_ = static_cast<const UpdateStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateStatusResponse::ByteSizeLong() const {
          const UpdateStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.UpdateStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateStatusResponse*>(&to_msg);
  auto& from = static_cast<const UpdateStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.UpdateStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStatusResponse::CopyFrom(const UpdateStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.UpdateStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateStatusResponse::InternalSwap(UpdateStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata UpdateStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListenAsAgentRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentRequest, _impl_._oneof_case_);
};

void ListenAsAgentRequest::set_allocated_entity_ids(::anduril::taskmanager::v1::EntityIds* entity_ids) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_agent_selector();
  if (entity_ids) {
    ::google::protobuf::Arena* submessage_arena = entity_ids->GetArena();
    if (message_arena != submessage_arena) {
      entity_ids = ::google::protobuf::internal::GetOwnedMessage(message_arena, entity_ids, submessage_arena);
    }
    set_has_entity_ids();
    _impl_.agent_selector_.entity_ids_ = entity_ids;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.taskmanager.v1.ListenAsAgentRequest.entity_ids)
}
ListenAsAgentRequest::ListenAsAgentRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.ListenAsAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListenAsAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::ListenAsAgentRequest& from_msg)
      : agent_selector_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ListenAsAgentRequest::ListenAsAgentRequest(
    ::google::protobuf::Arena* arena,
    const ListenAsAgentRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListenAsAgentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (agent_selector_case()) {
    case AGENT_SELECTOR_NOT_SET:
      break;
      case kEntityIds:
        _impl_.agent_selector_.entity_ids_ = ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::EntityIds>(arena, *from._impl_.agent_selector_.entity_ids_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.ListenAsAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListenAsAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : agent_selector_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ListenAsAgentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListenAsAgentRequest::~ListenAsAgentRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.ListenAsAgentRequest)
  SharedDtor(*this);
}
inline void ListenAsAgentRequest::SharedDtor(MessageLite& self) {
  ListenAsAgentRequest& this_ = static_cast<ListenAsAgentRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_agent_selector()) {
    this_.clear_agent_selector();
  }
  this_._impl_.~Impl_();
}

void ListenAsAgentRequest::clear_agent_selector() {
// @@protoc_insertion_point(one_of_clear_start:anduril.taskmanager.v1.ListenAsAgentRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (agent_selector_case()) {
    case kEntityIds: {
      if (GetArena() == nullptr) {
        delete _impl_.agent_selector_.entity_ids_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.agent_selector_.entity_ids_);
      }
      break;
    }
    case AGENT_SELECTOR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = AGENT_SELECTOR_NOT_SET;
}


inline void* ListenAsAgentRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListenAsAgentRequest(arena);
}
constexpr auto ListenAsAgentRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListenAsAgentRequest),
                                            alignof(ListenAsAgentRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListenAsAgentRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListenAsAgentRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListenAsAgentRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListenAsAgentRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListenAsAgentRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListenAsAgentRequest>(), &ListenAsAgentRequest::ByteSizeLong,
            &ListenAsAgentRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListenAsAgentRequest, _impl_._cached_size_),
        false,
    },
    &ListenAsAgentRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListenAsAgentRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ListenAsAgentRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::ListenAsAgentRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.EntityIds entity_ids = 1 [json_name = "entityIds"];
    {PROTOBUF_FIELD_OFFSET(ListenAsAgentRequest, _impl_.agent_selector_.entity_ids_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::EntityIds>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListenAsAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.ListenAsAgentRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_agent_selector();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListenAsAgentRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListenAsAgentRequest& this_ = static_cast<const ListenAsAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListenAsAgentRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListenAsAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.ListenAsAgentRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.taskmanager.v1.EntityIds entity_ids = 1 [json_name = "entityIds"];
          if (this_.agent_selector_case() == kEntityIds) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.agent_selector_.entity_ids_, this_._impl_.agent_selector_.entity_ids_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.ListenAsAgentRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListenAsAgentRequest::ByteSizeLong(const MessageLite& base) {
          const ListenAsAgentRequest& this_ = static_cast<const ListenAsAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListenAsAgentRequest::ByteSizeLong() const {
          const ListenAsAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.ListenAsAgentRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.agent_selector_case()) {
            // .anduril.taskmanager.v1.EntityIds entity_ids = 1 [json_name = "entityIds"];
            case kEntityIds: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.agent_selector_.entity_ids_);
              break;
            }
            case AGENT_SELECTOR_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListenAsAgentRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListenAsAgentRequest*>(&to_msg);
  auto& from = static_cast<const ListenAsAgentRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.ListenAsAgentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_agent_selector();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kEntityIds: {
        if (oneof_needs_init) {
          _this->_impl_.agent_selector_.entity_ids_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::EntityIds>(arena, *from._impl_.agent_selector_.entity_ids_);
        } else {
          _this->_impl_.agent_selector_.entity_ids_->MergeFrom(from._internal_entity_ids());
        }
        break;
      }
      case AGENT_SELECTOR_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListenAsAgentRequest::CopyFrom(const ListenAsAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.ListenAsAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListenAsAgentRequest::InternalSwap(ListenAsAgentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_selector_, other->_impl_.agent_selector_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ListenAsAgentRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListenAsAgentResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ListenAsAgentResponse, _impl_._oneof_case_);
};

void ListenAsAgentResponse::set_allocated_execute_request(::anduril::taskmanager::v1::ExecuteRequest* execute_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (execute_request) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(execute_request)->GetArena();
    if (message_arena != submessage_arena) {
      execute_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, execute_request, submessage_arena);
    }
    set_has_execute_request();
    _impl_.request_.execute_request_ = execute_request;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.taskmanager.v1.ListenAsAgentResponse.execute_request)
}
void ListenAsAgentResponse::clear_execute_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kExecuteRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.execute_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.execute_request_);
    }
    clear_has_request();
  }
}
void ListenAsAgentResponse::set_allocated_cancel_request(::anduril::taskmanager::v1::CancelRequest* cancel_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (cancel_request) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(cancel_request)->GetArena();
    if (message_arena != submessage_arena) {
      cancel_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, cancel_request, submessage_arena);
    }
    set_has_cancel_request();
    _impl_.request_.cancel_request_ = cancel_request;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.taskmanager.v1.ListenAsAgentResponse.cancel_request)
}
void ListenAsAgentResponse::clear_cancel_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kCancelRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.cancel_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.cancel_request_);
    }
    clear_has_request();
  }
}
void ListenAsAgentResponse::set_allocated_complete_request(::anduril::taskmanager::v1::CompleteRequest* complete_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (complete_request) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(complete_request)->GetArena();
    if (message_arena != submessage_arena) {
      complete_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, complete_request, submessage_arena);
    }
    set_has_complete_request();
    _impl_.request_.complete_request_ = complete_request;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.taskmanager.v1.ListenAsAgentResponse.complete_request)
}
void ListenAsAgentResponse::clear_complete_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kCompleteRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.complete_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.complete_request_);
    }
    clear_has_request();
  }
}
ListenAsAgentResponse::ListenAsAgentResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.ListenAsAgentResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListenAsAgentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::ListenAsAgentResponse& from_msg)
      : request_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ListenAsAgentResponse::ListenAsAgentResponse(
    ::google::protobuf::Arena* arena,
    const ListenAsAgentResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListenAsAgentResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (request_case()) {
    case REQUEST_NOT_SET:
      break;
      case kExecuteRequest:
        _impl_.request_.execute_request_ = ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::ExecuteRequest>(arena, *from._impl_.request_.execute_request_);
        break;
      case kCancelRequest:
        _impl_.request_.cancel_request_ = ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::CancelRequest>(arena, *from._impl_.request_.cancel_request_);
        break;
      case kCompleteRequest:
        _impl_.request_.complete_request_ = ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::CompleteRequest>(arena, *from._impl_.request_.complete_request_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.ListenAsAgentResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListenAsAgentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ListenAsAgentResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListenAsAgentResponse::~ListenAsAgentResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.ListenAsAgentResponse)
  SharedDtor(*this);
}
inline void ListenAsAgentResponse::SharedDtor(MessageLite& self) {
  ListenAsAgentResponse& this_ = static_cast<ListenAsAgentResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_request()) {
    this_.clear_request();
  }
  this_._impl_.~Impl_();
}

void ListenAsAgentResponse::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:anduril.taskmanager.v1.ListenAsAgentResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (request_case()) {
    case kExecuteRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.execute_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.execute_request_);
      }
      break;
    }
    case kCancelRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.cancel_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.cancel_request_);
      }
      break;
    }
    case kCompleteRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.complete_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.complete_request_);
      }
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}


inline void* ListenAsAgentResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListenAsAgentResponse(arena);
}
constexpr auto ListenAsAgentResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListenAsAgentResponse),
                                            alignof(ListenAsAgentResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListenAsAgentResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListenAsAgentResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListenAsAgentResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListenAsAgentResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListenAsAgentResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListenAsAgentResponse>(), &ListenAsAgentResponse::ByteSizeLong,
            &ListenAsAgentResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListenAsAgentResponse, _impl_._cached_size_),
        false,
    },
    &ListenAsAgentResponse::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListenAsAgentResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> ListenAsAgentResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::ListenAsAgentResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.ExecuteRequest execute_request = 1 [json_name = "executeRequest"];
    {PROTOBUF_FIELD_OFFSET(ListenAsAgentResponse, _impl_.request_.execute_request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.CancelRequest cancel_request = 2 [json_name = "cancelRequest"];
    {PROTOBUF_FIELD_OFFSET(ListenAsAgentResponse, _impl_.request_.cancel_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.CompleteRequest complete_request = 3 [json_name = "completeRequest"];
    {PROTOBUF_FIELD_OFFSET(ListenAsAgentResponse, _impl_.request_.complete_request_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::ExecuteRequest>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CancelRequest>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CompleteRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListenAsAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.ListenAsAgentResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListenAsAgentResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListenAsAgentResponse& this_ = static_cast<const ListenAsAgentResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListenAsAgentResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListenAsAgentResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.ListenAsAgentResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.request_case()) {
            case kExecuteRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.request_.execute_request_, this_._impl_.request_.execute_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCancelRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.request_.cancel_request_, this_._impl_.request_.cancel_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCompleteRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.request_.complete_request_, this_._impl_.request_.complete_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.ListenAsAgentResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListenAsAgentResponse::ByteSizeLong(const MessageLite& base) {
          const ListenAsAgentResponse& this_ = static_cast<const ListenAsAgentResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListenAsAgentResponse::ByteSizeLong() const {
          const ListenAsAgentResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.ListenAsAgentResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.request_case()) {
            // .anduril.taskmanager.v1.ExecuteRequest execute_request = 1 [json_name = "executeRequest"];
            case kExecuteRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_.execute_request_);
              break;
            }
            // .anduril.taskmanager.v1.CancelRequest cancel_request = 2 [json_name = "cancelRequest"];
            case kCancelRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_.cancel_request_);
              break;
            }
            // .anduril.taskmanager.v1.CompleteRequest complete_request = 3 [json_name = "completeRequest"];
            case kCompleteRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_.complete_request_);
              break;
            }
            case REQUEST_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListenAsAgentResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListenAsAgentResponse*>(&to_msg);
  auto& from = static_cast<const ListenAsAgentResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.ListenAsAgentResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_request();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExecuteRequest: {
        if (oneof_needs_init) {
          _this->_impl_.request_.execute_request_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::ExecuteRequest>(arena, *from._impl_.request_.execute_request_);
        } else {
          _this->_impl_.request_.execute_request_->MergeFrom(from._internal_execute_request());
        }
        break;
      }
      case kCancelRequest: {
        if (oneof_needs_init) {
          _this->_impl_.request_.cancel_request_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::CancelRequest>(arena, *from._impl_.request_.cancel_request_);
        } else {
          _this->_impl_.request_.cancel_request_->MergeFrom(from._internal_cancel_request());
        }
        break;
      }
      case kCompleteRequest: {
        if (oneof_needs_init) {
          _this->_impl_.request_.complete_request_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::CompleteRequest>(arena, *from._impl_.request_.complete_request_);
        } else {
          _this->_impl_.request_.complete_request_->MergeFrom(from._internal_complete_request());
        }
        break;
      }
      case REQUEST_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListenAsAgentResponse::CopyFrom(const ListenAsAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.ListenAsAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListenAsAgentResponse::InternalSwap(ListenAsAgentResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_, other->_impl_.request_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ListenAsAgentResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RateLimit::_Internal {
 public:
};

RateLimit::RateLimit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.RateLimit)
}
RateLimit::RateLimit(
    ::google::protobuf::Arena* arena, const RateLimit& from)
    : RateLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RateLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RateLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_per_task_limit_ms_ = {};
}
RateLimit::~RateLimit() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.RateLimit)
  SharedDtor(*this);
}
inline void RateLimit::SharedDtor(MessageLite& self) {
  RateLimit& this_ = static_cast<RateLimit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RateLimit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RateLimit(arena);
}
constexpr auto RateLimit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RateLimit),
                                            alignof(RateLimit));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RateLimit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RateLimit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RateLimit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RateLimit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RateLimit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RateLimit>(), &RateLimit::ByteSizeLong,
            &RateLimit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RateLimit, _impl_._cached_size_),
        false,
    },
    &RateLimit::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RateLimit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RateLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::RateLimit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RateLimit, _impl_.update_per_task_limit_ms_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RateLimit, _impl_.update_per_task_limit_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
    {PROTOBUF_FIELD_OFFSET(RateLimit, _impl_.update_per_task_limit_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RateLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.RateLimit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.update_per_task_limit_ms_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RateLimit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RateLimit& this_ = static_cast<const RateLimit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RateLimit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RateLimit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.RateLimit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
          if (this_._internal_update_per_task_limit_ms() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_update_per_task_limit_ms(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.RateLimit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RateLimit::ByteSizeLong(const MessageLite& base) {
          const RateLimit& this_ = static_cast<const RateLimit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RateLimit::ByteSizeLong() const {
          const RateLimit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.RateLimit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
            if (this_._internal_update_per_task_limit_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_update_per_task_limit_ms());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RateLimit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RateLimit*>(&to_msg);
  auto& from = static_cast<const RateLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.RateLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_update_per_task_limit_ms() != 0) {
    _this->_impl_.update_per_task_limit_ms_ = from._impl_.update_per_task_limit_ms_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RateLimit::CopyFrom(const RateLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.RateLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RateLimit::InternalSwap(RateLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.update_per_task_limit_ms_, other->_impl_.update_per_task_limit_ms_);
}

::google::protobuf::Metadata RateLimit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Heartbeat::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Heartbeat>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_);
};

void Heartbeat::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Heartbeat::Heartbeat(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::Heartbeat& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Heartbeat::Heartbeat(
    ::google::protobuf::Arena* arena,
    const Heartbeat& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Heartbeat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Heartbeat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.Heartbeat)
  SharedDtor(*this);
}
inline void Heartbeat::SharedDtor(MessageLite& self) {
  Heartbeat& this_ = static_cast<Heartbeat&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* Heartbeat::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Heartbeat(arena);
}
constexpr auto Heartbeat::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Heartbeat),
                                            alignof(Heartbeat));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Heartbeat::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Heartbeat_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Heartbeat::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Heartbeat>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Heartbeat::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Heartbeat>(), &Heartbeat::ByteSizeLong,
            &Heartbeat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._cached_size_),
        false,
    },
    &Heartbeat::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Heartbeat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Heartbeat::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Heartbeat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.Heartbeat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Heartbeat::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Heartbeat& this_ = static_cast<const Heartbeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Heartbeat::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Heartbeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.Heartbeat)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.Heartbeat)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Heartbeat::ByteSizeLong(const MessageLite& base) {
          const Heartbeat& this_ = static_cast<const Heartbeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Heartbeat::ByteSizeLong() const {
          const Heartbeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.Heartbeat)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Heartbeat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Heartbeat*>(&to_msg);
  auto& from = static_cast<const Heartbeat&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.Heartbeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
    if (_this->_impl_.timestamp_ == nullptr) {
      _this->_impl_.timestamp_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
    } else {
      _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Heartbeat::InternalSwap(Heartbeat* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntityIds::_Internal {
 public:
};

EntityIds::EntityIds(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.EntityIds)
}
inline PROTOBUF_NDEBUG_INLINE EntityIds::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::EntityIds& from_msg)
      : entity_ids_{visibility, arena, from.entity_ids_},
        _cached_size_{0} {}

EntityIds::EntityIds(
    ::google::protobuf::Arena* arena,
    const EntityIds& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityIds* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.EntityIds)
}
inline PROTOBUF_NDEBUG_INLINE EntityIds::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entity_ids_{visibility, arena},
        _cached_size_{0} {}

inline void EntityIds::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EntityIds::~EntityIds() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.EntityIds)
  SharedDtor(*this);
}
inline void EntityIds::SharedDtor(MessageLite& self) {
  EntityIds& this_ = static_cast<EntityIds&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EntityIds::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EntityIds(arena);
}
constexpr auto EntityIds::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EntityIds, _impl_.entity_ids_) +
          decltype(EntityIds::_impl_.entity_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(EntityIds), alignof(EntityIds), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EntityIds::PlacementNew_,
                                 sizeof(EntityIds),
                                 alignof(EntityIds));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EntityIds::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EntityIds_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EntityIds::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EntityIds>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EntityIds::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EntityIds>(), &EntityIds::ByteSizeLong,
            &EntityIds::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EntityIds, _impl_._cached_size_),
        false,
    },
    &EntityIds::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EntityIds::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> EntityIds::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::EntityIds>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string entity_ids = 1 [json_name = "entityIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EntityIds, _impl_.entity_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string entity_ids = 1 [json_name = "entityIds"];
    {PROTOBUF_FIELD_OFFSET(EntityIds, _impl_.entity_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\12\0\0\0\0\0\0"
    "anduril.taskmanager.v1.EntityIds"
    "entity_ids"
  }},
};

PROTOBUF_NOINLINE void EntityIds::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.EntityIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EntityIds::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EntityIds& this_ = static_cast<const EntityIds&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EntityIds::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EntityIds& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.EntityIds)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string entity_ids = 1 [json_name = "entityIds"];
          for (int i = 0, n = this_._internal_entity_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_entity_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.EntityIds.entity_ids");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.EntityIds)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EntityIds::ByteSizeLong(const MessageLite& base) {
          const EntityIds& this_ = static_cast<const EntityIds&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EntityIds::ByteSizeLong() const {
          const EntityIds& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.EntityIds)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string entity_ids = 1 [json_name = "entityIds"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_entity_ids().size());
              for (int i = 0, n = this_._internal_entity_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_entity_ids().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EntityIds::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityIds*>(&to_msg);
  auto& from = static_cast<const EntityIds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.EntityIds)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity_ids()->MergeFrom(from._internal_entity_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityIds::CopyFrom(const EntityIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.EntityIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityIds::InternalSwap(EntityIds* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entity_ids_.InternalSwap(&other->_impl_.entity_ids_);
}

::google::protobuf::Metadata EntityIds::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace taskmanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fgrpcapi_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
