// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/taskmanager/v1/task_api.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/taskmanager/v1/task_api.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace taskmanager {
namespace v1 {

inline constexpr CompleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CompleteRequest::CompleteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompleteRequestDefaultTypeInternal() {}
  union {
    CompleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompleteRequestDefaultTypeInternal _CompleteRequest_default_instance_;

inline constexpr CancelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        assignee_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CancelRequest::CancelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelRequestDefaultTypeInternal() {}
  union {
    CancelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelRequestDefaultTypeInternal _CancelRequest_default_instance_;

inline constexpr ExecuteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExecuteRequest::ExecuteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExecuteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecuteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecuteRequestDefaultTypeInternal() {}
  union {
    ExecuteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecuteRequestDefaultTypeInternal _ExecuteRequest_default_instance_;
}  // namespace v1
}  // namespace taskmanager
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ExecuteRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ExecuteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::ExecuteRequest, _impl_.task_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CancelRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CancelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CancelRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CancelRequest, _impl_.assignee_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CompleteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CompleteRequest, _impl_.task_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::anduril::taskmanager::v1::ExecuteRequest)},
        {10, 20, -1, sizeof(::anduril::taskmanager::v1::CancelRequest)},
        {22, -1, -1, sizeof(::anduril::taskmanager::v1::CompleteRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::taskmanager::v1::_ExecuteRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_CancelRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_CompleteRequest_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n)anduril/taskmanager/v1/task_api.pub.pr"
    "oto\022\026anduril.taskmanager.v1\032%anduril/tas"
    "kmanager/v1/task.pub.proto\"B\n\016ExecuteReq"
    "uest\0220\n\004task\030\001 \001(\0132\034.anduril.taskmanager"
    ".v1.TaskR\004task\"g\n\rCancelRequest\022\027\n\007task_"
    "id\030\001 \001(\tR\006taskId\022=\n\010assignee\030\002 \001(\0132!.and"
    "uril.taskmanager.v1.PrincipalR\010assignee\""
    "*\n\017CompleteRequest\022\027\n\007task_id\030\001 \001(\tR\006tas"
    "kIdB\362\001\n\032com.anduril.taskmanager.v1B\017Task"
    "ApiPubProtoP\001ZIghe.anduril.dev/anduril/a"
    "ndurilapis-go/anduril/taskmanager/v1;tas"
    "kmanager\242\002\003ATX\252\002\026Anduril.Taskmanager.V1\312"
    "\002\026Anduril\\Taskmanager\\V1\342\002\"Anduril\\Taskm"
    "anager\\V1\\GPBMetadata\352\002\030Anduril::Taskman"
    "ager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto_deps[1] =
    {
        &::descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_2epub_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto = {
    false,
    false,
    576,
    descriptor_table_protodef_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto,
    "anduril/taskmanager/v1/task_api.pub.proto",
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto_once,
    descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto,
};
namespace anduril {
namespace taskmanager {
namespace v1 {
// ===================================================================

class ExecuteRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExecuteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExecuteRequest, _impl_._has_bits_);
};

void ExecuteRequest::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ExecuteRequest::ExecuteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.ExecuteRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExecuteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::ExecuteRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ExecuteRequest::ExecuteRequest(
    ::google::protobuf::Arena* arena,
    const ExecuteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExecuteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.ExecuteRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExecuteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExecuteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
ExecuteRequest::~ExecuteRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.ExecuteRequest)
  SharedDtor(*this);
}
inline void ExecuteRequest::SharedDtor(MessageLite& self) {
  ExecuteRequest& this_ = static_cast<ExecuteRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* ExecuteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExecuteRequest(arena);
}
constexpr auto ExecuteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExecuteRequest),
                                            alignof(ExecuteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExecuteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExecuteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExecuteRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExecuteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExecuteRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExecuteRequest>(), &ExecuteRequest::ByteSizeLong,
            &ExecuteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExecuteRequest, _impl_._cached_size_),
        false,
    },
    &ExecuteRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExecuteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ExecuteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExecuteRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::ExecuteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExecuteRequest, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(ExecuteRequest, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExecuteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.ExecuteRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExecuteRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExecuteRequest& this_ = static_cast<const ExecuteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExecuteRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExecuteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.ExecuteRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.ExecuteRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExecuteRequest::ByteSizeLong(const MessageLite& base) {
          const ExecuteRequest& this_ = static_cast<const ExecuteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExecuteRequest::ByteSizeLong() const {
          const ExecuteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.ExecuteRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExecuteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExecuteRequest*>(&to_msg);
  auto& from = static_cast<const ExecuteRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.ExecuteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExecuteRequest::CopyFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExecuteRequest::InternalSwap(ExecuteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata ExecuteRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CancelRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_._has_bits_);
};

void CancelRequest::clear_assignee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.assignee_ != nullptr) _impl_.assignee_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CancelRequest::CancelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.CancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::CancelRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        task_id_(arena, from.task_id_) {}

CancelRequest::CancelRequest(
    ::google::protobuf::Arena* arena,
    const CancelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.assignee_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Principal>(
                              arena, *from._impl_.assignee_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.CancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        task_id_(arena) {}

inline void CancelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.assignee_ = {};
}
CancelRequest::~CancelRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.CancelRequest)
  SharedDtor(*this);
}
inline void CancelRequest::SharedDtor(MessageLite& self) {
  CancelRequest& this_ = static_cast<CancelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  delete this_._impl_.assignee_;
  this_._impl_.~Impl_();
}

inline void* CancelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelRequest(arena);
}
constexpr auto CancelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelRequest),
                                            alignof(CancelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelRequest>(), &CancelRequest::ByteSizeLong,
            &CancelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_._cached_size_),
        false,
    },
    &CancelRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 52, 2> CancelRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CancelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Principal assignee = 2 [json_name = "assignee"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.assignee_)}},
    // string task_id = 1 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.task_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.taskmanager.v1.Principal assignee = 2 [json_name = "assignee"];
    {PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.assignee_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Principal>()},
  }}, {{
    "\44\7\0\0\0\0\0\0"
    "anduril.taskmanager.v1.CancelRequest"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void CancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.CancelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.assignee_ != nullptr);
    _impl_.assignee_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelRequest& this_ = static_cast<const CancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.CancelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1 [json_name = "taskId"];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CancelRequest.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.taskmanager.v1.Principal assignee = 2 [json_name = "assignee"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.assignee_, this_._impl_.assignee_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.CancelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelRequest::ByteSizeLong(const MessageLite& base) {
          const CancelRequest& this_ = static_cast<const CancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelRequest::ByteSizeLong() const {
          const CancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.CancelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1 [json_name = "taskId"];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
          }
           {
            // .anduril.taskmanager.v1.Principal assignee = 2 [json_name = "assignee"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.assignee_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelRequest*>(&to_msg);
  auto& from = static_cast<const CancelRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.CancelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.assignee_ != nullptr);
    if (_this->_impl_.assignee_ == nullptr) {
      _this->_impl_.assignee_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Principal>(arena, *from._impl_.assignee_);
    } else {
      _this->_impl_.assignee_->MergeFrom(*from._impl_.assignee_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelRequest::CopyFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelRequest::InternalSwap(CancelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  swap(_impl_.assignee_, other->_impl_.assignee_);
}

::google::protobuf::Metadata CancelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CompleteRequest::_Internal {
 public:
};

CompleteRequest::CompleteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.CompleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CompleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::CompleteRequest& from_msg)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

CompleteRequest::CompleteRequest(
    ::google::protobuf::Arena* arena,
    const CompleteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CompleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.CompleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CompleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void CompleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CompleteRequest::~CompleteRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.CompleteRequest)
  SharedDtor(*this);
}
inline void CompleteRequest::SharedDtor(MessageLite& self) {
  CompleteRequest& this_ = static_cast<CompleteRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CompleteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CompleteRequest(arena);
}
constexpr auto CompleteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CompleteRequest),
                                            alignof(CompleteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CompleteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CompleteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CompleteRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CompleteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CompleteRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CompleteRequest>(), &CompleteRequest::ByteSizeLong,
            &CompleteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CompleteRequest, _impl_._cached_size_),
        false,
    },
    &CompleteRequest::kDescriptorMethods,
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CompleteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> CompleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CompleteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string task_id = 1 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CompleteRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(CompleteRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\7\0\0\0\0\0\0"
    "anduril.taskmanager.v1.CompleteRequest"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void CompleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.CompleteRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CompleteRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CompleteRequest& this_ = static_cast<const CompleteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CompleteRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CompleteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.CompleteRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1 [json_name = "taskId"];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CompleteRequest.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.CompleteRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CompleteRequest::ByteSizeLong(const MessageLite& base) {
          const CompleteRequest& this_ = static_cast<const CompleteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CompleteRequest::ByteSizeLong() const {
          const CompleteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.CompleteRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string task_id = 1 [json_name = "taskId"];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CompleteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CompleteRequest*>(&to_msg);
  auto& from = static_cast<const CompleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.CompleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompleteRequest::CopyFrom(const CompleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.CompleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CompleteRequest::InternalSwap(CompleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
}

::google::protobuf::Metadata CompleteRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace taskmanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fapi_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
