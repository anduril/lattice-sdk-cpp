// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/taskmanager/v1/task_manager_api.pub.proto
// Protobuf C++ Version: 5.27.3

#include "anduril/taskmanager/v1/task_manager_api.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace taskmanager {
namespace v1 {

inline constexpr RateLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : update_per_task_limit_ms_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RateLimit::RateLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RateLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RateLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RateLimitDefaultTypeInternal() {}
  union {
    RateLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RateLimitDefaultTypeInternal _RateLimit_default_instance_;

inline constexpr GetTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        definition_version_{0u},
        task_view_{static_cast< ::anduril::taskmanager::v1::TaskView >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTaskRequest::GetTaskRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTaskRequestDefaultTypeInternal() {}
  union {
    GetTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTaskRequestDefaultTypeInternal _GetTaskRequest_default_instance_;

inline constexpr StreamTasksRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        views_{},
        _views_cached_byte_size_{0},
        rate_limit_{nullptr},
        heartbeat_period_millis_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR StreamTasksRequest::StreamTasksRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StreamTasksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamTasksRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamTasksRequestDefaultTypeInternal() {}
  union {
    StreamTasksRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamTasksRequestDefaultTypeInternal _StreamTasksRequest_default_instance_;

inline constexpr Heartbeat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Heartbeat::Heartbeat(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HeartbeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatDefaultTypeInternal() {}
  union {
    Heartbeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;

inline constexpr UpdateStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateStatusRequest::UpdateStatusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStatusRequestDefaultTypeInternal() {}
  union {
    UpdateStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStatusRequestDefaultTypeInternal _UpdateStatusRequest_default_instance_;

inline constexpr CreateTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        initial_entities_{},
        display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        specification_{nullptr},
        author_{nullptr},
        relations_{nullptr},
        is_executed_elsewhere_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTaskRequest::CreateTaskRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTaskRequestDefaultTypeInternal() {}
  union {
    CreateTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTaskRequestDefaultTypeInternal _CreateTaskRequest_default_instance_;

inline constexpr UpdateTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateTaskResponse::UpdateTaskResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTaskResponseDefaultTypeInternal() {}
  union {
    UpdateTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTaskResponseDefaultTypeInternal _UpdateTaskResponse_default_instance_;

inline constexpr UpdateTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr},
        is_executed_elsewhere_{false} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateTaskRequest::UpdateTaskRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTaskRequestDefaultTypeInternal() {}
  union {
    UpdateTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTaskRequestDefaultTypeInternal _UpdateTaskRequest_default_instance_;

inline constexpr UpdateStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateStatusResponse::UpdateStatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStatusResponseDefaultTypeInternal() {}
  union {
    UpdateStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStatusResponseDefaultTypeInternal _UpdateStatusResponse_default_instance_;

inline constexpr GetTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTaskResponse::GetTaskResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTaskResponseDefaultTypeInternal() {}
  union {
    GetTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTaskResponseDefaultTypeInternal _GetTaskResponse_default_instance_;

inline constexpr CreateTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTaskResponse::CreateTaskResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTaskResponseDefaultTypeInternal() {}
  union {
    CreateTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTaskResponseDefaultTypeInternal _CreateTaskResponse_default_instance_;

inline constexpr StreamTasksResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_event_{nullptr},
        heartbeat_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StreamTasksResponse::StreamTasksResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StreamTasksResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamTasksResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamTasksResponseDefaultTypeInternal() {}
  union {
    StreamTasksResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamTasksResponseDefaultTypeInternal _StreamTasksResponse_default_instance_;
}  // namespace v1
}  // namespace taskmanager
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.display_name_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.specification_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.author_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.relations_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.is_executed_elsewhere_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskRequest, _impl_.initial_entities_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::CreateTaskResponse, _impl_.task_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _impl_.definition_version_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskRequest, _impl_.task_view_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::GetTaskResponse, _impl_.task_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateTaskRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateTaskRequest, _impl_.task_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateTaskRequest, _impl_.is_executed_elsewhere_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateTaskResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateTaskResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateTaskResponse, _impl_.task_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusRequest, _impl_.status_update_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::UpdateStatusResponse, _impl_.task_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksRequest, _impl_.rate_limit_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksRequest, _impl_.views_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksRequest, _impl_.heartbeat_period_millis_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksResponse, _impl_.task_event_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::StreamTasksResponse, _impl_.heartbeat_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::RateLimit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::RateLimit, _impl_.update_per_task_limit_ms_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::Heartbeat, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::Heartbeat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::taskmanager::v1::Heartbeat, _impl_.timestamp_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::anduril::taskmanager::v1::CreateTaskRequest)},
        {24, 33, -1, sizeof(::anduril::taskmanager::v1::CreateTaskResponse)},
        {34, -1, -1, sizeof(::anduril::taskmanager::v1::GetTaskRequest)},
        {45, 54, -1, sizeof(::anduril::taskmanager::v1::GetTaskResponse)},
        {55, 65, -1, sizeof(::anduril::taskmanager::v1::UpdateTaskRequest)},
        {67, 76, -1, sizeof(::anduril::taskmanager::v1::UpdateTaskResponse)},
        {77, 86, -1, sizeof(::anduril::taskmanager::v1::UpdateStatusRequest)},
        {87, 96, -1, sizeof(::anduril::taskmanager::v1::UpdateStatusResponse)},
        {97, 108, -1, sizeof(::anduril::taskmanager::v1::StreamTasksRequest)},
        {111, 121, -1, sizeof(::anduril::taskmanager::v1::StreamTasksResponse)},
        {123, -1, -1, sizeof(::anduril::taskmanager::v1::RateLimit)},
        {132, 141, -1, sizeof(::anduril::taskmanager::v1::Heartbeat)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::taskmanager::v1::_CreateTaskRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_CreateTaskResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_GetTaskRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_GetTaskResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_UpdateTaskRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_UpdateTaskResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_UpdateStatusRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_UpdateStatusResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_StreamTasksRequest_default_instance_._instance,
    &::anduril::taskmanager::v1::_StreamTasksResponse_default_instance_._instance,
    &::anduril::taskmanager::v1::_RateLimit_default_instance_._instance,
    &::anduril::taskmanager::v1::_Heartbeat_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n1anduril/taskmanager/v1/task_manager_ap"
    "i.pub.proto\022\026anduril.taskmanager.v1\032%and"
    "uril/taskmanager/v1/task.pub.proto\032\031goog"
    "le/protobuf/any.proto\032\037google/protobuf/t"
    "imestamp.proto\"\270\003\n\021CreateTaskRequest\022!\n\014"
    "display_name\030\001 \001(\tR\013displayName\022:\n\rspeci"
    "fication\030\002 \001(\0132\024.google.protobuf.AnyR\rsp"
    "ecification\0229\n\006author\030\003 \001(\0132!.anduril.ta"
    "skmanager.v1.PrincipalR\006author\022\?\n\trelati"
    "ons\030\005 \001(\0132!.anduril.taskmanager.v1.Relat"
    "ionsR\trelations\022 \n\013description\030\006 \001(\tR\013de"
    "scription\0222\n\025is_executed_elsewhere\030\007 \001(\010"
    "R\023isExecutedElsewhere\022\027\n\007task_id\030\010 \001(\tR\006"
    "taskId\022M\n\020initial_entities\030\t \003(\0132\".andur"
    "il.taskmanager.v1.TaskEntityR\017initialEnt"
    "itiesJ\004\010\004\020\005J\004\010\n\020\013\"F\n\022CreateTaskResponse\022"
    "0\n\004task\030\001 \001(\0132\034.anduril.taskmanager.v1.T"
    "askR\004task\"\227\001\n\016GetTaskRequest\022\027\n\007task_id\030"
    "\001 \001(\tR\006taskId\022-\n\022definition_version\030\002 \001("
    "\rR\021definitionVersion\022=\n\ttask_view\030\003 \001(\0162"
    " .anduril.taskmanager.v1.TaskViewR\010taskV"
    "iew\"C\n\017GetTaskResponse\0220\n\004task\030\001 \001(\0132\034.a"
    "nduril.taskmanager.v1.TaskR\004task\"y\n\021Upda"
    "teTaskRequest\0220\n\004task\030\001 \001(\0132\034.anduril.ta"
    "skmanager.v1.TaskR\004task\0222\n\025is_executed_e"
    "lsewhere\030\007 \001(\010R\023isExecutedElsewhere\"F\n\022U"
    "pdateTaskResponse\0220\n\004task\030\001 \001(\0132\034.anduri"
    "l.taskmanager.v1.TaskR\004task\"`\n\023UpdateSta"
    "tusRequest\022I\n\rstatus_update\030\001 \001(\0132$.andu"
    "ril.taskmanager.v1.StatusUpdateR\014statusU"
    "pdate\"H\n\024UpdateStatusResponse\0220\n\004task\030\001 "
    "\001(\0132\034.anduril.taskmanager.v1.TaskR\004task\""
    "\306\001\n\022StreamTasksRequest\022@\n\nrate_limit\030\001 \001"
    "(\0132!.anduril.taskmanager.v1.RateLimitR\tr"
    "ateLimit\0226\n\005views\030\002 \003(\0162 .anduril.taskma"
    "nager.v1.TaskViewR\005views\0226\n\027heartbeat_pe"
    "riod_millis\030\003 \001(\rR\025heartbeatPeriodMillis"
    "\"\230\001\n\023StreamTasksResponse\022@\n\ntask_event\030\001"
    " \001(\0132!.anduril.taskmanager.v1.TaskEventR"
    "\ttaskEvent\022\?\n\theartbeat\030\002 \001(\0132!.anduril."
    "taskmanager.v1.HeartbeatR\theartbeat\"C\n\tR"
    "ateLimit\0226\n\030update_per_task_limit_ms\030\001 \001"
    "(\rR\024updatePerTaskLimitMs\"E\n\tHeartbeat\0228\n"
    "\ttimestamp\030\001 \001(\0132\032.google.protobuf.Times"
    "tampR\ttimestamp2\213\004\n\016TaskManagerAPI\022c\n\nCr"
    "eateTask\022).anduril.taskmanager.v1.Create"
    "TaskRequest\032*.anduril.taskmanager.v1.Cre"
    "ateTaskResponse\022Z\n\007GetTask\022&.anduril.tas"
    "kmanager.v1.GetTaskRequest\032\'.anduril.tas"
    "kmanager.v1.GetTaskResponse\022c\n\nUpdateTas"
    "k\022).anduril.taskmanager.v1.UpdateTaskReq"
    "uest\032*.anduril.taskmanager.v1.UpdateTask"
    "Response\022i\n\014UpdateStatus\022+.anduril.taskm"
    "anager.v1.UpdateStatusRequest\032,.anduril."
    "taskmanager.v1.UpdateStatusResponse\022h\n\013S"
    "treamTasks\022*.anduril.taskmanager.v1.Stre"
    "amTasksRequest\032+.anduril.taskmanager.v1."
    "StreamTasksResponse0\001B\371\001\n\032com.anduril.ta"
    "skmanager.v1B\026TaskManagerApiPubProtoP\001ZI"
    "ghe.anduril.dev/anduril/andurilapis-go/a"
    "nduril/taskmanager/v1;taskmanager\242\002\003ATX\252"
    "\002\026Anduril.Taskmanager.V1\312\002\026Anduril\\Taskm"
    "anager\\V1\342\002\"Anduril\\Taskmanager\\V1\\GPBMe"
    "tadata\352\002\030Anduril::Taskmanager::V1b\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto_deps[3] =
    {
        &::descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto = {
    false,
    false,
    2561,
    descriptor_table_protodef_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
    "anduril/taskmanager/v1/task_manager_api.pub.proto",
    &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto_once,
    descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto_deps,
    3,
    12,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
};
namespace anduril {
namespace taskmanager {
namespace v1 {
// ===================================================================

class CreateTaskRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTaskRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_._has_bits_);
};

void CreateTaskRequest::clear_specification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.specification_ != nullptr) _impl_.specification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CreateTaskRequest::clear_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.author_ != nullptr) _impl_.author_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CreateTaskRequest::clear_relations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relations_ != nullptr) _impl_.relations_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CreateTaskRequest::clear_initial_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_entities_.Clear();
}
CreateTaskRequest::CreateTaskRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.CreateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::CreateTaskRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        initial_entities_{visibility, arena, from.initial_entities_},
        display_name_(arena, from.display_name_),
        description_(arena, from.description_),
        task_id_(arena, from.task_id_) {}

CreateTaskRequest::CreateTaskRequest(
    ::google::protobuf::Arena* arena,
    const CreateTaskRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.specification_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.specification_)
                        : nullptr;
  _impl_.author_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Principal>(
                              arena, *from._impl_.author_)
                        : nullptr;
  _impl_.relations_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Relations>(
                              arena, *from._impl_.relations_)
                        : nullptr;
  _impl_.is_executed_elsewhere_ = from._impl_.is_executed_elsewhere_;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.CreateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        initial_entities_{visibility, arena},
        display_name_(arena),
        description_(arena),
        task_id_(arena) {}

inline void CreateTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, specification_),
           0,
           offsetof(Impl_, is_executed_elsewhere_) -
               offsetof(Impl_, specification_) +
               sizeof(Impl_::is_executed_elsewhere_));
}
CreateTaskRequest::~CreateTaskRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.CreateTaskRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateTaskRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.display_name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.task_id_.Destroy();
  delete _impl_.specification_;
  delete _impl_.author_;
  delete _impl_.relations_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateTaskRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_._cached_size_),
              false,
          },
          &CreateTaskRequest::MergeImpl,
          &CreateTaskRequest::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 4, 87, 2> CreateTaskRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966792,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateTaskRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CreateTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string display_name = 1 [json_name = "displayName"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.display_name_)}},
    // .google.protobuf.Any specification = 2 [json_name = "specification"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.specification_)}},
    // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.author_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.relations_)}},
    // string description = 6 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.description_)}},
    // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreateTaskRequest, _impl_.is_executed_elsewhere_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.is_executed_elsewhere_)}},
    // string task_id = 8 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.task_id_)}},
    // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 3, PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.initial_entities_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string display_name = 1 [json_name = "displayName"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.display_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any specification = 2 [json_name = "specification"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.specification_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.author_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.relations_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 6 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.is_executed_elsewhere_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string task_id = 8 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.task_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.initial_entities_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Principal>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Relations>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::TaskEntity>()},
  }}, {{
    "\50\14\0\0\0\13\0\7\0\0\0\0\0\0\0\0"
    "anduril.taskmanager.v1.CreateTaskRequest"
    "display_name"
    "description"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void CreateTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.CreateTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.initial_entities_.Clear();
  _impl_.display_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.task_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.specification_ != nullptr);
      _impl_.specification_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.author_ != nullptr);
      _impl_.author_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.relations_ != nullptr);
      _impl_.relations_->Clear();
    }
  }
  _impl_.is_executed_elsewhere_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CreateTaskRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.CreateTaskRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string display_name = 1 [json_name = "displayName"];
  if (!this->_internal_display_name().empty()) {
    const std::string& _s = this->_internal_display_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CreateTaskRequest.display_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any specification = 2 [json_name = "specification"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.specification_, _impl_.specification_->GetCachedSize(), target, stream);
  }

  // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.author_, _impl_.author_->GetCachedSize(), target, stream);
  }

  // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.relations_, _impl_.relations_->GetCachedSize(), target, stream);
  }

  // string description = 6 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CreateTaskRequest.description");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
  if (this->_internal_is_executed_elsewhere() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_is_executed_elsewhere(), target);
  }

  // string task_id = 8 [json_name = "taskId"];
  if (!this->_internal_task_id().empty()) {
    const std::string& _s = this->_internal_task_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.CreateTaskRequest.task_id");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_initial_entities_size());
       i < n; i++) {
    const auto& repfield = this->_internal_initial_entities().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.CreateTaskRequest)
  return target;
}

::size_t CreateTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.CreateTaskRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .anduril.taskmanager.v1.TaskEntity initial_entities = 9 [json_name = "initialEntities"];
  total_size += 1UL * this->_internal_initial_entities_size();
  for (const auto& msg : this->_internal_initial_entities()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string display_name = 1 [json_name = "displayName"];
  if (!this->_internal_display_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_display_name());
  }

  // string description = 6 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // string task_id = 8 [json_name = "taskId"];
  if (!this->_internal_task_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.Any specification = 2 [json_name = "specification"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.specification_);
    }

    // .anduril.taskmanager.v1.Principal author = 3 [json_name = "author"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.author_);
    }

    // .anduril.taskmanager.v1.Relations relations = 5 [json_name = "relations"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.relations_);
    }

  }
  // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
  if (this->_internal_is_executed_elsewhere() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CreateTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTaskRequest*>(&to_msg);
  auto& from = static_cast<const CreateTaskRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.CreateTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_initial_entities()->MergeFrom(
      from._internal_initial_entities());
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.specification_ != nullptr);
      if (_this->_impl_.specification_ == nullptr) {
        _this->_impl_.specification_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.specification_);
      } else {
        _this->_impl_.specification_->MergeFrom(*from._impl_.specification_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.author_ != nullptr);
      if (_this->_impl_.author_ == nullptr) {
        _this->_impl_.author_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Principal>(arena, *from._impl_.author_);
      } else {
        _this->_impl_.author_->MergeFrom(*from._impl_.author_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.relations_ != nullptr);
      if (_this->_impl_.relations_ == nullptr) {
        _this->_impl_.relations_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Relations>(arena, *from._impl_.relations_);
      } else {
        _this->_impl_.relations_->MergeFrom(*from._impl_.relations_);
      }
    }
  }
  if (from._internal_is_executed_elsewhere() != 0) {
    _this->_impl_.is_executed_elsewhere_ = from._impl_.is_executed_elsewhere_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTaskRequest::CopyFrom(const CreateTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.CreateTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTaskRequest::InternalSwap(CreateTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.initial_entities_.InternalSwap(&other->_impl_.initial_entities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_name_, &other->_impl_.display_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.is_executed_elsewhere_)
      + sizeof(CreateTaskRequest::_impl_.is_executed_elsewhere_)
      - PROTOBUF_FIELD_OFFSET(CreateTaskRequest, _impl_.specification_)>(
          reinterpret_cast<char*>(&_impl_.specification_),
          reinterpret_cast<char*>(&other->_impl_.specification_));
}

::google::protobuf::Metadata CreateTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTaskResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTaskResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_._has_bits_);
};

void CreateTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CreateTaskResponse::CreateTaskResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.CreateTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::CreateTaskResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateTaskResponse::CreateTaskResponse(
    ::google::protobuf::Arena* arena,
    const CreateTaskResponse& from)
    : ::google::protobuf::Message(arena) {
  CreateTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.CreateTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
CreateTaskResponse::~CreateTaskResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.CreateTaskResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateTaskResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateTaskResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_._cached_size_),
              false,
          },
          &CreateTaskResponse::MergeImpl,
          &CreateTaskResponse::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateTaskResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateTaskResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::CreateTaskResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(CreateTaskResponse, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.CreateTaskResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CreateTaskResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.CreateTaskResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.task_, _impl_.task_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.CreateTaskResponse)
  return target;
}

::size_t CreateTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.CreateTaskResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CreateTaskResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTaskResponse*>(&to_msg);
  auto& from = static_cast<const CreateTaskResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.CreateTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTaskResponse::CopyFrom(const CreateTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.CreateTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTaskResponse::InternalSwap(CreateTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata CreateTaskResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTaskRequest::_Internal {
 public:
};

GetTaskRequest::GetTaskRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.GetTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::GetTaskRequest& from_msg)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GetTaskRequest::GetTaskRequest(
    ::google::protobuf::Arena* arena,
    const GetTaskRequest& from)
    : ::google::protobuf::Message(arena) {
  GetTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, definition_version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, definition_version_),
           offsetof(Impl_, task_view_) -
               offsetof(Impl_, definition_version_) +
               sizeof(Impl_::task_view_));

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.GetTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GetTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, definition_version_),
           0,
           offsetof(Impl_, task_view_) -
               offsetof(Impl_, definition_version_) +
               sizeof(Impl_::task_view_));
}
GetTaskRequest::~GetTaskRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.GetTaskRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetTaskRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.task_id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetTaskRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_._cached_size_),
              false,
          },
          &GetTaskRequest::MergeImpl,
          &GetTaskRequest::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 53, 2> GetTaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetTaskRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::GetTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string task_id = 1 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_id_)}},
    // uint32 definition_version = 2 [json_name = "definitionVersion"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTaskRequest, _impl_.definition_version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.definition_version_)}},
    // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTaskRequest, _impl_.task_view_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_view_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 definition_version = 2 [json_name = "definitionVersion"];
    {PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.definition_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
    {PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_view_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\45\7\0\0\0\0\0\0"
    "anduril.taskmanager.v1.GetTaskRequest"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void GetTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.GetTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  ::memset(&_impl_.definition_version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.task_view_) -
      reinterpret_cast<char*>(&_impl_.definition_version_)) + sizeof(_impl_.task_view_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GetTaskRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.GetTaskRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string task_id = 1 [json_name = "taskId"];
  if (!this->_internal_task_id().empty()) {
    const std::string& _s = this->_internal_task_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.taskmanager.v1.GetTaskRequest.task_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 definition_version = 2 [json_name = "definitionVersion"];
  if (this->_internal_definition_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_definition_version(), target);
  }

  // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
  if (this->_internal_task_view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_task_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.GetTaskRequest)
  return target;
}

::size_t GetTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.GetTaskRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string task_id = 1 [json_name = "taskId"];
  if (!this->_internal_task_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task_id());
  }

  // uint32 definition_version = 2 [json_name = "definitionVersion"];
  if (this->_internal_definition_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_definition_version());
  }

  // .anduril.taskmanager.v1.TaskView task_view = 3 [json_name = "taskView"];
  if (this->_internal_task_view() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_task_view());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTaskRequest*>(&to_msg);
  auto& from = static_cast<const GetTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.GetTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_definition_version() != 0) {
    _this->_impl_.definition_version_ = from._impl_.definition_version_;
  }
  if (from._internal_task_view() != 0) {
    _this->_impl_.task_view_ = from._impl_.task_view_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTaskRequest::CopyFrom(const GetTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.GetTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTaskRequest::InternalSwap(GetTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.task_view_)
      + sizeof(GetTaskRequest::_impl_.task_view_)
      - PROTOBUF_FIELD_OFFSET(GetTaskRequest, _impl_.definition_version_)>(
          reinterpret_cast<char*>(&_impl_.definition_version_),
          reinterpret_cast<char*>(&other->_impl_.definition_version_));
}

::google::protobuf::Metadata GetTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTaskResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTaskResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_._has_bits_);
};

void GetTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetTaskResponse::GetTaskResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.GetTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::GetTaskResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTaskResponse::GetTaskResponse(
    ::google::protobuf::Arena* arena,
    const GetTaskResponse& from)
    : ::google::protobuf::Message(arena) {
  GetTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.GetTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
GetTaskResponse::~GetTaskResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.GetTaskResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetTaskResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetTaskResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_._cached_size_),
              false,
          },
          &GetTaskResponse::MergeImpl,
          &GetTaskResponse::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTaskResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetTaskResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::GetTaskResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(GetTaskResponse, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.GetTaskResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GetTaskResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.GetTaskResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.task_, _impl_.task_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.GetTaskResponse)
  return target;
}

::size_t GetTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.GetTaskResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetTaskResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTaskResponse*>(&to_msg);
  auto& from = static_cast<const GetTaskResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.GetTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTaskResponse::CopyFrom(const GetTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.GetTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTaskResponse::InternalSwap(GetTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata GetTaskResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTaskRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateTaskRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_._has_bits_);
};

void UpdateTaskRequest::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateTaskRequest::UpdateTaskRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.UpdateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::UpdateTaskRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateTaskRequest::UpdateTaskRequest(
    ::google::protobuf::Arena* arena,
    const UpdateTaskRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;
  _impl_.is_executed_elsewhere_ = from._impl_.is_executed_elsewhere_;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.UpdateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_),
           0,
           offsetof(Impl_, is_executed_elsewhere_) -
               offsetof(Impl_, task_) +
               sizeof(Impl_::is_executed_elsewhere_));
}
UpdateTaskRequest::~UpdateTaskRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.UpdateTaskRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateTaskRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateTaskRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_._cached_size_),
              false,
          },
          &UpdateTaskRequest::MergeImpl,
          &UpdateTaskRequest::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 0, 2> UpdateTaskRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967230,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateTaskRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::UpdateTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.task_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateTaskRequest, _impl_.is_executed_elsewhere_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.is_executed_elsewhere_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
    {PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.is_executed_elsewhere_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.UpdateTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_.is_executed_elsewhere_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UpdateTaskRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.UpdateTaskRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.task_, _impl_.task_->GetCachedSize(), target, stream);
  }

  // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
  if (this->_internal_is_executed_elsewhere() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_is_executed_elsewhere(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.UpdateTaskRequest)
  return target;
}

::size_t UpdateTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.UpdateTaskRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  // bool is_executed_elsewhere = 7 [json_name = "isExecutedElsewhere"];
  if (this->_internal_is_executed_elsewhere() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateTaskRequest*>(&to_msg);
  auto& from = static_cast<const UpdateTaskRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.UpdateTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  if (from._internal_is_executed_elsewhere() != 0) {
    _this->_impl_.is_executed_elsewhere_ = from._impl_.is_executed_elsewhere_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTaskRequest::CopyFrom(const UpdateTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.UpdateTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateTaskRequest::InternalSwap(UpdateTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.is_executed_elsewhere_)
      + sizeof(UpdateTaskRequest::_impl_.is_executed_elsewhere_)
      - PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.task_)>(
          reinterpret_cast<char*>(&_impl_.task_),
          reinterpret_cast<char*>(&other->_impl_.task_));
}

::google::protobuf::Metadata UpdateTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTaskResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateTaskResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateTaskResponse, _impl_._has_bits_);
};

void UpdateTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateTaskResponse::UpdateTaskResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.UpdateTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::UpdateTaskResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateTaskResponse::UpdateTaskResponse(
    ::google::protobuf::Arena* arena,
    const UpdateTaskResponse& from)
    : ::google::protobuf::Message(arena) {
  UpdateTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.UpdateTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
UpdateTaskResponse::~UpdateTaskResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.UpdateTaskResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateTaskResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateTaskResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UpdateTaskResponse, _impl_._cached_size_),
              false,
          },
          &UpdateTaskResponse::MergeImpl,
          &UpdateTaskResponse::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateTaskResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateTaskResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateTaskResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::UpdateTaskResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateTaskResponse, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(UpdateTaskResponse, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.UpdateTaskResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UpdateTaskResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.UpdateTaskResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.task_, _impl_.task_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.UpdateTaskResponse)
  return target;
}

::size_t UpdateTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.UpdateTaskResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateTaskResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateTaskResponse*>(&to_msg);
  auto& from = static_cast<const UpdateTaskResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.UpdateTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTaskResponse::CopyFrom(const UpdateTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.UpdateTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateTaskResponse::InternalSwap(UpdateTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata UpdateTaskResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateStatusRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_._has_bits_);
};

void UpdateStatusRequest::clear_status_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_update_ != nullptr) _impl_.status_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateStatusRequest::UpdateStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::UpdateStatusRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateStatusRequest::UpdateStatusRequest(
    ::google::protobuf::Arena* arena,
    const UpdateStatusRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_update_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::StatusUpdate>(
                              arena, *from._impl_.status_update_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_update_ = {};
}
UpdateStatusRequest::~UpdateStatusRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.UpdateStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_update_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateStatusRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_._cached_size_),
              false,
          },
          &UpdateStatusRequest::MergeImpl,
          &UpdateStatusRequest::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateStatusRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::UpdateStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.status_update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.status_update_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::StatusUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.UpdateStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_update_ != nullptr);
    _impl_.status_update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UpdateStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.UpdateStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.status_update_, _impl_.status_update_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.UpdateStatusRequest)
  return target;
}

::size_t UpdateStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.UpdateStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.taskmanager.v1.StatusUpdate status_update = 1 [json_name = "statusUpdate"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_update_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateStatusRequest*>(&to_msg);
  auto& from = static_cast<const UpdateStatusRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.UpdateStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.status_update_ != nullptr);
    if (_this->_impl_.status_update_ == nullptr) {
      _this->_impl_.status_update_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::StatusUpdate>(arena, *from._impl_.status_update_);
    } else {
      _this->_impl_.status_update_->MergeFrom(*from._impl_.status_update_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStatusRequest::CopyFrom(const UpdateStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.UpdateStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateStatusRequest::InternalSwap(UpdateStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_update_, other->_impl_.status_update_);
}

::google::protobuf::Metadata UpdateStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_._has_bits_);
};

void UpdateStatusResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateStatusResponse::UpdateStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.UpdateStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::UpdateStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateStatusResponse::UpdateStatusResponse(
    ::google::protobuf::Arena* arena,
    const UpdateStatusResponse& from)
    : ::google::protobuf::Message(arena) {
  UpdateStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.UpdateStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
UpdateStatusResponse::~UpdateStatusResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.UpdateStatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateStatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateStatusResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_._cached_size_),
              false,
          },
          &UpdateStatusResponse::MergeImpl,
          &UpdateStatusResponse::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateStatusResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::UpdateStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.UpdateStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UpdateStatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.UpdateStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.task_, _impl_.task_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.UpdateStatusResponse)
  return target;
}

::size_t UpdateStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.UpdateStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.taskmanager.v1.Task task = 1 [json_name = "task"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateStatusResponse*>(&to_msg);
  auto& from = static_cast<const UpdateStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.UpdateStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStatusResponse::CopyFrom(const UpdateStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.UpdateStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateStatusResponse::InternalSwap(UpdateStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata UpdateStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamTasksRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StreamTasksRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_._has_bits_);
};

StreamTasksRequest::StreamTasksRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.StreamTasksRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamTasksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::StreamTasksRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        views_{visibility, arena, from.views_},
        _views_cached_byte_size_{0} {}

StreamTasksRequest::StreamTasksRequest(
    ::google::protobuf::Arena* arena,
    const StreamTasksRequest& from)
    : ::google::protobuf::Message(arena) {
  StreamTasksRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rate_limit_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::RateLimit>(
                              arena, *from._impl_.rate_limit_)
                        : nullptr;
  _impl_.heartbeat_period_millis_ = from._impl_.heartbeat_period_millis_;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.StreamTasksRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamTasksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        views_{visibility, arena},
        _views_cached_byte_size_{0} {}

inline void StreamTasksRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rate_limit_),
           0,
           offsetof(Impl_, heartbeat_period_millis_) -
               offsetof(Impl_, rate_limit_) +
               sizeof(Impl_::heartbeat_period_millis_));
}
StreamTasksRequest::~StreamTasksRequest() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.StreamTasksRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamTasksRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rate_limit_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StreamTasksRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_._cached_size_),
              false,
          },
          &StreamTasksRequest::MergeImpl,
          &StreamTasksRequest::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> StreamTasksRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StreamTasksRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::StreamTasksRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.rate_limit_)}},
    // repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.views_)}},
    // uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamTasksRequest, _impl_.heartbeat_period_millis_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.heartbeat_period_millis_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];
    {PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.rate_limit_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];
    {PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.views_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];
    {PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.heartbeat_period_millis_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::RateLimit>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StreamTasksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.StreamTasksRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.views_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rate_limit_ != nullptr);
    _impl_.rate_limit_->Clear();
  }
  _impl_.heartbeat_period_millis_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StreamTasksRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.StreamTasksRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.rate_limit_, _impl_.rate_limit_->GetCachedSize(), target, stream);
  }

  // repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];
  {
    std::size_t byte_size = _impl_._views_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(2, _internal_views(),
                                       byte_size, target);
    }
  }

  // uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];
  if (this->_internal_heartbeat_period_millis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_heartbeat_period_millis(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.StreamTasksRequest)
  return target;
}

::size_t StreamTasksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.StreamTasksRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_views_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_views().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._views_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // .anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rate_limit_);
  }

  // uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];
  if (this->_internal_heartbeat_period_millis() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_heartbeat_period_millis());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StreamTasksRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamTasksRequest*>(&to_msg);
  auto& from = static_cast<const StreamTasksRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.StreamTasksRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_views()->MergeFrom(from._internal_views());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rate_limit_ != nullptr);
    if (_this->_impl_.rate_limit_ == nullptr) {
      _this->_impl_.rate_limit_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::RateLimit>(arena, *from._impl_.rate_limit_);
    } else {
      _this->_impl_.rate_limit_->MergeFrom(*from._impl_.rate_limit_);
    }
  }
  if (from._internal_heartbeat_period_millis() != 0) {
    _this->_impl_.heartbeat_period_millis_ = from._impl_.heartbeat_period_millis_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamTasksRequest::CopyFrom(const StreamTasksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.StreamTasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamTasksRequest::InternalSwap(StreamTasksRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.views_.InternalSwap(&other->_impl_.views_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.heartbeat_period_millis_)
      + sizeof(StreamTasksRequest::_impl_.heartbeat_period_millis_)
      - PROTOBUF_FIELD_OFFSET(StreamTasksRequest, _impl_.rate_limit_)>(
          reinterpret_cast<char*>(&_impl_.rate_limit_),
          reinterpret_cast<char*>(&other->_impl_.rate_limit_));
}

::google::protobuf::Metadata StreamTasksRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamTasksResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StreamTasksResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_._has_bits_);
};

void StreamTasksResponse::clear_task_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_event_ != nullptr) _impl_.task_event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StreamTasksResponse::StreamTasksResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.StreamTasksResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamTasksResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::StreamTasksResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StreamTasksResponse::StreamTasksResponse(
    ::google::protobuf::Arena* arena,
    const StreamTasksResponse& from)
    : ::google::protobuf::Message(arena) {
  StreamTasksResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_event_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::TaskEvent>(
                              arena, *from._impl_.task_event_)
                        : nullptr;
  _impl_.heartbeat_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Heartbeat>(
                              arena, *from._impl_.heartbeat_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.StreamTasksResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamTasksResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StreamTasksResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_event_),
           0,
           offsetof(Impl_, heartbeat_) -
               offsetof(Impl_, task_event_) +
               sizeof(Impl_::heartbeat_));
}
StreamTasksResponse::~StreamTasksResponse() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.StreamTasksResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamTasksResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_event_;
  delete _impl_.heartbeat_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StreamTasksResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_._cached_size_),
              false,
          },
          &StreamTasksResponse::MergeImpl,
          &StreamTasksResponse::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> StreamTasksResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StreamTasksResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::StreamTasksResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.taskmanager.v1.Heartbeat heartbeat = 2 [json_name = "heartbeat"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_.heartbeat_)}},
    // .anduril.taskmanager.v1.TaskEvent task_event = 1 [json_name = "taskEvent"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_.task_event_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.taskmanager.v1.TaskEvent task_event = 1 [json_name = "taskEvent"];
    {PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_.task_event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.taskmanager.v1.Heartbeat heartbeat = 2 [json_name = "heartbeat"];
    {PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_.heartbeat_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::TaskEvent>()},
    {::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Heartbeat>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StreamTasksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.StreamTasksResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.task_event_ != nullptr);
      _impl_.task_event_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.heartbeat_ != nullptr);
      _impl_.heartbeat_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StreamTasksResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.StreamTasksResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.taskmanager.v1.TaskEvent task_event = 1 [json_name = "taskEvent"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.task_event_, _impl_.task_event_->GetCachedSize(), target, stream);
  }

  // .anduril.taskmanager.v1.Heartbeat heartbeat = 2 [json_name = "heartbeat"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.heartbeat_, _impl_.heartbeat_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.StreamTasksResponse)
  return target;
}

::size_t StreamTasksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.StreamTasksResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.taskmanager.v1.TaskEvent task_event = 1 [json_name = "taskEvent"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_event_);
    }

    // .anduril.taskmanager.v1.Heartbeat heartbeat = 2 [json_name = "heartbeat"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.heartbeat_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StreamTasksResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamTasksResponse*>(&to_msg);
  auto& from = static_cast<const StreamTasksResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.StreamTasksResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.task_event_ != nullptr);
      if (_this->_impl_.task_event_ == nullptr) {
        _this->_impl_.task_event_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::TaskEvent>(arena, *from._impl_.task_event_);
      } else {
        _this->_impl_.task_event_->MergeFrom(*from._impl_.task_event_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.heartbeat_ != nullptr);
      if (_this->_impl_.heartbeat_ == nullptr) {
        _this->_impl_.heartbeat_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::taskmanager::v1::Heartbeat>(arena, *from._impl_.heartbeat_);
      } else {
        _this->_impl_.heartbeat_->MergeFrom(*from._impl_.heartbeat_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamTasksResponse::CopyFrom(const StreamTasksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.StreamTasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamTasksResponse::InternalSwap(StreamTasksResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_.heartbeat_)
      + sizeof(StreamTasksResponse::_impl_.heartbeat_)
      - PROTOBUF_FIELD_OFFSET(StreamTasksResponse, _impl_.task_event_)>(
          reinterpret_cast<char*>(&_impl_.task_event_),
          reinterpret_cast<char*>(&other->_impl_.task_event_));
}

::google::protobuf::Metadata StreamTasksResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RateLimit::_Internal {
 public:
};

RateLimit::RateLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.RateLimit)
}
RateLimit::RateLimit(
    ::google::protobuf::Arena* arena, const RateLimit& from)
    : RateLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RateLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RateLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_per_task_limit_ms_ = {};
}
RateLimit::~RateLimit() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.RateLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RateLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RateLimit::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RateLimit, _impl_._cached_size_),
              false,
          },
          &RateLimit::MergeImpl,
          &RateLimit::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RateLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RateLimit_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::RateLimit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RateLimit, _impl_.update_per_task_limit_ms_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RateLimit, _impl_.update_per_task_limit_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
    {PROTOBUF_FIELD_OFFSET(RateLimit, _impl_.update_per_task_limit_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RateLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.RateLimit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.update_per_task_limit_ms_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RateLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.RateLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
  if (this->_internal_update_per_task_limit_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_update_per_task_limit_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.RateLimit)
  return target;
}

::size_t RateLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.RateLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 update_per_task_limit_ms = 1 [json_name = "updatePerTaskLimitMs"];
  if (this->_internal_update_per_task_limit_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_update_per_task_limit_ms());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RateLimit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RateLimit*>(&to_msg);
  auto& from = static_cast<const RateLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.RateLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_update_per_task_limit_ms() != 0) {
    _this->_impl_.update_per_task_limit_ms_ = from._impl_.update_per_task_limit_ms_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RateLimit::CopyFrom(const RateLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.RateLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RateLimit::InternalSwap(RateLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.update_per_task_limit_ms_, other->_impl_.update_per_task_limit_ms_);
}

::google::protobuf::Metadata RateLimit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Heartbeat::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Heartbeat>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_);
};

void Heartbeat::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Heartbeat::Heartbeat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.taskmanager.v1.Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::taskmanager::v1::Heartbeat& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Heartbeat::Heartbeat(
    ::google::protobuf::Arena* arena,
    const Heartbeat& from)
    : ::google::protobuf::Message(arena) {
  Heartbeat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.taskmanager.v1.Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Heartbeat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:anduril.taskmanager.v1.Heartbeat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Heartbeat::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.timestamp_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Heartbeat::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._cached_size_),
              false,
          },
          &Heartbeat::MergeImpl,
          &Heartbeat::kDescriptorMethods,
          &descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Heartbeat::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Heartbeat_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::taskmanager::v1::Heartbeat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.taskmanager.v1.Heartbeat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Heartbeat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.taskmanager.v1.Heartbeat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.timestamp_, _impl_.timestamp_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.taskmanager.v1.Heartbeat)
  return target;
}

::size_t Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.taskmanager.v1.Heartbeat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.timestamp_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Heartbeat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Heartbeat*>(&to_msg);
  auto& from = static_cast<const Heartbeat&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.taskmanager.v1.Heartbeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
    if (_this->_impl_.timestamp_ == nullptr) {
      _this->_impl_.timestamp_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
    } else {
      _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.taskmanager.v1.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Heartbeat::InternalSwap(Heartbeat* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace taskmanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2ftaskmanager_2fv1_2ftask_5fmanager_5fapi_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
