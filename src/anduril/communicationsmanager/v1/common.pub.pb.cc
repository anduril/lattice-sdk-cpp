// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/communicationsmanager/v1/common.pub.proto

#include "anduril/communicationsmanager/v1/common.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace communicationsmanager {
namespace v1 {

inline constexpr Source::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : source_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Source::Source(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceDefaultTypeInternal() {}
  union {
    Source _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceDefaultTypeInternal _Source_default_instance_;

inline constexpr Destination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : destination_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Destination::Destination(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DestinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DestinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DestinationDefaultTypeInternal() {}
  union {
    Destination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DestinationDefaultTypeInternal _Destination_default_instance_;

inline constexpr CommunicationsManagerError::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommunicationsManagerError::CommunicationsManagerError(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommunicationsManagerErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicationsManagerErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicationsManagerErrorDefaultTypeInternal() {}
  union {
    CommunicationsManagerError _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicationsManagerErrorDefaultTypeInternal _CommunicationsManagerError_default_instance_;

inline constexpr OutboundRuleSourceDestination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        destinations_{},
        source_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OutboundRuleSourceDestination::OutboundRuleSourceDestination(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OutboundRuleSourceDestinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutboundRuleSourceDestinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutboundRuleSourceDestinationDefaultTypeInternal() {}
  union {
    OutboundRuleSourceDestination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutboundRuleSourceDestinationDefaultTypeInternal _OutboundRuleSourceDestination_default_instance_;

inline constexpr InboundRuleSourceDestination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sources_{},
        destination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR InboundRuleSourceDestination::InboundRuleSourceDestination(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InboundRuleSourceDestinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InboundRuleSourceDestinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InboundRuleSourceDestinationDefaultTypeInternal() {}
  union {
    InboundRuleSourceDestination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InboundRuleSourceDestinationDefaultTypeInternal _InboundRuleSourceDestination_default_instance_;

inline constexpr SourceDestinationDirectionalControl::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : source_destination_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SourceDestinationDirectionalControl::SourceDestinationDirectionalControl(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SourceDestinationDirectionalControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceDestinationDirectionalControlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceDestinationDirectionalControlDefaultTypeInternal() {}
  union {
    SourceDestinationDirectionalControl _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceDestinationDirectionalControlDefaultTypeInternal _SourceDestinationDirectionalControl_default_instance_;

inline constexpr BlobDistributionRuleDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        blob_filters_{},
        blob_filter_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlobDistributionRuleDetails::BlobDistributionRuleDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobDistributionRuleDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobDistributionRuleDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobDistributionRuleDetailsDefaultTypeInternal() {}
  union {
    BlobDistributionRuleDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobDistributionRuleDetailsDefaultTypeInternal _BlobDistributionRuleDetails_default_instance_;

inline constexpr IntegrationRule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : integration_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR IntegrationRule::IntegrationRule(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IntegrationRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntegrationRuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntegrationRuleDefaultTypeInternal() {}
  union {
    IntegrationRule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntegrationRuleDefaultTypeInternal _IntegrationRule_default_instance_;

inline constexpr EntityDistributionRuleDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_filter_{nullptr},
        entity_filter_selection_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR EntityDistributionRuleDetails::EntityDistributionRuleDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EntityDistributionRuleDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityDistributionRuleDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityDistributionRuleDetailsDefaultTypeInternal() {}
  union {
    EntityDistributionRuleDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityDistributionRuleDetailsDefaultTypeInternal _EntityDistributionRuleDetails_default_instance_;

inline constexpr DistributionRule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sources_{},
        rule_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_{nullptr},
        destination_{nullptr},
        source_destination_directional_control_{nullptr},
        enabled_{false},
        priority_{0u},
        version_num_{::int64_t{0}},
        details_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR DistributionRule::DistributionRule(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DistributionRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistributionRuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistributionRuleDefaultTypeInternal() {}
  union {
    DistributionRule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistributionRuleDefaultTypeInternal _DistributionRule_default_instance_;

inline constexpr CrossDomainRule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cds_destination_{nullptr},
        details_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CrossDomainRule::CrossDomainRule(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CrossDomainRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CrossDomainRuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CrossDomainRuleDefaultTypeInternal() {}
  union {
    CrossDomainRule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CrossDomainRuleDefaultTypeInternal _CrossDomainRule_default_instance_;

inline constexpr Rule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rule_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_modified_by_user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_num_{::int64_t{0}},
        last_modified_time_unix_epoch_ms_{::int64_t{0}},
        enabled_{false},
        type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Rule::Rule(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuleDefaultTypeInternal() {}
  union {
    Rule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuleDefaultTypeInternal _Rule_default_instance_;

inline constexpr DistributionRuleEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{nullptr},
        distribution_rule_{nullptr},
        event_type_{static_cast< ::anduril::communicationsmanager::v1::EventType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DistributionRuleEvent::DistributionRuleEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DistributionRuleEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistributionRuleEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistributionRuleEventDefaultTypeInternal() {}
  union {
    DistributionRuleEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistributionRuleEventDefaultTypeInternal _DistributionRuleEvent_default_instance_;

inline constexpr RuleEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{nullptr},
        rule_{nullptr},
        event_type_{static_cast< ::anduril::communicationsmanager::v1::EventType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RuleEvent::RuleEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RuleEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuleEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuleEventDefaultTypeInternal() {}
  union {
    RuleEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuleEventDefaultTypeInternal _RuleEvent_default_instance_;
}  // namespace v1
}  // namespace communicationsmanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRuleEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRuleEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRuleEvent, _impl_.event_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRuleEvent, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRuleEvent, _impl_.distribution_rule_),
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RuleEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RuleEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RuleEvent, _impl_.event_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RuleEvent, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RuleEvent, _impl_.rule_),
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_.rule_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_.version_num_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_.enabled_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_.name_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_.last_modified_by_user_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_.last_modified_time_unix_epoch_ms_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::IntegrationRule, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::IntegrationRule, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::IntegrationRule, _impl_.integration_name_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::IntegrationRule, _impl_.host_id_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::IntegrationRule, _impl_.details_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.rule_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.enabled_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.sources_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.destination_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.priority_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.version_num_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.source_destination_directional_control_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_.details_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl, _impl_.source_destination_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::OutboundRuleSourceDestination, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::OutboundRuleSourceDestination, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::OutboundRuleSourceDestination, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::OutboundRuleSourceDestination, _impl_.destinations_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::InboundRuleSourceDestination, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::InboundRuleSourceDestination, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::InboundRuleSourceDestination, _impl_.sources_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::InboundRuleSourceDestination, _impl_.destination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Source, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Source, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Source, _impl_.source_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Destination, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Destination, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Destination, _impl_.destination_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails, _impl_.entity_filter_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails, _impl_.entity_filter_selection_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::BlobDistributionRuleDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::BlobDistributionRuleDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::BlobDistributionRuleDetails, _impl_.blob_filter_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::BlobDistributionRuleDetails, _impl_.blob_filters_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CommunicationsManagerError, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CommunicationsManagerError, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CrossDomainRule, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CrossDomainRule, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CrossDomainRule, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CrossDomainRule, _impl_.cds_destination_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CrossDomainRule, _impl_.details_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::anduril::communicationsmanager::v1::DistributionRuleEvent)},
        {14, 25, -1, sizeof(::anduril::communicationsmanager::v1::RuleEvent)},
        {28, -1, -1, sizeof(::anduril::communicationsmanager::v1::Rule)},
        {46, -1, -1, sizeof(::anduril::communicationsmanager::v1::IntegrationRule)},
        {59, 81, -1, sizeof(::anduril::communicationsmanager::v1::DistributionRule)},
        {94, -1, -1, sizeof(::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl)},
        {105, 115, -1, sizeof(::anduril::communicationsmanager::v1::OutboundRuleSourceDestination)},
        {117, 127, -1, sizeof(::anduril::communicationsmanager::v1::InboundRuleSourceDestination)},
        {129, -1, -1, sizeof(::anduril::communicationsmanager::v1::Source)},
        {141, -1, -1, sizeof(::anduril::communicationsmanager::v1::Destination)},
        {153, 165, -1, sizeof(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails)},
        {168, 178, -1, sizeof(::anduril::communicationsmanager::v1::BlobDistributionRuleDetails)},
        {180, -1, -1, sizeof(::anduril::communicationsmanager::v1::CommunicationsManagerError)},
        {189, 200, -1, sizeof(::anduril::communicationsmanager::v1::CrossDomainRule)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::communicationsmanager::v1::_DistributionRuleEvent_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_RuleEvent_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_Rule_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_IntegrationRule_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_DistributionRule_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_SourceDestinationDirectionalControl_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_OutboundRuleSourceDestination_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_InboundRuleSourceDestination_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_Source_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_Destination_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_EntityDistributionRuleDetails_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_BlobDistributionRuleDetails_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_CommunicationsManagerError_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_CrossDomainRule_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n1anduril/communicationsmanager/v1/commo"
    "n.pub.proto\022 anduril.communicationsmanag"
    "er.v1\032!anduril/blobs/v1/filter.pub.proto"
    "\0327anduril/communicationsmanager/v1/cross"
    "_domain.pub.proto\0321anduril/communication"
    "smanager/v1/entity.pub.proto\032)anduril/en"
    "titymanager/v1/filter.pub.proto\0321anduril"
    "/entitymanager/v1/filter_dynamic.pub.pro"
    "to\032\037google/protobuf/timestamp.proto\"\364\001\n\025"
    "DistributionRuleEvent\022J\n\nevent_type\030\001 \001("
    "\0162+.anduril.communicationsmanager.v1.Eve"
    "ntTypeR\teventType\022.\n\004time\030\002 \001(\0132\032.google"
    ".protobuf.TimestampR\004time\022_\n\021distributio"
    "n_rule\030\003 \001(\01322.anduril.communicationsman"
    "ager.v1.DistributionRuleR\020distributionRu"
    "le\"\303\001\n\tRuleEvent\022J\n\nevent_type\030\001 \001(\0162+.a"
    "nduril.communicationsmanager.v1.EventTyp"
    "eR\teventType\022.\n\004time\030\002 \001(\0132\032.google.prot"
    "obuf.TimestampR\004time\022:\n\004rule\030\003 \001(\0132&.and"
    "uril.communicationsmanager.v1.RuleR\004rule"
    "\"\224\004\n\004Rule\022\027\n\007rule_id\030\001 \001(\tR\006ruleId\022\037\n\013ve"
    "rsion_num\030\002 \001(\003R\nversionNum\022\030\n\007enabled\030\003"
    " \001(\010R\007enabled\022\022\n\004name\030\004 \001(\tR\004name\022a\n\021dis"
    "tribution_rule\030\005 \001(\01322.anduril.communica"
    "tionsmanager.v1.DistributionRuleH\000R\020dist"
    "ributionRule\022^\n\020integration_rule\030\006 \001(\01321"
    ".anduril.communicationsmanager.v1.Integr"
    "ationRuleH\000R\017integrationRule\022_\n\021cross_do"
    "main_rule\030\t \001(\01321.anduril.communications"
    "manager.v1.CrossDomainRuleH\000R\017crossDomai"
    "nRule\0221\n\025last_modified_by_user\030\007 \001(\tR\022la"
    "stModifiedByUser\022E\n last_modified_time_u"
    "nix_epoch_ms\030\010 \001(\003R\033lastModifiedTimeUnix"
    "EpochMsB\006\n\004type\"\357\002\n\017IntegrationRule\022)\n\020i"
    "ntegration_name\030\001 \001(\tR\017integrationName\022\027"
    "\n\007host_id\030\002 \001(\tR\006hostId\022\207\001\n\037entity_integ"
    "ration_rule_details\030\003 \001(\0132>.anduril.comm"
    "unicationsmanager.v1.EntityIntegrationRu"
    "leDetailsH\000R\034entityIntegrationRuleDetail"
    "s\022\202\001\n\035blob_integration_rule_details\030\004 \001("
    "\0132=.anduril.communicationsmanager.v1.Blo"
    "bDistributionRuleDetailsH\000R\032blobIntegrat"
    "ionRuleDetailsB\t\n\007details\"\257\006\n\020Distributi"
    "onRule\022\027\n\007rule_id\030\001 \001(\tR\006ruleId\022\034\n\007versi"
    "on\030\002 \001(\tB\002\030\001R\007version\022\030\n\007enabled\030\003 \001(\010R\007"
    "enabled\022D\n\006source\030\004 \001(\0132(.anduril.commun"
    "icationsmanager.v1.SourceB\002\030\001R\006source\022F\n"
    "\007sources\030\010 \003(\0132(.anduril.communicationsm"
    "anager.v1.SourceB\002\030\001R\007sources\022S\n\013destina"
    "tion\030\005 \001(\0132-.anduril.communicationsmanag"
    "er.v1.DestinationB\002\030\001R\013destination\022h\n\016en"
    "tity_details\030\006 \001(\0132\?.anduril.communicati"
    "onsmanager.v1.EntityDistributionRuleDeta"
    "ilsH\000R\rentityDetails\022b\n\014blob_details\030\r \001"
    "(\0132=.anduril.communicationsmanager.v1.Bl"
    "obDistributionRuleDetailsH\000R\013blobDetails"
    "\022\032\n\010priority\030\007 \001(\rR\010priority\022 \n\013descript"
    "ion\030\t \001(\tR\013description\022\022\n\004name\030\n \001(\tR\004na"
    "me\022\037\n\013version_num\030\013 \001(\003R\nversionNum\022\232\001\n&"
    "source_destination_directional_control\030\014"
    " \001(\0132E.anduril.communicationsmanager.v1."
    "SourceDestinationDirectionalControlR#sou"
    "rceDestinationDirectionalControlB\t\n\007deta"
    "ils\"\322\002\n#SourceDestinationDirectionalCont"
    "rol\022\207\001\n\037inbound_rule_source_destination\030"
    "\001 \001(\0132>.anduril.communicationsmanager.v1"
    ".InboundRuleSourceDestinationH\000R\034inbound"
    "RuleSourceDestination\022\212\001\n outbound_rule_"
    "source_destination\030\002 \001(\0132\?.anduril.commu"
    "nicationsmanager.v1.OutboundRuleSourceDe"
    "stinationH\000R\035outboundRuleSourceDestinati"
    "onB\024\n\022source_destination\"\264\001\n\035OutboundRul"
    "eSourceDestination\022@\n\006source\030\001 \001(\0132(.and"
    "uril.communicationsmanager.v1.SourceR\006so"
    "urce\022Q\n\014destinations\030\002 \003(\0132-.anduril.com"
    "municationsmanager.v1.DestinationR\014desti"
    "nations\"\263\001\n\034InboundRuleSourceDestination"
    "\022B\n\007sources\030\001 \003(\0132(.anduril.communicatio"
    "nsmanager.v1.SourceR\007sources\022O\n\013destinat"
    "ion\030\002 \001(\0132-.anduril.communicationsmanage"
    "r.v1.DestinationR\013destination\"b\n\006Source\022"
    "\037\n\010asset_id\030\001 \001(\tB\002\030\001H\000R\007assetId\022\022\n\003all\030"
    "\002 \001(\010H\000R\003all\022\031\n\007host_id\030\003 \001(\tH\000R\006hostIdB"
    "\010\n\006source\"l\n\013Destination\022\037\n\010asset_id\030\001 \001"
    "(\tB\002\030\001H\000R\007assetId\022\031\n\007host_id\030\002 \001(\tH\000R\006ho"
    "stId\022\022\n\003all\030\003 \001(\010H\000R\003allB\r\n\013destination\""
    "\261\002\n\035EntityDistributionRuleDetails\022H\n\rent"
    "ity_filter\030\001 \001(\0132#.anduril.entitymanager"
    ".v1.StatementR\014entityFilter\022P\n\020static_st"
    "atement\030\002 \001(\0132#.anduril.entitymanager.v1"
    ".StatementH\000R\017staticStatement\022Y\n\021dynamic"
    "_statement\030\003 \001(\0132*.anduril.entitymanager"
    ".v1.DynamicStatementH\000R\020dynamicStatement"
    "B\031\n\027entity_filter_selection\"\237\001\n\033BlobDist"
    "ributionRuleDetails\022@\n\013blob_filter\030\001 \001(\013"
    "2\033.anduril.blobs.v1.StatementB\002\030\001R\nblobF"
    "ilter\022>\n\014blob_filters\030\002 \003(\0132\033.anduril.bl"
    "obs.v1.StatementR\013blobFilters\"6\n\032Communi"
    "cationsManagerError\022\030\n\007message\030\001 \001(\tR\007me"
    "ssage\"\341\001\n\017CrossDomainRule\022h\n\016entity_deta"
    "ils\030\001 \001(\0132\?.anduril.communicationsmanage"
    "r.v1.EntityDistributionRuleDetailsH\000R\ren"
    "tityDetails\022Y\n\017cds_destination\030\002 \001(\01320.a"
    "nduril.communicationsmanager.v1.CdsDesti"
    "nationR\016cdsDestinationB\t\n\007details*\206\001\n\tEv"
    "entType\022\026\n\022EVENT_TYPE_INVALID\020\000\022\026\n\022EVENT"
    "_TYPE_CREATED\020\001\022\025\n\021EVENT_TYPE_UPDATE\020\002\022\026"
    "\n\022EVENT_TYPE_DELETED\020\003\022\032\n\026EVENT_TYPE_PRE"
    "EXISTING\020\004B\241\002\n$com.anduril.communication"
    "smanager.v1B\016CommonPubProtoP\001ZGghe.andur"
    "il.dev/anduril/andurilapis-go/anduril/co"
    "mmunicationsmanager/v1\242\002\003ACX\252\002 Anduril.C"
    "ommunicationsmanager.V1\312\002 Anduril\\Commun"
    "icationsmanager\\V1\342\002,Anduril\\Communicati"
    "onsmanager\\V1\\GPBMetadata\352\002\"Anduril::Com"
    "municationsmanager::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_deps[6] =
    {
        &::descriptor_table_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto,
        &::descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto,
        &::descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_5fdynamic_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto = {
    false,
    false,
    4630,
    descriptor_table_protodef_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto,
    "anduril/communicationsmanager/v1/common.pub.proto",
    &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
    descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_deps,
    6,
    14,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto,
    file_level_service_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto(&descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto);
namespace anduril {
namespace communicationsmanager {
namespace v1 {
const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EventType_internal_data_[] = {
    327680u, 0u, };
bool EventType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class DistributionRuleEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<DistributionRuleEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& time(const DistributionRuleEvent* msg);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::communicationsmanager::v1::DistributionRule& distribution_rule(const DistributionRuleEvent* msg);
  static void set_has_distribution_rule(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& DistributionRuleEvent::_Internal::time(const DistributionRuleEvent* msg) {
  return *msg->_impl_.time_;
}
const ::anduril::communicationsmanager::v1::DistributionRule& DistributionRuleEvent::_Internal::distribution_rule(const DistributionRuleEvent* msg) {
  return *msg->_impl_.distribution_rule_;
}
void DistributionRuleEvent::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DistributionRuleEvent::DistributionRuleEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.DistributionRuleEvent)
}
inline PROTOBUF_NDEBUG_INLINE DistributionRuleEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DistributionRuleEvent::DistributionRuleEvent(
    ::google::protobuf::Arena* arena,
    const DistributionRuleEvent& from)
    : ::google::protobuf::Message(arena) {
  DistributionRuleEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.time_)
                : nullptr;
  _impl_.distribution_rule_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::DistributionRule>(arena, *from._impl_.distribution_rule_)
                : nullptr;
  _impl_.event_type_ = from._impl_.event_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.DistributionRuleEvent)
}
inline PROTOBUF_NDEBUG_INLINE DistributionRuleEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DistributionRuleEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, event_type_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::event_type_));
}
DistributionRuleEvent::~DistributionRuleEvent() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.DistributionRuleEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DistributionRuleEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.time_;
  delete _impl_.distribution_rule_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DistributionRuleEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.DistributionRuleEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.distribution_rule_ != nullptr);
      _impl_.distribution_rule_->Clear();
    }
  }
  _impl_.event_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DistributionRuleEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> DistributionRuleEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DistributionRuleEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DistributionRuleEvent, _impl_.event_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.event_type_)}},
    // .google.protobuf.Timestamp time = 2 [json_name = "time"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.time_)}},
    // .anduril.communicationsmanager.v1.DistributionRule distribution_rule = 3 [json_name = "distributionRule"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.distribution_rule_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
    {PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.event_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp time = 2 [json_name = "time"];
    {PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.DistributionRule distribution_rule = 3 [json_name = "distributionRule"];
    {PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.distribution_rule_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::DistributionRule>()},
  }}, {{
  }},
};

::uint8_t* DistributionRuleEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.DistributionRuleEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
  if (this->_internal_event_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_event_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 2 [json_name = "time"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::time(this),
        _Internal::time(this).GetCachedSize(), target, stream);
  }

  // .anduril.communicationsmanager.v1.DistributionRule distribution_rule = 3 [json_name = "distributionRule"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::distribution_rule(this),
        _Internal::distribution_rule(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.DistributionRuleEvent)
  return target;
}

::size_t DistributionRuleEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.DistributionRuleEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp time = 2 [json_name = "time"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.time_);
    }

    // .anduril.communicationsmanager.v1.DistributionRule distribution_rule = 3 [json_name = "distributionRule"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.distribution_rule_);
    }

  }
  // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
  if (this->_internal_event_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_event_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DistributionRuleEvent::_class_data_ = {
    DistributionRuleEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DistributionRuleEvent::GetClassData() const {
  return &_class_data_;
}

void DistributionRuleEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DistributionRuleEvent*>(&to_msg);
  auto& from = static_cast<const DistributionRuleEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.DistributionRuleEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_time());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_distribution_rule()->::anduril::communicationsmanager::v1::DistributionRule::MergeFrom(
          from._internal_distribution_rule());
    }
  }
  if (from._internal_event_type() != 0) {
    _this->_internal_set_event_type(from._internal_event_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistributionRuleEvent::CopyFrom(const DistributionRuleEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.DistributionRuleEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DistributionRuleEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DistributionRuleEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DistributionRuleEvent::InternalSwap(DistributionRuleEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.event_type_)
      + sizeof(DistributionRuleEvent::_impl_.event_type_)
      - PROTOBUF_FIELD_OFFSET(DistributionRuleEvent, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata DistributionRuleEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[0]);
}
// ===================================================================

class RuleEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<RuleEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& time(const RuleEvent* msg);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::communicationsmanager::v1::Rule& rule(const RuleEvent* msg);
  static void set_has_rule(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& RuleEvent::_Internal::time(const RuleEvent* msg) {
  return *msg->_impl_.time_;
}
const ::anduril::communicationsmanager::v1::Rule& RuleEvent::_Internal::rule(const RuleEvent* msg) {
  return *msg->_impl_.rule_;
}
void RuleEvent::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RuleEvent::RuleEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.RuleEvent)
}
inline PROTOBUF_NDEBUG_INLINE RuleEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RuleEvent::RuleEvent(
    ::google::protobuf::Arena* arena,
    const RuleEvent& from)
    : ::google::protobuf::Message(arena) {
  RuleEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.time_)
                : nullptr;
  _impl_.rule_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::Rule>(arena, *from._impl_.rule_)
                : nullptr;
  _impl_.event_type_ = from._impl_.event_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.RuleEvent)
}
inline PROTOBUF_NDEBUG_INLINE RuleEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RuleEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, event_type_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::event_type_));
}
RuleEvent::~RuleEvent() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.RuleEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RuleEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.time_;
  delete _impl_.rule_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RuleEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.RuleEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rule_ != nullptr);
      _impl_.rule_->Clear();
    }
  }
  _impl_.event_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RuleEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> RuleEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RuleEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RuleEvent, _impl_.event_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.event_type_)}},
    // .google.protobuf.Timestamp time = 2 [json_name = "time"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.time_)}},
    // .anduril.communicationsmanager.v1.Rule rule = 3 [json_name = "rule"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.rule_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
    {PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.event_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp time = 2 [json_name = "time"];
    {PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.Rule rule = 3 [json_name = "rule"];
    {PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.rule_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Rule>()},
  }}, {{
  }},
};

::uint8_t* RuleEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.RuleEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
  if (this->_internal_event_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_event_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 2 [json_name = "time"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::time(this),
        _Internal::time(this).GetCachedSize(), target, stream);
  }

  // .anduril.communicationsmanager.v1.Rule rule = 3 [json_name = "rule"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::rule(this),
        _Internal::rule(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.RuleEvent)
  return target;
}

::size_t RuleEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.RuleEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp time = 2 [json_name = "time"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.time_);
    }

    // .anduril.communicationsmanager.v1.Rule rule = 3 [json_name = "rule"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rule_);
    }

  }
  // .anduril.communicationsmanager.v1.EventType event_type = 1 [json_name = "eventType"];
  if (this->_internal_event_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_event_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RuleEvent::_class_data_ = {
    RuleEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RuleEvent::GetClassData() const {
  return &_class_data_;
}

void RuleEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RuleEvent*>(&to_msg);
  auto& from = static_cast<const RuleEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.RuleEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_time());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rule()->::anduril::communicationsmanager::v1::Rule::MergeFrom(
          from._internal_rule());
    }
  }
  if (from._internal_event_type() != 0) {
    _this->_internal_set_event_type(from._internal_event_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RuleEvent::CopyFrom(const RuleEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.RuleEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RuleEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RuleEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RuleEvent::InternalSwap(RuleEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.event_type_)
      + sizeof(RuleEvent::_impl_.event_type_)
      - PROTOBUF_FIELD_OFFSET(RuleEvent, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata RuleEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[1]);
}
// ===================================================================

class Rule::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Rule, _impl_._oneof_case_);
  static const ::anduril::communicationsmanager::v1::DistributionRule& distribution_rule(const Rule* msg);
  static const ::anduril::communicationsmanager::v1::IntegrationRule& integration_rule(const Rule* msg);
  static const ::anduril::communicationsmanager::v1::CrossDomainRule& cross_domain_rule(const Rule* msg);
};

const ::anduril::communicationsmanager::v1::DistributionRule& Rule::_Internal::distribution_rule(const Rule* msg) {
  return *msg->_impl_.type_.distribution_rule_;
}
const ::anduril::communicationsmanager::v1::IntegrationRule& Rule::_Internal::integration_rule(const Rule* msg) {
  return *msg->_impl_.type_.integration_rule_;
}
const ::anduril::communicationsmanager::v1::CrossDomainRule& Rule::_Internal::cross_domain_rule(const Rule* msg) {
  return *msg->_impl_.type_.cross_domain_rule_;
}
void Rule::set_allocated_distribution_rule(::anduril::communicationsmanager::v1::DistributionRule* distribution_rule) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (distribution_rule) {
    ::google::protobuf::Arena* submessage_arena = distribution_rule->GetArena();
    if (message_arena != submessage_arena) {
      distribution_rule = ::google::protobuf::internal::GetOwnedMessage(message_arena, distribution_rule, submessage_arena);
    }
    set_has_distribution_rule();
    _impl_.type_.distribution_rule_ = distribution_rule;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.Rule.distribution_rule)
}
void Rule::set_allocated_integration_rule(::anduril::communicationsmanager::v1::IntegrationRule* integration_rule) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (integration_rule) {
    ::google::protobuf::Arena* submessage_arena = integration_rule->GetArena();
    if (message_arena != submessage_arena) {
      integration_rule = ::google::protobuf::internal::GetOwnedMessage(message_arena, integration_rule, submessage_arena);
    }
    set_has_integration_rule();
    _impl_.type_.integration_rule_ = integration_rule;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.Rule.integration_rule)
}
void Rule::set_allocated_cross_domain_rule(::anduril::communicationsmanager::v1::CrossDomainRule* cross_domain_rule) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (cross_domain_rule) {
    ::google::protobuf::Arena* submessage_arena = cross_domain_rule->GetArena();
    if (message_arena != submessage_arena) {
      cross_domain_rule = ::google::protobuf::internal::GetOwnedMessage(message_arena, cross_domain_rule, submessage_arena);
    }
    set_has_cross_domain_rule();
    _impl_.type_.cross_domain_rule_ = cross_domain_rule;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.Rule.cross_domain_rule)
}
Rule::Rule(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.Rule)
}
inline PROTOBUF_NDEBUG_INLINE Rule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : rule_id_(arena, from.rule_id_),
        name_(arena, from.name_),
        last_modified_by_user_(arena, from.last_modified_by_user_),
        type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Rule::Rule(
    ::google::protobuf::Arena* arena,
    const Rule& from)
    : ::google::protobuf::Message(arena) {
  Rule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_num_),
           offsetof(Impl_, enabled_) -
               offsetof(Impl_, version_num_) +
               sizeof(Impl_::enabled_));
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kDistributionRule:
        _impl_.type_.distribution_rule_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::DistributionRule>(arena, *from._impl_.type_.distribution_rule_);
        break;
      case kIntegrationRule:
        _impl_.type_.integration_rule_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::IntegrationRule>(arena, *from._impl_.type_.integration_rule_);
        break;
      case kCrossDomainRule:
        _impl_.type_.cross_domain_rule_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::CrossDomainRule>(arena, *from._impl_.type_.cross_domain_rule_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.Rule)
}
inline PROTOBUF_NDEBUG_INLINE Rule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rule_id_(arena),
        name_(arena),
        last_modified_by_user_(arena),
        type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Rule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_num_),
           0,
           offsetof(Impl_, enabled_) -
               offsetof(Impl_, version_num_) +
               sizeof(Impl_::enabled_));
}
Rule::~Rule() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.Rule)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Rule::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rule_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.last_modified_by_user_.Destroy();
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void Rule::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.Rule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kDistributionRule: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.distribution_rule_;
      }
      break;
    }
    case kIntegrationRule: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.integration_rule_;
      }
      break;
    }
    case kCrossDomainRule: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.cross_domain_rule_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Rule::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.Rule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rule_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.last_modified_by_user_.ClearToEmpty();
  ::memset(&_impl_.version_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enabled_) -
      reinterpret_cast<char*>(&_impl_.version_num_)) + sizeof(_impl_.enabled_));
  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Rule::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 3, 86, 2> Rule::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Rule_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 last_modified_time_unix_epoch_ms = 8 [json_name = "lastModifiedTimeUnixEpochMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Rule, _impl_.last_modified_time_unix_epoch_ms_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.last_modified_time_unix_epoch_ms_)}},
    // string rule_id = 1 [json_name = "ruleId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.rule_id_)}},
    // int64 version_num = 2 [json_name = "versionNum"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Rule, _impl_.version_num_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.version_num_)}},
    // bool enabled = 3 [json_name = "enabled"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Rule, _impl_.enabled_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.enabled_)}},
    // string name = 4 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string last_modified_by_user = 7 [json_name = "lastModifiedByUser"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.last_modified_by_user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string rule_id = 1 [json_name = "ruleId"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.rule_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 version_num = 2 [json_name = "versionNum"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.version_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool enabled = 3 [json_name = "enabled"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string name = 4 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.communicationsmanager.v1.DistributionRule distribution_rule = 5 [json_name = "distributionRule"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.type_.distribution_rule_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.IntegrationRule integration_rule = 6 [json_name = "integrationRule"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.type_.integration_rule_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string last_modified_by_user = 7 [json_name = "lastModifiedByUser"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.last_modified_by_user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 last_modified_time_unix_epoch_ms = 8 [json_name = "lastModifiedTimeUnixEpochMs"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.last_modified_time_unix_epoch_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .anduril.communicationsmanager.v1.CrossDomainRule cross_domain_rule = 9 [json_name = "crossDomainRule"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.type_.cross_domain_rule_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::DistributionRule>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::IntegrationRule>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::CrossDomainRule>()},
  }}, {{
    "\45\7\0\0\4\0\0\25\0\0\0\0\0\0\0\0"
    "anduril.communicationsmanager.v1.Rule"
    "rule_id"
    "name"
    "last_modified_by_user"
  }},
};

::uint8_t* Rule::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.Rule)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string rule_id = 1 [json_name = "ruleId"];
  if (!this->_internal_rule_id().empty()) {
    const std::string& _s = this->_internal_rule_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.Rule.rule_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 version_num = 2 [json_name = "versionNum"];
  if (this->_internal_version_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_version_num(), target);
  }

  // bool enabled = 3 [json_name = "enabled"];
  if (this->_internal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enabled(), target);
  }

  // string name = 4 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.Rule.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  switch (type_case()) {
    case kDistributionRule: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::distribution_rule(this),
          _Internal::distribution_rule(this).GetCachedSize(), target, stream);
      break;
    }
    case kIntegrationRule: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::integration_rule(this),
          _Internal::integration_rule(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // string last_modified_by_user = 7 [json_name = "lastModifiedByUser"];
  if (!this->_internal_last_modified_by_user().empty()) {
    const std::string& _s = this->_internal_last_modified_by_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.Rule.last_modified_by_user");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // int64 last_modified_time_unix_epoch_ms = 8 [json_name = "lastModifiedTimeUnixEpochMs"];
  if (this->_internal_last_modified_time_unix_epoch_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_last_modified_time_unix_epoch_ms(), target);
  }

  // .anduril.communicationsmanager.v1.CrossDomainRule cross_domain_rule = 9 [json_name = "crossDomainRule"];
  if (type_case() == kCrossDomainRule) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::cross_domain_rule(this),
        _Internal::cross_domain_rule(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.Rule)
  return target;
}

::size_t Rule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.Rule)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rule_id = 1 [json_name = "ruleId"];
  if (!this->_internal_rule_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rule_id());
  }

  // string name = 4 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string last_modified_by_user = 7 [json_name = "lastModifiedByUser"];
  if (!this->_internal_last_modified_by_user().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_modified_by_user());
  }

  // int64 version_num = 2 [json_name = "versionNum"];
  if (this->_internal_version_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_version_num());
  }

  // int64 last_modified_time_unix_epoch_ms = 8 [json_name = "lastModifiedTimeUnixEpochMs"];
  if (this->_internal_last_modified_time_unix_epoch_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_last_modified_time_unix_epoch_ms());
  }

  // bool enabled = 3 [json_name = "enabled"];
  if (this->_internal_enabled() != 0) {
    total_size += 2;
  }

  switch (type_case()) {
    // .anduril.communicationsmanager.v1.DistributionRule distribution_rule = 5 [json_name = "distributionRule"];
    case kDistributionRule: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.distribution_rule_);
      break;
    }
    // .anduril.communicationsmanager.v1.IntegrationRule integration_rule = 6 [json_name = "integrationRule"];
    case kIntegrationRule: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.integration_rule_);
      break;
    }
    // .anduril.communicationsmanager.v1.CrossDomainRule cross_domain_rule = 9 [json_name = "crossDomainRule"];
    case kCrossDomainRule: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.cross_domain_rule_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Rule::_class_data_ = {
    Rule::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Rule::GetClassData() const {
  return &_class_data_;
}

void Rule::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Rule*>(&to_msg);
  auto& from = static_cast<const Rule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.Rule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rule_id().empty()) {
    _this->_internal_set_rule_id(from._internal_rule_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_last_modified_by_user().empty()) {
    _this->_internal_set_last_modified_by_user(from._internal_last_modified_by_user());
  }
  if (from._internal_version_num() != 0) {
    _this->_internal_set_version_num(from._internal_version_num());
  }
  if (from._internal_last_modified_time_unix_epoch_ms() != 0) {
    _this->_internal_set_last_modified_time_unix_epoch_ms(from._internal_last_modified_time_unix_epoch_ms());
  }
  if (from._internal_enabled() != 0) {
    _this->_internal_set_enabled(from._internal_enabled());
  }
  switch (from.type_case()) {
    case kDistributionRule: {
      _this->_internal_mutable_distribution_rule()->::anduril::communicationsmanager::v1::DistributionRule::MergeFrom(
          from._internal_distribution_rule());
      break;
    }
    case kIntegrationRule: {
      _this->_internal_mutable_integration_rule()->::anduril::communicationsmanager::v1::IntegrationRule::MergeFrom(
          from._internal_integration_rule());
      break;
    }
    case kCrossDomainRule: {
      _this->_internal_mutable_cross_domain_rule()->::anduril::communicationsmanager::v1::CrossDomainRule::MergeFrom(
          from._internal_cross_domain_rule());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Rule::CopyFrom(const Rule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.Rule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Rule::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Rule::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Rule::InternalSwap(Rule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rule_id_, &other->_impl_.rule_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_modified_by_user_, &other->_impl_.last_modified_by_user_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Rule, _impl_.enabled_)
      + sizeof(Rule::_impl_.enabled_)
      - PROTOBUF_FIELD_OFFSET(Rule, _impl_.version_num_)>(
          reinterpret_cast<char*>(&_impl_.version_num_),
          reinterpret_cast<char*>(&other->_impl_.version_num_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Rule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[2]);
}
// ===================================================================

class IntegrationRule::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::IntegrationRule, _impl_._oneof_case_);
  static const ::anduril::communicationsmanager::v1::EntityIntegrationRuleDetails& entity_integration_rule_details(const IntegrationRule* msg);
  static const ::anduril::communicationsmanager::v1::BlobDistributionRuleDetails& blob_integration_rule_details(const IntegrationRule* msg);
};

const ::anduril::communicationsmanager::v1::EntityIntegrationRuleDetails& IntegrationRule::_Internal::entity_integration_rule_details(const IntegrationRule* msg) {
  return *msg->_impl_.details_.entity_integration_rule_details_;
}
const ::anduril::communicationsmanager::v1::BlobDistributionRuleDetails& IntegrationRule::_Internal::blob_integration_rule_details(const IntegrationRule* msg) {
  return *msg->_impl_.details_.blob_integration_rule_details_;
}
void IntegrationRule::set_allocated_entity_integration_rule_details(::anduril::communicationsmanager::v1::EntityIntegrationRuleDetails* entity_integration_rule_details) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_details();
  if (entity_integration_rule_details) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(entity_integration_rule_details)->GetArena();
    if (message_arena != submessage_arena) {
      entity_integration_rule_details = ::google::protobuf::internal::GetOwnedMessage(message_arena, entity_integration_rule_details, submessage_arena);
    }
    set_has_entity_integration_rule_details();
    _impl_.details_.entity_integration_rule_details_ = entity_integration_rule_details;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.IntegrationRule.entity_integration_rule_details)
}
void IntegrationRule::clear_entity_integration_rule_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (details_case() == kEntityIntegrationRuleDetails) {
    if (GetArena() == nullptr) {
      delete _impl_.details_.entity_integration_rule_details_;
    }
    clear_has_details();
  }
}
void IntegrationRule::set_allocated_blob_integration_rule_details(::anduril::communicationsmanager::v1::BlobDistributionRuleDetails* blob_integration_rule_details) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_details();
  if (blob_integration_rule_details) {
    ::google::protobuf::Arena* submessage_arena = blob_integration_rule_details->GetArena();
    if (message_arena != submessage_arena) {
      blob_integration_rule_details = ::google::protobuf::internal::GetOwnedMessage(message_arena, blob_integration_rule_details, submessage_arena);
    }
    set_has_blob_integration_rule_details();
    _impl_.details_.blob_integration_rule_details_ = blob_integration_rule_details;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.IntegrationRule.blob_integration_rule_details)
}
IntegrationRule::IntegrationRule(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.IntegrationRule)
}
inline PROTOBUF_NDEBUG_INLINE IntegrationRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : integration_name_(arena, from.integration_name_),
        host_id_(arena, from.host_id_),
        details_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

IntegrationRule::IntegrationRule(
    ::google::protobuf::Arena* arena,
    const IntegrationRule& from)
    : ::google::protobuf::Message(arena) {
  IntegrationRule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (details_case()) {
    case DETAILS_NOT_SET:
      break;
      case kEntityIntegrationRuleDetails:
        _impl_.details_.entity_integration_rule_details_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::EntityIntegrationRuleDetails>(arena, *from._impl_.details_.entity_integration_rule_details_);
        break;
      case kBlobIntegrationRuleDetails:
        _impl_.details_.blob_integration_rule_details_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::BlobDistributionRuleDetails>(arena, *from._impl_.details_.blob_integration_rule_details_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.IntegrationRule)
}
inline PROTOBUF_NDEBUG_INLINE IntegrationRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : integration_name_(arena),
        host_id_(arena),
        details_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void IntegrationRule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IntegrationRule::~IntegrationRule() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.IntegrationRule)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IntegrationRule::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.integration_name_.Destroy();
  _impl_.host_id_.Destroy();
  if (has_details()) {
    clear_details();
  }
  _impl_.~Impl_();
}

void IntegrationRule::clear_details() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.IntegrationRule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (details_case()) {
    case kEntityIntegrationRuleDetails: {
      if (GetArena() == nullptr) {
        delete _impl_.details_.entity_integration_rule_details_;
      }
      break;
    }
    case kBlobIntegrationRuleDetails: {
      if (GetArena() == nullptr) {
        delete _impl_.details_.blob_integration_rule_details_;
      }
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DETAILS_NOT_SET;
}


PROTOBUF_NOINLINE void IntegrationRule::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.IntegrationRule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.integration_name_.ClearToEmpty();
  _impl_.host_id_.ClearToEmpty();
  clear_details();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IntegrationRule::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 2, 80, 2> IntegrationRule::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IntegrationRule_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string host_id = 2 [json_name = "hostId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IntegrationRule, _impl_.host_id_)}},
    // string integration_name = 1 [json_name = "integrationName"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IntegrationRule, _impl_.integration_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string integration_name = 1 [json_name = "integrationName"];
    {PROTOBUF_FIELD_OFFSET(IntegrationRule, _impl_.integration_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host_id = 2 [json_name = "hostId"];
    {PROTOBUF_FIELD_OFFSET(IntegrationRule, _impl_.host_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.communicationsmanager.v1.EntityIntegrationRuleDetails entity_integration_rule_details = 3 [json_name = "entityIntegrationRuleDetails"];
    {PROTOBUF_FIELD_OFFSET(IntegrationRule, _impl_.details_.entity_integration_rule_details_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.BlobDistributionRuleDetails blob_integration_rule_details = 4 [json_name = "blobIntegrationRuleDetails"];
    {PROTOBUF_FIELD_OFFSET(IntegrationRule, _impl_.details_.blob_integration_rule_details_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::EntityIntegrationRuleDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::BlobDistributionRuleDetails>()},
  }}, {{
    "\60\20\7\0\0\0\0\0"
    "anduril.communicationsmanager.v1.IntegrationRule"
    "integration_name"
    "host_id"
  }},
};

::uint8_t* IntegrationRule::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.IntegrationRule)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string integration_name = 1 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    const std::string& _s = this->_internal_integration_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.IntegrationRule.integration_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string host_id = 2 [json_name = "hostId"];
  if (!this->_internal_host_id().empty()) {
    const std::string& _s = this->_internal_host_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.IntegrationRule.host_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  switch (details_case()) {
    case kEntityIntegrationRuleDetails: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::entity_integration_rule_details(this),
          _Internal::entity_integration_rule_details(this).GetCachedSize(), target, stream);
      break;
    }
    case kBlobIntegrationRuleDetails: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::blob_integration_rule_details(this),
          _Internal::blob_integration_rule_details(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.IntegrationRule)
  return target;
}

::size_t IntegrationRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.IntegrationRule)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string integration_name = 1 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_integration_name());
  }

  // string host_id = 2 [json_name = "hostId"];
  if (!this->_internal_host_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_host_id());
  }

  switch (details_case()) {
    // .anduril.communicationsmanager.v1.EntityIntegrationRuleDetails entity_integration_rule_details = 3 [json_name = "entityIntegrationRuleDetails"];
    case kEntityIntegrationRuleDetails: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.details_.entity_integration_rule_details_);
      break;
    }
    // .anduril.communicationsmanager.v1.BlobDistributionRuleDetails blob_integration_rule_details = 4 [json_name = "blobIntegrationRuleDetails"];
    case kBlobIntegrationRuleDetails: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.details_.blob_integration_rule_details_);
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IntegrationRule::_class_data_ = {
    IntegrationRule::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IntegrationRule::GetClassData() const {
  return &_class_data_;
}

void IntegrationRule::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IntegrationRule*>(&to_msg);
  auto& from = static_cast<const IntegrationRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.IntegrationRule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_integration_name().empty()) {
    _this->_internal_set_integration_name(from._internal_integration_name());
  }
  if (!from._internal_host_id().empty()) {
    _this->_internal_set_host_id(from._internal_host_id());
  }
  switch (from.details_case()) {
    case kEntityIntegrationRuleDetails: {
      _this->_internal_mutable_entity_integration_rule_details()->::anduril::communicationsmanager::v1::EntityIntegrationRuleDetails::MergeFrom(
          from._internal_entity_integration_rule_details());
      break;
    }
    case kBlobIntegrationRuleDetails: {
      _this->_internal_mutable_blob_integration_rule_details()->::anduril::communicationsmanager::v1::BlobDistributionRuleDetails::MergeFrom(
          from._internal_blob_integration_rule_details());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IntegrationRule::CopyFrom(const IntegrationRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.IntegrationRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IntegrationRule::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IntegrationRule::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IntegrationRule::InternalSwap(IntegrationRule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.integration_name_, &other->_impl_.integration_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_id_, &other->_impl_.host_id_, arena);
  swap(_impl_.details_, other->_impl_.details_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata IntegrationRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[3]);
}
// ===================================================================

class DistributionRule::_Internal {
 public:
  using HasBits = decltype(std::declval<DistributionRule>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::DistributionRule, _impl_._oneof_case_);
  static const ::anduril::communicationsmanager::v1::Source& source(const DistributionRule* msg);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::communicationsmanager::v1::Destination& destination(const DistributionRule* msg);
  static void set_has_destination(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::communicationsmanager::v1::EntityDistributionRuleDetails& entity_details(const DistributionRule* msg);
  static const ::anduril::communicationsmanager::v1::BlobDistributionRuleDetails& blob_details(const DistributionRule* msg);
  static const ::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl& source_destination_directional_control(const DistributionRule* msg);
  static void set_has_source_destination_directional_control(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::communicationsmanager::v1::Source& DistributionRule::_Internal::source(const DistributionRule* msg) {
  return *msg->_impl_.source_;
}
const ::anduril::communicationsmanager::v1::Destination& DistributionRule::_Internal::destination(const DistributionRule* msg) {
  return *msg->_impl_.destination_;
}
const ::anduril::communicationsmanager::v1::EntityDistributionRuleDetails& DistributionRule::_Internal::entity_details(const DistributionRule* msg) {
  return *msg->_impl_.details_.entity_details_;
}
const ::anduril::communicationsmanager::v1::BlobDistributionRuleDetails& DistributionRule::_Internal::blob_details(const DistributionRule* msg) {
  return *msg->_impl_.details_.blob_details_;
}
const ::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl& DistributionRule::_Internal::source_destination_directional_control(const DistributionRule* msg) {
  return *msg->_impl_.source_destination_directional_control_;
}
void DistributionRule::set_allocated_entity_details(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails* entity_details) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_details();
  if (entity_details) {
    ::google::protobuf::Arena* submessage_arena = entity_details->GetArena();
    if (message_arena != submessage_arena) {
      entity_details = ::google::protobuf::internal::GetOwnedMessage(message_arena, entity_details, submessage_arena);
    }
    set_has_entity_details();
    _impl_.details_.entity_details_ = entity_details;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.DistributionRule.entity_details)
}
void DistributionRule::set_allocated_blob_details(::anduril::communicationsmanager::v1::BlobDistributionRuleDetails* blob_details) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_details();
  if (blob_details) {
    ::google::protobuf::Arena* submessage_arena = blob_details->GetArena();
    if (message_arena != submessage_arena) {
      blob_details = ::google::protobuf::internal::GetOwnedMessage(message_arena, blob_details, submessage_arena);
    }
    set_has_blob_details();
    _impl_.details_.blob_details_ = blob_details;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.DistributionRule.blob_details)
}
DistributionRule::DistributionRule(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.DistributionRule)
}
inline PROTOBUF_NDEBUG_INLINE DistributionRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sources_{visibility, arena, from.sources_},
        rule_id_(arena, from.rule_id_),
        version_(arena, from.version_),
        description_(arena, from.description_),
        name_(arena, from.name_),
        details_{},
        _oneof_case_{from._oneof_case_[0]} {}

DistributionRule::DistributionRule(
    ::google::protobuf::Arena* arena,
    const DistributionRule& from)
    : ::google::protobuf::Message(arena) {
  DistributionRule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.source_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::Source>(arena, *from._impl_.source_)
                : nullptr;
  _impl_.destination_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::Destination>(arena, *from._impl_.destination_)
                : nullptr;
  _impl_.source_destination_directional_control_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl>(arena, *from._impl_.source_destination_directional_control_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enabled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enabled_),
           offsetof(Impl_, version_num_) -
               offsetof(Impl_, enabled_) +
               sizeof(Impl_::version_num_));
  switch (details_case()) {
    case DETAILS_NOT_SET:
      break;
      case kEntityDetails:
        _impl_.details_.entity_details_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::EntityDistributionRuleDetails>(arena, *from._impl_.details_.entity_details_);
        break;
      case kBlobDetails:
        _impl_.details_.blob_details_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::BlobDistributionRuleDetails>(arena, *from._impl_.details_.blob_details_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.DistributionRule)
}
inline PROTOBUF_NDEBUG_INLINE DistributionRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sources_{visibility, arena},
        rule_id_(arena),
        version_(arena),
        description_(arena),
        name_(arena),
        details_{},
        _oneof_case_{} {}

inline void DistributionRule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, source_),
           0,
           offsetof(Impl_, version_num_) -
               offsetof(Impl_, source_) +
               sizeof(Impl_::version_num_));
}
DistributionRule::~DistributionRule() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.DistributionRule)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DistributionRule::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rule_id_.Destroy();
  _impl_.version_.Destroy();
  _impl_.description_.Destroy();
  _impl_.name_.Destroy();
  delete _impl_.source_;
  delete _impl_.destination_;
  delete _impl_.source_destination_directional_control_;
  if (has_details()) {
    clear_details();
  }
  _impl_.~Impl_();
}

void DistributionRule::clear_details() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.DistributionRule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (details_case()) {
    case kEntityDetails: {
      if (GetArena() == nullptr) {
        delete _impl_.details_.entity_details_;
      }
      break;
    }
    case kBlobDetails: {
      if (GetArena() == nullptr) {
        delete _impl_.details_.blob_details_;
      }
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DETAILS_NOT_SET;
}


PROTOBUF_NOINLINE void DistributionRule::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.DistributionRule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sources_.Clear();
  _impl_.rule_id_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.source_ != nullptr);
      _impl_.source_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.destination_ != nullptr);
      _impl_.destination_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.source_destination_directional_control_ != nullptr);
      _impl_.source_destination_directional_control_->Clear();
    }
  }
  ::memset(&_impl_.enabled_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.version_num_) -
      reinterpret_cast<char*>(&_impl_.enabled_)) + sizeof(_impl_.version_num_));
  clear_details();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DistributionRule::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 6, 95, 2> DistributionRule::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DistributionRule_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string rule_id = 1 [json_name = "ruleId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.rule_id_)}},
    // string version = 2 [json_name = "version", deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.version_)}},
    // bool enabled = 3 [json_name = "enabled"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DistributionRule, _impl_.enabled_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.enabled_)}},
    // .anduril.communicationsmanager.v1.Source source = 4 [json_name = "source", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.source_)}},
    // .anduril.communicationsmanager.v1.Destination destination = 5 [json_name = "destination", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.destination_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 priority = 7 [json_name = "priority"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DistributionRule, _impl_.priority_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.priority_)}},
    // repeated .anduril.communicationsmanager.v1.Source sources = 8 [json_name = "sources", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 3, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.sources_)}},
    // string description = 9 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.description_)}},
    // string name = 10 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.name_)}},
    // int64 version_num = 11 [json_name = "versionNum"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DistributionRule, _impl_.version_num_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.version_num_)}},
    // .anduril.communicationsmanager.v1.SourceDestinationDirectionalControl source_destination_directional_control = 12 [json_name = "sourceDestinationDirectionalControl"];
    {::_pbi::TcParser::FastMtS1,
     {98, 2, 4, PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.source_destination_directional_control_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string rule_id = 1 [json_name = "ruleId"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.rule_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2 [json_name = "version", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enabled = 3 [json_name = "enabled"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.enabled_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .anduril.communicationsmanager.v1.Source source = 4 [json_name = "source", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.source_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.Destination destination = 5 [json_name = "destination", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.destination_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.EntityDistributionRuleDetails entity_details = 6 [json_name = "entityDetails"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.details_.entity_details_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 priority = 7 [json_name = "priority"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.priority_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .anduril.communicationsmanager.v1.Source sources = 8 [json_name = "sources", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.sources_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 9 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 10 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 version_num = 11 [json_name = "versionNum"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.version_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .anduril.communicationsmanager.v1.SourceDestinationDirectionalControl source_destination_directional_control = 12 [json_name = "sourceDestinationDirectionalControl"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.source_destination_directional_control_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.BlobDistributionRuleDetails blob_details = 13 [json_name = "blobDetails"];
    {PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.details_.blob_details_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Source>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Destination>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::EntityDistributionRuleDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Source>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::BlobDistributionRuleDetails>()},
  }}, {{
    "\61\7\7\0\0\0\0\0\0\13\4\0\0\0\0\0"
    "anduril.communicationsmanager.v1.DistributionRule"
    "rule_id"
    "version"
    "description"
    "name"
  }},
};

::uint8_t* DistributionRule::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.DistributionRule)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string rule_id = 1 [json_name = "ruleId"];
  if (!this->_internal_rule_id().empty()) {
    const std::string& _s = this->_internal_rule_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.DistributionRule.rule_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string version = 2 [json_name = "version", deprecated = true];
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.DistributionRule.version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool enabled = 3 [json_name = "enabled"];
  if (this->_internal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enabled(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.communicationsmanager.v1.Source source = 4 [json_name = "source", deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::source(this),
        _Internal::source(this).GetCachedSize(), target, stream);
  }

  // .anduril.communicationsmanager.v1.Destination destination = 5 [json_name = "destination", deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::destination(this),
        _Internal::destination(this).GetCachedSize(), target, stream);
  }

  // .anduril.communicationsmanager.v1.EntityDistributionRuleDetails entity_details = 6 [json_name = "entityDetails"];
  if (details_case() == kEntityDetails) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::entity_details(this),
        _Internal::entity_details(this).GetCachedSize(), target, stream);
  }

  // uint32 priority = 7 [json_name = "priority"];
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_priority(), target);
  }

  // repeated .anduril.communicationsmanager.v1.Source sources = 8 [json_name = "sources", deprecated = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sources_size()); i < n; i++) {
    const auto& repfield = this->_internal_sources().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string description = 9 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.DistributionRule.description");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string name = 10 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.DistributionRule.name");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // int64 version_num = 11 [json_name = "versionNum"];
  if (this->_internal_version_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_version_num(), target);
  }

  // .anduril.communicationsmanager.v1.SourceDestinationDirectionalControl source_destination_directional_control = 12 [json_name = "sourceDestinationDirectionalControl"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, _Internal::source_destination_directional_control(this),
        _Internal::source_destination_directional_control(this).GetCachedSize(), target, stream);
  }

  // .anduril.communicationsmanager.v1.BlobDistributionRuleDetails blob_details = 13 [json_name = "blobDetails"];
  if (details_case() == kBlobDetails) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, _Internal::blob_details(this),
        _Internal::blob_details(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.DistributionRule)
  return target;
}

::size_t DistributionRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.DistributionRule)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.communicationsmanager.v1.Source sources = 8 [json_name = "sources", deprecated = true];
  total_size += 1UL * this->_internal_sources_size();
  for (const auto& msg : this->_internal_sources()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string rule_id = 1 [json_name = "ruleId"];
  if (!this->_internal_rule_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rule_id());
  }

  // string version = 2 [json_name = "version", deprecated = true];
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string description = 9 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // string name = 10 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.communicationsmanager.v1.Source source = 4 [json_name = "source", deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_);
    }

    // .anduril.communicationsmanager.v1.Destination destination = 5 [json_name = "destination", deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.destination_);
    }

    // .anduril.communicationsmanager.v1.SourceDestinationDirectionalControl source_destination_directional_control = 12 [json_name = "sourceDestinationDirectionalControl"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_destination_directional_control_);
    }

  }
  // bool enabled = 3 [json_name = "enabled"];
  if (this->_internal_enabled() != 0) {
    total_size += 2;
  }

  // uint32 priority = 7 [json_name = "priority"];
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_priority());
  }

  // int64 version_num = 11 [json_name = "versionNum"];
  if (this->_internal_version_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_version_num());
  }

  switch (details_case()) {
    // .anduril.communicationsmanager.v1.EntityDistributionRuleDetails entity_details = 6 [json_name = "entityDetails"];
    case kEntityDetails: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.details_.entity_details_);
      break;
    }
    // .anduril.communicationsmanager.v1.BlobDistributionRuleDetails blob_details = 13 [json_name = "blobDetails"];
    case kBlobDetails: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.details_.blob_details_);
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DistributionRule::_class_data_ = {
    DistributionRule::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DistributionRule::GetClassData() const {
  return &_class_data_;
}

void DistributionRule::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DistributionRule*>(&to_msg);
  auto& from = static_cast<const DistributionRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.DistributionRule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sources()->MergeFrom(
      from._internal_sources());
  if (!from._internal_rule_id().empty()) {
    _this->_internal_set_rule_id(from._internal_rule_id());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_source()->::anduril::communicationsmanager::v1::Source::MergeFrom(
          from._internal_source());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_destination()->::anduril::communicationsmanager::v1::Destination::MergeFrom(
          from._internal_destination());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_source_destination_directional_control()->::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl::MergeFrom(
          from._internal_source_destination_directional_control());
    }
  }
  if (from._internal_enabled() != 0) {
    _this->_internal_set_enabled(from._internal_enabled());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  if (from._internal_version_num() != 0) {
    _this->_internal_set_version_num(from._internal_version_num());
  }
  switch (from.details_case()) {
    case kEntityDetails: {
      _this->_internal_mutable_entity_details()->::anduril::communicationsmanager::v1::EntityDistributionRuleDetails::MergeFrom(
          from._internal_entity_details());
      break;
    }
    case kBlobDetails: {
      _this->_internal_mutable_blob_details()->::anduril::communicationsmanager::v1::BlobDistributionRuleDetails::MergeFrom(
          from._internal_blob_details());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistributionRule::CopyFrom(const DistributionRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.DistributionRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DistributionRule::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DistributionRule::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DistributionRule::InternalSwap(DistributionRule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sources_.InternalSwap(&other->_impl_.sources_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rule_id_, &other->_impl_.rule_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.version_num_)
      + sizeof(DistributionRule::_impl_.version_num_)
      - PROTOBUF_FIELD_OFFSET(DistributionRule, _impl_.source_)>(
          reinterpret_cast<char*>(&_impl_.source_),
          reinterpret_cast<char*>(&other->_impl_.source_));
  swap(_impl_.details_, other->_impl_.details_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata DistributionRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[4]);
}
// ===================================================================

class SourceDestinationDirectionalControl::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::SourceDestinationDirectionalControl, _impl_._oneof_case_);
  static const ::anduril::communicationsmanager::v1::InboundRuleSourceDestination& inbound_rule_source_destination(const SourceDestinationDirectionalControl* msg);
  static const ::anduril::communicationsmanager::v1::OutboundRuleSourceDestination& outbound_rule_source_destination(const SourceDestinationDirectionalControl* msg);
};

const ::anduril::communicationsmanager::v1::InboundRuleSourceDestination& SourceDestinationDirectionalControl::_Internal::inbound_rule_source_destination(const SourceDestinationDirectionalControl* msg) {
  return *msg->_impl_.source_destination_.inbound_rule_source_destination_;
}
const ::anduril::communicationsmanager::v1::OutboundRuleSourceDestination& SourceDestinationDirectionalControl::_Internal::outbound_rule_source_destination(const SourceDestinationDirectionalControl* msg) {
  return *msg->_impl_.source_destination_.outbound_rule_source_destination_;
}
void SourceDestinationDirectionalControl::set_allocated_inbound_rule_source_destination(::anduril::communicationsmanager::v1::InboundRuleSourceDestination* inbound_rule_source_destination) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_source_destination();
  if (inbound_rule_source_destination) {
    ::google::protobuf::Arena* submessage_arena = inbound_rule_source_destination->GetArena();
    if (message_arena != submessage_arena) {
      inbound_rule_source_destination = ::google::protobuf::internal::GetOwnedMessage(message_arena, inbound_rule_source_destination, submessage_arena);
    }
    set_has_inbound_rule_source_destination();
    _impl_.source_destination_.inbound_rule_source_destination_ = inbound_rule_source_destination;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl.inbound_rule_source_destination)
}
void SourceDestinationDirectionalControl::set_allocated_outbound_rule_source_destination(::anduril::communicationsmanager::v1::OutboundRuleSourceDestination* outbound_rule_source_destination) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_source_destination();
  if (outbound_rule_source_destination) {
    ::google::protobuf::Arena* submessage_arena = outbound_rule_source_destination->GetArena();
    if (message_arena != submessage_arena) {
      outbound_rule_source_destination = ::google::protobuf::internal::GetOwnedMessage(message_arena, outbound_rule_source_destination, submessage_arena);
    }
    set_has_outbound_rule_source_destination();
    _impl_.source_destination_.outbound_rule_source_destination_ = outbound_rule_source_destination;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl.outbound_rule_source_destination)
}
SourceDestinationDirectionalControl::SourceDestinationDirectionalControl(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
}
inline PROTOBUF_NDEBUG_INLINE SourceDestinationDirectionalControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : source_destination_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

SourceDestinationDirectionalControl::SourceDestinationDirectionalControl(
    ::google::protobuf::Arena* arena,
    const SourceDestinationDirectionalControl& from)
    : ::google::protobuf::Message(arena) {
  SourceDestinationDirectionalControl* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (source_destination_case()) {
    case SOURCE_DESTINATION_NOT_SET:
      break;
      case kInboundRuleSourceDestination:
        _impl_.source_destination_.inbound_rule_source_destination_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::InboundRuleSourceDestination>(arena, *from._impl_.source_destination_.inbound_rule_source_destination_);
        break;
      case kOutboundRuleSourceDestination:
        _impl_.source_destination_.outbound_rule_source_destination_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::OutboundRuleSourceDestination>(arena, *from._impl_.source_destination_.outbound_rule_source_destination_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
}
inline PROTOBUF_NDEBUG_INLINE SourceDestinationDirectionalControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : source_destination_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void SourceDestinationDirectionalControl::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SourceDestinationDirectionalControl::~SourceDestinationDirectionalControl() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SourceDestinationDirectionalControl::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_source_destination()) {
    clear_source_destination();
  }
  _impl_.~Impl_();
}

void SourceDestinationDirectionalControl::clear_source_destination() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (source_destination_case()) {
    case kInboundRuleSourceDestination: {
      if (GetArena() == nullptr) {
        delete _impl_.source_destination_.inbound_rule_source_destination_;
      }
      break;
    }
    case kOutboundRuleSourceDestination: {
      if (GetArena() == nullptr) {
        delete _impl_.source_destination_.outbound_rule_source_destination_;
      }
      break;
    }
    case SOURCE_DESTINATION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SOURCE_DESTINATION_NOT_SET;
}


PROTOBUF_NOINLINE void SourceDestinationDirectionalControl::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_source_destination();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SourceDestinationDirectionalControl::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> SourceDestinationDirectionalControl::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SourceDestinationDirectionalControl_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.communicationsmanager.v1.InboundRuleSourceDestination inbound_rule_source_destination = 1 [json_name = "inboundRuleSourceDestination"];
    {PROTOBUF_FIELD_OFFSET(SourceDestinationDirectionalControl, _impl_.source_destination_.inbound_rule_source_destination_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.OutboundRuleSourceDestination outbound_rule_source_destination = 2 [json_name = "outboundRuleSourceDestination"];
    {PROTOBUF_FIELD_OFFSET(SourceDestinationDirectionalControl, _impl_.source_destination_.outbound_rule_source_destination_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::InboundRuleSourceDestination>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::OutboundRuleSourceDestination>()},
  }}, {{
  }},
};

::uint8_t* SourceDestinationDirectionalControl::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (source_destination_case()) {
    case kInboundRuleSourceDestination: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::inbound_rule_source_destination(this),
          _Internal::inbound_rule_source_destination(this).GetCachedSize(), target, stream);
      break;
    }
    case kOutboundRuleSourceDestination: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::outbound_rule_source_destination(this),
          _Internal::outbound_rule_source_destination(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  return target;
}

::size_t SourceDestinationDirectionalControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (source_destination_case()) {
    // .anduril.communicationsmanager.v1.InboundRuleSourceDestination inbound_rule_source_destination = 1 [json_name = "inboundRuleSourceDestination"];
    case kInboundRuleSourceDestination: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_destination_.inbound_rule_source_destination_);
      break;
    }
    // .anduril.communicationsmanager.v1.OutboundRuleSourceDestination outbound_rule_source_destination = 2 [json_name = "outboundRuleSourceDestination"];
    case kOutboundRuleSourceDestination: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_destination_.outbound_rule_source_destination_);
      break;
    }
    case SOURCE_DESTINATION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SourceDestinationDirectionalControl::_class_data_ = {
    SourceDestinationDirectionalControl::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SourceDestinationDirectionalControl::GetClassData() const {
  return &_class_data_;
}

void SourceDestinationDirectionalControl::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SourceDestinationDirectionalControl*>(&to_msg);
  auto& from = static_cast<const SourceDestinationDirectionalControl&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.source_destination_case()) {
    case kInboundRuleSourceDestination: {
      _this->_internal_mutable_inbound_rule_source_destination()->::anduril::communicationsmanager::v1::InboundRuleSourceDestination::MergeFrom(
          from._internal_inbound_rule_source_destination());
      break;
    }
    case kOutboundRuleSourceDestination: {
      _this->_internal_mutable_outbound_rule_source_destination()->::anduril::communicationsmanager::v1::OutboundRuleSourceDestination::MergeFrom(
          from._internal_outbound_rule_source_destination());
      break;
    }
    case SOURCE_DESTINATION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SourceDestinationDirectionalControl::CopyFrom(const SourceDestinationDirectionalControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.SourceDestinationDirectionalControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SourceDestinationDirectionalControl::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SourceDestinationDirectionalControl::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SourceDestinationDirectionalControl::InternalSwap(SourceDestinationDirectionalControl* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.source_destination_, other->_impl_.source_destination_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SourceDestinationDirectionalControl::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[5]);
}
// ===================================================================

class OutboundRuleSourceDestination::_Internal {
 public:
  using HasBits = decltype(std::declval<OutboundRuleSourceDestination>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OutboundRuleSourceDestination, _impl_._has_bits_);
  static const ::anduril::communicationsmanager::v1::Source& source(const OutboundRuleSourceDestination* msg);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::communicationsmanager::v1::Source& OutboundRuleSourceDestination::_Internal::source(const OutboundRuleSourceDestination* msg) {
  return *msg->_impl_.source_;
}
OutboundRuleSourceDestination::OutboundRuleSourceDestination(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
}
inline PROTOBUF_NDEBUG_INLINE OutboundRuleSourceDestination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        destinations_{visibility, arena, from.destinations_} {}

OutboundRuleSourceDestination::OutboundRuleSourceDestination(
    ::google::protobuf::Arena* arena,
    const OutboundRuleSourceDestination& from)
    : ::google::protobuf::Message(arena) {
  OutboundRuleSourceDestination* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.source_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::Source>(arena, *from._impl_.source_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
}
inline PROTOBUF_NDEBUG_INLINE OutboundRuleSourceDestination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        destinations_{visibility, arena} {}

inline void OutboundRuleSourceDestination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.source_ = {};
}
OutboundRuleSourceDestination::~OutboundRuleSourceDestination() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OutboundRuleSourceDestination::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.source_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OutboundRuleSourceDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.destinations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.source_ != nullptr);
    _impl_.source_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OutboundRuleSourceDestination::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> OutboundRuleSourceDestination::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OutboundRuleSourceDestination, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OutboundRuleSourceDestination_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.communicationsmanager.v1.Destination destinations = 2 [json_name = "destinations"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(OutboundRuleSourceDestination, _impl_.destinations_)}},
    // .anduril.communicationsmanager.v1.Source source = 1 [json_name = "source"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OutboundRuleSourceDestination, _impl_.source_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.communicationsmanager.v1.Source source = 1 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(OutboundRuleSourceDestination, _impl_.source_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.communicationsmanager.v1.Destination destinations = 2 [json_name = "destinations"];
    {PROTOBUF_FIELD_OFFSET(OutboundRuleSourceDestination, _impl_.destinations_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Source>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Destination>()},
  }}, {{
  }},
};

::uint8_t* OutboundRuleSourceDestination::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.communicationsmanager.v1.Source source = 1 [json_name = "source"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::source(this),
        _Internal::source(this).GetCachedSize(), target, stream);
  }

  // repeated .anduril.communicationsmanager.v1.Destination destinations = 2 [json_name = "destinations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_destinations_size()); i < n; i++) {
    const auto& repfield = this->_internal_destinations().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
  return target;
}

::size_t OutboundRuleSourceDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.communicationsmanager.v1.Destination destinations = 2 [json_name = "destinations"];
  total_size += 1UL * this->_internal_destinations_size();
  for (const auto& msg : this->_internal_destinations()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .anduril.communicationsmanager.v1.Source source = 1 [json_name = "source"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OutboundRuleSourceDestination::_class_data_ = {
    OutboundRuleSourceDestination::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OutboundRuleSourceDestination::GetClassData() const {
  return &_class_data_;
}

void OutboundRuleSourceDestination::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OutboundRuleSourceDestination*>(&to_msg);
  auto& from = static_cast<const OutboundRuleSourceDestination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_destinations()->MergeFrom(
      from._internal_destinations());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_source()->::anduril::communicationsmanager::v1::Source::MergeFrom(
        from._internal_source());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OutboundRuleSourceDestination::CopyFrom(const OutboundRuleSourceDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.OutboundRuleSourceDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OutboundRuleSourceDestination::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OutboundRuleSourceDestination::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OutboundRuleSourceDestination::InternalSwap(OutboundRuleSourceDestination* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.destinations_.InternalSwap(&other->_impl_.destinations_);
  swap(_impl_.source_, other->_impl_.source_);
}

::google::protobuf::Metadata OutboundRuleSourceDestination::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[6]);
}
// ===================================================================

class InboundRuleSourceDestination::_Internal {
 public:
  using HasBits = decltype(std::declval<InboundRuleSourceDestination>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InboundRuleSourceDestination, _impl_._has_bits_);
  static const ::anduril::communicationsmanager::v1::Destination& destination(const InboundRuleSourceDestination* msg);
  static void set_has_destination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::communicationsmanager::v1::Destination& InboundRuleSourceDestination::_Internal::destination(const InboundRuleSourceDestination* msg) {
  return *msg->_impl_.destination_;
}
InboundRuleSourceDestination::InboundRuleSourceDestination(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
}
inline PROTOBUF_NDEBUG_INLINE InboundRuleSourceDestination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sources_{visibility, arena, from.sources_} {}

InboundRuleSourceDestination::InboundRuleSourceDestination(
    ::google::protobuf::Arena* arena,
    const InboundRuleSourceDestination& from)
    : ::google::protobuf::Message(arena) {
  InboundRuleSourceDestination* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.destination_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::Destination>(arena, *from._impl_.destination_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
}
inline PROTOBUF_NDEBUG_INLINE InboundRuleSourceDestination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sources_{visibility, arena} {}

inline void InboundRuleSourceDestination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.destination_ = {};
}
InboundRuleSourceDestination::~InboundRuleSourceDestination() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InboundRuleSourceDestination::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.destination_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InboundRuleSourceDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sources_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.destination_ != nullptr);
    _impl_.destination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InboundRuleSourceDestination::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> InboundRuleSourceDestination::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InboundRuleSourceDestination, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InboundRuleSourceDestination_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.communicationsmanager.v1.Destination destination = 2 [json_name = "destination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(InboundRuleSourceDestination, _impl_.destination_)}},
    // repeated .anduril.communicationsmanager.v1.Source sources = 1 [json_name = "sources"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InboundRuleSourceDestination, _impl_.sources_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.communicationsmanager.v1.Source sources = 1 [json_name = "sources"];
    {PROTOBUF_FIELD_OFFSET(InboundRuleSourceDestination, _impl_.sources_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.Destination destination = 2 [json_name = "destination"];
    {PROTOBUF_FIELD_OFFSET(InboundRuleSourceDestination, _impl_.destination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Source>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::Destination>()},
  }}, {{
  }},
};

::uint8_t* InboundRuleSourceDestination::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.communicationsmanager.v1.Source sources = 1 [json_name = "sources"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sources_size()); i < n; i++) {
    const auto& repfield = this->_internal_sources().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.communicationsmanager.v1.Destination destination = 2 [json_name = "destination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::destination(this),
        _Internal::destination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
  return target;
}

::size_t InboundRuleSourceDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.communicationsmanager.v1.Source sources = 1 [json_name = "sources"];
  total_size += 1UL * this->_internal_sources_size();
  for (const auto& msg : this->_internal_sources()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .anduril.communicationsmanager.v1.Destination destination = 2 [json_name = "destination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.destination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InboundRuleSourceDestination::_class_data_ = {
    InboundRuleSourceDestination::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InboundRuleSourceDestination::GetClassData() const {
  return &_class_data_;
}

void InboundRuleSourceDestination::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InboundRuleSourceDestination*>(&to_msg);
  auto& from = static_cast<const InboundRuleSourceDestination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sources()->MergeFrom(
      from._internal_sources());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_destination()->::anduril::communicationsmanager::v1::Destination::MergeFrom(
        from._internal_destination());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InboundRuleSourceDestination::CopyFrom(const InboundRuleSourceDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.InboundRuleSourceDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InboundRuleSourceDestination::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InboundRuleSourceDestination::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InboundRuleSourceDestination::InternalSwap(InboundRuleSourceDestination* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sources_.InternalSwap(&other->_impl_.sources_);
  swap(_impl_.destination_, other->_impl_.destination_);
}

::google::protobuf::Metadata InboundRuleSourceDestination::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[7]);
}
// ===================================================================

class Source::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Source, _impl_._oneof_case_);
};

Source::Source(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.Source)
}
inline PROTOBUF_NDEBUG_INLINE Source::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : source_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Source::Source(
    ::google::protobuf::Arena* arena,
    const Source& from)
    : ::google::protobuf::Message(arena) {
  Source* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (source_case()) {
    case SOURCE_NOT_SET:
      break;
      case kAssetId:
        new (&_impl_.source_.asset_id_) decltype(_impl_.source_.asset_id_){arena, from._impl_.source_.asset_id_};
        break;
      case kAll:
        _impl_.source_.all_ = from._impl_.source_.all_;
        break;
      case kHostId:
        new (&_impl_.source_.host_id_) decltype(_impl_.source_.host_id_){arena, from._impl_.source_.host_id_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.Source)
}
inline PROTOBUF_NDEBUG_INLINE Source::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : source_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Source::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Source::~Source() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.Source)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Source::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_source()) {
    clear_source();
  }
  _impl_.~Impl_();
}

void Source::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.Source)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (source_case()) {
    case kAssetId: {
      _impl_.source_.asset_id_.Destroy();
      break;
    }
    case kAll: {
      // No need to clear
      break;
    }
    case kHostId: {
      _impl_.source_.host_id_.Destroy();
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SOURCE_NOT_SET;
}


PROTOBUF_NOINLINE void Source::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.Source)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_source();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Source::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 63, 2> Source::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Source_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string asset_id = 1 [json_name = "assetId", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.source_.asset_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool all = 2 [json_name = "all"];
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.source_.all_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // string host_id = 3 [json_name = "hostId"];
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.source_.host_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\10\0\7\0\0\0\0"
    "anduril.communicationsmanager.v1.Source"
    "asset_id"
    "host_id"
  }},
};

::uint8_t* Source::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.Source)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (source_case()) {
    case kAssetId: {
      const std::string& _s = this->_internal_asset_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.Source.asset_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kAll: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this->_internal_all(), target);
      break;
    }
    case kHostId: {
      const std::string& _s = this->_internal_host_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.Source.host_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.Source)
  return target;
}

::size_t Source::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.Source)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (source_case()) {
    // string asset_id = 1 [json_name = "assetId", deprecated = true];
    case kAssetId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_asset_id());
      break;
    }
    // bool all = 2 [json_name = "all"];
    case kAll: {
      total_size += 2;
      break;
    }
    // string host_id = 3 [json_name = "hostId"];
    case kHostId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_host_id());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Source::_class_data_ = {
    Source::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Source::GetClassData() const {
  return &_class_data_;
}

void Source::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Source*>(&to_msg);
  auto& from = static_cast<const Source&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.Source)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.source_case()) {
    case kAssetId: {
      _this->_internal_set_asset_id(from._internal_asset_id());
      break;
    }
    case kAll: {
      _this->_internal_set_all(from._internal_all());
      break;
    }
    case kHostId: {
      _this->_internal_set_host_id(from._internal_host_id());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Source::CopyFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Source::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Source::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Source::InternalSwap(Source* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.source_, other->_impl_.source_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Source::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[8]);
}
// ===================================================================

class Destination::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::Destination, _impl_._oneof_case_);
};

Destination::Destination(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.Destination)
}
inline PROTOBUF_NDEBUG_INLINE Destination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : destination_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Destination::Destination(
    ::google::protobuf::Arena* arena,
    const Destination& from)
    : ::google::protobuf::Message(arena) {
  Destination* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (destination_case()) {
    case DESTINATION_NOT_SET:
      break;
      case kAssetId:
        new (&_impl_.destination_.asset_id_) decltype(_impl_.destination_.asset_id_){arena, from._impl_.destination_.asset_id_};
        break;
      case kHostId:
        new (&_impl_.destination_.host_id_) decltype(_impl_.destination_.host_id_){arena, from._impl_.destination_.host_id_};
        break;
      case kAll:
        _impl_.destination_.all_ = from._impl_.destination_.all_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.Destination)
}
inline PROTOBUF_NDEBUG_INLINE Destination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : destination_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Destination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Destination::~Destination() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.Destination)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Destination::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_destination()) {
    clear_destination();
  }
  _impl_.~Impl_();
}

void Destination::clear_destination() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.Destination)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (destination_case()) {
    case kAssetId: {
      _impl_.destination_.asset_id_.Destroy();
      break;
    }
    case kHostId: {
      _impl_.destination_.host_id_.Destroy();
      break;
    }
    case kAll: {
      // No need to clear
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DESTINATION_NOT_SET;
}


PROTOBUF_NOINLINE void Destination::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.Destination)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_destination();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Destination::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 68, 2> Destination::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Destination_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string asset_id = 1 [json_name = "assetId", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Destination, _impl_.destination_.asset_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host_id = 2 [json_name = "hostId"];
    {PROTOBUF_FIELD_OFFSET(Destination, _impl_.destination_.host_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool all = 3 [json_name = "all"];
    {PROTOBUF_FIELD_OFFSET(Destination, _impl_.destination_.all_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\54\10\7\0\0\0\0\0"
    "anduril.communicationsmanager.v1.Destination"
    "asset_id"
    "host_id"
  }},
};

::uint8_t* Destination::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.Destination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (destination_case()) {
    case kAssetId: {
      const std::string& _s = this->_internal_asset_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.Destination.asset_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kHostId: {
      const std::string& _s = this->_internal_host_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.Destination.host_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    case kAll: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this->_internal_all(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.Destination)
  return target;
}

::size_t Destination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.Destination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (destination_case()) {
    // string asset_id = 1 [json_name = "assetId", deprecated = true];
    case kAssetId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_asset_id());
      break;
    }
    // string host_id = 2 [json_name = "hostId"];
    case kHostId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_host_id());
      break;
    }
    // bool all = 3 [json_name = "all"];
    case kAll: {
      total_size += 2;
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Destination::_class_data_ = {
    Destination::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Destination::GetClassData() const {
  return &_class_data_;
}

void Destination::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Destination*>(&to_msg);
  auto& from = static_cast<const Destination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.Destination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.destination_case()) {
    case kAssetId: {
      _this->_internal_set_asset_id(from._internal_asset_id());
      break;
    }
    case kHostId: {
      _this->_internal_set_host_id(from._internal_host_id());
      break;
    }
    case kAll: {
      _this->_internal_set_all(from._internal_all());
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Destination::CopyFrom(const Destination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.Destination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Destination::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Destination::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Destination::InternalSwap(Destination* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.destination_, other->_impl_.destination_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Destination::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[9]);
}
// ===================================================================

class EntityDistributionRuleDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<EntityDistributionRuleDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EntityDistributionRuleDetails, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails, _impl_._oneof_case_);
  static const ::anduril::entitymanager::v1::Statement& entity_filter(const EntityDistributionRuleDetails* msg);
  static void set_has_entity_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Statement& static_statement(const EntityDistributionRuleDetails* msg);
  static const ::anduril::entitymanager::v1::DynamicStatement& dynamic_statement(const EntityDistributionRuleDetails* msg);
};

const ::anduril::entitymanager::v1::Statement& EntityDistributionRuleDetails::_Internal::entity_filter(const EntityDistributionRuleDetails* msg) {
  return *msg->_impl_.entity_filter_;
}
const ::anduril::entitymanager::v1::Statement& EntityDistributionRuleDetails::_Internal::static_statement(const EntityDistributionRuleDetails* msg) {
  return *msg->_impl_.entity_filter_selection_.static_statement_;
}
const ::anduril::entitymanager::v1::DynamicStatement& EntityDistributionRuleDetails::_Internal::dynamic_statement(const EntityDistributionRuleDetails* msg) {
  return *msg->_impl_.entity_filter_selection_.dynamic_statement_;
}
void EntityDistributionRuleDetails::clear_entity_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.entity_filter_ != nullptr) _impl_.entity_filter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void EntityDistributionRuleDetails::set_allocated_static_statement(::anduril::entitymanager::v1::Statement* static_statement) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_entity_filter_selection();
  if (static_statement) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(static_statement)->GetArena();
    if (message_arena != submessage_arena) {
      static_statement = ::google::protobuf::internal::GetOwnedMessage(message_arena, static_statement, submessage_arena);
    }
    set_has_static_statement();
    _impl_.entity_filter_selection_.static_statement_ = static_statement;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.EntityDistributionRuleDetails.static_statement)
}
void EntityDistributionRuleDetails::clear_static_statement() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (entity_filter_selection_case() == kStaticStatement) {
    if (GetArena() == nullptr) {
      delete _impl_.entity_filter_selection_.static_statement_;
    }
    clear_has_entity_filter_selection();
  }
}
void EntityDistributionRuleDetails::set_allocated_dynamic_statement(::anduril::entitymanager::v1::DynamicStatement* dynamic_statement) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_entity_filter_selection();
  if (dynamic_statement) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(dynamic_statement)->GetArena();
    if (message_arena != submessage_arena) {
      dynamic_statement = ::google::protobuf::internal::GetOwnedMessage(message_arena, dynamic_statement, submessage_arena);
    }
    set_has_dynamic_statement();
    _impl_.entity_filter_selection_.dynamic_statement_ = dynamic_statement;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.EntityDistributionRuleDetails.dynamic_statement)
}
void EntityDistributionRuleDetails::clear_dynamic_statement() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (entity_filter_selection_case() == kDynamicStatement) {
    if (GetArena() == nullptr) {
      delete _impl_.entity_filter_selection_.dynamic_statement_;
    }
    clear_has_entity_filter_selection();
  }
}
EntityDistributionRuleDetails::EntityDistributionRuleDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
}
inline PROTOBUF_NDEBUG_INLINE EntityDistributionRuleDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_filter_selection_{},
        _oneof_case_{from._oneof_case_[0]} {}

EntityDistributionRuleDetails::EntityDistributionRuleDetails(
    ::google::protobuf::Arena* arena,
    const EntityDistributionRuleDetails& from)
    : ::google::protobuf::Message(arena) {
  EntityDistributionRuleDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.entity_filter_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Statement>(arena, *from._impl_.entity_filter_)
                : nullptr;
  switch (entity_filter_selection_case()) {
    case ENTITY_FILTER_SELECTION_NOT_SET:
      break;
      case kStaticStatement:
        _impl_.entity_filter_selection_.static_statement_ = CreateMaybeMessage<::anduril::entitymanager::v1::Statement>(arena, *from._impl_.entity_filter_selection_.static_statement_);
        break;
      case kDynamicStatement:
        _impl_.entity_filter_selection_.dynamic_statement_ = CreateMaybeMessage<::anduril::entitymanager::v1::DynamicStatement>(arena, *from._impl_.entity_filter_selection_.dynamic_statement_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
}
inline PROTOBUF_NDEBUG_INLINE EntityDistributionRuleDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_filter_selection_{},
        _oneof_case_{} {}

inline void EntityDistributionRuleDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.entity_filter_ = {};
}
EntityDistributionRuleDetails::~EntityDistributionRuleDetails() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EntityDistributionRuleDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.entity_filter_;
  if (has_entity_filter_selection()) {
    clear_entity_filter_selection();
  }
  _impl_.~Impl_();
}

void EntityDistributionRuleDetails::clear_entity_filter_selection() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (entity_filter_selection_case()) {
    case kStaticStatement: {
      if (GetArena() == nullptr) {
        delete _impl_.entity_filter_selection_.static_statement_;
      }
      break;
    }
    case kDynamicStatement: {
      if (GetArena() == nullptr) {
        delete _impl_.entity_filter_selection_.dynamic_statement_;
      }
      break;
    }
    case ENTITY_FILTER_SELECTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ENTITY_FILTER_SELECTION_NOT_SET;
}


PROTOBUF_NOINLINE void EntityDistributionRuleDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.entity_filter_ != nullptr);
    _impl_.entity_filter_->Clear();
  }
  clear_entity_filter_selection();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EntityDistributionRuleDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> EntityDistributionRuleDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityDistributionRuleDetails, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EntityDistributionRuleDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.Statement entity_filter = 1 [json_name = "entityFilter"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityDistributionRuleDetails, _impl_.entity_filter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Statement entity_filter = 1 [json_name = "entityFilter"];
    {PROTOBUF_FIELD_OFFSET(EntityDistributionRuleDetails, _impl_.entity_filter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Statement static_statement = 2 [json_name = "staticStatement"];
    {PROTOBUF_FIELD_OFFSET(EntityDistributionRuleDetails, _impl_.entity_filter_selection_.static_statement_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.DynamicStatement dynamic_statement = 3 [json_name = "dynamicStatement"];
    {PROTOBUF_FIELD_OFFSET(EntityDistributionRuleDetails, _impl_.entity_filter_selection_.dynamic_statement_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Statement>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Statement>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::DynamicStatement>()},
  }}, {{
  }},
};

::uint8_t* EntityDistributionRuleDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Statement entity_filter = 1 [json_name = "entityFilter"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::entity_filter(this),
        _Internal::entity_filter(this).GetCachedSize(), target, stream);
  }

  switch (entity_filter_selection_case()) {
    case kStaticStatement: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::static_statement(this),
          _Internal::static_statement(this).GetCachedSize(), target, stream);
      break;
    }
    case kDynamicStatement: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::dynamic_statement(this),
          _Internal::dynamic_statement(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  return target;
}

::size_t EntityDistributionRuleDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.entitymanager.v1.Statement entity_filter = 1 [json_name = "entityFilter"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.entity_filter_);
  }

  switch (entity_filter_selection_case()) {
    // .anduril.entitymanager.v1.Statement static_statement = 2 [json_name = "staticStatement"];
    case kStaticStatement: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.entity_filter_selection_.static_statement_);
      break;
    }
    // .anduril.entitymanager.v1.DynamicStatement dynamic_statement = 3 [json_name = "dynamicStatement"];
    case kDynamicStatement: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.entity_filter_selection_.dynamic_statement_);
      break;
    }
    case ENTITY_FILTER_SELECTION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EntityDistributionRuleDetails::_class_data_ = {
    EntityDistributionRuleDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EntityDistributionRuleDetails::GetClassData() const {
  return &_class_data_;
}

void EntityDistributionRuleDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EntityDistributionRuleDetails*>(&to_msg);
  auto& from = static_cast<const EntityDistributionRuleDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_entity_filter()->::anduril::entitymanager::v1::Statement::MergeFrom(
        from._internal_entity_filter());
  }
  switch (from.entity_filter_selection_case()) {
    case kStaticStatement: {
      _this->_internal_mutable_static_statement()->::anduril::entitymanager::v1::Statement::MergeFrom(
          from._internal_static_statement());
      break;
    }
    case kDynamicStatement: {
      _this->_internal_mutable_dynamic_statement()->::anduril::entitymanager::v1::DynamicStatement::MergeFrom(
          from._internal_dynamic_statement());
      break;
    }
    case ENTITY_FILTER_SELECTION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityDistributionRuleDetails::CopyFrom(const EntityDistributionRuleDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.EntityDistributionRuleDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EntityDistributionRuleDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EntityDistributionRuleDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EntityDistributionRuleDetails::InternalSwap(EntityDistributionRuleDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.entity_filter_, other->_impl_.entity_filter_);
  swap(_impl_.entity_filter_selection_, other->_impl_.entity_filter_selection_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata EntityDistributionRuleDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[10]);
}
// ===================================================================

class BlobDistributionRuleDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<BlobDistributionRuleDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BlobDistributionRuleDetails, _impl_._has_bits_);
  static const ::anduril::blobs::v1::Statement& blob_filter(const BlobDistributionRuleDetails* msg);
  static void set_has_blob_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::blobs::v1::Statement& BlobDistributionRuleDetails::_Internal::blob_filter(const BlobDistributionRuleDetails* msg) {
  return *msg->_impl_.blob_filter_;
}
void BlobDistributionRuleDetails::clear_blob_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.blob_filter_ != nullptr) _impl_.blob_filter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BlobDistributionRuleDetails::clear_blob_filters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blob_filters_.Clear();
}
BlobDistributionRuleDetails::BlobDistributionRuleDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
}
inline PROTOBUF_NDEBUG_INLINE BlobDistributionRuleDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        blob_filters_{visibility, arena, from.blob_filters_} {}

BlobDistributionRuleDetails::BlobDistributionRuleDetails(
    ::google::protobuf::Arena* arena,
    const BlobDistributionRuleDetails& from)
    : ::google::protobuf::Message(arena) {
  BlobDistributionRuleDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.blob_filter_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::blobs::v1::Statement>(arena, *from._impl_.blob_filter_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
}
inline PROTOBUF_NDEBUG_INLINE BlobDistributionRuleDetails::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        blob_filters_{visibility, arena} {}

inline void BlobDistributionRuleDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.blob_filter_ = {};
}
BlobDistributionRuleDetails::~BlobDistributionRuleDetails() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlobDistributionRuleDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.blob_filter_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BlobDistributionRuleDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blob_filters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.blob_filter_ != nullptr);
    _impl_.blob_filter_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlobDistributionRuleDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BlobDistributionRuleDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlobDistributionRuleDetails, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BlobDistributionRuleDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlobDistributionRuleDetails, _impl_.blob_filters_)}},
    // .anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlobDistributionRuleDetails, _impl_.blob_filter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(BlobDistributionRuleDetails, _impl_.blob_filter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];
    {PROTOBUF_FIELD_OFFSET(BlobDistributionRuleDetails, _impl_.blob_filters_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::Statement>()},
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::Statement>()},
  }}, {{
  }},
};

::uint8_t* BlobDistributionRuleDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::blob_filter(this),
        _Internal::blob_filter(this).GetCachedSize(), target, stream);
  }

  // repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blob_filters_size()); i < n; i++) {
    const auto& repfield = this->_internal_blob_filters().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  return target;
}

::size_t BlobDistributionRuleDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];
  total_size += 1UL * this->_internal_blob_filters_size();
  for (const auto& msg : this->_internal_blob_filters()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.blob_filter_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BlobDistributionRuleDetails::_class_data_ = {
    BlobDistributionRuleDetails::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BlobDistributionRuleDetails::GetClassData() const {
  return &_class_data_;
}

void BlobDistributionRuleDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BlobDistributionRuleDetails*>(&to_msg);
  auto& from = static_cast<const BlobDistributionRuleDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blob_filters()->MergeFrom(
      from._internal_blob_filters());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_blob_filter()->::anduril::blobs::v1::Statement::MergeFrom(
        from._internal_blob_filter());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlobDistributionRuleDetails::CopyFrom(const BlobDistributionRuleDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlobDistributionRuleDetails::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BlobDistributionRuleDetails::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BlobDistributionRuleDetails::InternalSwap(BlobDistributionRuleDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.blob_filters_.InternalSwap(&other->_impl_.blob_filters_);
  swap(_impl_.blob_filter_, other->_impl_.blob_filter_);
}

::google::protobuf::Metadata BlobDistributionRuleDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[11]);
}
// ===================================================================

class CommunicationsManagerError::_Internal {
 public:
};

CommunicationsManagerError::CommunicationsManagerError(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.CommunicationsManagerError)
}
inline PROTOBUF_NDEBUG_INLINE CommunicationsManagerError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

CommunicationsManagerError::CommunicationsManagerError(
    ::google::protobuf::Arena* arena,
    const CommunicationsManagerError& from)
    : ::google::protobuf::Message(arena) {
  CommunicationsManagerError* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.CommunicationsManagerError)
}
inline PROTOBUF_NDEBUG_INLINE CommunicationsManagerError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void CommunicationsManagerError::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommunicationsManagerError::~CommunicationsManagerError() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.CommunicationsManagerError)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommunicationsManagerError::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommunicationsManagerError::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.CommunicationsManagerError)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommunicationsManagerError::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 75, 2> CommunicationsManagerError::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CommunicationsManagerError_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommunicationsManagerError, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(CommunicationsManagerError, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\7\0\0\0\0\0\0"
    "anduril.communicationsmanager.v1.CommunicationsManagerError"
    "message"
  }},
};

::uint8_t* CommunicationsManagerError::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.CommunicationsManagerError)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.CommunicationsManagerError.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.CommunicationsManagerError)
  return target;
}

::size_t CommunicationsManagerError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.CommunicationsManagerError)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommunicationsManagerError::_class_data_ = {
    CommunicationsManagerError::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommunicationsManagerError::GetClassData() const {
  return &_class_data_;
}

void CommunicationsManagerError::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommunicationsManagerError*>(&to_msg);
  auto& from = static_cast<const CommunicationsManagerError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.CommunicationsManagerError)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicationsManagerError::CopyFrom(const CommunicationsManagerError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.CommunicationsManagerError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommunicationsManagerError::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommunicationsManagerError::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommunicationsManagerError::InternalSwap(CommunicationsManagerError* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata CommunicationsManagerError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[12]);
}
// ===================================================================

class CrossDomainRule::_Internal {
 public:
  using HasBits = decltype(std::declval<CrossDomainRule>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CrossDomainRule, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CrossDomainRule, _impl_._oneof_case_);
  static const ::anduril::communicationsmanager::v1::EntityDistributionRuleDetails& entity_details(const CrossDomainRule* msg);
  static const ::anduril::communicationsmanager::v1::CdsDestination& cds_destination(const CrossDomainRule* msg);
  static void set_has_cds_destination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::communicationsmanager::v1::EntityDistributionRuleDetails& CrossDomainRule::_Internal::entity_details(const CrossDomainRule* msg) {
  return *msg->_impl_.details_.entity_details_;
}
const ::anduril::communicationsmanager::v1::CdsDestination& CrossDomainRule::_Internal::cds_destination(const CrossDomainRule* msg) {
  return *msg->_impl_.cds_destination_;
}
void CrossDomainRule::set_allocated_entity_details(::anduril::communicationsmanager::v1::EntityDistributionRuleDetails* entity_details) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_details();
  if (entity_details) {
    ::google::protobuf::Arena* submessage_arena = entity_details->GetArena();
    if (message_arena != submessage_arena) {
      entity_details = ::google::protobuf::internal::GetOwnedMessage(message_arena, entity_details, submessage_arena);
    }
    set_has_entity_details();
    _impl_.details_.entity_details_ = entity_details;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.CrossDomainRule.entity_details)
}
void CrossDomainRule::clear_cds_destination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.cds_destination_ != nullptr) _impl_.cds_destination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CrossDomainRule::CrossDomainRule(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.CrossDomainRule)
}
inline PROTOBUF_NDEBUG_INLINE CrossDomainRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        details_{},
        _oneof_case_{from._oneof_case_[0]} {}

CrossDomainRule::CrossDomainRule(
    ::google::protobuf::Arena* arena,
    const CrossDomainRule& from)
    : ::google::protobuf::Message(arena) {
  CrossDomainRule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cds_destination_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::CdsDestination>(arena, *from._impl_.cds_destination_)
                : nullptr;
  switch (details_case()) {
    case DETAILS_NOT_SET:
      break;
      case kEntityDetails:
        _impl_.details_.entity_details_ = CreateMaybeMessage<::anduril::communicationsmanager::v1::EntityDistributionRuleDetails>(arena, *from._impl_.details_.entity_details_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.CrossDomainRule)
}
inline PROTOBUF_NDEBUG_INLINE CrossDomainRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        details_{},
        _oneof_case_{} {}

inline void CrossDomainRule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cds_destination_ = {};
}
CrossDomainRule::~CrossDomainRule() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.CrossDomainRule)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CrossDomainRule::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.cds_destination_;
  if (has_details()) {
    clear_details();
  }
  _impl_.~Impl_();
}

void CrossDomainRule::clear_details() {
// @@protoc_insertion_point(one_of_clear_start:anduril.communicationsmanager.v1.CrossDomainRule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (details_case()) {
    case kEntityDetails: {
      if (GetArena() == nullptr) {
        delete _impl_.details_.entity_details_;
      }
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DETAILS_NOT_SET;
}


PROTOBUF_NOINLINE void CrossDomainRule::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.CrossDomainRule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cds_destination_ != nullptr);
    _impl_.cds_destination_->Clear();
  }
  clear_details();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CrossDomainRule::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> CrossDomainRule::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CrossDomainRule, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CrossDomainRule_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.communicationsmanager.v1.CdsDestination cds_destination = 2 [json_name = "cdsDestination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(CrossDomainRule, _impl_.cds_destination_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.communicationsmanager.v1.EntityDistributionRuleDetails entity_details = 1 [json_name = "entityDetails"];
    {PROTOBUF_FIELD_OFFSET(CrossDomainRule, _impl_.details_.entity_details_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.communicationsmanager.v1.CdsDestination cds_destination = 2 [json_name = "cdsDestination"];
    {PROTOBUF_FIELD_OFFSET(CrossDomainRule, _impl_.cds_destination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::EntityDistributionRuleDetails>()},
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::CdsDestination>()},
  }}, {{
  }},
};

::uint8_t* CrossDomainRule::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.CrossDomainRule)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.communicationsmanager.v1.EntityDistributionRuleDetails entity_details = 1 [json_name = "entityDetails"];
  if (details_case() == kEntityDetails) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::entity_details(this),
        _Internal::entity_details(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.communicationsmanager.v1.CdsDestination cds_destination = 2 [json_name = "cdsDestination"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::cds_destination(this),
        _Internal::cds_destination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.CrossDomainRule)
  return target;
}

::size_t CrossDomainRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.CrossDomainRule)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.communicationsmanager.v1.CdsDestination cds_destination = 2 [json_name = "cdsDestination"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cds_destination_);
  }

  switch (details_case()) {
    // .anduril.communicationsmanager.v1.EntityDistributionRuleDetails entity_details = 1 [json_name = "entityDetails"];
    case kEntityDetails: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.details_.entity_details_);
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CrossDomainRule::_class_data_ = {
    CrossDomainRule::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CrossDomainRule::GetClassData() const {
  return &_class_data_;
}

void CrossDomainRule::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CrossDomainRule*>(&to_msg);
  auto& from = static_cast<const CrossDomainRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.CrossDomainRule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_cds_destination()->::anduril::communicationsmanager::v1::CdsDestination::MergeFrom(
        from._internal_cds_destination());
  }
  switch (from.details_case()) {
    case kEntityDetails: {
      _this->_internal_mutable_entity_details()->::anduril::communicationsmanager::v1::EntityDistributionRuleDetails::MergeFrom(
          from._internal_entity_details());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CrossDomainRule::CopyFrom(const CrossDomainRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.CrossDomainRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CrossDomainRule::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CrossDomainRule::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CrossDomainRule::InternalSwap(CrossDomainRule* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.cds_destination_, other->_impl_.cds_destination_);
  swap(_impl_.details_, other->_impl_.details_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CrossDomainRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcommon_2epub_2eproto[13]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace communicationsmanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
