// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/communicationsmanager/v1/cross_domain.pub.proto

#include "anduril/communicationsmanager/v1/cross_domain.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace communicationsmanager {
namespace v1 {

inline constexpr RegisteredCds::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : host_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cds_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisteredCds::RegisteredCds(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisteredCdsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisteredCdsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisteredCdsDefaultTypeInternal() {}
  union {
    RegisteredCds _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisteredCdsDefaultTypeInternal _RegisteredCds_default_instance_;

inline constexpr CdsDestination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        registered_cds_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CdsDestination::CdsDestination(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CdsDestinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CdsDestinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CdsDestinationDefaultTypeInternal() {}
  union {
    CdsDestination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CdsDestinationDefaultTypeInternal _CdsDestination_default_instance_;
}  // namespace v1
}  // namespace communicationsmanager
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RegisteredCds, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RegisteredCds, _impl_.host_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::RegisteredCds, _impl_.cds_name_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CdsDestination, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CdsDestination, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::communicationsmanager::v1::CdsDestination, _impl_.registered_cds_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::communicationsmanager::v1::RegisteredCds)},
        {10, 19, -1, sizeof(::anduril::communicationsmanager::v1::CdsDestination)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::communicationsmanager::v1::_RegisteredCds_default_instance_._instance,
    &::anduril::communicationsmanager::v1::_CdsDestination_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n7anduril/communicationsmanager/v1/cross"
    "_domain.pub.proto\022 anduril.communication"
    "smanager.v1\"C\n\rRegisteredCds\022\027\n\007host_id\030"
    "\001 \001(\tR\006hostId\022\031\n\010cds_name\030\002 \001(\tR\007cdsName"
    "\"h\n\016CdsDestination\022V\n\016registered_cds\030\001 \001"
    "(\0132/.anduril.communicationsmanager.v1.Re"
    "gisteredCdsR\rregisteredCdsB\246\002\n$com.andur"
    "il.communicationsmanager.v1B\023CrossDomain"
    "PubProtoP\001ZGghe.anduril.dev/anduril/andu"
    "rilapis-go/anduril/communicationsmanager"
    "/v1\242\002\003ACX\252\002 Anduril.Communicationsmanage"
    "r.V1\312\002 Anduril\\Communicationsmanager\\V1\342"
    "\002,Anduril\\Communicationsmanager\\V1\\GPBMe"
    "tadata\352\002\"Anduril::Communicationsmanager:"
    ":V1b\006proto3"
};
static ::absl::once_flag descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto = {
    false,
    false,
    571,
    descriptor_table_protodef_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto,
    "anduril/communicationsmanager/v1/cross_domain.pub.proto",
    &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto,
    file_level_service_descriptors_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto(&descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto);
namespace anduril {
namespace communicationsmanager {
namespace v1 {
// ===================================================================

class RegisteredCds::_Internal {
 public:
};

RegisteredCds::RegisteredCds(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.RegisteredCds)
}
inline PROTOBUF_NDEBUG_INLINE RegisteredCds::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : host_id_(arena, from.host_id_),
        cds_name_(arena, from.cds_name_),
        _cached_size_{0} {}

RegisteredCds::RegisteredCds(
    ::google::protobuf::Arena* arena,
    const RegisteredCds& from)
    : ::google::protobuf::Message(arena) {
  RegisteredCds* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.RegisteredCds)
}
inline PROTOBUF_NDEBUG_INLINE RegisteredCds::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : host_id_(arena),
        cds_name_(arena),
        _cached_size_{0} {}

inline void RegisteredCds::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RegisteredCds::~RegisteredCds() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.RegisteredCds)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisteredCds::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.host_id_.Destroy();
  _impl_.cds_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RegisteredCds::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.RegisteredCds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.host_id_.ClearToEmpty();
  _impl_.cds_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisteredCds::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> RegisteredCds::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RegisteredCds_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string cds_name = 2 [json_name = "cdsName"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisteredCds, _impl_.cds_name_)}},
    // string host_id = 1 [json_name = "hostId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegisteredCds, _impl_.host_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string host_id = 1 [json_name = "hostId"];
    {PROTOBUF_FIELD_OFFSET(RegisteredCds, _impl_.host_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cds_name = 2 [json_name = "cdsName"];
    {PROTOBUF_FIELD_OFFSET(RegisteredCds, _impl_.cds_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\7\10\0\0\0\0\0"
    "anduril.communicationsmanager.v1.RegisteredCds"
    "host_id"
    "cds_name"
  }},
};

::uint8_t* RegisteredCds::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.RegisteredCds)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string host_id = 1 [json_name = "hostId"];
  if (!this->_internal_host_id().empty()) {
    const std::string& _s = this->_internal_host_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.RegisteredCds.host_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string cds_name = 2 [json_name = "cdsName"];
  if (!this->_internal_cds_name().empty()) {
    const std::string& _s = this->_internal_cds_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.communicationsmanager.v1.RegisteredCds.cds_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.RegisteredCds)
  return target;
}

::size_t RegisteredCds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.RegisteredCds)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host_id = 1 [json_name = "hostId"];
  if (!this->_internal_host_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_host_id());
  }

  // string cds_name = 2 [json_name = "cdsName"];
  if (!this->_internal_cds_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cds_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RegisteredCds::_class_data_ = {
    RegisteredCds::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RegisteredCds::GetClassData() const {
  return &_class_data_;
}

void RegisteredCds::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RegisteredCds*>(&to_msg);
  auto& from = static_cast<const RegisteredCds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.RegisteredCds)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_host_id().empty()) {
    _this->_internal_set_host_id(from._internal_host_id());
  }
  if (!from._internal_cds_name().empty()) {
    _this->_internal_set_cds_name(from._internal_cds_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisteredCds::CopyFrom(const RegisteredCds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.RegisteredCds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisteredCds::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RegisteredCds::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RegisteredCds::InternalSwap(RegisteredCds* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_id_, &other->_impl_.host_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cds_name_, &other->_impl_.cds_name_, arena);
}

::google::protobuf::Metadata RegisteredCds::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto[0]);
}
// ===================================================================

class CdsDestination::_Internal {
 public:
  using HasBits = decltype(std::declval<CdsDestination>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CdsDestination, _impl_._has_bits_);
  static const ::anduril::communicationsmanager::v1::RegisteredCds& registered_cds(const CdsDestination* msg);
  static void set_has_registered_cds(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::communicationsmanager::v1::RegisteredCds& CdsDestination::_Internal::registered_cds(const CdsDestination* msg) {
  return *msg->_impl_.registered_cds_;
}
CdsDestination::CdsDestination(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.communicationsmanager.v1.CdsDestination)
}
inline PROTOBUF_NDEBUG_INLINE CdsDestination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CdsDestination::CdsDestination(
    ::google::protobuf::Arena* arena,
    const CdsDestination& from)
    : ::google::protobuf::Message(arena) {
  CdsDestination* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.registered_cds_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::communicationsmanager::v1::RegisteredCds>(arena, *from._impl_.registered_cds_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.communicationsmanager.v1.CdsDestination)
}
inline PROTOBUF_NDEBUG_INLINE CdsDestination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CdsDestination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.registered_cds_ = {};
}
CdsDestination::~CdsDestination() {
  // @@protoc_insertion_point(destructor:anduril.communicationsmanager.v1.CdsDestination)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CdsDestination::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.registered_cds_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CdsDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.communicationsmanager.v1.CdsDestination)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.registered_cds_ != nullptr);
    _impl_.registered_cds_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CdsDestination::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CdsDestination::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CdsDestination, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CdsDestination_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.communicationsmanager.v1.RegisteredCds registered_cds = 1 [json_name = "registeredCds"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CdsDestination, _impl_.registered_cds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.communicationsmanager.v1.RegisteredCds registered_cds = 1 [json_name = "registeredCds"];
    {PROTOBUF_FIELD_OFFSET(CdsDestination, _impl_.registered_cds_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::communicationsmanager::v1::RegisteredCds>()},
  }}, {{
  }},
};

::uint8_t* CdsDestination::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.communicationsmanager.v1.CdsDestination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.communicationsmanager.v1.RegisteredCds registered_cds = 1 [json_name = "registeredCds"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::registered_cds(this),
        _Internal::registered_cds(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.communicationsmanager.v1.CdsDestination)
  return target;
}

::size_t CdsDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.communicationsmanager.v1.CdsDestination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.communicationsmanager.v1.RegisteredCds registered_cds = 1 [json_name = "registeredCds"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.registered_cds_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CdsDestination::_class_data_ = {
    CdsDestination::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CdsDestination::GetClassData() const {
  return &_class_data_;
}

void CdsDestination::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CdsDestination*>(&to_msg);
  auto& from = static_cast<const CdsDestination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.communicationsmanager.v1.CdsDestination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_registered_cds()->::anduril::communicationsmanager::v1::RegisteredCds::MergeFrom(
        from._internal_registered_cds());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CdsDestination::CopyFrom(const CdsDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.communicationsmanager.v1.CdsDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CdsDestination::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CdsDestination::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CdsDestination::InternalSwap(CdsDestination* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.registered_cds_, other->_impl_.registered_cds_);
}

::google::protobuf::Metadata CdsDestination::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto_getter, &descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto_once,
      file_level_metadata_anduril_2fcommunicationsmanager_2fv1_2fcross_5fdomain_2epub_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace communicationsmanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
