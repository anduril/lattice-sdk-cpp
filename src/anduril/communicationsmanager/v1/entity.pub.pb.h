// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/communicationsmanager/v1/entity.pub.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "anduril/entitymanager/v1/filter.pub.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto;
namespace anduril {
namespace communicationsmanager {
namespace v1 {
class EntityDataVendor;
struct EntityDataVendorDefaultTypeInternal;
extern EntityDataVendorDefaultTypeInternal _EntityDataVendor_default_instance_;
class EntityIntegrationDetails;
struct EntityIntegrationDetailsDefaultTypeInternal;
extern EntityIntegrationDetailsDefaultTypeInternal _EntityIntegrationDetails_default_instance_;
class EntityIntegrationRuleDetails;
struct EntityIntegrationRuleDetailsDefaultTypeInternal;
extern EntityIntegrationRuleDetailsDefaultTypeInternal _EntityIntegrationRuleDetails_default_instance_;
}  // namespace v1
}  // namespace communicationsmanager
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace communicationsmanager {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class EntityDataVendor final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:anduril.communicationsmanager.v1.EntityDataVendor) */ {
 public:
  inline EntityDataVendor() : EntityDataVendor(nullptr) {}
  ~EntityDataVendor() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EntityDataVendor(::google::protobuf::internal::ConstantInitialized);

  inline EntityDataVendor(const EntityDataVendor& from)
      : EntityDataVendor(nullptr, from) {}
  EntityDataVendor(EntityDataVendor&& from) noexcept
    : EntityDataVendor() {
    *this = ::std::move(from);
  }

  inline EntityDataVendor& operator=(const EntityDataVendor& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityDataVendor& operator=(EntityDataVendor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityDataVendor& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityDataVendor* internal_default_instance() {
    return reinterpret_cast<const EntityDataVendor*>(
               &_EntityDataVendor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EntityDataVendor& a, EntityDataVendor& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityDataVendor* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityDataVendor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityDataVendor* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityDataVendor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityDataVendor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EntityDataVendor& from) {
    EntityDataVendor::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EntityDataVendor* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "anduril.communicationsmanager.v1.EntityDataVendor";
  }
  protected:
  explicit EntityDataVendor(::google::protobuf::Arena* arena);
  EntityDataVendor(::google::protobuf::Arena* arena, const EntityDataVendor& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataTypeFieldNumber = 2,
    kVendorNameFieldNumber = 1,
  };
  // repeated string data_type = 2 [json_name = "dataType"];
  int data_type_size() const;
  private:
  int _internal_data_type_size() const;

  public:
  void clear_data_type() ;
  const std::string& data_type(int index) const;
  std::string* mutable_data_type(int index);
  void set_data_type(int index, const std::string& value);
  void set_data_type(int index, std::string&& value);
  void set_data_type(int index, const char* value);
  void set_data_type(int index, const char* value, std::size_t size);
  void set_data_type(int index, absl::string_view value);
  std::string* add_data_type();
  void add_data_type(const std::string& value);
  void add_data_type(std::string&& value);
  void add_data_type(const char* value);
  void add_data_type(const char* value, std::size_t size);
  void add_data_type(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& data_type() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_data_type();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_data_type() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_data_type();

  public:
  // string vendor_name = 1 [json_name = "vendorName"];
  void clear_vendor_name() ;
  const std::string& vendor_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vendor_name(Arg_&& arg, Args_... args);
  std::string* mutable_vendor_name();
  PROTOBUF_NODISCARD std::string* release_vendor_name();
  void set_allocated_vendor_name(std::string* value);

  private:
  const std::string& _internal_vendor_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vendor_name(
      const std::string& value);
  std::string* _internal_mutable_vendor_name();

  public:
  // @@protoc_insertion_point(class_scope:anduril.communicationsmanager.v1.EntityDataVendor)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      78, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> data_type_;
    ::google::protobuf::internal::ArenaStringPtr vendor_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto;
};// -------------------------------------------------------------------

class EntityIntegrationDetails final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:anduril.communicationsmanager.v1.EntityIntegrationDetails) */ {
 public:
  inline EntityIntegrationDetails() : EntityIntegrationDetails(nullptr) {}
  ~EntityIntegrationDetails() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EntityIntegrationDetails(::google::protobuf::internal::ConstantInitialized);

  inline EntityIntegrationDetails(const EntityIntegrationDetails& from)
      : EntityIntegrationDetails(nullptr, from) {}
  EntityIntegrationDetails(EntityIntegrationDetails&& from) noexcept
    : EntityIntegrationDetails() {
    *this = ::std::move(from);
  }

  inline EntityIntegrationDetails& operator=(const EntityIntegrationDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityIntegrationDetails& operator=(EntityIntegrationDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityIntegrationDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityIntegrationDetails* internal_default_instance() {
    return reinterpret_cast<const EntityIntegrationDetails*>(
               &_EntityIntegrationDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EntityIntegrationDetails& a, EntityIntegrationDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityIntegrationDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityIntegrationDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityIntegrationDetails* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityIntegrationDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityIntegrationDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EntityIntegrationDetails& from) {
    EntityIntegrationDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EntityIntegrationDetails* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "anduril.communicationsmanager.v1.EntityIntegrationDetails";
  }
  protected:
  explicit EntityIntegrationDetails(::google::protobuf::Arena* arena);
  EntityIntegrationDetails(::google::protobuf::Arena* arena, const EntityIntegrationDetails& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVendorsFieldNumber = 1,
  };
  // repeated .anduril.communicationsmanager.v1.EntityDataVendor vendors = 1 [json_name = "vendors"];
  int vendors_size() const;
  private:
  int _internal_vendors_size() const;

  public:
  void clear_vendors() ;
  ::anduril::communicationsmanager::v1::EntityDataVendor* mutable_vendors(int index);
  ::google::protobuf::RepeatedPtrField< ::anduril::communicationsmanager::v1::EntityDataVendor >*
      mutable_vendors();
  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::communicationsmanager::v1::EntityDataVendor>& _internal_vendors() const;
  ::google::protobuf::RepeatedPtrField<::anduril::communicationsmanager::v1::EntityDataVendor>* _internal_mutable_vendors();
  public:
  const ::anduril::communicationsmanager::v1::EntityDataVendor& vendors(int index) const;
  ::anduril::communicationsmanager::v1::EntityDataVendor* add_vendors();
  const ::google::protobuf::RepeatedPtrField< ::anduril::communicationsmanager::v1::EntityDataVendor >&
      vendors() const;
  // @@protoc_insertion_point(class_scope:anduril.communicationsmanager.v1.EntityIntegrationDetails)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::anduril::communicationsmanager::v1::EntityDataVendor > vendors_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto;
};// -------------------------------------------------------------------

class EntityIntegrationRuleDetails final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:anduril.communicationsmanager.v1.EntityIntegrationRuleDetails) */ {
 public:
  inline EntityIntegrationRuleDetails() : EntityIntegrationRuleDetails(nullptr) {}
  ~EntityIntegrationRuleDetails() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EntityIntegrationRuleDetails(::google::protobuf::internal::ConstantInitialized);

  inline EntityIntegrationRuleDetails(const EntityIntegrationRuleDetails& from)
      : EntityIntegrationRuleDetails(nullptr, from) {}
  EntityIntegrationRuleDetails(EntityIntegrationRuleDetails&& from) noexcept
    : EntityIntegrationRuleDetails() {
    *this = ::std::move(from);
  }

  inline EntityIntegrationRuleDetails& operator=(const EntityIntegrationRuleDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityIntegrationRuleDetails& operator=(EntityIntegrationRuleDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityIntegrationRuleDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityIntegrationRuleDetails* internal_default_instance() {
    return reinterpret_cast<const EntityIntegrationRuleDetails*>(
               &_EntityIntegrationRuleDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EntityIntegrationRuleDetails& a, EntityIntegrationRuleDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityIntegrationRuleDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityIntegrationRuleDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityIntegrationRuleDetails* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityIntegrationRuleDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityIntegrationRuleDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EntityIntegrationRuleDetails& from) {
    EntityIntegrationRuleDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EntityIntegrationRuleDetails* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "anduril.communicationsmanager.v1.EntityIntegrationRuleDetails";
  }
  protected:
  explicit EntityIntegrationRuleDetails(::google::protobuf::Arena* arena);
  EntityIntegrationRuleDetails(::google::protobuf::Arena* arena, const EntityIntegrationRuleDetails& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterFieldNumber = 1,
  };
  // .anduril.entitymanager.v1.Statement filter = 1 [json_name = "filter"];
  bool has_filter() const;
  void clear_filter() ;
  const ::anduril::entitymanager::v1::Statement& filter() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Statement* release_filter();
  ::anduril::entitymanager::v1::Statement* mutable_filter();
  void set_allocated_filter(::anduril::entitymanager::v1::Statement* value);
  void unsafe_arena_set_allocated_filter(::anduril::entitymanager::v1::Statement* value);
  ::anduril::entitymanager::v1::Statement* unsafe_arena_release_filter();

  private:
  const ::anduril::entitymanager::v1::Statement& _internal_filter() const;
  ::anduril::entitymanager::v1::Statement* _internal_mutable_filter();

  public:
  // @@protoc_insertion_point(class_scope:anduril.communicationsmanager.v1.EntityIntegrationRuleDetails)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::Statement* filter_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EntityIntegrationDetails

// repeated .anduril.communicationsmanager.v1.EntityDataVendor vendors = 1 [json_name = "vendors"];
inline int EntityIntegrationDetails::_internal_vendors_size() const {
  return _internal_vendors().size();
}
inline int EntityIntegrationDetails::vendors_size() const {
  return _internal_vendors_size();
}
inline void EntityIntegrationDetails::clear_vendors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vendors_.Clear();
}
inline ::anduril::communicationsmanager::v1::EntityDataVendor* EntityIntegrationDetails::mutable_vendors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.communicationsmanager.v1.EntityIntegrationDetails.vendors)
  return _internal_mutable_vendors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::communicationsmanager::v1::EntityDataVendor>* EntityIntegrationDetails::mutable_vendors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.communicationsmanager.v1.EntityIntegrationDetails.vendors)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_vendors();
}
inline const ::anduril::communicationsmanager::v1::EntityDataVendor& EntityIntegrationDetails::vendors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.communicationsmanager.v1.EntityIntegrationDetails.vendors)
  return _internal_vendors().Get(index);
}
inline ::anduril::communicationsmanager::v1::EntityDataVendor* EntityIntegrationDetails::add_vendors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::anduril::communicationsmanager::v1::EntityDataVendor* _add = _internal_mutable_vendors()->Add();
  // @@protoc_insertion_point(field_add:anduril.communicationsmanager.v1.EntityIntegrationDetails.vendors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::communicationsmanager::v1::EntityDataVendor>& EntityIntegrationDetails::vendors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.communicationsmanager.v1.EntityIntegrationDetails.vendors)
  return _internal_vendors();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::communicationsmanager::v1::EntityDataVendor>&
EntityIntegrationDetails::_internal_vendors() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vendors_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::communicationsmanager::v1::EntityDataVendor>*
EntityIntegrationDetails::_internal_mutable_vendors() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.vendors_;
}

// -------------------------------------------------------------------

// EntityDataVendor

// string vendor_name = 1 [json_name = "vendorName"];
inline void EntityDataVendor::clear_vendor_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vendor_name_.ClearToEmpty();
}
inline const std::string& EntityDataVendor::vendor_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.communicationsmanager.v1.EntityDataVendor.vendor_name)
  return _internal_vendor_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EntityDataVendor::set_vendor_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vendor_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.communicationsmanager.v1.EntityDataVendor.vendor_name)
}
inline std::string* EntityDataVendor::mutable_vendor_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vendor_name();
  // @@protoc_insertion_point(field_mutable:anduril.communicationsmanager.v1.EntityDataVendor.vendor_name)
  return _s;
}
inline const std::string& EntityDataVendor::_internal_vendor_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vendor_name_.Get();
}
inline void EntityDataVendor::_internal_set_vendor_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vendor_name_.Set(value, GetArena());
}
inline std::string* EntityDataVendor::_internal_mutable_vendor_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.vendor_name_.Mutable( GetArena());
}
inline std::string* EntityDataVendor::release_vendor_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:anduril.communicationsmanager.v1.EntityDataVendor.vendor_name)
  return _impl_.vendor_name_.Release();
}
inline void EntityDataVendor::set_allocated_vendor_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vendor_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.vendor_name_.IsDefault()) {
          _impl_.vendor_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.EntityDataVendor.vendor_name)
}

// repeated string data_type = 2 [json_name = "dataType"];
inline int EntityDataVendor::_internal_data_type_size() const {
  return _internal_data_type().size();
}
inline int EntityDataVendor::data_type_size() const {
  return _internal_data_type_size();
}
inline void EntityDataVendor::clear_data_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_type_.Clear();
}
inline std::string* EntityDataVendor::add_data_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_data_type()->Add();
  // @@protoc_insertion_point(field_add_mutable:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
  return _s;
}
inline const std::string& EntityDataVendor::data_type(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
  return _internal_data_type().Get(index);
}
inline std::string* EntityDataVendor::mutable_data_type(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
  return _internal_mutable_data_type()->Mutable(index);
}
inline void EntityDataVendor::set_data_type(int index, const std::string& value) {
  _internal_mutable_data_type()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::set_data_type(int index, std::string&& value) {
  _internal_mutable_data_type()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::set_data_type(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_data_type()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::set_data_type(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_data_type()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::set_data_type(int index, absl::string_view value) {
  _internal_mutable_data_type()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::add_data_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_type()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::add_data_type(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_type()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::add_data_type(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_type()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::add_data_type(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_type()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline void EntityDataVendor::add_data_type(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_type()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EntityDataVendor::data_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
  return _internal_data_type();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EntityDataVendor::mutable_data_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.communicationsmanager.v1.EntityDataVendor.data_type)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data_type();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EntityDataVendor::_internal_data_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_type_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EntityDataVendor::_internal_mutable_data_type() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_type_;
}

// -------------------------------------------------------------------

// EntityIntegrationRuleDetails

// .anduril.entitymanager.v1.Statement filter = 1 [json_name = "filter"];
inline bool EntityIntegrationRuleDetails::has_filter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filter_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Statement& EntityIntegrationRuleDetails::_internal_filter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::anduril::entitymanager::v1::Statement* p = _impl_.filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Statement&>(::anduril::entitymanager::v1::_Statement_default_instance_);
}
inline const ::anduril::entitymanager::v1::Statement& EntityIntegrationRuleDetails::filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.communicationsmanager.v1.EntityIntegrationRuleDetails.filter)
  return _internal_filter();
}
inline void EntityIntegrationRuleDetails::unsafe_arena_set_allocated_filter(::anduril::entitymanager::v1::Statement* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filter_);
  }
  _impl_.filter_ = reinterpret_cast<::anduril::entitymanager::v1::Statement*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.communicationsmanager.v1.EntityIntegrationRuleDetails.filter)
}
inline ::anduril::entitymanager::v1::Statement* EntityIntegrationRuleDetails::release_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Statement* released = _impl_.filter_;
  _impl_.filter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::entitymanager::v1::Statement* EntityIntegrationRuleDetails::unsafe_arena_release_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:anduril.communicationsmanager.v1.EntityIntegrationRuleDetails.filter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Statement* temp = _impl_.filter_;
  _impl_.filter_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Statement* EntityIntegrationRuleDetails::_internal_mutable_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::anduril::entitymanager::v1::Statement>(GetArena());
    _impl_.filter_ = reinterpret_cast<::anduril::entitymanager::v1::Statement*>(p);
  }
  return _impl_.filter_;
}
inline ::anduril::entitymanager::v1::Statement* EntityIntegrationRuleDetails::mutable_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::anduril::entitymanager::v1::Statement* _msg = _internal_mutable_filter();
  // @@protoc_insertion_point(field_mutable:anduril.communicationsmanager.v1.EntityIntegrationRuleDetails.filter)
  return _msg;
}
inline void EntityIntegrationRuleDetails::set_allocated_filter(::anduril::entitymanager::v1::Statement* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filter_ = reinterpret_cast<::anduril::entitymanager::v1::Statement*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.communicationsmanager.v1.EntityIntegrationRuleDetails.filter)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace communicationsmanager
}  // namespace anduril


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_anduril_2fcommunicationsmanager_2fv1_2fentity_2epub_2eproto_2epb_2eh
