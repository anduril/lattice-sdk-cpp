// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/type/orbit.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2ftype_2forbit_2epub_2eproto_2epb_2eh
#define anduril_2ftype_2forbit_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/wrappers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2ftype_2forbit_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2ftype_2forbit_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2ftype_2forbit_2epub_2eproto;
namespace anduril {
namespace type {
class MeanKeplerianElements;
struct MeanKeplerianElementsDefaultTypeInternal;
extern MeanKeplerianElementsDefaultTypeInternal _MeanKeplerianElements_default_instance_;
class OrbitMeanElements;
struct OrbitMeanElementsDefaultTypeInternal;
extern OrbitMeanElementsDefaultTypeInternal _OrbitMeanElements_default_instance_;
class OrbitMeanElementsMetadata;
struct OrbitMeanElementsMetadataDefaultTypeInternal;
extern OrbitMeanElementsMetadataDefaultTypeInternal _OrbitMeanElementsMetadata_default_instance_;
class TleParameters;
struct TleParametersDefaultTypeInternal;
extern TleParametersDefaultTypeInternal _TleParameters_default_instance_;
}  // namespace type
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace type {
enum MeanElementTheory : int {
  MEAN_ELEMENT_THEORY_INVALID = 0,
  MEAN_ELEMENT_THEORY_SGP4 = 1,
  MeanElementTheory_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MeanElementTheory_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MeanElementTheory_IsValid(int value);
extern const uint32_t MeanElementTheory_internal_data_[];
constexpr MeanElementTheory MeanElementTheory_MIN = static_cast<MeanElementTheory>(0);
constexpr MeanElementTheory MeanElementTheory_MAX = static_cast<MeanElementTheory>(1);
constexpr int MeanElementTheory_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
MeanElementTheory_descriptor();
template <typename T>
const std::string& MeanElementTheory_Name(T value) {
  static_assert(std::is_same<T, MeanElementTheory>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MeanElementTheory_Name().");
  return MeanElementTheory_Name(static_cast<MeanElementTheory>(value));
}
template <>
inline const std::string& MeanElementTheory_Name(MeanElementTheory value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MeanElementTheory_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool MeanElementTheory_Parse(absl::string_view name, MeanElementTheory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeanElementTheory>(
      MeanElementTheory_descriptor(), name, value);
}
enum EciReferenceFrame : int {
  ECI_REFERENCE_FRAME_INVALID = 0,
  ECI_REFERENCE_FRAME_TEME = 1,
  EciReferenceFrame_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EciReferenceFrame_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EciReferenceFrame_IsValid(int value);
extern const uint32_t EciReferenceFrame_internal_data_[];
constexpr EciReferenceFrame EciReferenceFrame_MIN = static_cast<EciReferenceFrame>(0);
constexpr EciReferenceFrame EciReferenceFrame_MAX = static_cast<EciReferenceFrame>(1);
constexpr int EciReferenceFrame_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
EciReferenceFrame_descriptor();
template <typename T>
const std::string& EciReferenceFrame_Name(T value) {
  static_assert(std::is_same<T, EciReferenceFrame>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EciReferenceFrame_Name().");
  return EciReferenceFrame_Name(static_cast<EciReferenceFrame>(value));
}
template <>
inline const std::string& EciReferenceFrame_Name(EciReferenceFrame value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EciReferenceFrame_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool EciReferenceFrame_Parse(absl::string_view name, EciReferenceFrame* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EciReferenceFrame>(
      EciReferenceFrame_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TleParameters final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.TleParameters) */ {
 public:
  inline TleParameters() : TleParameters(nullptr) {}
  ~TleParameters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TleParameters* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TleParameters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TleParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline TleParameters(const TleParameters& from) : TleParameters(nullptr, from) {}
  inline TleParameters(TleParameters&& from) noexcept
      : TleParameters(nullptr, std::move(from)) {}
  inline TleParameters& operator=(const TleParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline TleParameters& operator=(TleParameters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TleParameters& default_instance() {
    return *internal_default_instance();
  }
  enum Line1Field11Case {
    kBstar = 6,
    kBterm = 7,
    LINE1_FIELD11_NOT_SET = 0,
  };
  enum Line1Field10Case {
    kMeanMotionDdot = 9,
    kAgom = 10,
    LINE1_FIELD10_NOT_SET = 0,
  };
  static inline const TleParameters* internal_default_instance() {
    return reinterpret_cast<const TleParameters*>(
        &_TleParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TleParameters& a, TleParameters& b) { a.Swap(&b); }
  inline void Swap(TleParameters* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TleParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TleParameters* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TleParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TleParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TleParameters& from) { TleParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TleParameters* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.TleParameters"; }

 protected:
  explicit TleParameters(::google::protobuf::Arena* arena);
  TleParameters(::google::protobuf::Arena* arena, const TleParameters& from);
  TleParameters(::google::protobuf::Arena* arena, TleParameters&& from) noexcept
      : TleParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEphemerisTypeFieldNumber = 1,
    kClassificationTypeFieldNumber = 2,
    kNoradCatIdFieldNumber = 3,
    kElementSetNoFieldNumber = 4,
    kRevAtEpochFieldNumber = 5,
    kMeanMotionDotFieldNumber = 8,
    kBstarFieldNumber = 6,
    kBtermFieldNumber = 7,
    kMeanMotionDdotFieldNumber = 9,
    kAgomFieldNumber = 10,
  };
  // .google.protobuf.UInt32Value ephemeris_type = 1 [json_name = "ephemerisType"];
  bool has_ephemeris_type() const;
  void clear_ephemeris_type() ;
  const ::google::protobuf::UInt32Value& ephemeris_type() const;
  PROTOBUF_NODISCARD ::google::protobuf::UInt32Value* release_ephemeris_type();
  ::google::protobuf::UInt32Value* mutable_ephemeris_type();
  void set_allocated_ephemeris_type(::google::protobuf::UInt32Value* value);
  void unsafe_arena_set_allocated_ephemeris_type(::google::protobuf::UInt32Value* value);
  ::google::protobuf::UInt32Value* unsafe_arena_release_ephemeris_type();

  private:
  const ::google::protobuf::UInt32Value& _internal_ephemeris_type() const;
  ::google::protobuf::UInt32Value* _internal_mutable_ephemeris_type();

  public:
  // .google.protobuf.StringValue classification_type = 2 [json_name = "classificationType"];
  bool has_classification_type() const;
  void clear_classification_type() ;
  const ::google::protobuf::StringValue& classification_type() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_classification_type();
  ::google::protobuf::StringValue* mutable_classification_type();
  void set_allocated_classification_type(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_classification_type(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_classification_type();

  private:
  const ::google::protobuf::StringValue& _internal_classification_type() const;
  ::google::protobuf::StringValue* _internal_mutable_classification_type();

  public:
  // .google.protobuf.UInt32Value norad_cat_id = 3 [json_name = "noradCatId"];
  bool has_norad_cat_id() const;
  void clear_norad_cat_id() ;
  const ::google::protobuf::UInt32Value& norad_cat_id() const;
  PROTOBUF_NODISCARD ::google::protobuf::UInt32Value* release_norad_cat_id();
  ::google::protobuf::UInt32Value* mutable_norad_cat_id();
  void set_allocated_norad_cat_id(::google::protobuf::UInt32Value* value);
  void unsafe_arena_set_allocated_norad_cat_id(::google::protobuf::UInt32Value* value);
  ::google::protobuf::UInt32Value* unsafe_arena_release_norad_cat_id();

  private:
  const ::google::protobuf::UInt32Value& _internal_norad_cat_id() const;
  ::google::protobuf::UInt32Value* _internal_mutable_norad_cat_id();

  public:
  // .google.protobuf.UInt32Value element_set_no = 4 [json_name = "elementSetNo"];
  bool has_element_set_no() const;
  void clear_element_set_no() ;
  const ::google::protobuf::UInt32Value& element_set_no() const;
  PROTOBUF_NODISCARD ::google::protobuf::UInt32Value* release_element_set_no();
  ::google::protobuf::UInt32Value* mutable_element_set_no();
  void set_allocated_element_set_no(::google::protobuf::UInt32Value* value);
  void unsafe_arena_set_allocated_element_set_no(::google::protobuf::UInt32Value* value);
  ::google::protobuf::UInt32Value* unsafe_arena_release_element_set_no();

  private:
  const ::google::protobuf::UInt32Value& _internal_element_set_no() const;
  ::google::protobuf::UInt32Value* _internal_mutable_element_set_no();

  public:
  // .google.protobuf.UInt32Value rev_at_epoch = 5 [json_name = "revAtEpoch"];
  bool has_rev_at_epoch() const;
  void clear_rev_at_epoch() ;
  const ::google::protobuf::UInt32Value& rev_at_epoch() const;
  PROTOBUF_NODISCARD ::google::protobuf::UInt32Value* release_rev_at_epoch();
  ::google::protobuf::UInt32Value* mutable_rev_at_epoch();
  void set_allocated_rev_at_epoch(::google::protobuf::UInt32Value* value);
  void unsafe_arena_set_allocated_rev_at_epoch(::google::protobuf::UInt32Value* value);
  ::google::protobuf::UInt32Value* unsafe_arena_release_rev_at_epoch();

  private:
  const ::google::protobuf::UInt32Value& _internal_rev_at_epoch() const;
  ::google::protobuf::UInt32Value* _internal_mutable_rev_at_epoch();

  public:
  // .google.protobuf.DoubleValue mean_motion_dot = 8 [json_name = "meanMotionDot"];
  bool has_mean_motion_dot() const;
  void clear_mean_motion_dot() ;
  const ::google::protobuf::DoubleValue& mean_motion_dot() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_mean_motion_dot();
  ::google::protobuf::DoubleValue* mutable_mean_motion_dot();
  void set_allocated_mean_motion_dot(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_mean_motion_dot(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_mean_motion_dot();

  private:
  const ::google::protobuf::DoubleValue& _internal_mean_motion_dot() const;
  ::google::protobuf::DoubleValue* _internal_mutable_mean_motion_dot();

  public:
  // double bstar = 6 [json_name = "bstar"];
  bool has_bstar() const;
  void clear_bstar() ;
  double bstar() const;
  void set_bstar(double value);

  private:
  double _internal_bstar() const;
  void _internal_set_bstar(double value);

  public:
  // double bterm = 7 [json_name = "bterm"];
  bool has_bterm() const;
  void clear_bterm() ;
  double bterm() const;
  void set_bterm(double value);

  private:
  double _internal_bterm() const;
  void _internal_set_bterm(double value);

  public:
  // double mean_motion_ddot = 9 [json_name = "meanMotionDdot"];
  bool has_mean_motion_ddot() const;
  void clear_mean_motion_ddot() ;
  double mean_motion_ddot() const;
  void set_mean_motion_ddot(double value);

  private:
  double _internal_mean_motion_ddot() const;
  void _internal_set_mean_motion_ddot(double value);

  public:
  // double agom = 10 [json_name = "agom"];
  bool has_agom() const;
  void clear_agom() ;
  double agom() const;
  void set_agom(double value);

  private:
  double _internal_agom() const;
  void _internal_set_agom(double value);

  public:
  void clear_line1_field11();
  Line1Field11Case line1_field11_case() const;
  void clear_line1_field10();
  Line1Field10Case line1_field10_case() const;
  // @@protoc_insertion_point(class_scope:anduril.type.TleParameters)
 private:
  class _Internal;
  void set_has_bstar();
  void set_has_bterm();
  void set_has_mean_motion_ddot();
  void set_has_agom();
  inline bool has_line1_field11() const;
  inline void clear_has_line1_field11();
  inline bool has_line1_field10() const;
  inline void clear_has_line1_field10();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 10, 6,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TleParameters& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::UInt32Value* ephemeris_type_;
    ::google::protobuf::StringValue* classification_type_;
    ::google::protobuf::UInt32Value* norad_cat_id_;
    ::google::protobuf::UInt32Value* element_set_no_;
    ::google::protobuf::UInt32Value* rev_at_epoch_;
    ::google::protobuf::DoubleValue* mean_motion_dot_;
    union Line1Field11Union {
      constexpr Line1Field11Union() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      double bstar_;
      double bterm_;
    } line1_field11_;
    union Line1Field10Union {
      constexpr Line1Field10Union() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      double mean_motion_ddot_;
      double agom_;
    } line1_field10_;
    ::uint32_t _oneof_case_[2];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2forbit_2epub_2eproto;
};
// -------------------------------------------------------------------

class OrbitMeanElementsMetadata final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.OrbitMeanElementsMetadata) */ {
 public:
  inline OrbitMeanElementsMetadata() : OrbitMeanElementsMetadata(nullptr) {}
  ~OrbitMeanElementsMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrbitMeanElementsMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrbitMeanElementsMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrbitMeanElementsMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrbitMeanElementsMetadata(const OrbitMeanElementsMetadata& from) : OrbitMeanElementsMetadata(nullptr, from) {}
  inline OrbitMeanElementsMetadata(OrbitMeanElementsMetadata&& from) noexcept
      : OrbitMeanElementsMetadata(nullptr, std::move(from)) {}
  inline OrbitMeanElementsMetadata& operator=(const OrbitMeanElementsMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrbitMeanElementsMetadata& operator=(OrbitMeanElementsMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrbitMeanElementsMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrbitMeanElementsMetadata* internal_default_instance() {
    return reinterpret_cast<const OrbitMeanElementsMetadata*>(
        &_OrbitMeanElementsMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OrbitMeanElementsMetadata& a, OrbitMeanElementsMetadata& b) { a.Swap(&b); }
  inline void Swap(OrbitMeanElementsMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrbitMeanElementsMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrbitMeanElementsMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrbitMeanElementsMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrbitMeanElementsMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrbitMeanElementsMetadata& from) { OrbitMeanElementsMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrbitMeanElementsMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.OrbitMeanElementsMetadata"; }

 protected:
  explicit OrbitMeanElementsMetadata(::google::protobuf::Arena* arena);
  OrbitMeanElementsMetadata(::google::protobuf::Arena* arena, const OrbitMeanElementsMetadata& from);
  OrbitMeanElementsMetadata(::google::protobuf::Arena* arena, OrbitMeanElementsMetadata&& from) noexcept
      : OrbitMeanElementsMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreationDateFieldNumber = 1,
    kOriginatorFieldNumber = 2,
    kMessageIdFieldNumber = 3,
    kRefFrameEpochFieldNumber = 5,
    kRefFrameFieldNumber = 4,
    kMeanElementTheoryFieldNumber = 6,
  };
  // .google.protobuf.Timestamp creation_date = 1 [json_name = "creationDate"];
  bool has_creation_date() const;
  void clear_creation_date() ;
  const ::google::protobuf::Timestamp& creation_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_creation_date();
  ::google::protobuf::Timestamp* mutable_creation_date();
  void set_allocated_creation_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_creation_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_creation_date();

  private:
  const ::google::protobuf::Timestamp& _internal_creation_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_creation_date();

  public:
  // .google.protobuf.StringValue originator = 2 [json_name = "originator"];
  bool has_originator() const;
  void clear_originator() ;
  const ::google::protobuf::StringValue& originator() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_originator();
  ::google::protobuf::StringValue* mutable_originator();
  void set_allocated_originator(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_originator(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_originator();

  private:
  const ::google::protobuf::StringValue& _internal_originator() const;
  ::google::protobuf::StringValue* _internal_mutable_originator();

  public:
  // .google.protobuf.StringValue message_id = 3 [json_name = "messageId"];
  bool has_message_id() const;
  void clear_message_id() ;
  const ::google::protobuf::StringValue& message_id() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_message_id();
  ::google::protobuf::StringValue* mutable_message_id();
  void set_allocated_message_id(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_message_id(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_message_id();

  private:
  const ::google::protobuf::StringValue& _internal_message_id() const;
  ::google::protobuf::StringValue* _internal_mutable_message_id();

  public:
  // .google.protobuf.Timestamp ref_frame_epoch = 5 [json_name = "refFrameEpoch"];
  bool has_ref_frame_epoch() const;
  void clear_ref_frame_epoch() ;
  const ::google::protobuf::Timestamp& ref_frame_epoch() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_ref_frame_epoch();
  ::google::protobuf::Timestamp* mutable_ref_frame_epoch();
  void set_allocated_ref_frame_epoch(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_ref_frame_epoch(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_ref_frame_epoch();

  private:
  const ::google::protobuf::Timestamp& _internal_ref_frame_epoch() const;
  ::google::protobuf::Timestamp* _internal_mutable_ref_frame_epoch();

  public:
  // .anduril.type.EciReferenceFrame ref_frame = 4 [json_name = "refFrame"];
  void clear_ref_frame() ;
  ::anduril::type::EciReferenceFrame ref_frame() const;
  void set_ref_frame(::anduril::type::EciReferenceFrame value);

  private:
  ::anduril::type::EciReferenceFrame _internal_ref_frame() const;
  void _internal_set_ref_frame(::anduril::type::EciReferenceFrame value);

  public:
  // .anduril.type.MeanElementTheory mean_element_theory = 6 [json_name = "meanElementTheory"];
  void clear_mean_element_theory() ;
  ::anduril::type::MeanElementTheory mean_element_theory() const;
  void set_mean_element_theory(::anduril::type::MeanElementTheory value);

  private:
  ::anduril::type::MeanElementTheory _internal_mean_element_theory() const;
  void _internal_set_mean_element_theory(::anduril::type::MeanElementTheory value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.OrbitMeanElementsMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrbitMeanElementsMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* creation_date_;
    ::google::protobuf::StringValue* originator_;
    ::google::protobuf::StringValue* message_id_;
    ::google::protobuf::Timestamp* ref_frame_epoch_;
    int ref_frame_;
    int mean_element_theory_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2forbit_2epub_2eproto;
};
// -------------------------------------------------------------------

class MeanKeplerianElements final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.MeanKeplerianElements) */ {
 public:
  inline MeanKeplerianElements() : MeanKeplerianElements(nullptr) {}
  ~MeanKeplerianElements() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MeanKeplerianElements* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MeanKeplerianElements));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MeanKeplerianElements(
      ::google::protobuf::internal::ConstantInitialized);

  inline MeanKeplerianElements(const MeanKeplerianElements& from) : MeanKeplerianElements(nullptr, from) {}
  inline MeanKeplerianElements(MeanKeplerianElements&& from) noexcept
      : MeanKeplerianElements(nullptr, std::move(from)) {}
  inline MeanKeplerianElements& operator=(const MeanKeplerianElements& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeanKeplerianElements& operator=(MeanKeplerianElements&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeanKeplerianElements& default_instance() {
    return *internal_default_instance();
  }
  enum Line2Field8Case {
    kSemiMajorAxisKm = 2,
    kMeanMotion = 3,
    LINE2_FIELD8_NOT_SET = 0,
  };
  static inline const MeanKeplerianElements* internal_default_instance() {
    return reinterpret_cast<const MeanKeplerianElements*>(
        &_MeanKeplerianElements_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MeanKeplerianElements& a, MeanKeplerianElements& b) { a.Swap(&b); }
  inline void Swap(MeanKeplerianElements* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeanKeplerianElements* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeanKeplerianElements* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MeanKeplerianElements>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeanKeplerianElements& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MeanKeplerianElements& from) { MeanKeplerianElements::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MeanKeplerianElements* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.MeanKeplerianElements"; }

 protected:
  explicit MeanKeplerianElements(::google::protobuf::Arena* arena);
  MeanKeplerianElements(::google::protobuf::Arena* arena, const MeanKeplerianElements& from);
  MeanKeplerianElements(::google::protobuf::Arena* arena, MeanKeplerianElements&& from) noexcept
      : MeanKeplerianElements(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEpochFieldNumber = 1,
    kGmFieldNumber = 9,
    kEccentricityFieldNumber = 4,
    kInclinationDegFieldNumber = 5,
    kRaOfAscNodeDegFieldNumber = 6,
    kArgOfPericenterDegFieldNumber = 7,
    kMeanAnomalyDegFieldNumber = 8,
    kSemiMajorAxisKmFieldNumber = 2,
    kMeanMotionFieldNumber = 3,
  };
  // .google.protobuf.Timestamp epoch = 1 [json_name = "epoch"];
  bool has_epoch() const;
  void clear_epoch() ;
  const ::google::protobuf::Timestamp& epoch() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch();
  ::google::protobuf::Timestamp* mutable_epoch();
  void set_allocated_epoch(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch();

  public:
  // .google.protobuf.DoubleValue gm = 9 [json_name = "gm"];
  bool has_gm() const;
  void clear_gm() ;
  const ::google::protobuf::DoubleValue& gm() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_gm();
  ::google::protobuf::DoubleValue* mutable_gm();
  void set_allocated_gm(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_gm(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_gm();

  private:
  const ::google::protobuf::DoubleValue& _internal_gm() const;
  ::google::protobuf::DoubleValue* _internal_mutable_gm();

  public:
  // double eccentricity = 4 [json_name = "eccentricity"];
  void clear_eccentricity() ;
  double eccentricity() const;
  void set_eccentricity(double value);

  private:
  double _internal_eccentricity() const;
  void _internal_set_eccentricity(double value);

  public:
  // double inclination_deg = 5 [json_name = "inclinationDeg"];
  void clear_inclination_deg() ;
  double inclination_deg() const;
  void set_inclination_deg(double value);

  private:
  double _internal_inclination_deg() const;
  void _internal_set_inclination_deg(double value);

  public:
  // double ra_of_asc_node_deg = 6 [json_name = "raOfAscNodeDeg"];
  void clear_ra_of_asc_node_deg() ;
  double ra_of_asc_node_deg() const;
  void set_ra_of_asc_node_deg(double value);

  private:
  double _internal_ra_of_asc_node_deg() const;
  void _internal_set_ra_of_asc_node_deg(double value);

  public:
  // double arg_of_pericenter_deg = 7 [json_name = "argOfPericenterDeg"];
  void clear_arg_of_pericenter_deg() ;
  double arg_of_pericenter_deg() const;
  void set_arg_of_pericenter_deg(double value);

  private:
  double _internal_arg_of_pericenter_deg() const;
  void _internal_set_arg_of_pericenter_deg(double value);

  public:
  // double mean_anomaly_deg = 8 [json_name = "meanAnomalyDeg"];
  void clear_mean_anomaly_deg() ;
  double mean_anomaly_deg() const;
  void set_mean_anomaly_deg(double value);

  private:
  double _internal_mean_anomaly_deg() const;
  void _internal_set_mean_anomaly_deg(double value);

  public:
  // double semi_major_axis_km = 2 [json_name = "semiMajorAxisKm"];
  bool has_semi_major_axis_km() const;
  void clear_semi_major_axis_km() ;
  double semi_major_axis_km() const;
  void set_semi_major_axis_km(double value);

  private:
  double _internal_semi_major_axis_km() const;
  void _internal_set_semi_major_axis_km(double value);

  public:
  // double mean_motion = 3 [json_name = "meanMotion"];
  bool has_mean_motion() const;
  void clear_mean_motion() ;
  double mean_motion() const;
  void set_mean_motion(double value);

  private:
  double _internal_mean_motion() const;
  void _internal_set_mean_motion(double value);

  public:
  void clear_line2_field8();
  Line2Field8Case line2_field8_case() const;
  // @@protoc_insertion_point(class_scope:anduril.type.MeanKeplerianElements)
 private:
  class _Internal;
  void set_has_semi_major_axis_km();
  void set_has_mean_motion();
  inline bool has_line2_field8() const;
  inline void clear_has_line2_field8();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MeanKeplerianElements& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* epoch_;
    ::google::protobuf::DoubleValue* gm_;
    double eccentricity_;
    double inclination_deg_;
    double ra_of_asc_node_deg_;
    double arg_of_pericenter_deg_;
    double mean_anomaly_deg_;
    union Line2Field8Union {
      constexpr Line2Field8Union() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      double semi_major_axis_km_;
      double mean_motion_;
    } line2_field8_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2forbit_2epub_2eproto;
};
// -------------------------------------------------------------------

class OrbitMeanElements final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.OrbitMeanElements) */ {
 public:
  inline OrbitMeanElements() : OrbitMeanElements(nullptr) {}
  ~OrbitMeanElements() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrbitMeanElements* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrbitMeanElements));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrbitMeanElements(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrbitMeanElements(const OrbitMeanElements& from) : OrbitMeanElements(nullptr, from) {}
  inline OrbitMeanElements(OrbitMeanElements&& from) noexcept
      : OrbitMeanElements(nullptr, std::move(from)) {}
  inline OrbitMeanElements& operator=(const OrbitMeanElements& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrbitMeanElements& operator=(OrbitMeanElements&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrbitMeanElements& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrbitMeanElements* internal_default_instance() {
    return reinterpret_cast<const OrbitMeanElements*>(
        &_OrbitMeanElements_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OrbitMeanElements& a, OrbitMeanElements& b) { a.Swap(&b); }
  inline void Swap(OrbitMeanElements* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrbitMeanElements* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrbitMeanElements* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrbitMeanElements>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrbitMeanElements& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrbitMeanElements& from) { OrbitMeanElements::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrbitMeanElements* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.OrbitMeanElements"; }

 protected:
  explicit OrbitMeanElements(::google::protobuf::Arena* arena);
  OrbitMeanElements(::google::protobuf::Arena* arena, const OrbitMeanElements& from);
  OrbitMeanElements(::google::protobuf::Arena* arena, OrbitMeanElements&& from) noexcept
      : OrbitMeanElements(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 1,
    kMeanKeplerianElementsFieldNumber = 2,
    kTleParametersFieldNumber = 3,
  };
  // .anduril.type.OrbitMeanElementsMetadata metadata = 1 [json_name = "metadata"];
  bool has_metadata() const;
  void clear_metadata() ;
  const ::anduril::type::OrbitMeanElementsMetadata& metadata() const;
  PROTOBUF_NODISCARD ::anduril::type::OrbitMeanElementsMetadata* release_metadata();
  ::anduril::type::OrbitMeanElementsMetadata* mutable_metadata();
  void set_allocated_metadata(::anduril::type::OrbitMeanElementsMetadata* value);
  void unsafe_arena_set_allocated_metadata(::anduril::type::OrbitMeanElementsMetadata* value);
  ::anduril::type::OrbitMeanElementsMetadata* unsafe_arena_release_metadata();

  private:
  const ::anduril::type::OrbitMeanElementsMetadata& _internal_metadata() const;
  ::anduril::type::OrbitMeanElementsMetadata* _internal_mutable_metadata();

  public:
  // .anduril.type.MeanKeplerianElements mean_keplerian_elements = 2 [json_name = "meanKeplerianElements"];
  bool has_mean_keplerian_elements() const;
  void clear_mean_keplerian_elements() ;
  const ::anduril::type::MeanKeplerianElements& mean_keplerian_elements() const;
  PROTOBUF_NODISCARD ::anduril::type::MeanKeplerianElements* release_mean_keplerian_elements();
  ::anduril::type::MeanKeplerianElements* mutable_mean_keplerian_elements();
  void set_allocated_mean_keplerian_elements(::anduril::type::MeanKeplerianElements* value);
  void unsafe_arena_set_allocated_mean_keplerian_elements(::anduril::type::MeanKeplerianElements* value);
  ::anduril::type::MeanKeplerianElements* unsafe_arena_release_mean_keplerian_elements();

  private:
  const ::anduril::type::MeanKeplerianElements& _internal_mean_keplerian_elements() const;
  ::anduril::type::MeanKeplerianElements* _internal_mutable_mean_keplerian_elements();

  public:
  // .anduril.type.TleParameters tle_parameters = 3 [json_name = "tleParameters"];
  bool has_tle_parameters() const;
  void clear_tle_parameters() ;
  const ::anduril::type::TleParameters& tle_parameters() const;
  PROTOBUF_NODISCARD ::anduril::type::TleParameters* release_tle_parameters();
  ::anduril::type::TleParameters* mutable_tle_parameters();
  void set_allocated_tle_parameters(::anduril::type::TleParameters* value);
  void unsafe_arena_set_allocated_tle_parameters(::anduril::type::TleParameters* value);
  ::anduril::type::TleParameters* unsafe_arena_release_tle_parameters();

  private:
  const ::anduril::type::TleParameters& _internal_tle_parameters() const;
  ::anduril::type::TleParameters* _internal_mutable_tle_parameters();

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.OrbitMeanElements)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrbitMeanElements& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::type::OrbitMeanElementsMetadata* metadata_;
    ::anduril::type::MeanKeplerianElements* mean_keplerian_elements_;
    ::anduril::type::TleParameters* tle_parameters_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2forbit_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OrbitMeanElements

// .anduril.type.OrbitMeanElementsMetadata metadata = 1 [json_name = "metadata"];
inline bool OrbitMeanElements::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void OrbitMeanElements::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::type::OrbitMeanElementsMetadata& OrbitMeanElements::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::OrbitMeanElementsMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::OrbitMeanElementsMetadata&>(::anduril::type::_OrbitMeanElementsMetadata_default_instance_);
}
inline const ::anduril::type::OrbitMeanElementsMetadata& OrbitMeanElements::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElements.metadata)
  return _internal_metadata();
}
inline void OrbitMeanElements::unsafe_arena_set_allocated_metadata(::anduril::type::OrbitMeanElementsMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::anduril::type::OrbitMeanElementsMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.OrbitMeanElements.metadata)
}
inline ::anduril::type::OrbitMeanElementsMetadata* OrbitMeanElements::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::OrbitMeanElementsMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::OrbitMeanElementsMetadata* OrbitMeanElements::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.OrbitMeanElements.metadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::OrbitMeanElementsMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::anduril::type::OrbitMeanElementsMetadata* OrbitMeanElements::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::OrbitMeanElementsMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::anduril::type::OrbitMeanElementsMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::anduril::type::OrbitMeanElementsMetadata* OrbitMeanElements::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::type::OrbitMeanElementsMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:anduril.type.OrbitMeanElements.metadata)
  return _msg;
}
inline void OrbitMeanElements::set_allocated_metadata(::anduril::type::OrbitMeanElementsMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.metadata_ = reinterpret_cast<::anduril::type::OrbitMeanElementsMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.OrbitMeanElements.metadata)
}

// .anduril.type.MeanKeplerianElements mean_keplerian_elements = 2 [json_name = "meanKeplerianElements"];
inline bool OrbitMeanElements::has_mean_keplerian_elements() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mean_keplerian_elements_ != nullptr);
  return value;
}
inline void OrbitMeanElements::clear_mean_keplerian_elements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mean_keplerian_elements_ != nullptr) _impl_.mean_keplerian_elements_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::anduril::type::MeanKeplerianElements& OrbitMeanElements::_internal_mean_keplerian_elements() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::MeanKeplerianElements* p = _impl_.mean_keplerian_elements_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::MeanKeplerianElements&>(::anduril::type::_MeanKeplerianElements_default_instance_);
}
inline const ::anduril::type::MeanKeplerianElements& OrbitMeanElements::mean_keplerian_elements() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElements.mean_keplerian_elements)
  return _internal_mean_keplerian_elements();
}
inline void OrbitMeanElements::unsafe_arena_set_allocated_mean_keplerian_elements(::anduril::type::MeanKeplerianElements* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mean_keplerian_elements_);
  }
  _impl_.mean_keplerian_elements_ = reinterpret_cast<::anduril::type::MeanKeplerianElements*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.OrbitMeanElements.mean_keplerian_elements)
}
inline ::anduril::type::MeanKeplerianElements* OrbitMeanElements::release_mean_keplerian_elements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::MeanKeplerianElements* released = _impl_.mean_keplerian_elements_;
  _impl_.mean_keplerian_elements_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::MeanKeplerianElements* OrbitMeanElements::unsafe_arena_release_mean_keplerian_elements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.OrbitMeanElements.mean_keplerian_elements)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::MeanKeplerianElements* temp = _impl_.mean_keplerian_elements_;
  _impl_.mean_keplerian_elements_ = nullptr;
  return temp;
}
inline ::anduril::type::MeanKeplerianElements* OrbitMeanElements::_internal_mutable_mean_keplerian_elements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mean_keplerian_elements_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::MeanKeplerianElements>(GetArena());
    _impl_.mean_keplerian_elements_ = reinterpret_cast<::anduril::type::MeanKeplerianElements*>(p);
  }
  return _impl_.mean_keplerian_elements_;
}
inline ::anduril::type::MeanKeplerianElements* OrbitMeanElements::mutable_mean_keplerian_elements() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::type::MeanKeplerianElements* _msg = _internal_mutable_mean_keplerian_elements();
  // @@protoc_insertion_point(field_mutable:anduril.type.OrbitMeanElements.mean_keplerian_elements)
  return _msg;
}
inline void OrbitMeanElements::set_allocated_mean_keplerian_elements(::anduril::type::MeanKeplerianElements* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mean_keplerian_elements_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.mean_keplerian_elements_ = reinterpret_cast<::anduril::type::MeanKeplerianElements*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.OrbitMeanElements.mean_keplerian_elements)
}

// .anduril.type.TleParameters tle_parameters = 3 [json_name = "tleParameters"];
inline bool OrbitMeanElements::has_tle_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tle_parameters_ != nullptr);
  return value;
}
inline void OrbitMeanElements::clear_tle_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tle_parameters_ != nullptr) _impl_.tle_parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::anduril::type::TleParameters& OrbitMeanElements::_internal_tle_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::TleParameters* p = _impl_.tle_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::TleParameters&>(::anduril::type::_TleParameters_default_instance_);
}
inline const ::anduril::type::TleParameters& OrbitMeanElements::tle_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElements.tle_parameters)
  return _internal_tle_parameters();
}
inline void OrbitMeanElements::unsafe_arena_set_allocated_tle_parameters(::anduril::type::TleParameters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tle_parameters_);
  }
  _impl_.tle_parameters_ = reinterpret_cast<::anduril::type::TleParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.OrbitMeanElements.tle_parameters)
}
inline ::anduril::type::TleParameters* OrbitMeanElements::release_tle_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::type::TleParameters* released = _impl_.tle_parameters_;
  _impl_.tle_parameters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::TleParameters* OrbitMeanElements::unsafe_arena_release_tle_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.OrbitMeanElements.tle_parameters)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::type::TleParameters* temp = _impl_.tle_parameters_;
  _impl_.tle_parameters_ = nullptr;
  return temp;
}
inline ::anduril::type::TleParameters* OrbitMeanElements::_internal_mutable_tle_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tle_parameters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::TleParameters>(GetArena());
    _impl_.tle_parameters_ = reinterpret_cast<::anduril::type::TleParameters*>(p);
  }
  return _impl_.tle_parameters_;
}
inline ::anduril::type::TleParameters* OrbitMeanElements::mutable_tle_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::anduril::type::TleParameters* _msg = _internal_mutable_tle_parameters();
  // @@protoc_insertion_point(field_mutable:anduril.type.OrbitMeanElements.tle_parameters)
  return _msg;
}
inline void OrbitMeanElements::set_allocated_tle_parameters(::anduril::type::TleParameters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tle_parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.tle_parameters_ = reinterpret_cast<::anduril::type::TleParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.OrbitMeanElements.tle_parameters)
}

// -------------------------------------------------------------------

// OrbitMeanElementsMetadata

// .google.protobuf.Timestamp creation_date = 1 [json_name = "creationDate"];
inline bool OrbitMeanElementsMetadata::has_creation_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.creation_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrbitMeanElementsMetadata::_internal_creation_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.creation_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrbitMeanElementsMetadata::creation_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElementsMetadata.creation_date)
  return _internal_creation_date();
}
inline void OrbitMeanElementsMetadata::unsafe_arena_set_allocated_creation_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.creation_date_);
  }
  _impl_.creation_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.OrbitMeanElementsMetadata.creation_date)
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::release_creation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.creation_date_;
  _impl_.creation_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::unsafe_arena_release_creation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.OrbitMeanElementsMetadata.creation_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.creation_date_;
  _impl_.creation_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::_internal_mutable_creation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.creation_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.creation_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.creation_date_;
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::mutable_creation_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_creation_date();
  // @@protoc_insertion_point(field_mutable:anduril.type.OrbitMeanElementsMetadata.creation_date)
  return _msg;
}
inline void OrbitMeanElementsMetadata::set_allocated_creation_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.creation_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.creation_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.OrbitMeanElementsMetadata.creation_date)
}

// .google.protobuf.StringValue originator = 2 [json_name = "originator"];
inline bool OrbitMeanElementsMetadata::has_originator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.originator_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& OrbitMeanElementsMetadata::_internal_originator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::StringValue* p = _impl_.originator_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& OrbitMeanElementsMetadata::originator() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElementsMetadata.originator)
  return _internal_originator();
}
inline void OrbitMeanElementsMetadata::unsafe_arena_set_allocated_originator(::google::protobuf::StringValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.originator_);
  }
  _impl_.originator_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.OrbitMeanElementsMetadata.originator)
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::release_originator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::StringValue* released = _impl_.originator_;
  _impl_.originator_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::unsafe_arena_release_originator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.OrbitMeanElementsMetadata.originator)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::StringValue* temp = _impl_.originator_;
  _impl_.originator_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::_internal_mutable_originator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.originator_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::StringValue>(GetArena());
    _impl_.originator_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.originator_;
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::mutable_originator() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::StringValue* _msg = _internal_mutable_originator();
  // @@protoc_insertion_point(field_mutable:anduril.type.OrbitMeanElementsMetadata.originator)
  return _msg;
}
inline void OrbitMeanElementsMetadata::set_allocated_originator(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.originator_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.originator_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.OrbitMeanElementsMetadata.originator)
}

// .google.protobuf.StringValue message_id = 3 [json_name = "messageId"];
inline bool OrbitMeanElementsMetadata::has_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& OrbitMeanElementsMetadata::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::StringValue* p = _impl_.message_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& OrbitMeanElementsMetadata::message_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElementsMetadata.message_id)
  return _internal_message_id();
}
inline void OrbitMeanElementsMetadata::unsafe_arena_set_allocated_message_id(::google::protobuf::StringValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_id_);
  }
  _impl_.message_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.OrbitMeanElementsMetadata.message_id)
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::release_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::StringValue* released = _impl_.message_id_;
  _impl_.message_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::unsafe_arena_release_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.OrbitMeanElementsMetadata.message_id)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::StringValue* temp = _impl_.message_id_;
  _impl_.message_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::_internal_mutable_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::StringValue>(GetArena());
    _impl_.message_id_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.message_id_;
}
inline ::google::protobuf::StringValue* OrbitMeanElementsMetadata::mutable_message_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::StringValue* _msg = _internal_mutable_message_id();
  // @@protoc_insertion_point(field_mutable:anduril.type.OrbitMeanElementsMetadata.message_id)
  return _msg;
}
inline void OrbitMeanElementsMetadata::set_allocated_message_id(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.message_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.OrbitMeanElementsMetadata.message_id)
}

// .anduril.type.EciReferenceFrame ref_frame = 4 [json_name = "refFrame"];
inline void OrbitMeanElementsMetadata::clear_ref_frame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_frame_ = 0;
}
inline ::anduril::type::EciReferenceFrame OrbitMeanElementsMetadata::ref_frame() const {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElementsMetadata.ref_frame)
  return _internal_ref_frame();
}
inline void OrbitMeanElementsMetadata::set_ref_frame(::anduril::type::EciReferenceFrame value) {
  _internal_set_ref_frame(value);
  // @@protoc_insertion_point(field_set:anduril.type.OrbitMeanElementsMetadata.ref_frame)
}
inline ::anduril::type::EciReferenceFrame OrbitMeanElementsMetadata::_internal_ref_frame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::type::EciReferenceFrame>(_impl_.ref_frame_);
}
inline void OrbitMeanElementsMetadata::_internal_set_ref_frame(::anduril::type::EciReferenceFrame value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_frame_ = value;
}

// .google.protobuf.Timestamp ref_frame_epoch = 5 [json_name = "refFrameEpoch"];
inline bool OrbitMeanElementsMetadata::has_ref_frame_epoch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ref_frame_epoch_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrbitMeanElementsMetadata::_internal_ref_frame_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.ref_frame_epoch_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrbitMeanElementsMetadata::ref_frame_epoch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElementsMetadata.ref_frame_epoch)
  return _internal_ref_frame_epoch();
}
inline void OrbitMeanElementsMetadata::unsafe_arena_set_allocated_ref_frame_epoch(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ref_frame_epoch_);
  }
  _impl_.ref_frame_epoch_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.OrbitMeanElementsMetadata.ref_frame_epoch)
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::release_ref_frame_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.ref_frame_epoch_;
  _impl_.ref_frame_epoch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::unsafe_arena_release_ref_frame_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.OrbitMeanElementsMetadata.ref_frame_epoch)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.ref_frame_epoch_;
  _impl_.ref_frame_epoch_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::_internal_mutable_ref_frame_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ref_frame_epoch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.ref_frame_epoch_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.ref_frame_epoch_;
}
inline ::google::protobuf::Timestamp* OrbitMeanElementsMetadata::mutable_ref_frame_epoch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_ref_frame_epoch();
  // @@protoc_insertion_point(field_mutable:anduril.type.OrbitMeanElementsMetadata.ref_frame_epoch)
  return _msg;
}
inline void OrbitMeanElementsMetadata::set_allocated_ref_frame_epoch(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ref_frame_epoch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.ref_frame_epoch_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.OrbitMeanElementsMetadata.ref_frame_epoch)
}

// .anduril.type.MeanElementTheory mean_element_theory = 6 [json_name = "meanElementTheory"];
inline void OrbitMeanElementsMetadata::clear_mean_element_theory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mean_element_theory_ = 0;
}
inline ::anduril::type::MeanElementTheory OrbitMeanElementsMetadata::mean_element_theory() const {
  // @@protoc_insertion_point(field_get:anduril.type.OrbitMeanElementsMetadata.mean_element_theory)
  return _internal_mean_element_theory();
}
inline void OrbitMeanElementsMetadata::set_mean_element_theory(::anduril::type::MeanElementTheory value) {
  _internal_set_mean_element_theory(value);
  // @@protoc_insertion_point(field_set:anduril.type.OrbitMeanElementsMetadata.mean_element_theory)
}
inline ::anduril::type::MeanElementTheory OrbitMeanElementsMetadata::_internal_mean_element_theory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::type::MeanElementTheory>(_impl_.mean_element_theory_);
}
inline void OrbitMeanElementsMetadata::_internal_set_mean_element_theory(::anduril::type::MeanElementTheory value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mean_element_theory_ = value;
}

// -------------------------------------------------------------------

// MeanKeplerianElements

// .google.protobuf.Timestamp epoch = 1 [json_name = "epoch"];
inline bool MeanKeplerianElements::has_epoch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MeanKeplerianElements::_internal_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MeanKeplerianElements::epoch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.epoch)
  return _internal_epoch();
}
inline void MeanKeplerianElements::unsafe_arena_set_allocated_epoch(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_);
  }
  _impl_.epoch_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.MeanKeplerianElements.epoch)
}
inline ::google::protobuf::Timestamp* MeanKeplerianElements::release_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_;
  _impl_.epoch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* MeanKeplerianElements::unsafe_arena_release_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.MeanKeplerianElements.epoch)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_;
  _impl_.epoch_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* MeanKeplerianElements::_internal_mutable_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.epoch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_;
}
inline ::google::protobuf::Timestamp* MeanKeplerianElements::mutable_epoch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch();
  // @@protoc_insertion_point(field_mutable:anduril.type.MeanKeplerianElements.epoch)
  return _msg;
}
inline void MeanKeplerianElements::set_allocated_epoch(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epoch_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.MeanKeplerianElements.epoch)
}

// double semi_major_axis_km = 2 [json_name = "semiMajorAxisKm"];
inline bool MeanKeplerianElements::has_semi_major_axis_km() const {
  return line2_field8_case() == kSemiMajorAxisKm;
}
inline void MeanKeplerianElements::set_has_semi_major_axis_km() {
  _impl_._oneof_case_[0] = kSemiMajorAxisKm;
}
inline void MeanKeplerianElements::clear_semi_major_axis_km() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (line2_field8_case() == kSemiMajorAxisKm) {
    _impl_.line2_field8_.semi_major_axis_km_ = 0;
    clear_has_line2_field8();
  }
}
inline double MeanKeplerianElements::semi_major_axis_km() const {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.semi_major_axis_km)
  return _internal_semi_major_axis_km();
}
inline void MeanKeplerianElements::set_semi_major_axis_km(double value) {
  if (line2_field8_case() != kSemiMajorAxisKm) {
    clear_line2_field8();
    set_has_semi_major_axis_km();
  }
  _impl_.line2_field8_.semi_major_axis_km_ = value;
  // @@protoc_insertion_point(field_set:anduril.type.MeanKeplerianElements.semi_major_axis_km)
}
inline double MeanKeplerianElements::_internal_semi_major_axis_km() const {
  if (line2_field8_case() == kSemiMajorAxisKm) {
    return _impl_.line2_field8_.semi_major_axis_km_;
  }
  return 0;
}

// double mean_motion = 3 [json_name = "meanMotion"];
inline bool MeanKeplerianElements::has_mean_motion() const {
  return line2_field8_case() == kMeanMotion;
}
inline void MeanKeplerianElements::set_has_mean_motion() {
  _impl_._oneof_case_[0] = kMeanMotion;
}
inline void MeanKeplerianElements::clear_mean_motion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (line2_field8_case() == kMeanMotion) {
    _impl_.line2_field8_.mean_motion_ = 0;
    clear_has_line2_field8();
  }
}
inline double MeanKeplerianElements::mean_motion() const {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.mean_motion)
  return _internal_mean_motion();
}
inline void MeanKeplerianElements::set_mean_motion(double value) {
  if (line2_field8_case() != kMeanMotion) {
    clear_line2_field8();
    set_has_mean_motion();
  }
  _impl_.line2_field8_.mean_motion_ = value;
  // @@protoc_insertion_point(field_set:anduril.type.MeanKeplerianElements.mean_motion)
}
inline double MeanKeplerianElements::_internal_mean_motion() const {
  if (line2_field8_case() == kMeanMotion) {
    return _impl_.line2_field8_.mean_motion_;
  }
  return 0;
}

// double eccentricity = 4 [json_name = "eccentricity"];
inline void MeanKeplerianElements::clear_eccentricity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eccentricity_ = 0;
}
inline double MeanKeplerianElements::eccentricity() const {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.eccentricity)
  return _internal_eccentricity();
}
inline void MeanKeplerianElements::set_eccentricity(double value) {
  _internal_set_eccentricity(value);
  // @@protoc_insertion_point(field_set:anduril.type.MeanKeplerianElements.eccentricity)
}
inline double MeanKeplerianElements::_internal_eccentricity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eccentricity_;
}
inline void MeanKeplerianElements::_internal_set_eccentricity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eccentricity_ = value;
}

// double inclination_deg = 5 [json_name = "inclinationDeg"];
inline void MeanKeplerianElements::clear_inclination_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inclination_deg_ = 0;
}
inline double MeanKeplerianElements::inclination_deg() const {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.inclination_deg)
  return _internal_inclination_deg();
}
inline void MeanKeplerianElements::set_inclination_deg(double value) {
  _internal_set_inclination_deg(value);
  // @@protoc_insertion_point(field_set:anduril.type.MeanKeplerianElements.inclination_deg)
}
inline double MeanKeplerianElements::_internal_inclination_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inclination_deg_;
}
inline void MeanKeplerianElements::_internal_set_inclination_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inclination_deg_ = value;
}

// double ra_of_asc_node_deg = 6 [json_name = "raOfAscNodeDeg"];
inline void MeanKeplerianElements::clear_ra_of_asc_node_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ra_of_asc_node_deg_ = 0;
}
inline double MeanKeplerianElements::ra_of_asc_node_deg() const {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.ra_of_asc_node_deg)
  return _internal_ra_of_asc_node_deg();
}
inline void MeanKeplerianElements::set_ra_of_asc_node_deg(double value) {
  _internal_set_ra_of_asc_node_deg(value);
  // @@protoc_insertion_point(field_set:anduril.type.MeanKeplerianElements.ra_of_asc_node_deg)
}
inline double MeanKeplerianElements::_internal_ra_of_asc_node_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ra_of_asc_node_deg_;
}
inline void MeanKeplerianElements::_internal_set_ra_of_asc_node_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ra_of_asc_node_deg_ = value;
}

// double arg_of_pericenter_deg = 7 [json_name = "argOfPericenterDeg"];
inline void MeanKeplerianElements::clear_arg_of_pericenter_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arg_of_pericenter_deg_ = 0;
}
inline double MeanKeplerianElements::arg_of_pericenter_deg() const {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.arg_of_pericenter_deg)
  return _internal_arg_of_pericenter_deg();
}
inline void MeanKeplerianElements::set_arg_of_pericenter_deg(double value) {
  _internal_set_arg_of_pericenter_deg(value);
  // @@protoc_insertion_point(field_set:anduril.type.MeanKeplerianElements.arg_of_pericenter_deg)
}
inline double MeanKeplerianElements::_internal_arg_of_pericenter_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.arg_of_pericenter_deg_;
}
inline void MeanKeplerianElements::_internal_set_arg_of_pericenter_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arg_of_pericenter_deg_ = value;
}

// double mean_anomaly_deg = 8 [json_name = "meanAnomalyDeg"];
inline void MeanKeplerianElements::clear_mean_anomaly_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mean_anomaly_deg_ = 0;
}
inline double MeanKeplerianElements::mean_anomaly_deg() const {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.mean_anomaly_deg)
  return _internal_mean_anomaly_deg();
}
inline void MeanKeplerianElements::set_mean_anomaly_deg(double value) {
  _internal_set_mean_anomaly_deg(value);
  // @@protoc_insertion_point(field_set:anduril.type.MeanKeplerianElements.mean_anomaly_deg)
}
inline double MeanKeplerianElements::_internal_mean_anomaly_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mean_anomaly_deg_;
}
inline void MeanKeplerianElements::_internal_set_mean_anomaly_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mean_anomaly_deg_ = value;
}

// .google.protobuf.DoubleValue gm = 9 [json_name = "gm"];
inline bool MeanKeplerianElements::has_gm() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gm_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& MeanKeplerianElements::_internal_gm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.gm_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& MeanKeplerianElements::gm() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.MeanKeplerianElements.gm)
  return _internal_gm();
}
inline void MeanKeplerianElements::unsafe_arena_set_allocated_gm(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gm_);
  }
  _impl_.gm_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.MeanKeplerianElements.gm)
}
inline ::google::protobuf::DoubleValue* MeanKeplerianElements::release_gm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::DoubleValue* released = _impl_.gm_;
  _impl_.gm_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* MeanKeplerianElements::unsafe_arena_release_gm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.MeanKeplerianElements.gm)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::DoubleValue* temp = _impl_.gm_;
  _impl_.gm_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* MeanKeplerianElements::_internal_mutable_gm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gm_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.gm_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.gm_;
}
inline ::google::protobuf::DoubleValue* MeanKeplerianElements::mutable_gm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_gm();
  // @@protoc_insertion_point(field_mutable:anduril.type.MeanKeplerianElements.gm)
  return _msg;
}
inline void MeanKeplerianElements::set_allocated_gm(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gm_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.gm_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.MeanKeplerianElements.gm)
}

inline bool MeanKeplerianElements::has_line2_field8() const {
  return line2_field8_case() != LINE2_FIELD8_NOT_SET;
}
inline void MeanKeplerianElements::clear_has_line2_field8() {
  _impl_._oneof_case_[0] = LINE2_FIELD8_NOT_SET;
}
inline MeanKeplerianElements::Line2Field8Case MeanKeplerianElements::line2_field8_case() const {
  return MeanKeplerianElements::Line2Field8Case(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TleParameters

// .google.protobuf.UInt32Value ephemeris_type = 1 [json_name = "ephemerisType"];
inline bool TleParameters::has_ephemeris_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ephemeris_type_ != nullptr);
  return value;
}
inline const ::google::protobuf::UInt32Value& TleParameters::_internal_ephemeris_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::UInt32Value* p = _impl_.ephemeris_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::UInt32Value&>(::google::protobuf::_UInt32Value_default_instance_);
}
inline const ::google::protobuf::UInt32Value& TleParameters::ephemeris_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.ephemeris_type)
  return _internal_ephemeris_type();
}
inline void TleParameters::unsafe_arena_set_allocated_ephemeris_type(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ephemeris_type_);
  }
  _impl_.ephemeris_type_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.TleParameters.ephemeris_type)
}
inline ::google::protobuf::UInt32Value* TleParameters::release_ephemeris_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::UInt32Value* released = _impl_.ephemeris_type_;
  _impl_.ephemeris_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::UInt32Value* TleParameters::unsafe_arena_release_ephemeris_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.TleParameters.ephemeris_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::UInt32Value* temp = _impl_.ephemeris_type_;
  _impl_.ephemeris_type_ = nullptr;
  return temp;
}
inline ::google::protobuf::UInt32Value* TleParameters::_internal_mutable_ephemeris_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ephemeris_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::UInt32Value>(GetArena());
    _impl_.ephemeris_type_ = reinterpret_cast<::google::protobuf::UInt32Value*>(p);
  }
  return _impl_.ephemeris_type_;
}
inline ::google::protobuf::UInt32Value* TleParameters::mutable_ephemeris_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::UInt32Value* _msg = _internal_mutable_ephemeris_type();
  // @@protoc_insertion_point(field_mutable:anduril.type.TleParameters.ephemeris_type)
  return _msg;
}
inline void TleParameters::set_allocated_ephemeris_type(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ephemeris_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ephemeris_type_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.TleParameters.ephemeris_type)
}

// .google.protobuf.StringValue classification_type = 2 [json_name = "classificationType"];
inline bool TleParameters::has_classification_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.classification_type_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& TleParameters::_internal_classification_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::StringValue* p = _impl_.classification_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& TleParameters::classification_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.classification_type)
  return _internal_classification_type();
}
inline void TleParameters::unsafe_arena_set_allocated_classification_type(::google::protobuf::StringValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.classification_type_);
  }
  _impl_.classification_type_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.TleParameters.classification_type)
}
inline ::google::protobuf::StringValue* TleParameters::release_classification_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::StringValue* released = _impl_.classification_type_;
  _impl_.classification_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::StringValue* TleParameters::unsafe_arena_release_classification_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.TleParameters.classification_type)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::StringValue* temp = _impl_.classification_type_;
  _impl_.classification_type_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* TleParameters::_internal_mutable_classification_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.classification_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::StringValue>(GetArena());
    _impl_.classification_type_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.classification_type_;
}
inline ::google::protobuf::StringValue* TleParameters::mutable_classification_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::StringValue* _msg = _internal_mutable_classification_type();
  // @@protoc_insertion_point(field_mutable:anduril.type.TleParameters.classification_type)
  return _msg;
}
inline void TleParameters::set_allocated_classification_type(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.classification_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.classification_type_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.TleParameters.classification_type)
}

// .google.protobuf.UInt32Value norad_cat_id = 3 [json_name = "noradCatId"];
inline bool TleParameters::has_norad_cat_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.norad_cat_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::UInt32Value& TleParameters::_internal_norad_cat_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::UInt32Value* p = _impl_.norad_cat_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::UInt32Value&>(::google::protobuf::_UInt32Value_default_instance_);
}
inline const ::google::protobuf::UInt32Value& TleParameters::norad_cat_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.norad_cat_id)
  return _internal_norad_cat_id();
}
inline void TleParameters::unsafe_arena_set_allocated_norad_cat_id(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.norad_cat_id_);
  }
  _impl_.norad_cat_id_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.TleParameters.norad_cat_id)
}
inline ::google::protobuf::UInt32Value* TleParameters::release_norad_cat_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::UInt32Value* released = _impl_.norad_cat_id_;
  _impl_.norad_cat_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::UInt32Value* TleParameters::unsafe_arena_release_norad_cat_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.TleParameters.norad_cat_id)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::UInt32Value* temp = _impl_.norad_cat_id_;
  _impl_.norad_cat_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::UInt32Value* TleParameters::_internal_mutable_norad_cat_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.norad_cat_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::UInt32Value>(GetArena());
    _impl_.norad_cat_id_ = reinterpret_cast<::google::protobuf::UInt32Value*>(p);
  }
  return _impl_.norad_cat_id_;
}
inline ::google::protobuf::UInt32Value* TleParameters::mutable_norad_cat_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::UInt32Value* _msg = _internal_mutable_norad_cat_id();
  // @@protoc_insertion_point(field_mutable:anduril.type.TleParameters.norad_cat_id)
  return _msg;
}
inline void TleParameters::set_allocated_norad_cat_id(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.norad_cat_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.norad_cat_id_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.TleParameters.norad_cat_id)
}

// .google.protobuf.UInt32Value element_set_no = 4 [json_name = "elementSetNo"];
inline bool TleParameters::has_element_set_no() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.element_set_no_ != nullptr);
  return value;
}
inline const ::google::protobuf::UInt32Value& TleParameters::_internal_element_set_no() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::UInt32Value* p = _impl_.element_set_no_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::UInt32Value&>(::google::protobuf::_UInt32Value_default_instance_);
}
inline const ::google::protobuf::UInt32Value& TleParameters::element_set_no() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.element_set_no)
  return _internal_element_set_no();
}
inline void TleParameters::unsafe_arena_set_allocated_element_set_no(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.element_set_no_);
  }
  _impl_.element_set_no_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.TleParameters.element_set_no)
}
inline ::google::protobuf::UInt32Value* TleParameters::release_element_set_no() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::UInt32Value* released = _impl_.element_set_no_;
  _impl_.element_set_no_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::UInt32Value* TleParameters::unsafe_arena_release_element_set_no() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.TleParameters.element_set_no)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::UInt32Value* temp = _impl_.element_set_no_;
  _impl_.element_set_no_ = nullptr;
  return temp;
}
inline ::google::protobuf::UInt32Value* TleParameters::_internal_mutable_element_set_no() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.element_set_no_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::UInt32Value>(GetArena());
    _impl_.element_set_no_ = reinterpret_cast<::google::protobuf::UInt32Value*>(p);
  }
  return _impl_.element_set_no_;
}
inline ::google::protobuf::UInt32Value* TleParameters::mutable_element_set_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::UInt32Value* _msg = _internal_mutable_element_set_no();
  // @@protoc_insertion_point(field_mutable:anduril.type.TleParameters.element_set_no)
  return _msg;
}
inline void TleParameters::set_allocated_element_set_no(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.element_set_no_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.element_set_no_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.TleParameters.element_set_no)
}

// .google.protobuf.UInt32Value rev_at_epoch = 5 [json_name = "revAtEpoch"];
inline bool TleParameters::has_rev_at_epoch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rev_at_epoch_ != nullptr);
  return value;
}
inline const ::google::protobuf::UInt32Value& TleParameters::_internal_rev_at_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::UInt32Value* p = _impl_.rev_at_epoch_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::UInt32Value&>(::google::protobuf::_UInt32Value_default_instance_);
}
inline const ::google::protobuf::UInt32Value& TleParameters::rev_at_epoch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.rev_at_epoch)
  return _internal_rev_at_epoch();
}
inline void TleParameters::unsafe_arena_set_allocated_rev_at_epoch(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rev_at_epoch_);
  }
  _impl_.rev_at_epoch_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.TleParameters.rev_at_epoch)
}
inline ::google::protobuf::UInt32Value* TleParameters::release_rev_at_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::UInt32Value* released = _impl_.rev_at_epoch_;
  _impl_.rev_at_epoch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::UInt32Value* TleParameters::unsafe_arena_release_rev_at_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.TleParameters.rev_at_epoch)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::UInt32Value* temp = _impl_.rev_at_epoch_;
  _impl_.rev_at_epoch_ = nullptr;
  return temp;
}
inline ::google::protobuf::UInt32Value* TleParameters::_internal_mutable_rev_at_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rev_at_epoch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::UInt32Value>(GetArena());
    _impl_.rev_at_epoch_ = reinterpret_cast<::google::protobuf::UInt32Value*>(p);
  }
  return _impl_.rev_at_epoch_;
}
inline ::google::protobuf::UInt32Value* TleParameters::mutable_rev_at_epoch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::google::protobuf::UInt32Value* _msg = _internal_mutable_rev_at_epoch();
  // @@protoc_insertion_point(field_mutable:anduril.type.TleParameters.rev_at_epoch)
  return _msg;
}
inline void TleParameters::set_allocated_rev_at_epoch(::google::protobuf::UInt32Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rev_at_epoch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.rev_at_epoch_ = reinterpret_cast<::google::protobuf::UInt32Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.TleParameters.rev_at_epoch)
}

// double bstar = 6 [json_name = "bstar"];
inline bool TleParameters::has_bstar() const {
  return line1_field11_case() == kBstar;
}
inline void TleParameters::set_has_bstar() {
  _impl_._oneof_case_[0] = kBstar;
}
inline void TleParameters::clear_bstar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (line1_field11_case() == kBstar) {
    _impl_.line1_field11_.bstar_ = 0;
    clear_has_line1_field11();
  }
}
inline double TleParameters::bstar() const {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.bstar)
  return _internal_bstar();
}
inline void TleParameters::set_bstar(double value) {
  if (line1_field11_case() != kBstar) {
    clear_line1_field11();
    set_has_bstar();
  }
  _impl_.line1_field11_.bstar_ = value;
  // @@protoc_insertion_point(field_set:anduril.type.TleParameters.bstar)
}
inline double TleParameters::_internal_bstar() const {
  if (line1_field11_case() == kBstar) {
    return _impl_.line1_field11_.bstar_;
  }
  return 0;
}

// double bterm = 7 [json_name = "bterm"];
inline bool TleParameters::has_bterm() const {
  return line1_field11_case() == kBterm;
}
inline void TleParameters::set_has_bterm() {
  _impl_._oneof_case_[0] = kBterm;
}
inline void TleParameters::clear_bterm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (line1_field11_case() == kBterm) {
    _impl_.line1_field11_.bterm_ = 0;
    clear_has_line1_field11();
  }
}
inline double TleParameters::bterm() const {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.bterm)
  return _internal_bterm();
}
inline void TleParameters::set_bterm(double value) {
  if (line1_field11_case() != kBterm) {
    clear_line1_field11();
    set_has_bterm();
  }
  _impl_.line1_field11_.bterm_ = value;
  // @@protoc_insertion_point(field_set:anduril.type.TleParameters.bterm)
}
inline double TleParameters::_internal_bterm() const {
  if (line1_field11_case() == kBterm) {
    return _impl_.line1_field11_.bterm_;
  }
  return 0;
}

// .google.protobuf.DoubleValue mean_motion_dot = 8 [json_name = "meanMotionDot"];
inline bool TleParameters::has_mean_motion_dot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mean_motion_dot_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& TleParameters::_internal_mean_motion_dot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.mean_motion_dot_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& TleParameters::mean_motion_dot() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.mean_motion_dot)
  return _internal_mean_motion_dot();
}
inline void TleParameters::unsafe_arena_set_allocated_mean_motion_dot(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mean_motion_dot_);
  }
  _impl_.mean_motion_dot_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.TleParameters.mean_motion_dot)
}
inline ::google::protobuf::DoubleValue* TleParameters::release_mean_motion_dot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::DoubleValue* released = _impl_.mean_motion_dot_;
  _impl_.mean_motion_dot_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* TleParameters::unsafe_arena_release_mean_motion_dot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.TleParameters.mean_motion_dot)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::DoubleValue* temp = _impl_.mean_motion_dot_;
  _impl_.mean_motion_dot_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* TleParameters::_internal_mutable_mean_motion_dot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mean_motion_dot_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.mean_motion_dot_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.mean_motion_dot_;
}
inline ::google::protobuf::DoubleValue* TleParameters::mutable_mean_motion_dot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_mean_motion_dot();
  // @@protoc_insertion_point(field_mutable:anduril.type.TleParameters.mean_motion_dot)
  return _msg;
}
inline void TleParameters::set_allocated_mean_motion_dot(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mean_motion_dot_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.mean_motion_dot_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.TleParameters.mean_motion_dot)
}

// double mean_motion_ddot = 9 [json_name = "meanMotionDdot"];
inline bool TleParameters::has_mean_motion_ddot() const {
  return line1_field10_case() == kMeanMotionDdot;
}
inline void TleParameters::set_has_mean_motion_ddot() {
  _impl_._oneof_case_[1] = kMeanMotionDdot;
}
inline void TleParameters::clear_mean_motion_ddot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (line1_field10_case() == kMeanMotionDdot) {
    _impl_.line1_field10_.mean_motion_ddot_ = 0;
    clear_has_line1_field10();
  }
}
inline double TleParameters::mean_motion_ddot() const {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.mean_motion_ddot)
  return _internal_mean_motion_ddot();
}
inline void TleParameters::set_mean_motion_ddot(double value) {
  if (line1_field10_case() != kMeanMotionDdot) {
    clear_line1_field10();
    set_has_mean_motion_ddot();
  }
  _impl_.line1_field10_.mean_motion_ddot_ = value;
  // @@protoc_insertion_point(field_set:anduril.type.TleParameters.mean_motion_ddot)
}
inline double TleParameters::_internal_mean_motion_ddot() const {
  if (line1_field10_case() == kMeanMotionDdot) {
    return _impl_.line1_field10_.mean_motion_ddot_;
  }
  return 0;
}

// double agom = 10 [json_name = "agom"];
inline bool TleParameters::has_agom() const {
  return line1_field10_case() == kAgom;
}
inline void TleParameters::set_has_agom() {
  _impl_._oneof_case_[1] = kAgom;
}
inline void TleParameters::clear_agom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (line1_field10_case() == kAgom) {
    _impl_.line1_field10_.agom_ = 0;
    clear_has_line1_field10();
  }
}
inline double TleParameters::agom() const {
  // @@protoc_insertion_point(field_get:anduril.type.TleParameters.agom)
  return _internal_agom();
}
inline void TleParameters::set_agom(double value) {
  if (line1_field10_case() != kAgom) {
    clear_line1_field10();
    set_has_agom();
  }
  _impl_.line1_field10_.agom_ = value;
  // @@protoc_insertion_point(field_set:anduril.type.TleParameters.agom)
}
inline double TleParameters::_internal_agom() const {
  if (line1_field10_case() == kAgom) {
    return _impl_.line1_field10_.agom_;
  }
  return 0;
}

inline bool TleParameters::has_line1_field11() const {
  return line1_field11_case() != LINE1_FIELD11_NOT_SET;
}
inline void TleParameters::clear_has_line1_field11() {
  _impl_._oneof_case_[0] = LINE1_FIELD11_NOT_SET;
}
inline bool TleParameters::has_line1_field10() const {
  return line1_field10_case() != LINE1_FIELD10_NOT_SET;
}
inline void TleParameters::clear_has_line1_field10() {
  _impl_._oneof_case_[1] = LINE1_FIELD10_NOT_SET;
}
inline TleParameters::Line1Field11Case TleParameters::line1_field11_case() const {
  return TleParameters::Line1Field11Case(_impl_._oneof_case_[0]);
}
inline TleParameters::Line1Field10Case TleParameters::line1_field10_case() const {
  return TleParameters::Line1Field10Case(_impl_._oneof_case_[1]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::type::MeanElementTheory> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::type::MeanElementTheory>() {
  return ::anduril::type::MeanElementTheory_descriptor();
}
template <>
struct is_proto_enum<::anduril::type::EciReferenceFrame> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::type::EciReferenceFrame>() {
  return ::anduril::type::EciReferenceFrame_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2ftype_2forbit_2epub_2eproto_2epb_2eh
