// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/type/coords.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/type/coords.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace type {

inline constexpr YawPitch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : yaw_{0},
        pitch_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR YawPitch::YawPitch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct YawPitchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR YawPitchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~YawPitchDefaultTypeInternal() {}
  union {
    YawPitch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 YawPitchDefaultTypeInternal _YawPitch_default_instance_;

inline constexpr YPR::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : yaw_{0},
        pitch_{0},
        roll_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR YPR::YPR(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct YPRDefaultTypeInternal {
  PROTOBUF_CONSTEXPR YPRDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~YPRDefaultTypeInternal() {}
  union {
    YPR _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 YPRDefaultTypeInternal _YPR_default_instance_;

inline constexpr Vec3f::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vec3f::Vec3f(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vec3fDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vec3fDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vec3fDefaultTypeInternal() {}
  union {
    Vec3f _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vec3fDefaultTypeInternal _Vec3f_default_instance_;

inline constexpr Vec3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vec3::Vec3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vec3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vec3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vec3DefaultTypeInternal() {}
  union {
    Vec3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vec3DefaultTypeInternal _Vec3_default_instance_;

inline constexpr Vec2f::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vec2f::Vec2f(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vec2fDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vec2fDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vec2fDefaultTypeInternal() {}
  union {
    Vec2f _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vec2fDefaultTypeInternal _Vec2f_default_instance_;

inline constexpr Vec2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vec2::Vec2(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vec2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vec2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vec2DefaultTypeInternal() {}
  union {
    Vec2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vec2DefaultTypeInternal _Vec2_default_instance_;

inline constexpr Uint64Range::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : min_{::uint64_t{0u}},
        max_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Uint64Range::Uint64Range(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Uint64RangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Uint64RangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Uint64RangeDefaultTypeInternal() {}
  union {
    Uint64Range _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Uint64RangeDefaultTypeInternal _Uint64Range_default_instance_;

inline constexpr ThetaPhi::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : theta_{0},
        phi_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ThetaPhi::ThetaPhi(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ThetaPhiDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThetaPhiDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThetaPhiDefaultTypeInternal() {}
  union {
    ThetaPhi _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThetaPhiDefaultTypeInternal _ThetaPhi_default_instance_;

inline constexpr TMat4f::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : m00_{0},
        m01_{0},
        m02_{0},
        m03_{0},
        m11_{0},
        m12_{0},
        m13_{0},
        m22_{0},
        m23_{0},
        m33_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TMat4f::TMat4f(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TMat4fDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TMat4fDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TMat4fDefaultTypeInternal() {}
  union {
    TMat4f _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TMat4fDefaultTypeInternal _TMat4f_default_instance_;

inline constexpr TMat3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mxx_{0},
        mxy_{0},
        mxz_{0},
        myy_{0},
        myz_{0},
        mzz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TMat3::TMat3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TMat3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TMat3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TMat3DefaultTypeInternal() {}
  union {
    TMat3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TMat3DefaultTypeInternal _TMat3_default_instance_;

inline constexpr TMat2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mxx_{0},
        mxy_{0},
        myy_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TMat2::TMat2(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TMat2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TMat2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TMat2DefaultTypeInternal() {}
  union {
    TMat2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TMat2DefaultTypeInternal _TMat2_default_instance_;

inline constexpr Spherical::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : az_{0},
        el_{0},
        range_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Spherical::Spherical(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SphericalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SphericalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SphericalDefaultTypeInternal() {}
  union {
    Spherical _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SphericalDefaultTypeInternal _Spherical_default_instance_;

inline constexpr Quaternion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        w_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quaternion::Quaternion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;

inline constexpr LLA::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lon_{0},
        lat_{0},
        alt_{0},
        is2d_{false},
        altitude_reference_{static_cast< ::anduril::type::LLA_AltitudeReference >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LLA::LLA(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LLADefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLADefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLADefaultTypeInternal() {}
  union {
    LLA _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLADefaultTypeInternal _LLA_default_instance_;

inline constexpr ENU::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : e_{0},
        n_{0},
        u_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ENU::ENU(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ENUDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ENUDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ENUDefaultTypeInternal() {}
  union {
    ENU _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ENUDefaultTypeInternal _ENU_default_instance_;

inline constexpr ECI::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ECI::ECI(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ECIDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ECIDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ECIDefaultTypeInternal() {}
  union {
    ECI _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ECIDefaultTypeInternal _ECI_default_instance_;

inline constexpr DoubleRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : min_{0},
        max_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DoubleRange::DoubleRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DoubleRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoubleRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoubleRangeDefaultTypeInternal() {}
  union {
    DoubleRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoubleRangeDefaultTypeInternal _DoubleRange_default_instance_;

inline constexpr RigidTransform::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rotation_{nullptr},
        translation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RigidTransform::RigidTransform(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RigidTransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RigidTransformDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RigidTransformDefaultTypeInternal() {}
  union {
    RigidTransform _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RigidTransformDefaultTypeInternal _RigidTransform_default_instance_;

inline constexpr Pose::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        att_enu_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Pose::Pose(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PoseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PoseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PoseDefaultTypeInternal() {}
  union {
    Pose _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PoseDefaultTypeInternal _Pose_default_instance_;

inline constexpr LLAPolygon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : points_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LLAPolygon::LLAPolygon(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LLAPolygonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLAPolygonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLAPolygonDefaultTypeInternal() {}
  union {
    LLAPolygon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLAPolygonDefaultTypeInternal _LLAPolygon_default_instance_;

inline constexpr LLAPath::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : points_{},
        loop_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LLAPath::LLAPath(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LLAPathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLAPathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLAPathDefaultTypeInternal() {}
  union {
    LLAPath _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLAPathDefaultTypeInternal _LLAPath_default_instance_;

inline constexpr AERPolygon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : points_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AERPolygon::AERPolygon(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AERPolygonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AERPolygonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AERPolygonDefaultTypeInternal() {}
  union {
    AERPolygon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AERPolygonDefaultTypeInternal _AERPolygon_default_instance_;
}  // namespace type
}  // namespace anduril
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2ftype_2fcoords_2epub_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftype_2fcoords_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2ftype_2fcoords_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::ThetaPhi, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::ThetaPhi, _impl_.theta_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::ThetaPhi, _impl_.phi_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLA, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLA, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLA, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLA, _impl_.alt_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLA, _impl_.is2d_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLA, _impl_.altitude_reference_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::ENU, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::ENU, _impl_.e_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::ENU, _impl_.n_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::ENU, _impl_.u_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::ECI, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::ECI, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::ECI, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::ECI, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec2, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec2, _impl_.y_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec2f, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec2f, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec2f, _impl_.y_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3f, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3f, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3f, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Vec3f, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::Quaternion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Quaternion, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Quaternion, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Quaternion, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Quaternion, _impl_.w_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::YawPitch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::YawPitch, _impl_.yaw_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::YawPitch, _impl_.pitch_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::YPR, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::YPR, _impl_.yaw_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::YPR, _impl_.pitch_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::YPR, _impl_.roll_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Pose, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Pose, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Pose, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Pose, _impl_.att_enu_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLAPolygon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLAPolygon, _impl_.points_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::AERPolygon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::AERPolygon, _impl_.points_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLAPath, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLAPath, _impl_.points_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::LLAPath, _impl_.loop_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::Spherical, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Spherical, _impl_.az_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Spherical, _impl_.el_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Spherical, _impl_.range_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::DoubleRange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::DoubleRange, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::DoubleRange, _impl_.max_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::Uint64Range, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::Uint64Range, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::Uint64Range, _impl_.max_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m00_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m01_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m02_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m03_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m11_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m12_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m13_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m22_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m23_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat4f, _impl_.m33_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat3, _impl_.mxx_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat3, _impl_.mxy_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat3, _impl_.mxz_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat3, _impl_.myy_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat3, _impl_.myz_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat3, _impl_.mzz_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat2, _impl_.mxx_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat2, _impl_.mxy_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::TMat2, _impl_.myy_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::RigidTransform, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::RigidTransform, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::type::RigidTransform, _impl_.rotation_),
        PROTOBUF_FIELD_OFFSET(::anduril::type::RigidTransform, _impl_.translation_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::type::ThetaPhi)},
        {10, -1, -1, sizeof(::anduril::type::LLA)},
        {23, -1, -1, sizeof(::anduril::type::ENU)},
        {34, -1, -1, sizeof(::anduril::type::ECI)},
        {45, -1, -1, sizeof(::anduril::type::Vec2)},
        {55, -1, -1, sizeof(::anduril::type::Vec2f)},
        {65, -1, -1, sizeof(::anduril::type::Vec3)},
        {76, -1, -1, sizeof(::anduril::type::Vec3f)},
        {87, -1, -1, sizeof(::anduril::type::Quaternion)},
        {99, -1, -1, sizeof(::anduril::type::YawPitch)},
        {109, -1, -1, sizeof(::anduril::type::YPR)},
        {120, 130, -1, sizeof(::anduril::type::Pose)},
        {132, -1, -1, sizeof(::anduril::type::LLAPolygon)},
        {141, -1, -1, sizeof(::anduril::type::AERPolygon)},
        {150, -1, -1, sizeof(::anduril::type::LLAPath)},
        {160, -1, -1, sizeof(::anduril::type::Spherical)},
        {171, -1, -1, sizeof(::anduril::type::DoubleRange)},
        {181, -1, -1, sizeof(::anduril::type::Uint64Range)},
        {191, -1, -1, sizeof(::anduril::type::TMat4f)},
        {209, -1, -1, sizeof(::anduril::type::TMat3)},
        {223, -1, -1, sizeof(::anduril::type::TMat2)},
        {234, 244, -1, sizeof(::anduril::type::RigidTransform)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::type::_ThetaPhi_default_instance_._instance,
    &::anduril::type::_LLA_default_instance_._instance,
    &::anduril::type::_ENU_default_instance_._instance,
    &::anduril::type::_ECI_default_instance_._instance,
    &::anduril::type::_Vec2_default_instance_._instance,
    &::anduril::type::_Vec2f_default_instance_._instance,
    &::anduril::type::_Vec3_default_instance_._instance,
    &::anduril::type::_Vec3f_default_instance_._instance,
    &::anduril::type::_Quaternion_default_instance_._instance,
    &::anduril::type::_YawPitch_default_instance_._instance,
    &::anduril::type::_YPR_default_instance_._instance,
    &::anduril::type::_Pose_default_instance_._instance,
    &::anduril::type::_LLAPolygon_default_instance_._instance,
    &::anduril::type::_AERPolygon_default_instance_._instance,
    &::anduril::type::_LLAPath_default_instance_._instance,
    &::anduril::type::_Spherical_default_instance_._instance,
    &::anduril::type::_DoubleRange_default_instance_._instance,
    &::anduril::type::_Uint64Range_default_instance_._instance,
    &::anduril::type::_TMat4f_default_instance_._instance,
    &::anduril::type::_TMat3_default_instance_._instance,
    &::anduril::type::_TMat2_default_instance_._instance,
    &::anduril::type::_RigidTransform_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftype_2fcoords_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035anduril/type/coords.pub.proto\022\014anduril"
    ".type\"2\n\010ThetaPhi\022\024\n\005theta\030\001 \001(\001R\005theta\022"
    "\020\n\003phi\030\002 \001(\001R\003phi\"\304\003\n\003LLA\022\020\n\003lon\030\001 \001(\001R\003"
    "lon\022\020\n\003lat\030\002 \001(\001R\003lat\022\020\n\003alt\030\003 \001(\001R\003alt\022"
    "\022\n\004is2d\030\004 \001(\010R\004is2d\022R\n\022altitude_referenc"
    "e\030\005 \001(\0162#.anduril.type.LLA.AltitudeRefer"
    "enceR\021altitudeReference\"\236\002\n\021AltitudeRefe"
    "rence\022\036\n\032ALTITUDE_REFERENCE_INVALID\020\000\022)\n"
    "%ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84\020\001"
    "\022)\n%ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM9"
    "6\020\002\022\036\n\032ALTITUDE_REFERENCE_UNKNOWN\020\003\022!\n\035A"
    "LTITUDE_REFERENCE_BAROMETRIC\020\004\022&\n\"ALTITU"
    "DE_REFERENCE_ABOVE_SEA_FLOOR\020\005\022(\n$ALTITU"
    "DE_REFERENCE_BELOW_SEA_SURFACE\020\006\"/\n\003ENU\022"
    "\014\n\001e\030\001 \001(\001R\001e\022\014\n\001n\030\002 \001(\001R\001n\022\014\n\001u\030\003 \001(\001R\001"
    "u\"/\n\003ECI\022\014\n\001x\030\001 \001(\001R\001x\022\014\n\001y\030\002 \001(\001R\001y\022\014\n\001"
    "z\030\003 \001(\001R\001z\"\"\n\004Vec2\022\014\n\001x\030\001 \001(\001R\001x\022\014\n\001y\030\002 "
    "\001(\001R\001y\"#\n\005Vec2f\022\014\n\001x\030\001 \001(\002R\001x\022\014\n\001y\030\002 \001(\002"
    "R\001y\"0\n\004Vec3\022\014\n\001x\030\001 \001(\001R\001x\022\014\n\001y\030\002 \001(\001R\001y\022"
    "\014\n\001z\030\003 \001(\001R\001z\"1\n\005Vec3f\022\014\n\001x\030\001 \001(\002R\001x\022\014\n\001"
    "y\030\002 \001(\002R\001y\022\014\n\001z\030\003 \001(\002R\001z\"D\n\nQuaternion\022\014"
    "\n\001x\030\001 \001(\001R\001x\022\014\n\001y\030\002 \001(\001R\001y\022\014\n\001z\030\003 \001(\001R\001z"
    "\022\014\n\001w\030\004 \001(\001R\001w\"2\n\010YawPitch\022\020\n\003yaw\030\001 \001(\001R"
    "\003yaw\022\024\n\005pitch\030\002 \001(\001R\005pitch\"A\n\003YPR\022\020\n\003yaw"
    "\030\001 \001(\001R\003yaw\022\024\n\005pitch\030\002 \001(\001R\005pitch\022\022\n\004rol"
    "l\030\003 \001(\001R\004roll\"^\n\004Pose\022#\n\003pos\030\001 \001(\0132\021.and"
    "uril.type.LLAR\003pos\0221\n\007att_enu\030\002 \001(\0132\030.an"
    "duril.type.QuaternionR\006attEnu\"7\n\nLLAPoly"
    "gon\022)\n\006points\030\001 \003(\0132\021.anduril.type.LLAR\006"
    "points\"=\n\nAERPolygon\022/\n\006points\030\001 \003(\0132\027.a"
    "nduril.type.SphericalR\006points\"H\n\007LLAPath"
    "\022)\n\006points\030\001 \003(\0132\021.anduril.type.LLAR\006poi"
    "nts\022\022\n\004loop\030\002 \001(\010R\004loop\"A\n\tSpherical\022\016\n\002"
    "az\030\001 \001(\001R\002az\022\016\n\002el\030\002 \001(\001R\002el\022\024\n\005range\030\003 "
    "\001(\001R\005range\"1\n\013DoubleRange\022\020\n\003min\030\001 \001(\001R\003"
    "min\022\020\n\003max\030\002 \001(\001R\003max\"1\n\013Uint64Range\022\020\n\003"
    "min\030\001 \001(\004R\003min\022\020\n\003max\030\002 \001(\004R\003max\"\274\001\n\006TMa"
    "t4f\022\020\n\003m00\030\001 \001(\002R\003m00\022\020\n\003m01\030\002 \001(\002R\003m01\022"
    "\020\n\003m02\030\003 \001(\002R\003m02\022\020\n\003m03\030\004 \001(\002R\003m03\022\020\n\003m"
    "11\030\005 \001(\002R\003m11\022\020\n\003m12\030\006 \001(\002R\003m12\022\020\n\003m13\030\007"
    " \001(\002R\003m13\022\020\n\003m22\030\010 \001(\002R\003m22\022\020\n\003m23\030\t \001(\002"
    "R\003m23\022\020\n\003m33\030\n \001(\002R\003m33\"s\n\005TMat3\022\020\n\003mxx\030"
    "\001 \001(\001R\003mxx\022\020\n\003mxy\030\002 \001(\001R\003mxy\022\020\n\003mxz\030\003 \001("
    "\001R\003mxz\022\020\n\003myy\030\004 \001(\001R\003myy\022\020\n\003myz\030\005 \001(\001R\003m"
    "yz\022\020\n\003mzz\030\006 \001(\001R\003mzz\"=\n\005TMat2\022\020\n\003mxx\030\001 \001"
    "(\001R\003mxx\022\020\n\003mxy\030\002 \001(\001R\003mxy\022\020\n\003myy\030\003 \001(\001R\003"
    "myy\"|\n\016RigidTransform\0224\n\010rotation\030\003 \001(\0132"
    "\030.anduril.type.QuaternionR\010rotation\0224\n\013t"
    "ranslation\030\004 \001(\0132\022.anduril.type.Vec3R\013tr"
    "anslationB\257\001\n\020com.anduril.typeB\016CoordsPu"
    "bProtoP\001Z:ghe.anduril.dev/anduril/anduri"
    "lapis-go/anduril/type;atypes\242\002\003ATX\252\002\014And"
    "uril.Type\312\002\014Anduril\\Type\342\002\030Anduril\\Type\\"
    "GPBMetadata\352\002\rAnduril::Typeb\006proto3"
};
static ::absl::once_flag descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto = {
    false,
    false,
    2155,
    descriptor_table_protodef_anduril_2ftype_2fcoords_2epub_2eproto,
    "anduril/type/coords.pub.proto",
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto_once,
    nullptr,
    0,
    22,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftype_2fcoords_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2ftype_2fcoords_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftype_2fcoords_2epub_2eproto,
};
namespace anduril {
namespace type {
const ::google::protobuf::EnumDescriptor* LLA_AltitudeReference_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftype_2fcoords_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LLA_AltitudeReference_internal_data_[] = {
    458752u, 0u, };
bool LLA_AltitudeReference_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LLA_AltitudeReference LLA::ALTITUDE_REFERENCE_INVALID;
constexpr LLA_AltitudeReference LLA::ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84;
constexpr LLA_AltitudeReference LLA::ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM96;
constexpr LLA_AltitudeReference LLA::ALTITUDE_REFERENCE_UNKNOWN;
constexpr LLA_AltitudeReference LLA::ALTITUDE_REFERENCE_BAROMETRIC;
constexpr LLA_AltitudeReference LLA::ALTITUDE_REFERENCE_ABOVE_SEA_FLOOR;
constexpr LLA_AltitudeReference LLA::ALTITUDE_REFERENCE_BELOW_SEA_SURFACE;
constexpr LLA_AltitudeReference LLA::AltitudeReference_MIN;
constexpr LLA_AltitudeReference LLA::AltitudeReference_MAX;
constexpr int LLA::AltitudeReference_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ThetaPhi::_Internal {
 public:
};

ThetaPhi::ThetaPhi(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.ThetaPhi)
}
ThetaPhi::ThetaPhi(
    ::google::protobuf::Arena* arena, const ThetaPhi& from)
    : ThetaPhi(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ThetaPhi::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ThetaPhi::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, theta_),
           0,
           offsetof(Impl_, phi_) -
               offsetof(Impl_, theta_) +
               sizeof(Impl_::phi_));
}
ThetaPhi::~ThetaPhi() {
  // @@protoc_insertion_point(destructor:anduril.type.ThetaPhi)
  SharedDtor(*this);
}
inline void ThetaPhi::SharedDtor(MessageLite& self) {
  ThetaPhi& this_ = static_cast<ThetaPhi&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ThetaPhi::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ThetaPhi(arena);
}
constexpr auto ThetaPhi::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ThetaPhi),
                                            alignof(ThetaPhi));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ThetaPhi::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ThetaPhi_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ThetaPhi::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ThetaPhi>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ThetaPhi::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ThetaPhi>(), &ThetaPhi::ByteSizeLong,
            &ThetaPhi::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ThetaPhi, _impl_._cached_size_),
        false,
    },
    &ThetaPhi::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ThetaPhi::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ThetaPhi::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::ThetaPhi>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double phi = 2 [json_name = "phi"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(ThetaPhi, _impl_.phi_)}},
    // double theta = 1 [json_name = "theta"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(ThetaPhi, _impl_.theta_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double theta = 1 [json_name = "theta"];
    {PROTOBUF_FIELD_OFFSET(ThetaPhi, _impl_.theta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double phi = 2 [json_name = "phi"];
    {PROTOBUF_FIELD_OFFSET(ThetaPhi, _impl_.phi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ThetaPhi::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.ThetaPhi)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.theta_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.phi_) -
      reinterpret_cast<char*>(&_impl_.theta_)) + sizeof(_impl_.phi_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ThetaPhi::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ThetaPhi& this_ = static_cast<const ThetaPhi&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ThetaPhi::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ThetaPhi& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.ThetaPhi)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double theta = 1 [json_name = "theta"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_theta()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_theta(), target);
          }

          // double phi = 2 [json_name = "phi"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_phi()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_phi(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.ThetaPhi)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ThetaPhi::ByteSizeLong(const MessageLite& base) {
          const ThetaPhi& this_ = static_cast<const ThetaPhi&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ThetaPhi::ByteSizeLong() const {
          const ThetaPhi& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.ThetaPhi)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double theta = 1 [json_name = "theta"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_theta()) != 0) {
              total_size += 9;
            }
            // double phi = 2 [json_name = "phi"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_phi()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ThetaPhi::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ThetaPhi*>(&to_msg);
  auto& from = static_cast<const ThetaPhi&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.ThetaPhi)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_theta()) != 0) {
    _this->_impl_.theta_ = from._impl_.theta_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_phi()) != 0) {
    _this->_impl_.phi_ = from._impl_.phi_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ThetaPhi::CopyFrom(const ThetaPhi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.ThetaPhi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ThetaPhi::InternalSwap(ThetaPhi* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ThetaPhi, _impl_.phi_)
      + sizeof(ThetaPhi::_impl_.phi_)
      - PROTOBUF_FIELD_OFFSET(ThetaPhi, _impl_.theta_)>(
          reinterpret_cast<char*>(&_impl_.theta_),
          reinterpret_cast<char*>(&other->_impl_.theta_));
}

::google::protobuf::Metadata ThetaPhi::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LLA::_Internal {
 public:
};

LLA::LLA(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.LLA)
}
LLA::LLA(
    ::google::protobuf::Arena* arena, const LLA& from)
    : LLA(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LLA::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LLA::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lon_),
           0,
           offsetof(Impl_, altitude_reference_) -
               offsetof(Impl_, lon_) +
               sizeof(Impl_::altitude_reference_));
}
LLA::~LLA() {
  // @@protoc_insertion_point(destructor:anduril.type.LLA)
  SharedDtor(*this);
}
inline void LLA::SharedDtor(MessageLite& self) {
  LLA& this_ = static_cast<LLA&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LLA::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LLA(arena);
}
constexpr auto LLA::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LLA),
                                            alignof(LLA));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LLA::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LLA_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LLA::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LLA>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LLA::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LLA>(), &LLA::ByteSizeLong,
            &LLA::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LLA, _impl_._cached_size_),
        false,
    },
    &LLA::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LLA::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> LLA::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::LLA>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double lon = 1 [json_name = "lon"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(LLA, _impl_.lon_)}},
    // double lat = 2 [json_name = "lat"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(LLA, _impl_.lat_)}},
    // double alt = 3 [json_name = "alt"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(LLA, _impl_.alt_)}},
    // bool is2d = 4 [json_name = "is2d"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LLA, _impl_.is2d_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(LLA, _impl_.is2d_)}},
    // .anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LLA, _impl_.altitude_reference_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(LLA, _impl_.altitude_reference_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double lon = 1 [json_name = "lon"];
    {PROTOBUF_FIELD_OFFSET(LLA, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double lat = 2 [json_name = "lat"];
    {PROTOBUF_FIELD_OFFSET(LLA, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double alt = 3 [json_name = "alt"];
    {PROTOBUF_FIELD_OFFSET(LLA, _impl_.alt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool is2d = 4 [json_name = "is2d"];
    {PROTOBUF_FIELD_OFFSET(LLA, _impl_.is2d_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];
    {PROTOBUF_FIELD_OFFSET(LLA, _impl_.altitude_reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LLA::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.LLA)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lon_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.altitude_reference_) -
      reinterpret_cast<char*>(&_impl_.lon_)) + sizeof(_impl_.altitude_reference_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LLA::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LLA& this_ = static_cast<const LLA&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LLA::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LLA& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.LLA)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double lon = 1 [json_name = "lon"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_lon(), target);
          }

          // double lat = 2 [json_name = "lat"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_lat(), target);
          }

          // double alt = 3 [json_name = "alt"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_alt()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_alt(), target);
          }

          // bool is2d = 4 [json_name = "is2d"];
          if (this_._internal_is2d() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is2d(), target);
          }

          // .anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];
          if (this_._internal_altitude_reference() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_altitude_reference(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.LLA)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LLA::ByteSizeLong(const MessageLite& base) {
          const LLA& this_ = static_cast<const LLA&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LLA::ByteSizeLong() const {
          const LLA& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.LLA)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double lon = 1 [json_name = "lon"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
              total_size += 9;
            }
            // double lat = 2 [json_name = "lat"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
              total_size += 9;
            }
            // double alt = 3 [json_name = "alt"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_alt()) != 0) {
              total_size += 9;
            }
            // bool is2d = 4 [json_name = "is2d"];
            if (this_._internal_is2d() != 0) {
              total_size += 2;
            }
            // .anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];
            if (this_._internal_altitude_reference() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_altitude_reference());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LLA::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LLA*>(&to_msg);
  auto& from = static_cast<const LLA&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.LLA)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_lon()) != 0) {
    _this->_impl_.lon_ = from._impl_.lon_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_lat()) != 0) {
    _this->_impl_.lat_ = from._impl_.lat_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_alt()) != 0) {
    _this->_impl_.alt_ = from._impl_.alt_;
  }
  if (from._internal_is2d() != 0) {
    _this->_impl_.is2d_ = from._impl_.is2d_;
  }
  if (from._internal_altitude_reference() != 0) {
    _this->_impl_.altitude_reference_ = from._impl_.altitude_reference_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LLA::CopyFrom(const LLA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.LLA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LLA::InternalSwap(LLA* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LLA, _impl_.altitude_reference_)
      + sizeof(LLA::_impl_.altitude_reference_)
      - PROTOBUF_FIELD_OFFSET(LLA, _impl_.lon_)>(
          reinterpret_cast<char*>(&_impl_.lon_),
          reinterpret_cast<char*>(&other->_impl_.lon_));
}

::google::protobuf::Metadata LLA::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ENU::_Internal {
 public:
};

ENU::ENU(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.ENU)
}
ENU::ENU(
    ::google::protobuf::Arena* arena, const ENU& from)
    : ENU(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ENU::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ENU::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, e_),
           0,
           offsetof(Impl_, u_) -
               offsetof(Impl_, e_) +
               sizeof(Impl_::u_));
}
ENU::~ENU() {
  // @@protoc_insertion_point(destructor:anduril.type.ENU)
  SharedDtor(*this);
}
inline void ENU::SharedDtor(MessageLite& self) {
  ENU& this_ = static_cast<ENU&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ENU::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ENU(arena);
}
constexpr auto ENU::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ENU),
                                            alignof(ENU));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ENU::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ENU_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ENU::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ENU>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ENU::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ENU>(), &ENU::ByteSizeLong,
            &ENU::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ENU, _impl_._cached_size_),
        false,
    },
    &ENU::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ENU::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ENU::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::ENU>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double e = 1 [json_name = "e"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(ENU, _impl_.e_)}},
    // double n = 2 [json_name = "n"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(ENU, _impl_.n_)}},
    // double u = 3 [json_name = "u"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(ENU, _impl_.u_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double e = 1 [json_name = "e"];
    {PROTOBUF_FIELD_OFFSET(ENU, _impl_.e_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double n = 2 [json_name = "n"];
    {PROTOBUF_FIELD_OFFSET(ENU, _impl_.n_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double u = 3 [json_name = "u"];
    {PROTOBUF_FIELD_OFFSET(ENU, _impl_.u_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ENU::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.ENU)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.e_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.u_) -
      reinterpret_cast<char*>(&_impl_.e_)) + sizeof(_impl_.u_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ENU::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ENU& this_ = static_cast<const ENU&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ENU::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ENU& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.ENU)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double e = 1 [json_name = "e"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_e()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_e(), target);
          }

          // double n = 2 [json_name = "n"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_n()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_n(), target);
          }

          // double u = 3 [json_name = "u"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_u()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_u(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.ENU)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ENU::ByteSizeLong(const MessageLite& base) {
          const ENU& this_ = static_cast<const ENU&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ENU::ByteSizeLong() const {
          const ENU& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.ENU)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double e = 1 [json_name = "e"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_e()) != 0) {
              total_size += 9;
            }
            // double n = 2 [json_name = "n"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_n()) != 0) {
              total_size += 9;
            }
            // double u = 3 [json_name = "u"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_u()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ENU::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ENU*>(&to_msg);
  auto& from = static_cast<const ENU&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.ENU)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_e()) != 0) {
    _this->_impl_.e_ = from._impl_.e_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_n()) != 0) {
    _this->_impl_.n_ = from._impl_.n_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_u()) != 0) {
    _this->_impl_.u_ = from._impl_.u_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ENU::CopyFrom(const ENU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.ENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ENU::InternalSwap(ENU* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ENU, _impl_.u_)
      + sizeof(ENU::_impl_.u_)
      - PROTOBUF_FIELD_OFFSET(ENU, _impl_.e_)>(
          reinterpret_cast<char*>(&_impl_.e_),
          reinterpret_cast<char*>(&other->_impl_.e_));
}

::google::protobuf::Metadata ENU::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ECI::_Internal {
 public:
};

ECI::ECI(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.ECI)
}
ECI::ECI(
    ::google::protobuf::Arena* arena, const ECI& from)
    : ECI(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ECI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ECI::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
ECI::~ECI() {
  // @@protoc_insertion_point(destructor:anduril.type.ECI)
  SharedDtor(*this);
}
inline void ECI::SharedDtor(MessageLite& self) {
  ECI& this_ = static_cast<ECI&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ECI::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ECI(arena);
}
constexpr auto ECI::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ECI),
                                            alignof(ECI));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ECI::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ECI_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ECI::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ECI>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ECI::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ECI>(), &ECI::ByteSizeLong,
            &ECI::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ECI, _impl_._cached_size_),
        false,
    },
    &ECI::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ECI::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ECI::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::ECI>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(ECI, _impl_.x_)}},
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(ECI, _impl_.y_)}},
    // double z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(ECI, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(ECI, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(ECI, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(ECI, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ECI::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.ECI)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ECI::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ECI& this_ = static_cast<const ECI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ECI::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ECI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.ECI)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double x = 1 [json_name = "x"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_x(), target);
          }

          // double y = 2 [json_name = "y"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_y(), target);
          }

          // double z = 3 [json_name = "z"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.ECI)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ECI::ByteSizeLong(const MessageLite& base) {
          const ECI& this_ = static_cast<const ECI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ECI::ByteSizeLong() const {
          const ECI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.ECI)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double x = 1 [json_name = "x"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
              total_size += 9;
            }
            // double y = 2 [json_name = "y"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
              total_size += 9;
            }
            // double z = 3 [json_name = "z"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ECI::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ECI*>(&to_msg);
  auto& from = static_cast<const ECI&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.ECI)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ECI::CopyFrom(const ECI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.ECI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ECI::InternalSwap(ECI* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ECI, _impl_.z_)
      + sizeof(ECI::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(ECI, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata ECI::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vec2::_Internal {
 public:
};

Vec2::Vec2(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Vec2)
}
Vec2::Vec2(
    ::google::protobuf::Arena* arena, const Vec2& from)
    : Vec2(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vec2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vec2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
Vec2::~Vec2() {
  // @@protoc_insertion_point(destructor:anduril.type.Vec2)
  SharedDtor(*this);
}
inline void Vec2::SharedDtor(MessageLite& self) {
  Vec2& this_ = static_cast<Vec2&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vec2::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vec2(arena);
}
constexpr auto Vec2::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vec2),
                                            alignof(Vec2));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vec2::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vec2_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vec2::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vec2>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vec2::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vec2>(), &Vec2::ByteSizeLong,
            &Vec2::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vec2, _impl_._cached_size_),
        false,
    },
    &Vec2::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vec2::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Vec2::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Vec2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Vec2, _impl_.y_)}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Vec2, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Vec2, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Vec2, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vec2::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Vec2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vec2::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vec2& this_ = static_cast<const Vec2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vec2::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vec2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Vec2)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double x = 1 [json_name = "x"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_x(), target);
          }

          // double y = 2 [json_name = "y"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_y(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Vec2)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vec2::ByteSizeLong(const MessageLite& base) {
          const Vec2& this_ = static_cast<const Vec2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vec2::ByteSizeLong() const {
          const Vec2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Vec2)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double x = 1 [json_name = "x"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
              total_size += 9;
            }
            // double y = 2 [json_name = "y"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vec2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vec2*>(&to_msg);
  auto& from = static_cast<const Vec2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Vec2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vec2::CopyFrom(const Vec2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vec2::InternalSwap(Vec2* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec2, _impl_.y_)
      + sizeof(Vec2::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Vec2, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vec2::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vec2f::_Internal {
 public:
};

Vec2f::Vec2f(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Vec2f)
}
Vec2f::Vec2f(
    ::google::protobuf::Arena* arena, const Vec2f& from)
    : Vec2f(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vec2f::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vec2f::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
Vec2f::~Vec2f() {
  // @@protoc_insertion_point(destructor:anduril.type.Vec2f)
  SharedDtor(*this);
}
inline void Vec2f::SharedDtor(MessageLite& self) {
  Vec2f& this_ = static_cast<Vec2f&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vec2f::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vec2f(arena);
}
constexpr auto Vec2f::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vec2f),
                                            alignof(Vec2f));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vec2f::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vec2f_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vec2f::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vec2f>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vec2f::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vec2f>(), &Vec2f::ByteSizeLong,
            &Vec2f::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vec2f, _impl_._cached_size_),
        false,
    },
    &Vec2f::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vec2f::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Vec2f::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Vec2f>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vec2f, _impl_.y_)}},
    // float x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vec2f, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Vec2f, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Vec2f, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vec2f::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Vec2f)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vec2f::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vec2f& this_ = static_cast<const Vec2f&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vec2f::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vec2f& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Vec2f)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1 [json_name = "x"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2 [json_name = "y"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Vec2f)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vec2f::ByteSizeLong(const MessageLite& base) {
          const Vec2f& this_ = static_cast<const Vec2f&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vec2f::ByteSizeLong() const {
          const Vec2f& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Vec2f)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1 [json_name = "x"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2 [json_name = "y"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vec2f::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vec2f*>(&to_msg);
  auto& from = static_cast<const Vec2f&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Vec2f)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vec2f::CopyFrom(const Vec2f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Vec2f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vec2f::InternalSwap(Vec2f* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec2f, _impl_.y_)
      + sizeof(Vec2f::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Vec2f, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vec2f::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vec3::_Internal {
 public:
};

Vec3::Vec3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Vec3)
}
Vec3::Vec3(
    ::google::protobuf::Arena* arena, const Vec3& from)
    : Vec3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vec3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vec3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vec3::~Vec3() {
  // @@protoc_insertion_point(destructor:anduril.type.Vec3)
  SharedDtor(*this);
}
inline void Vec3::SharedDtor(MessageLite& self) {
  Vec3& this_ = static_cast<Vec3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vec3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vec3(arena);
}
constexpr auto Vec3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vec3),
                                            alignof(Vec3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vec3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vec3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vec3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vec3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vec3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vec3>(), &Vec3::ByteSizeLong,
            &Vec3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vec3, _impl_._cached_size_),
        false,
    },
    &Vec3::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vec3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vec3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Vec3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_)}},
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.y_)}},
    // double z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Vec3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vec3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vec3& this_ = static_cast<const Vec3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vec3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vec3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Vec3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double x = 1 [json_name = "x"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_x(), target);
          }

          // double y = 2 [json_name = "y"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_y(), target);
          }

          // double z = 3 [json_name = "z"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Vec3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vec3::ByteSizeLong(const MessageLite& base) {
          const Vec3& this_ = static_cast<const Vec3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vec3::ByteSizeLong() const {
          const Vec3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Vec3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double x = 1 [json_name = "x"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
              total_size += 9;
            }
            // double y = 2 [json_name = "y"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
              total_size += 9;
            }
            // double z = 3 [json_name = "z"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vec3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vec3*>(&to_msg);
  auto& from = static_cast<const Vec3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Vec3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vec3::CopyFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vec3::InternalSwap(Vec3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_)
      + sizeof(Vec3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vec3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vec3f::_Internal {
 public:
};

Vec3f::Vec3f(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Vec3f)
}
Vec3f::Vec3f(
    ::google::protobuf::Arena* arena, const Vec3f& from)
    : Vec3f(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vec3f::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vec3f::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vec3f::~Vec3f() {
  // @@protoc_insertion_point(destructor:anduril.type.Vec3f)
  SharedDtor(*this);
}
inline void Vec3f::SharedDtor(MessageLite& self) {
  Vec3f& this_ = static_cast<Vec3f&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vec3f::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vec3f(arena);
}
constexpr auto Vec3f::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vec3f),
                                            alignof(Vec3f));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vec3f::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vec3f_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vec3f::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vec3f>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vec3f::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vec3f>(), &Vec3f::ByteSizeLong,
            &Vec3f::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vec3f, _impl_._cached_size_),
        false,
    },
    &Vec3f::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vec3f::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vec3f::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Vec3f>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.x_)}},
    // float y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.y_)}},
    // float z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vec3f::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Vec3f)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vec3f::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vec3f& this_ = static_cast<const Vec3f&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vec3f::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vec3f& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Vec3f)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1 [json_name = "x"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2 [json_name = "y"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // float z = 3 [json_name = "z"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Vec3f)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vec3f::ByteSizeLong(const MessageLite& base) {
          const Vec3f& this_ = static_cast<const Vec3f&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vec3f::ByteSizeLong() const {
          const Vec3f& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Vec3f)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1 [json_name = "x"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2 [json_name = "y"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 3 [json_name = "z"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vec3f::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vec3f*>(&to_msg);
  auto& from = static_cast<const Vec3f&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Vec3f)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vec3f::CopyFrom(const Vec3f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Vec3f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vec3f::InternalSwap(Vec3f* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.z_)
      + sizeof(Vec3f::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vec3f, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vec3f::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Quaternion::_Internal {
 public:
};

Quaternion::Quaternion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Quaternion)
}
Quaternion::Quaternion(
    ::google::protobuf::Arena* arena, const Quaternion& from)
    : Quaternion(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quaternion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Quaternion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, w_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::w_));
}
Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:anduril.type.Quaternion)
  SharedDtor(*this);
}
inline void Quaternion::SharedDtor(MessageLite& self) {
  Quaternion& this_ = static_cast<Quaternion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Quaternion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Quaternion(arena);
}
constexpr auto Quaternion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Quaternion),
                                            alignof(Quaternion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Quaternion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Quaternion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Quaternion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Quaternion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Quaternion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Quaternion>(), &Quaternion::ByteSizeLong,
            &Quaternion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._cached_size_),
        false,
    },
    &Quaternion::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Quaternion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Quaternion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Quaternion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double w = 4 [json_name = "w"];
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)}},
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_)}},
    // double z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double w = 4 [json_name = "w"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Quaternion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.w_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.w_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Quaternion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Quaternion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Quaternion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double x = 1 [json_name = "x"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_x(), target);
          }

          // double y = 2 [json_name = "y"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_y(), target);
          }

          // double z = 3 [json_name = "z"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_z(), target);
          }

          // double w = 4 [json_name = "w"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_w()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_w(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Quaternion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Quaternion::ByteSizeLong(const MessageLite& base) {
          const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Quaternion::ByteSizeLong() const {
          const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Quaternion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double x = 1 [json_name = "x"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
              total_size += 9;
            }
            // double y = 2 [json_name = "y"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
              total_size += 9;
            }
            // double z = 3 [json_name = "z"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
              total_size += 9;
            }
            // double w = 4 [json_name = "w"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_w()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Quaternion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Quaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_w()) != 0) {
    _this->_impl_.w_ = from._impl_.w_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Quaternion::InternalSwap(Quaternion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)
      + sizeof(Quaternion::_impl_.w_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class YawPitch::_Internal {
 public:
};

YawPitch::YawPitch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.YawPitch)
}
YawPitch::YawPitch(
    ::google::protobuf::Arena* arena, const YawPitch& from)
    : YawPitch(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE YawPitch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void YawPitch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, yaw_),
           0,
           offsetof(Impl_, pitch_) -
               offsetof(Impl_, yaw_) +
               sizeof(Impl_::pitch_));
}
YawPitch::~YawPitch() {
  // @@protoc_insertion_point(destructor:anduril.type.YawPitch)
  SharedDtor(*this);
}
inline void YawPitch::SharedDtor(MessageLite& self) {
  YawPitch& this_ = static_cast<YawPitch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* YawPitch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) YawPitch(arena);
}
constexpr auto YawPitch::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(YawPitch),
                                            alignof(YawPitch));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull YawPitch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_YawPitch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &YawPitch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<YawPitch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &YawPitch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<YawPitch>(), &YawPitch::ByteSizeLong,
            &YawPitch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(YawPitch, _impl_._cached_size_),
        false,
    },
    &YawPitch::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* YawPitch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> YawPitch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::YawPitch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double pitch = 2 [json_name = "pitch"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(YawPitch, _impl_.pitch_)}},
    // double yaw = 1 [json_name = "yaw"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(YawPitch, _impl_.yaw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double yaw = 1 [json_name = "yaw"];
    {PROTOBUF_FIELD_OFFSET(YawPitch, _impl_.yaw_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double pitch = 2 [json_name = "pitch"];
    {PROTOBUF_FIELD_OFFSET(YawPitch, _impl_.pitch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void YawPitch::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.YawPitch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.yaw_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pitch_) -
      reinterpret_cast<char*>(&_impl_.yaw_)) + sizeof(_impl_.pitch_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* YawPitch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const YawPitch& this_ = static_cast<const YawPitch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* YawPitch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const YawPitch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.YawPitch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double yaw = 1 [json_name = "yaw"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_yaw()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_yaw(), target);
          }

          // double pitch = 2 [json_name = "pitch"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_pitch()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_pitch(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.YawPitch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t YawPitch::ByteSizeLong(const MessageLite& base) {
          const YawPitch& this_ = static_cast<const YawPitch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t YawPitch::ByteSizeLong() const {
          const YawPitch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.YawPitch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double yaw = 1 [json_name = "yaw"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_yaw()) != 0) {
              total_size += 9;
            }
            // double pitch = 2 [json_name = "pitch"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_pitch()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void YawPitch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<YawPitch*>(&to_msg);
  auto& from = static_cast<const YawPitch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.YawPitch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_yaw()) != 0) {
    _this->_impl_.yaw_ = from._impl_.yaw_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_pitch()) != 0) {
    _this->_impl_.pitch_ = from._impl_.pitch_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void YawPitch::CopyFrom(const YawPitch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.YawPitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void YawPitch::InternalSwap(YawPitch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YawPitch, _impl_.pitch_)
      + sizeof(YawPitch::_impl_.pitch_)
      - PROTOBUF_FIELD_OFFSET(YawPitch, _impl_.yaw_)>(
          reinterpret_cast<char*>(&_impl_.yaw_),
          reinterpret_cast<char*>(&other->_impl_.yaw_));
}

::google::protobuf::Metadata YawPitch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class YPR::_Internal {
 public:
};

YPR::YPR(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.YPR)
}
YPR::YPR(
    ::google::protobuf::Arena* arena, const YPR& from)
    : YPR(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE YPR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void YPR::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, yaw_),
           0,
           offsetof(Impl_, roll_) -
               offsetof(Impl_, yaw_) +
               sizeof(Impl_::roll_));
}
YPR::~YPR() {
  // @@protoc_insertion_point(destructor:anduril.type.YPR)
  SharedDtor(*this);
}
inline void YPR::SharedDtor(MessageLite& self) {
  YPR& this_ = static_cast<YPR&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* YPR::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) YPR(arena);
}
constexpr auto YPR::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(YPR),
                                            alignof(YPR));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull YPR::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_YPR_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &YPR::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<YPR>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &YPR::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<YPR>(), &YPR::ByteSizeLong,
            &YPR::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(YPR, _impl_._cached_size_),
        false,
    },
    &YPR::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* YPR::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> YPR::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::YPR>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double yaw = 1 [json_name = "yaw"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(YPR, _impl_.yaw_)}},
    // double pitch = 2 [json_name = "pitch"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(YPR, _impl_.pitch_)}},
    // double roll = 3 [json_name = "roll"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(YPR, _impl_.roll_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double yaw = 1 [json_name = "yaw"];
    {PROTOBUF_FIELD_OFFSET(YPR, _impl_.yaw_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double pitch = 2 [json_name = "pitch"];
    {PROTOBUF_FIELD_OFFSET(YPR, _impl_.pitch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double roll = 3 [json_name = "roll"];
    {PROTOBUF_FIELD_OFFSET(YPR, _impl_.roll_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void YPR::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.YPR)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.yaw_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.roll_) -
      reinterpret_cast<char*>(&_impl_.yaw_)) + sizeof(_impl_.roll_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* YPR::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const YPR& this_ = static_cast<const YPR&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* YPR::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const YPR& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.YPR)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double yaw = 1 [json_name = "yaw"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_yaw()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_yaw(), target);
          }

          // double pitch = 2 [json_name = "pitch"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_pitch()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_pitch(), target);
          }

          // double roll = 3 [json_name = "roll"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_roll()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_roll(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.YPR)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t YPR::ByteSizeLong(const MessageLite& base) {
          const YPR& this_ = static_cast<const YPR&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t YPR::ByteSizeLong() const {
          const YPR& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.YPR)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double yaw = 1 [json_name = "yaw"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_yaw()) != 0) {
              total_size += 9;
            }
            // double pitch = 2 [json_name = "pitch"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_pitch()) != 0) {
              total_size += 9;
            }
            // double roll = 3 [json_name = "roll"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_roll()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void YPR::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<YPR*>(&to_msg);
  auto& from = static_cast<const YPR&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.YPR)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_yaw()) != 0) {
    _this->_impl_.yaw_ = from._impl_.yaw_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_pitch()) != 0) {
    _this->_impl_.pitch_ = from._impl_.pitch_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_roll()) != 0) {
    _this->_impl_.roll_ = from._impl_.roll_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void YPR::CopyFrom(const YPR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.YPR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void YPR::InternalSwap(YPR* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YPR, _impl_.roll_)
      + sizeof(YPR::_impl_.roll_)
      - PROTOBUF_FIELD_OFFSET(YPR, _impl_.yaw_)>(
          reinterpret_cast<char*>(&_impl_.yaw_),
          reinterpret_cast<char*>(&other->_impl_.yaw_));
}

::google::protobuf::Metadata YPR::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pose::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Pose>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Pose, _impl_._has_bits_);
};

Pose::Pose(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Pose)
}
inline PROTOBUF_NDEBUG_INLINE Pose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::type::Pose& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Pose::Pose(
    ::google::protobuf::Arena* arena,
    const Pose& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Pose* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::type::LLA>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.att_enu_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::type::Quaternion>(
                              arena, *from._impl_.att_enu_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.type.Pose)
}
inline PROTOBUF_NDEBUG_INLINE Pose::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Pose::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, att_enu_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::att_enu_));
}
Pose::~Pose() {
  // @@protoc_insertion_point(destructor:anduril.type.Pose)
  SharedDtor(*this);
}
inline void Pose::SharedDtor(MessageLite& self) {
  Pose& this_ = static_cast<Pose&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pos_;
  delete this_._impl_.att_enu_;
  this_._impl_.~Impl_();
}

inline void* Pose::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Pose(arena);
}
constexpr auto Pose::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Pose),
                                            alignof(Pose));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Pose::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Pose_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Pose::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Pose>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Pose::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Pose>(), &Pose::ByteSizeLong,
            &Pose::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Pose, _impl_._cached_size_),
        false,
    },
    &Pose::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Pose::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Pose::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Pose, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Pose>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Pose, _impl_.att_enu_)}},
    // .anduril.type.LLA pos = 1 [json_name = "pos"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Pose, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.type.LLA pos = 1 [json_name = "pos"];
    {PROTOBUF_FIELD_OFFSET(Pose, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];
    {PROTOBUF_FIELD_OFFSET(Pose, _impl_.att_enu_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::type::LLA>()},
    {::_pbi::TcParser::GetTable<::anduril::type::Quaternion>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Pose)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.att_enu_ != nullptr);
      _impl_.att_enu_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Pose::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Pose& this_ = static_cast<const Pose&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Pose::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Pose& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Pose)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.type.LLA pos = 1 [json_name = "pos"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
                stream);
          }

          // .anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.att_enu_, this_._impl_.att_enu_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Pose)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Pose::ByteSizeLong(const MessageLite& base) {
          const Pose& this_ = static_cast<const Pose&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Pose::ByteSizeLong() const {
          const Pose& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Pose)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.type.LLA pos = 1 [json_name = "pos"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
            }
            // .anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.att_enu_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Pose::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pose*>(&to_msg);
  auto& from = static_cast<const Pose&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Pose)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::type::LLA>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.att_enu_ != nullptr);
      if (_this->_impl_.att_enu_ == nullptr) {
        _this->_impl_.att_enu_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::type::Quaternion>(arena, *from._impl_.att_enu_);
      } else {
        _this->_impl_.att_enu_->MergeFrom(*from._impl_.att_enu_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pose::InternalSwap(Pose* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pose, _impl_.att_enu_)
      + sizeof(Pose::_impl_.att_enu_)
      - PROTOBUF_FIELD_OFFSET(Pose, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LLAPolygon::_Internal {
 public:
};

LLAPolygon::LLAPolygon(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.LLAPolygon)
}
inline PROTOBUF_NDEBUG_INLINE LLAPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::type::LLAPolygon& from_msg)
      : points_{visibility, arena, from.points_},
        _cached_size_{0} {}

LLAPolygon::LLAPolygon(
    ::google::protobuf::Arena* arena,
    const LLAPolygon& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LLAPolygon* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.type.LLAPolygon)
}
inline PROTOBUF_NDEBUG_INLINE LLAPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : points_{visibility, arena},
        _cached_size_{0} {}

inline void LLAPolygon::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LLAPolygon::~LLAPolygon() {
  // @@protoc_insertion_point(destructor:anduril.type.LLAPolygon)
  SharedDtor(*this);
}
inline void LLAPolygon::SharedDtor(MessageLite& self) {
  LLAPolygon& this_ = static_cast<LLAPolygon&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LLAPolygon::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LLAPolygon(arena);
}
constexpr auto LLAPolygon::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LLAPolygon, _impl_.points_) +
          decltype(LLAPolygon::_impl_.points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LLAPolygon), alignof(LLAPolygon), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LLAPolygon::PlacementNew_,
                                 sizeof(LLAPolygon),
                                 alignof(LLAPolygon));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LLAPolygon::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LLAPolygon_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LLAPolygon::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LLAPolygon>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LLAPolygon::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LLAPolygon>(), &LLAPolygon::ByteSizeLong,
            &LLAPolygon::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LLAPolygon, _impl_._cached_size_),
        false,
    },
    &LLAPolygon::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LLAPolygon::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LLAPolygon::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::LLAPolygon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.type.LLA points = 1 [json_name = "points"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LLAPolygon, _impl_.points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.type.LLA points = 1 [json_name = "points"];
    {PROTOBUF_FIELD_OFFSET(LLAPolygon, _impl_.points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::type::LLA>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LLAPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.LLAPolygon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LLAPolygon::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LLAPolygon& this_ = static_cast<const LLAPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LLAPolygon::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LLAPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.LLAPolygon)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.type.LLA points = 1 [json_name = "points"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_points_size());
               i < n; i++) {
            const auto& repfield = this_._internal_points().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.LLAPolygon)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LLAPolygon::ByteSizeLong(const MessageLite& base) {
          const LLAPolygon& this_ = static_cast<const LLAPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LLAPolygon::ByteSizeLong() const {
          const LLAPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.LLAPolygon)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.type.LLA points = 1 [json_name = "points"];
            {
              total_size += 1UL * this_._internal_points_size();
              for (const auto& msg : this_._internal_points()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LLAPolygon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LLAPolygon*>(&to_msg);
  auto& from = static_cast<const LLAPolygon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.LLAPolygon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LLAPolygon::CopyFrom(const LLAPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.LLAPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LLAPolygon::InternalSwap(LLAPolygon* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
}

::google::protobuf::Metadata LLAPolygon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AERPolygon::_Internal {
 public:
};

AERPolygon::AERPolygon(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.AERPolygon)
}
inline PROTOBUF_NDEBUG_INLINE AERPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::type::AERPolygon& from_msg)
      : points_{visibility, arena, from.points_},
        _cached_size_{0} {}

AERPolygon::AERPolygon(
    ::google::protobuf::Arena* arena,
    const AERPolygon& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AERPolygon* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.type.AERPolygon)
}
inline PROTOBUF_NDEBUG_INLINE AERPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : points_{visibility, arena},
        _cached_size_{0} {}

inline void AERPolygon::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AERPolygon::~AERPolygon() {
  // @@protoc_insertion_point(destructor:anduril.type.AERPolygon)
  SharedDtor(*this);
}
inline void AERPolygon::SharedDtor(MessageLite& self) {
  AERPolygon& this_ = static_cast<AERPolygon&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AERPolygon::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AERPolygon(arena);
}
constexpr auto AERPolygon::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AERPolygon, _impl_.points_) +
          decltype(AERPolygon::_impl_.points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AERPolygon), alignof(AERPolygon), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AERPolygon::PlacementNew_,
                                 sizeof(AERPolygon),
                                 alignof(AERPolygon));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AERPolygon::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AERPolygon_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AERPolygon::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AERPolygon>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AERPolygon::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AERPolygon>(), &AERPolygon::ByteSizeLong,
            &AERPolygon::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AERPolygon, _impl_._cached_size_),
        false,
    },
    &AERPolygon::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AERPolygon::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AERPolygon::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::AERPolygon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.type.Spherical points = 1 [json_name = "points"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AERPolygon, _impl_.points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.type.Spherical points = 1 [json_name = "points"];
    {PROTOBUF_FIELD_OFFSET(AERPolygon, _impl_.points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::type::Spherical>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AERPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.AERPolygon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AERPolygon::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AERPolygon& this_ = static_cast<const AERPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AERPolygon::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AERPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.AERPolygon)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.type.Spherical points = 1 [json_name = "points"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_points_size());
               i < n; i++) {
            const auto& repfield = this_._internal_points().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.AERPolygon)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AERPolygon::ByteSizeLong(const MessageLite& base) {
          const AERPolygon& this_ = static_cast<const AERPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AERPolygon::ByteSizeLong() const {
          const AERPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.AERPolygon)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.type.Spherical points = 1 [json_name = "points"];
            {
              total_size += 1UL * this_._internal_points_size();
              for (const auto& msg : this_._internal_points()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AERPolygon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AERPolygon*>(&to_msg);
  auto& from = static_cast<const AERPolygon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.AERPolygon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AERPolygon::CopyFrom(const AERPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.AERPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AERPolygon::InternalSwap(AERPolygon* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
}

::google::protobuf::Metadata AERPolygon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LLAPath::_Internal {
 public:
};

LLAPath::LLAPath(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.LLAPath)
}
inline PROTOBUF_NDEBUG_INLINE LLAPath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::type::LLAPath& from_msg)
      : points_{visibility, arena, from.points_},
        _cached_size_{0} {}

LLAPath::LLAPath(
    ::google::protobuf::Arena* arena,
    const LLAPath& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LLAPath* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.loop_ = from._impl_.loop_;

  // @@protoc_insertion_point(copy_constructor:anduril.type.LLAPath)
}
inline PROTOBUF_NDEBUG_INLINE LLAPath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : points_{visibility, arena},
        _cached_size_{0} {}

inline void LLAPath::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.loop_ = {};
}
LLAPath::~LLAPath() {
  // @@protoc_insertion_point(destructor:anduril.type.LLAPath)
  SharedDtor(*this);
}
inline void LLAPath::SharedDtor(MessageLite& self) {
  LLAPath& this_ = static_cast<LLAPath&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LLAPath::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LLAPath(arena);
}
constexpr auto LLAPath::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LLAPath, _impl_.points_) +
          decltype(LLAPath::_impl_.points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LLAPath), alignof(LLAPath), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LLAPath::PlacementNew_,
                                 sizeof(LLAPath),
                                 alignof(LLAPath));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LLAPath::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LLAPath_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LLAPath::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LLAPath>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LLAPath::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LLAPath>(), &LLAPath::ByteSizeLong,
            &LLAPath::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LLAPath, _impl_._cached_size_),
        false,
    },
    &LLAPath::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LLAPath::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> LLAPath::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::LLAPath>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool loop = 2 [json_name = "loop"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LLAPath, _impl_.loop_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LLAPath, _impl_.loop_)}},
    // repeated .anduril.type.LLA points = 1 [json_name = "points"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LLAPath, _impl_.points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.type.LLA points = 1 [json_name = "points"];
    {PROTOBUF_FIELD_OFFSET(LLAPath, _impl_.points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool loop = 2 [json_name = "loop"];
    {PROTOBUF_FIELD_OFFSET(LLAPath, _impl_.loop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::type::LLA>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LLAPath::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.LLAPath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  _impl_.loop_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LLAPath::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LLAPath& this_ = static_cast<const LLAPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LLAPath::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LLAPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.LLAPath)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.type.LLA points = 1 [json_name = "points"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_points_size());
               i < n; i++) {
            const auto& repfield = this_._internal_points().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool loop = 2 [json_name = "loop"];
          if (this_._internal_loop() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_loop(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.LLAPath)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LLAPath::ByteSizeLong(const MessageLite& base) {
          const LLAPath& this_ = static_cast<const LLAPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LLAPath::ByteSizeLong() const {
          const LLAPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.LLAPath)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.type.LLA points = 1 [json_name = "points"];
            {
              total_size += 1UL * this_._internal_points_size();
              for (const auto& msg : this_._internal_points()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bool loop = 2 [json_name = "loop"];
            if (this_._internal_loop() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LLAPath::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LLAPath*>(&to_msg);
  auto& from = static_cast<const LLAPath&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.LLAPath)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  if (from._internal_loop() != 0) {
    _this->_impl_.loop_ = from._impl_.loop_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LLAPath::CopyFrom(const LLAPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.LLAPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LLAPath::InternalSwap(LLAPath* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
        swap(_impl_.loop_, other->_impl_.loop_);
}

::google::protobuf::Metadata LLAPath::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Spherical::_Internal {
 public:
};

Spherical::Spherical(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Spherical)
}
Spherical::Spherical(
    ::google::protobuf::Arena* arena, const Spherical& from)
    : Spherical(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Spherical::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Spherical::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, az_),
           0,
           offsetof(Impl_, range_) -
               offsetof(Impl_, az_) +
               sizeof(Impl_::range_));
}
Spherical::~Spherical() {
  // @@protoc_insertion_point(destructor:anduril.type.Spherical)
  SharedDtor(*this);
}
inline void Spherical::SharedDtor(MessageLite& self) {
  Spherical& this_ = static_cast<Spherical&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Spherical::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Spherical(arena);
}
constexpr auto Spherical::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Spherical),
                                            alignof(Spherical));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Spherical::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Spherical_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Spherical::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Spherical>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Spherical::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Spherical>(), &Spherical::ByteSizeLong,
            &Spherical::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Spherical, _impl_._cached_size_),
        false,
    },
    &Spherical::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Spherical::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Spherical::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Spherical>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double az = 1 [json_name = "az"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Spherical, _impl_.az_)}},
    // double el = 2 [json_name = "el"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Spherical, _impl_.el_)}},
    // double range = 3 [json_name = "range"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Spherical, _impl_.range_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double az = 1 [json_name = "az"];
    {PROTOBUF_FIELD_OFFSET(Spherical, _impl_.az_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double el = 2 [json_name = "el"];
    {PROTOBUF_FIELD_OFFSET(Spherical, _impl_.el_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double range = 3 [json_name = "range"];
    {PROTOBUF_FIELD_OFFSET(Spherical, _impl_.range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Spherical::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Spherical)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.az_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.range_) -
      reinterpret_cast<char*>(&_impl_.az_)) + sizeof(_impl_.range_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Spherical::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Spherical& this_ = static_cast<const Spherical&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Spherical::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Spherical& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Spherical)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double az = 1 [json_name = "az"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_az()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_az(), target);
          }

          // double el = 2 [json_name = "el"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_el()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_el(), target);
          }

          // double range = 3 [json_name = "range"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_range()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_range(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Spherical)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Spherical::ByteSizeLong(const MessageLite& base) {
          const Spherical& this_ = static_cast<const Spherical&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Spherical::ByteSizeLong() const {
          const Spherical& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Spherical)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double az = 1 [json_name = "az"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_az()) != 0) {
              total_size += 9;
            }
            // double el = 2 [json_name = "el"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_el()) != 0) {
              total_size += 9;
            }
            // double range = 3 [json_name = "range"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_range()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Spherical::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Spherical*>(&to_msg);
  auto& from = static_cast<const Spherical&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Spherical)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_az()) != 0) {
    _this->_impl_.az_ = from._impl_.az_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_el()) != 0) {
    _this->_impl_.el_ = from._impl_.el_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_range()) != 0) {
    _this->_impl_.range_ = from._impl_.range_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Spherical::CopyFrom(const Spherical& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Spherical)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Spherical::InternalSwap(Spherical* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Spherical, _impl_.range_)
      + sizeof(Spherical::_impl_.range_)
      - PROTOBUF_FIELD_OFFSET(Spherical, _impl_.az_)>(
          reinterpret_cast<char*>(&_impl_.az_),
          reinterpret_cast<char*>(&other->_impl_.az_));
}

::google::protobuf::Metadata Spherical::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DoubleRange::_Internal {
 public:
};

DoubleRange::DoubleRange(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.DoubleRange)
}
DoubleRange::DoubleRange(
    ::google::protobuf::Arena* arena, const DoubleRange& from)
    : DoubleRange(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DoubleRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DoubleRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));
}
DoubleRange::~DoubleRange() {
  // @@protoc_insertion_point(destructor:anduril.type.DoubleRange)
  SharedDtor(*this);
}
inline void DoubleRange::SharedDtor(MessageLite& self) {
  DoubleRange& this_ = static_cast<DoubleRange&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DoubleRange::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DoubleRange(arena);
}
constexpr auto DoubleRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DoubleRange),
                                            alignof(DoubleRange));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DoubleRange::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DoubleRange_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DoubleRange::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DoubleRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DoubleRange::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DoubleRange>(), &DoubleRange::ByteSizeLong,
            &DoubleRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DoubleRange, _impl_._cached_size_),
        false,
    },
    &DoubleRange::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DoubleRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DoubleRange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::DoubleRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double max = 2 [json_name = "max"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(DoubleRange, _impl_.max_)}},
    // double min = 1 [json_name = "min"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(DoubleRange, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double min = 1 [json_name = "min"];
    {PROTOBUF_FIELD_OFFSET(DoubleRange, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double max = 2 [json_name = "max"];
    {PROTOBUF_FIELD_OFFSET(DoubleRange, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DoubleRange::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.DoubleRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DoubleRange::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DoubleRange& this_ = static_cast<const DoubleRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DoubleRange::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DoubleRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.DoubleRange)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double min = 1 [json_name = "min"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_min()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_min(), target);
          }

          // double max = 2 [json_name = "max"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_max()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_max(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.DoubleRange)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DoubleRange::ByteSizeLong(const MessageLite& base) {
          const DoubleRange& this_ = static_cast<const DoubleRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DoubleRange::ByteSizeLong() const {
          const DoubleRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.DoubleRange)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double min = 1 [json_name = "min"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_min()) != 0) {
              total_size += 9;
            }
            // double max = 2 [json_name = "max"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_max()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DoubleRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DoubleRange*>(&to_msg);
  auto& from = static_cast<const DoubleRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.DoubleRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_min()) != 0) {
    _this->_impl_.min_ = from._impl_.min_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_max()) != 0) {
    _this->_impl_.max_ = from._impl_.max_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DoubleRange::CopyFrom(const DoubleRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.DoubleRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DoubleRange::InternalSwap(DoubleRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DoubleRange, _impl_.max_)
      + sizeof(DoubleRange::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(DoubleRange, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata DoubleRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Uint64Range::_Internal {
 public:
};

Uint64Range::Uint64Range(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.Uint64Range)
}
Uint64Range::Uint64Range(
    ::google::protobuf::Arena* arena, const Uint64Range& from)
    : Uint64Range(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Uint64Range::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Uint64Range::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));
}
Uint64Range::~Uint64Range() {
  // @@protoc_insertion_point(destructor:anduril.type.Uint64Range)
  SharedDtor(*this);
}
inline void Uint64Range::SharedDtor(MessageLite& self) {
  Uint64Range& this_ = static_cast<Uint64Range&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Uint64Range::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Uint64Range(arena);
}
constexpr auto Uint64Range::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Uint64Range),
                                            alignof(Uint64Range));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Uint64Range::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Uint64Range_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Uint64Range::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Uint64Range>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Uint64Range::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Uint64Range>(), &Uint64Range::ByteSizeLong,
            &Uint64Range::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Uint64Range, _impl_._cached_size_),
        false,
    },
    &Uint64Range::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Uint64Range::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Uint64Range::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::Uint64Range>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 max = 2 [json_name = "max"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Uint64Range, _impl_.max_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Uint64Range, _impl_.max_)}},
    // uint64 min = 1 [json_name = "min"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Uint64Range, _impl_.min_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Uint64Range, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 min = 1 [json_name = "min"];
    {PROTOBUF_FIELD_OFFSET(Uint64Range, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 max = 2 [json_name = "max"];
    {PROTOBUF_FIELD_OFFSET(Uint64Range, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Uint64Range::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.Uint64Range)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Uint64Range::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Uint64Range& this_ = static_cast<const Uint64Range&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Uint64Range::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Uint64Range& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.Uint64Range)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 min = 1 [json_name = "min"];
          if (this_._internal_min() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_min(), target);
          }

          // uint64 max = 2 [json_name = "max"];
          if (this_._internal_max() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_max(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.Uint64Range)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Uint64Range::ByteSizeLong(const MessageLite& base) {
          const Uint64Range& this_ = static_cast<const Uint64Range&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Uint64Range::ByteSizeLong() const {
          const Uint64Range& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.Uint64Range)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 min = 1 [json_name = "min"];
            if (this_._internal_min() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_min());
            }
            // uint64 max = 2 [json_name = "max"];
            if (this_._internal_max() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_max());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Uint64Range::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Uint64Range*>(&to_msg);
  auto& from = static_cast<const Uint64Range&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.Uint64Range)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_min() != 0) {
    _this->_impl_.min_ = from._impl_.min_;
  }
  if (from._internal_max() != 0) {
    _this->_impl_.max_ = from._impl_.max_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Uint64Range::CopyFrom(const Uint64Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.Uint64Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Uint64Range::InternalSwap(Uint64Range* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Uint64Range, _impl_.max_)
      + sizeof(Uint64Range::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Uint64Range, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata Uint64Range::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TMat4f::_Internal {
 public:
};

TMat4f::TMat4f(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.TMat4f)
}
TMat4f::TMat4f(
    ::google::protobuf::Arena* arena, const TMat4f& from)
    : TMat4f(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TMat4f::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TMat4f::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, m00_),
           0,
           offsetof(Impl_, m33_) -
               offsetof(Impl_, m00_) +
               sizeof(Impl_::m33_));
}
TMat4f::~TMat4f() {
  // @@protoc_insertion_point(destructor:anduril.type.TMat4f)
  SharedDtor(*this);
}
inline void TMat4f::SharedDtor(MessageLite& self) {
  TMat4f& this_ = static_cast<TMat4f&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TMat4f::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TMat4f(arena);
}
constexpr auto TMat4f::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TMat4f),
                                            alignof(TMat4f));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TMat4f::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TMat4f_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TMat4f::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TMat4f>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TMat4f::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TMat4f>(), &TMat4f::ByteSizeLong,
            &TMat4f::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TMat4f, _impl_._cached_size_),
        false,
    },
    &TMat4f::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TMat4f::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 2> TMat4f::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::TMat4f>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float m00 = 1 [json_name = "m00"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m00_)}},
    // float m01 = 2 [json_name = "m01"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m01_)}},
    // float m02 = 3 [json_name = "m02"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m02_)}},
    // float m03 = 4 [json_name = "m03"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m03_)}},
    // float m11 = 5 [json_name = "m11"];
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m11_)}},
    // float m12 = 6 [json_name = "m12"];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m12_)}},
    // float m13 = 7 [json_name = "m13"];
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m13_)}},
    // float m22 = 8 [json_name = "m22"];
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m22_)}},
    // float m23 = 9 [json_name = "m23"];
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m23_)}},
    // float m33 = 10 [json_name = "m33"];
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m33_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float m00 = 1 [json_name = "m00"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m00_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m01 = 2 [json_name = "m01"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m01_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m02 = 3 [json_name = "m02"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m02_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m03 = 4 [json_name = "m03"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m03_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m11 = 5 [json_name = "m11"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m11_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m12 = 6 [json_name = "m12"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m12_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m13 = 7 [json_name = "m13"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m13_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m22 = 8 [json_name = "m22"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m22_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m23 = 9 [json_name = "m23"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m23_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float m33 = 10 [json_name = "m33"];
    {PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m33_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TMat4f::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.TMat4f)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.m00_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.m33_) -
      reinterpret_cast<char*>(&_impl_.m00_)) + sizeof(_impl_.m33_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TMat4f::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TMat4f& this_ = static_cast<const TMat4f&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TMat4f::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TMat4f& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.TMat4f)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float m00 = 1 [json_name = "m00"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m00()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_m00(), target);
          }

          // float m01 = 2 [json_name = "m01"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m01()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_m01(), target);
          }

          // float m02 = 3 [json_name = "m02"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m02()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_m02(), target);
          }

          // float m03 = 4 [json_name = "m03"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m03()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_m03(), target);
          }

          // float m11 = 5 [json_name = "m11"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m11()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_m11(), target);
          }

          // float m12 = 6 [json_name = "m12"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m12()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_m12(), target);
          }

          // float m13 = 7 [json_name = "m13"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m13()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_m13(), target);
          }

          // float m22 = 8 [json_name = "m22"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m22()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_m22(), target);
          }

          // float m23 = 9 [json_name = "m23"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m23()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_m23(), target);
          }

          // float m33 = 10 [json_name = "m33"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_m33()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_m33(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.TMat4f)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TMat4f::ByteSizeLong(const MessageLite& base) {
          const TMat4f& this_ = static_cast<const TMat4f&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TMat4f::ByteSizeLong() const {
          const TMat4f& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.TMat4f)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float m00 = 1 [json_name = "m00"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m00()) != 0) {
              total_size += 5;
            }
            // float m01 = 2 [json_name = "m01"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m01()) != 0) {
              total_size += 5;
            }
            // float m02 = 3 [json_name = "m02"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m02()) != 0) {
              total_size += 5;
            }
            // float m03 = 4 [json_name = "m03"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m03()) != 0) {
              total_size += 5;
            }
            // float m11 = 5 [json_name = "m11"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m11()) != 0) {
              total_size += 5;
            }
            // float m12 = 6 [json_name = "m12"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m12()) != 0) {
              total_size += 5;
            }
            // float m13 = 7 [json_name = "m13"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m13()) != 0) {
              total_size += 5;
            }
            // float m22 = 8 [json_name = "m22"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m22()) != 0) {
              total_size += 5;
            }
            // float m23 = 9 [json_name = "m23"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m23()) != 0) {
              total_size += 5;
            }
            // float m33 = 10 [json_name = "m33"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_m33()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TMat4f::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TMat4f*>(&to_msg);
  auto& from = static_cast<const TMat4f&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.TMat4f)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_m00()) != 0) {
    _this->_impl_.m00_ = from._impl_.m00_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m01()) != 0) {
    _this->_impl_.m01_ = from._impl_.m01_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m02()) != 0) {
    _this->_impl_.m02_ = from._impl_.m02_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m03()) != 0) {
    _this->_impl_.m03_ = from._impl_.m03_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m11()) != 0) {
    _this->_impl_.m11_ = from._impl_.m11_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m12()) != 0) {
    _this->_impl_.m12_ = from._impl_.m12_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m13()) != 0) {
    _this->_impl_.m13_ = from._impl_.m13_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m22()) != 0) {
    _this->_impl_.m22_ = from._impl_.m22_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m23()) != 0) {
    _this->_impl_.m23_ = from._impl_.m23_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_m33()) != 0) {
    _this->_impl_.m33_ = from._impl_.m33_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TMat4f::CopyFrom(const TMat4f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.TMat4f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TMat4f::InternalSwap(TMat4f* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m33_)
      + sizeof(TMat4f::_impl_.m33_)
      - PROTOBUF_FIELD_OFFSET(TMat4f, _impl_.m00_)>(
          reinterpret_cast<char*>(&_impl_.m00_),
          reinterpret_cast<char*>(&other->_impl_.m00_));
}

::google::protobuf::Metadata TMat4f::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TMat3::_Internal {
 public:
};

TMat3::TMat3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.TMat3)
}
TMat3::TMat3(
    ::google::protobuf::Arena* arena, const TMat3& from)
    : TMat3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TMat3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TMat3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mxx_),
           0,
           offsetof(Impl_, mzz_) -
               offsetof(Impl_, mxx_) +
               sizeof(Impl_::mzz_));
}
TMat3::~TMat3() {
  // @@protoc_insertion_point(destructor:anduril.type.TMat3)
  SharedDtor(*this);
}
inline void TMat3::SharedDtor(MessageLite& self) {
  TMat3& this_ = static_cast<TMat3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TMat3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TMat3(arena);
}
constexpr auto TMat3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TMat3),
                                            alignof(TMat3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TMat3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TMat3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TMat3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TMat3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TMat3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TMat3>(), &TMat3::ByteSizeLong,
            &TMat3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TMat3, _impl_._cached_size_),
        false,
    },
    &TMat3::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TMat3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> TMat3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::TMat3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double mxx = 1 [json_name = "mxx"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxx_)}},
    // double mxy = 2 [json_name = "mxy"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxy_)}},
    // double mxz = 3 [json_name = "mxz"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxz_)}},
    // double myy = 4 [json_name = "myy"];
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myy_)}},
    // double myz = 5 [json_name = "myz"];
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myz_)}},
    // double mzz = 6 [json_name = "mzz"];
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mzz_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double mxx = 1 [json_name = "mxx"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double mxy = 2 [json_name = "mxy"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double mxz = 3 [json_name = "mxz"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double myy = 4 [json_name = "myy"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double myz = 5 [json_name = "myz"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.myz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double mzz = 6 [json_name = "mzz"];
    {PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mzz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TMat3::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.TMat3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.mxx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mzz_) -
      reinterpret_cast<char*>(&_impl_.mxx_)) + sizeof(_impl_.mzz_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TMat3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TMat3& this_ = static_cast<const TMat3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TMat3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TMat3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.TMat3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double mxx = 1 [json_name = "mxx"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_mxx()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_mxx(), target);
          }

          // double mxy = 2 [json_name = "mxy"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_mxy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_mxy(), target);
          }

          // double mxz = 3 [json_name = "mxz"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_mxz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_mxz(), target);
          }

          // double myy = 4 [json_name = "myy"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_myy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_myy(), target);
          }

          // double myz = 5 [json_name = "myz"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_myz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_myz(), target);
          }

          // double mzz = 6 [json_name = "mzz"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_mzz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_mzz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.TMat3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TMat3::ByteSizeLong(const MessageLite& base) {
          const TMat3& this_ = static_cast<const TMat3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TMat3::ByteSizeLong() const {
          const TMat3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.TMat3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double mxx = 1 [json_name = "mxx"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_mxx()) != 0) {
              total_size += 9;
            }
            // double mxy = 2 [json_name = "mxy"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_mxy()) != 0) {
              total_size += 9;
            }
            // double mxz = 3 [json_name = "mxz"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_mxz()) != 0) {
              total_size += 9;
            }
            // double myy = 4 [json_name = "myy"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_myy()) != 0) {
              total_size += 9;
            }
            // double myz = 5 [json_name = "myz"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_myz()) != 0) {
              total_size += 9;
            }
            // double mzz = 6 [json_name = "mzz"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_mzz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TMat3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TMat3*>(&to_msg);
  auto& from = static_cast<const TMat3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.TMat3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_mxx()) != 0) {
    _this->_impl_.mxx_ = from._impl_.mxx_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_mxy()) != 0) {
    _this->_impl_.mxy_ = from._impl_.mxy_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_mxz()) != 0) {
    _this->_impl_.mxz_ = from._impl_.mxz_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_myy()) != 0) {
    _this->_impl_.myy_ = from._impl_.myy_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_myz()) != 0) {
    _this->_impl_.myz_ = from._impl_.myz_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_mzz()) != 0) {
    _this->_impl_.mzz_ = from._impl_.mzz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TMat3::CopyFrom(const TMat3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.TMat3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TMat3::InternalSwap(TMat3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mzz_)
      + sizeof(TMat3::_impl_.mzz_)
      - PROTOBUF_FIELD_OFFSET(TMat3, _impl_.mxx_)>(
          reinterpret_cast<char*>(&_impl_.mxx_),
          reinterpret_cast<char*>(&other->_impl_.mxx_));
}

::google::protobuf::Metadata TMat3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TMat2::_Internal {
 public:
};

TMat2::TMat2(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.TMat2)
}
TMat2::TMat2(
    ::google::protobuf::Arena* arena, const TMat2& from)
    : TMat2(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TMat2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TMat2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mxx_),
           0,
           offsetof(Impl_, myy_) -
               offsetof(Impl_, mxx_) +
               sizeof(Impl_::myy_));
}
TMat2::~TMat2() {
  // @@protoc_insertion_point(destructor:anduril.type.TMat2)
  SharedDtor(*this);
}
inline void TMat2::SharedDtor(MessageLite& self) {
  TMat2& this_ = static_cast<TMat2&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TMat2::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TMat2(arena);
}
constexpr auto TMat2::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TMat2),
                                            alignof(TMat2));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TMat2::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TMat2_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TMat2::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TMat2>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TMat2::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TMat2>(), &TMat2::ByteSizeLong,
            &TMat2::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TMat2, _impl_._cached_size_),
        false,
    },
    &TMat2::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TMat2::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> TMat2::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::TMat2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double mxx = 1 [json_name = "mxx"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(TMat2, _impl_.mxx_)}},
    // double mxy = 2 [json_name = "mxy"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(TMat2, _impl_.mxy_)}},
    // double myy = 3 [json_name = "myy"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(TMat2, _impl_.myy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double mxx = 1 [json_name = "mxx"];
    {PROTOBUF_FIELD_OFFSET(TMat2, _impl_.mxx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double mxy = 2 [json_name = "mxy"];
    {PROTOBUF_FIELD_OFFSET(TMat2, _impl_.mxy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double myy = 3 [json_name = "myy"];
    {PROTOBUF_FIELD_OFFSET(TMat2, _impl_.myy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TMat2::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.TMat2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.mxx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.myy_) -
      reinterpret_cast<char*>(&_impl_.mxx_)) + sizeof(_impl_.myy_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TMat2::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TMat2& this_ = static_cast<const TMat2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TMat2::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TMat2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.TMat2)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double mxx = 1 [json_name = "mxx"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_mxx()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_mxx(), target);
          }

          // double mxy = 2 [json_name = "mxy"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_mxy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_mxy(), target);
          }

          // double myy = 3 [json_name = "myy"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_myy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_myy(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.TMat2)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TMat2::ByteSizeLong(const MessageLite& base) {
          const TMat2& this_ = static_cast<const TMat2&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TMat2::ByteSizeLong() const {
          const TMat2& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.TMat2)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double mxx = 1 [json_name = "mxx"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_mxx()) != 0) {
              total_size += 9;
            }
            // double mxy = 2 [json_name = "mxy"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_mxy()) != 0) {
              total_size += 9;
            }
            // double myy = 3 [json_name = "myy"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_myy()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TMat2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TMat2*>(&to_msg);
  auto& from = static_cast<const TMat2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.TMat2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_mxx()) != 0) {
    _this->_impl_.mxx_ = from._impl_.mxx_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_mxy()) != 0) {
    _this->_impl_.mxy_ = from._impl_.mxy_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_myy()) != 0) {
    _this->_impl_.myy_ = from._impl_.myy_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TMat2::CopyFrom(const TMat2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.TMat2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TMat2::InternalSwap(TMat2* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TMat2, _impl_.myy_)
      + sizeof(TMat2::_impl_.myy_)
      - PROTOBUF_FIELD_OFFSET(TMat2, _impl_.mxx_)>(
          reinterpret_cast<char*>(&_impl_.mxx_),
          reinterpret_cast<char*>(&other->_impl_.mxx_));
}

::google::protobuf::Metadata TMat2::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RigidTransform::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RigidTransform>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_._has_bits_);
};

RigidTransform::RigidTransform(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.type.RigidTransform)
}
inline PROTOBUF_NDEBUG_INLINE RigidTransform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::type::RigidTransform& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RigidTransform::RigidTransform(
    ::google::protobuf::Arena* arena,
    const RigidTransform& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RigidTransform* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rotation_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::type::Quaternion>(
                              arena, *from._impl_.rotation_)
                        : nullptr;
  _impl_.translation_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::type::Vec3>(
                              arena, *from._impl_.translation_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.type.RigidTransform)
}
inline PROTOBUF_NDEBUG_INLINE RigidTransform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RigidTransform::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rotation_),
           0,
           offsetof(Impl_, translation_) -
               offsetof(Impl_, rotation_) +
               sizeof(Impl_::translation_));
}
RigidTransform::~RigidTransform() {
  // @@protoc_insertion_point(destructor:anduril.type.RigidTransform)
  SharedDtor(*this);
}
inline void RigidTransform::SharedDtor(MessageLite& self) {
  RigidTransform& this_ = static_cast<RigidTransform&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.rotation_;
  delete this_._impl_.translation_;
  this_._impl_.~Impl_();
}

inline void* RigidTransform::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RigidTransform(arena);
}
constexpr auto RigidTransform::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RigidTransform),
                                            alignof(RigidTransform));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RigidTransform::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RigidTransform_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RigidTransform::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RigidTransform>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RigidTransform::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RigidTransform>(), &RigidTransform::ByteSizeLong,
            &RigidTransform::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_._cached_size_),
        false,
    },
    &RigidTransform::kDescriptorMethods,
    &descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RigidTransform::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> RigidTransform::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::type::RigidTransform>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.type.Vec3 translation = 4 [json_name = "translation"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_.translation_)}},
    // .anduril.type.Quaternion rotation = 3 [json_name = "rotation"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_.rotation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.type.Quaternion rotation = 3 [json_name = "rotation"];
    {PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_.rotation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.type.Vec3 translation = 4 [json_name = "translation"];
    {PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_.translation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::type::Quaternion>()},
    {::_pbi::TcParser::GetTable<::anduril::type::Vec3>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RigidTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.type.RigidTransform)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.translation_ != nullptr);
      _impl_.translation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RigidTransform::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RigidTransform& this_ = static_cast<const RigidTransform&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RigidTransform::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RigidTransform& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.type.RigidTransform)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.type.Quaternion rotation = 3 [json_name = "rotation"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.rotation_, this_._impl_.rotation_->GetCachedSize(), target,
                stream);
          }

          // .anduril.type.Vec3 translation = 4 [json_name = "translation"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.translation_, this_._impl_.translation_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.type.RigidTransform)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RigidTransform::ByteSizeLong(const MessageLite& base) {
          const RigidTransform& this_ = static_cast<const RigidTransform&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RigidTransform::ByteSizeLong() const {
          const RigidTransform& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.type.RigidTransform)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.type.Quaternion rotation = 3 [json_name = "rotation"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotation_);
            }
            // .anduril.type.Vec3 translation = 4 [json_name = "translation"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.translation_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RigidTransform::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RigidTransform*>(&to_msg);
  auto& from = static_cast<const RigidTransform&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.type.RigidTransform)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.rotation_ != nullptr);
      if (_this->_impl_.rotation_ == nullptr) {
        _this->_impl_.rotation_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::type::Quaternion>(arena, *from._impl_.rotation_);
      } else {
        _this->_impl_.rotation_->MergeFrom(*from._impl_.rotation_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.translation_ != nullptr);
      if (_this->_impl_.translation_ == nullptr) {
        _this->_impl_.translation_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::type::Vec3>(arena, *from._impl_.translation_);
      } else {
        _this->_impl_.translation_->MergeFrom(*from._impl_.translation_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RigidTransform::CopyFrom(const RigidTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.type.RigidTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RigidTransform::InternalSwap(RigidTransform* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_.translation_)
      + sizeof(RigidTransform::_impl_.translation_)
      - PROTOBUF_FIELD_OFFSET(RigidTransform, _impl_.rotation_)>(
          reinterpret_cast<char*>(&_impl_.rotation_),
          reinterpret_cast<char*>(&other->_impl_.rotation_));
}

::google::protobuf::Metadata RigidTransform::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
