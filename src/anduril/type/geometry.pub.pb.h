// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/type/geometry.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2ftype_2fgeometry_2epub_2eproto_2epb_2eh
#define anduril_2ftype_2fgeometry_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "anduril/type/coords.pub.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2ftype_2fgeometry_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2ftype_2fgeometry_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2ftype_2fgeometry_2epub_2eproto;
namespace anduril {
namespace type {
class Grid;
struct GridDefaultTypeInternal;
extern GridDefaultTypeInternal _Grid_default_instance_;
}  // namespace type
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace type {

// ===================================================================


// -------------------------------------------------------------------

class Grid final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Grid) */ {
 public:
  inline Grid() : Grid(nullptr) {}
  ~Grid() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Grid* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Grid));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Grid(
      ::google::protobuf::internal::ConstantInitialized);

  inline Grid(const Grid& from) : Grid(nullptr, from) {}
  inline Grid(Grid&& from) noexcept
      : Grid(nullptr, std::move(from)) {}
  inline Grid& operator=(const Grid& from) {
    CopyFrom(from);
    return *this;
  }
  inline Grid& operator=(Grid&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Grid& default_instance() {
    return *internal_default_instance();
  }
  static inline const Grid* internal_default_instance() {
    return reinterpret_cast<const Grid*>(
        &_Grid_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Grid& a, Grid& b) { a.Swap(&b); }
  inline void Swap(Grid* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Grid* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Grid* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Grid>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Grid& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Grid& from) { Grid::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Grid* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Grid"; }

 protected:
  explicit Grid(::google::protobuf::Arena* arena);
  Grid(::google::protobuf::Arena* arena, const Grid& from);
  Grid(::google::protobuf::Arena* arena, Grid&& from) noexcept
      : Grid(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCellValuesFieldNumber = 5,
    kBottomLeftPosFieldNumber = 1,
    kTopRightPosFieldNumber = 2,
    kGridWidthFieldNumber = 3,
    kGridHeightFieldNumber = 4,
  };
  // bytes cell_values = 5 [json_name = "cellValues"];
  void clear_cell_values() ;
  const std::string& cell_values() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cell_values(Arg_&& arg, Args_... args);
  std::string* mutable_cell_values();
  PROTOBUF_NODISCARD std::string* release_cell_values();
  void set_allocated_cell_values(std::string* value);

  private:
  const std::string& _internal_cell_values() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cell_values(
      const std::string& value);
  std::string* _internal_mutable_cell_values();

  public:
  // .anduril.type.LLA bottom_left_pos = 1 [json_name = "bottomLeftPos"];
  bool has_bottom_left_pos() const;
  void clear_bottom_left_pos() ;
  const ::anduril::type::LLA& bottom_left_pos() const;
  PROTOBUF_NODISCARD ::anduril::type::LLA* release_bottom_left_pos();
  ::anduril::type::LLA* mutable_bottom_left_pos();
  void set_allocated_bottom_left_pos(::anduril::type::LLA* value);
  void unsafe_arena_set_allocated_bottom_left_pos(::anduril::type::LLA* value);
  ::anduril::type::LLA* unsafe_arena_release_bottom_left_pos();

  private:
  const ::anduril::type::LLA& _internal_bottom_left_pos() const;
  ::anduril::type::LLA* _internal_mutable_bottom_left_pos();

  public:
  // .anduril.type.LLA top_right_pos = 2 [json_name = "topRightPos"];
  bool has_top_right_pos() const;
  void clear_top_right_pos() ;
  const ::anduril::type::LLA& top_right_pos() const;
  PROTOBUF_NODISCARD ::anduril::type::LLA* release_top_right_pos();
  ::anduril::type::LLA* mutable_top_right_pos();
  void set_allocated_top_right_pos(::anduril::type::LLA* value);
  void unsafe_arena_set_allocated_top_right_pos(::anduril::type::LLA* value);
  ::anduril::type::LLA* unsafe_arena_release_top_right_pos();

  private:
  const ::anduril::type::LLA& _internal_top_right_pos() const;
  ::anduril::type::LLA* _internal_mutable_top_right_pos();

  public:
  // uint32 grid_width = 3 [json_name = "gridWidth"];
  void clear_grid_width() ;
  ::uint32_t grid_width() const;
  void set_grid_width(::uint32_t value);

  private:
  ::uint32_t _internal_grid_width() const;
  void _internal_set_grid_width(::uint32_t value);

  public:
  // uint32 grid_height = 4 [json_name = "gridHeight"];
  void clear_grid_height() ;
  ::uint32_t grid_height() const;
  void set_grid_height(::uint32_t value);

  private:
  ::uint32_t _internal_grid_height() const;
  void _internal_set_grid_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Grid)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Grid& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr cell_values_;
    ::anduril::type::LLA* bottom_left_pos_;
    ::anduril::type::LLA* top_right_pos_;
    ::uint32_t grid_width_;
    ::uint32_t grid_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fgeometry_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Grid

// .anduril.type.LLA bottom_left_pos = 1 [json_name = "bottomLeftPos"];
inline bool Grid::has_bottom_left_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bottom_left_pos_ != nullptr);
  return value;
}
inline const ::anduril::type::LLA& Grid::_internal_bottom_left_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::LLA* p = _impl_.bottom_left_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::LLA&>(::anduril::type::_LLA_default_instance_);
}
inline const ::anduril::type::LLA& Grid::bottom_left_pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.Grid.bottom_left_pos)
  return _internal_bottom_left_pos();
}
inline void Grid::unsafe_arena_set_allocated_bottom_left_pos(::anduril::type::LLA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_left_pos_);
  }
  _impl_.bottom_left_pos_ = reinterpret_cast<::anduril::type::LLA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.Grid.bottom_left_pos)
}
inline ::anduril::type::LLA* Grid::release_bottom_left_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::LLA* released = _impl_.bottom_left_pos_;
  _impl_.bottom_left_pos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::LLA* Grid::unsafe_arena_release_bottom_left_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.Grid.bottom_left_pos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::LLA* temp = _impl_.bottom_left_pos_;
  _impl_.bottom_left_pos_ = nullptr;
  return temp;
}
inline ::anduril::type::LLA* Grid::_internal_mutable_bottom_left_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bottom_left_pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::LLA>(GetArena());
    _impl_.bottom_left_pos_ = reinterpret_cast<::anduril::type::LLA*>(p);
  }
  return _impl_.bottom_left_pos_;
}
inline ::anduril::type::LLA* Grid::mutable_bottom_left_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::type::LLA* _msg = _internal_mutable_bottom_left_pos();
  // @@protoc_insertion_point(field_mutable:anduril.type.Grid.bottom_left_pos)
  return _msg;
}
inline void Grid::set_allocated_bottom_left_pos(::anduril::type::LLA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_left_pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bottom_left_pos_ = reinterpret_cast<::anduril::type::LLA*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.Grid.bottom_left_pos)
}

// .anduril.type.LLA top_right_pos = 2 [json_name = "topRightPos"];
inline bool Grid::has_top_right_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.top_right_pos_ != nullptr);
  return value;
}
inline const ::anduril::type::LLA& Grid::_internal_top_right_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::LLA* p = _impl_.top_right_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::LLA&>(::anduril::type::_LLA_default_instance_);
}
inline const ::anduril::type::LLA& Grid::top_right_pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.Grid.top_right_pos)
  return _internal_top_right_pos();
}
inline void Grid::unsafe_arena_set_allocated_top_right_pos(::anduril::type::LLA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.top_right_pos_);
  }
  _impl_.top_right_pos_ = reinterpret_cast<::anduril::type::LLA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.Grid.top_right_pos)
}
inline ::anduril::type::LLA* Grid::release_top_right_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::LLA* released = _impl_.top_right_pos_;
  _impl_.top_right_pos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::LLA* Grid::unsafe_arena_release_top_right_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.Grid.top_right_pos)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::LLA* temp = _impl_.top_right_pos_;
  _impl_.top_right_pos_ = nullptr;
  return temp;
}
inline ::anduril::type::LLA* Grid::_internal_mutable_top_right_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.top_right_pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::LLA>(GetArena());
    _impl_.top_right_pos_ = reinterpret_cast<::anduril::type::LLA*>(p);
  }
  return _impl_.top_right_pos_;
}
inline ::anduril::type::LLA* Grid::mutable_top_right_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::type::LLA* _msg = _internal_mutable_top_right_pos();
  // @@protoc_insertion_point(field_mutable:anduril.type.Grid.top_right_pos)
  return _msg;
}
inline void Grid::set_allocated_top_right_pos(::anduril::type::LLA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.top_right_pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.top_right_pos_ = reinterpret_cast<::anduril::type::LLA*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.Grid.top_right_pos)
}

// uint32 grid_width = 3 [json_name = "gridWidth"];
inline void Grid::clear_grid_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_width_ = 0u;
}
inline ::uint32_t Grid::grid_width() const {
  // @@protoc_insertion_point(field_get:anduril.type.Grid.grid_width)
  return _internal_grid_width();
}
inline void Grid::set_grid_width(::uint32_t value) {
  _internal_set_grid_width(value);
  // @@protoc_insertion_point(field_set:anduril.type.Grid.grid_width)
}
inline ::uint32_t Grid::_internal_grid_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grid_width_;
}
inline void Grid::_internal_set_grid_width(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_width_ = value;
}

// uint32 grid_height = 4 [json_name = "gridHeight"];
inline void Grid::clear_grid_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_height_ = 0u;
}
inline ::uint32_t Grid::grid_height() const {
  // @@protoc_insertion_point(field_get:anduril.type.Grid.grid_height)
  return _internal_grid_height();
}
inline void Grid::set_grid_height(::uint32_t value) {
  _internal_set_grid_height(value);
  // @@protoc_insertion_point(field_set:anduril.type.Grid.grid_height)
}
inline ::uint32_t Grid::_internal_grid_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grid_height_;
}
inline void Grid::_internal_set_grid_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_height_ = value;
}

// bytes cell_values = 5 [json_name = "cellValues"];
inline void Grid::clear_cell_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cell_values_.ClearToEmpty();
}
inline const std::string& Grid::cell_values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.Grid.cell_values)
  return _internal_cell_values();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Grid::set_cell_values(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cell_values_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.type.Grid.cell_values)
}
inline std::string* Grid::mutable_cell_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cell_values();
  // @@protoc_insertion_point(field_mutable:anduril.type.Grid.cell_values)
  return _s;
}
inline const std::string& Grid::_internal_cell_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cell_values_.Get();
}
inline void Grid::_internal_set_cell_values(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cell_values_.Set(value, GetArena());
}
inline std::string* Grid::_internal_mutable_cell_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cell_values_.Mutable( GetArena());
}
inline std::string* Grid::release_cell_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.Grid.cell_values)
  return _impl_.cell_values_.Release();
}
inline void Grid::set_allocated_cell_values(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cell_values_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cell_values_.IsDefault()) {
    _impl_.cell_values_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.type.Grid.cell_values)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace anduril


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2ftype_2fgeometry_2epub_2eproto_2epb_2eh
