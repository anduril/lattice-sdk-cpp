// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/type/coords.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2ftype_2fcoords_2epub_2eproto_2epb_2eh
#define anduril_2ftype_2fcoords_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2ftype_2fcoords_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2ftype_2fcoords_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2ftype_2fcoords_2epub_2eproto;
namespace anduril {
namespace type {
class AERPolygon;
struct AERPolygonDefaultTypeInternal;
extern AERPolygonDefaultTypeInternal _AERPolygon_default_instance_;
class DoubleRange;
struct DoubleRangeDefaultTypeInternal;
extern DoubleRangeDefaultTypeInternal _DoubleRange_default_instance_;
class ECI;
struct ECIDefaultTypeInternal;
extern ECIDefaultTypeInternal _ECI_default_instance_;
class ENU;
struct ENUDefaultTypeInternal;
extern ENUDefaultTypeInternal _ENU_default_instance_;
class LLA;
struct LLADefaultTypeInternal;
extern LLADefaultTypeInternal _LLA_default_instance_;
class LLAPath;
struct LLAPathDefaultTypeInternal;
extern LLAPathDefaultTypeInternal _LLAPath_default_instance_;
class LLAPolygon;
struct LLAPolygonDefaultTypeInternal;
extern LLAPolygonDefaultTypeInternal _LLAPolygon_default_instance_;
class Pose;
struct PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class Quaternion;
struct QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
class RigidTransform;
struct RigidTransformDefaultTypeInternal;
extern RigidTransformDefaultTypeInternal _RigidTransform_default_instance_;
class Spherical;
struct SphericalDefaultTypeInternal;
extern SphericalDefaultTypeInternal _Spherical_default_instance_;
class TMat2;
struct TMat2DefaultTypeInternal;
extern TMat2DefaultTypeInternal _TMat2_default_instance_;
class TMat3;
struct TMat3DefaultTypeInternal;
extern TMat3DefaultTypeInternal _TMat3_default_instance_;
class TMat4f;
struct TMat4fDefaultTypeInternal;
extern TMat4fDefaultTypeInternal _TMat4f_default_instance_;
class ThetaPhi;
struct ThetaPhiDefaultTypeInternal;
extern ThetaPhiDefaultTypeInternal _ThetaPhi_default_instance_;
class Uint64Range;
struct Uint64RangeDefaultTypeInternal;
extern Uint64RangeDefaultTypeInternal _Uint64Range_default_instance_;
class Vec2;
struct Vec2DefaultTypeInternal;
extern Vec2DefaultTypeInternal _Vec2_default_instance_;
class Vec2f;
struct Vec2fDefaultTypeInternal;
extern Vec2fDefaultTypeInternal _Vec2f_default_instance_;
class Vec3;
struct Vec3DefaultTypeInternal;
extern Vec3DefaultTypeInternal _Vec3_default_instance_;
class Vec3f;
struct Vec3fDefaultTypeInternal;
extern Vec3fDefaultTypeInternal _Vec3f_default_instance_;
class YPR;
struct YPRDefaultTypeInternal;
extern YPRDefaultTypeInternal _YPR_default_instance_;
class YawPitch;
struct YawPitchDefaultTypeInternal;
extern YawPitchDefaultTypeInternal _YawPitch_default_instance_;
}  // namespace type
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace type {
enum LLA_AltitudeReference : int {
  LLA_AltitudeReference_ALTITUDE_REFERENCE_INVALID = 0,
  LLA_AltitudeReference_ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84 = 1,
  LLA_AltitudeReference_ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM96 = 2,
  LLA_AltitudeReference_ALTITUDE_REFERENCE_UNKNOWN = 3,
  LLA_AltitudeReference_ALTITUDE_REFERENCE_BAROMETRIC = 4,
  LLA_AltitudeReference_ALTITUDE_REFERENCE_ABOVE_SEA_FLOOR = 5,
  LLA_AltitudeReference_ALTITUDE_REFERENCE_BELOW_SEA_SURFACE = 6,
  LLA_AltitudeReference_LLA_AltitudeReference_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LLA_AltitudeReference_LLA_AltitudeReference_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LLA_AltitudeReference_IsValid(int value);
extern const uint32_t LLA_AltitudeReference_internal_data_[];
constexpr LLA_AltitudeReference LLA_AltitudeReference_AltitudeReference_MIN = static_cast<LLA_AltitudeReference>(0);
constexpr LLA_AltitudeReference LLA_AltitudeReference_AltitudeReference_MAX = static_cast<LLA_AltitudeReference>(6);
constexpr int LLA_AltitudeReference_AltitudeReference_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
LLA_AltitudeReference_descriptor();
template <typename T>
const std::string& LLA_AltitudeReference_Name(T value) {
  static_assert(std::is_same<T, LLA_AltitudeReference>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AltitudeReference_Name().");
  return LLA_AltitudeReference_Name(static_cast<LLA_AltitudeReference>(value));
}
template <>
inline const std::string& LLA_AltitudeReference_Name(LLA_AltitudeReference value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LLA_AltitudeReference_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool LLA_AltitudeReference_Parse(absl::string_view name, LLA_AltitudeReference* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LLA_AltitudeReference>(
      LLA_AltitudeReference_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class YawPitch final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.YawPitch) */ {
 public:
  inline YawPitch() : YawPitch(nullptr) {}
  ~YawPitch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(YawPitch* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(YawPitch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR YawPitch(
      ::google::protobuf::internal::ConstantInitialized);

  inline YawPitch(const YawPitch& from) : YawPitch(nullptr, from) {}
  inline YawPitch(YawPitch&& from) noexcept
      : YawPitch(nullptr, std::move(from)) {}
  inline YawPitch& operator=(const YawPitch& from) {
    CopyFrom(from);
    return *this;
  }
  inline YawPitch& operator=(YawPitch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const YawPitch& default_instance() {
    return *internal_default_instance();
  }
  static inline const YawPitch* internal_default_instance() {
    return reinterpret_cast<const YawPitch*>(
        &_YawPitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(YawPitch& a, YawPitch& b) { a.Swap(&b); }
  inline void Swap(YawPitch* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(YawPitch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  YawPitch* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<YawPitch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const YawPitch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const YawPitch& from) { YawPitch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(YawPitch* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.YawPitch"; }

 protected:
  explicit YawPitch(::google::protobuf::Arena* arena);
  YawPitch(::google::protobuf::Arena* arena, const YawPitch& from);
  YawPitch(::google::protobuf::Arena* arena, YawPitch&& from) noexcept
      : YawPitch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kYawFieldNumber = 1,
    kPitchFieldNumber = 2,
  };
  // double yaw = 1 [json_name = "yaw"];
  void clear_yaw() ;
  double yaw() const;
  void set_yaw(double value);

  private:
  double _internal_yaw() const;
  void _internal_set_yaw(double value);

  public:
  // double pitch = 2 [json_name = "pitch"];
  void clear_pitch() ;
  double pitch() const;
  void set_pitch(double value);

  private:
  double _internal_pitch() const;
  void _internal_set_pitch(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.YawPitch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const YawPitch& from_msg);
    double yaw_;
    double pitch_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class YPR final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.YPR) */ {
 public:
  inline YPR() : YPR(nullptr) {}
  ~YPR() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(YPR* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(YPR));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR YPR(
      ::google::protobuf::internal::ConstantInitialized);

  inline YPR(const YPR& from) : YPR(nullptr, from) {}
  inline YPR(YPR&& from) noexcept
      : YPR(nullptr, std::move(from)) {}
  inline YPR& operator=(const YPR& from) {
    CopyFrom(from);
    return *this;
  }
  inline YPR& operator=(YPR&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const YPR& default_instance() {
    return *internal_default_instance();
  }
  static inline const YPR* internal_default_instance() {
    return reinterpret_cast<const YPR*>(
        &_YPR_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(YPR& a, YPR& b) { a.Swap(&b); }
  inline void Swap(YPR* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(YPR* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  YPR* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<YPR>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const YPR& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const YPR& from) { YPR::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(YPR* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.YPR"; }

 protected:
  explicit YPR(::google::protobuf::Arena* arena);
  YPR(::google::protobuf::Arena* arena, const YPR& from);
  YPR(::google::protobuf::Arena* arena, YPR&& from) noexcept
      : YPR(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kYawFieldNumber = 1,
    kPitchFieldNumber = 2,
    kRollFieldNumber = 3,
  };
  // double yaw = 1 [json_name = "yaw"];
  void clear_yaw() ;
  double yaw() const;
  void set_yaw(double value);

  private:
  double _internal_yaw() const;
  void _internal_set_yaw(double value);

  public:
  // double pitch = 2 [json_name = "pitch"];
  void clear_pitch() ;
  double pitch() const;
  void set_pitch(double value);

  private:
  double _internal_pitch() const;
  void _internal_set_pitch(double value);

  public:
  // double roll = 3 [json_name = "roll"];
  void clear_roll() ;
  double roll() const;
  void set_roll(double value);

  private:
  double _internal_roll() const;
  void _internal_set_roll(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.YPR)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const YPR& from_msg);
    double yaw_;
    double pitch_;
    double roll_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Vec3f final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Vec3f) */ {
 public:
  inline Vec3f() : Vec3f(nullptr) {}
  ~Vec3f() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vec3f* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vec3f));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vec3f(
      ::google::protobuf::internal::ConstantInitialized);

  inline Vec3f(const Vec3f& from) : Vec3f(nullptr, from) {}
  inline Vec3f(Vec3f&& from) noexcept
      : Vec3f(nullptr, std::move(from)) {}
  inline Vec3f& operator=(const Vec3f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec3f& operator=(Vec3f&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vec3f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vec3f* internal_default_instance() {
    return reinterpret_cast<const Vec3f*>(
        &_Vec3f_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Vec3f& a, Vec3f& b) { a.Swap(&b); }
  inline void Swap(Vec3f* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec3f* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vec3f* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vec3f>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vec3f& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vec3f& from) { Vec3f::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vec3f* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Vec3f"; }

 protected:
  explicit Vec3f(::google::protobuf::Arena* arena);
  Vec3f(::google::protobuf::Arena* arena, const Vec3f& from);
  Vec3f(::google::protobuf::Arena* arena, Vec3f&& from) noexcept
      : Vec3f(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1 [json_name = "x"];
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2 [json_name = "y"];
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3 [json_name = "z"];
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Vec3f)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Vec3f& from_msg);
    float x_;
    float y_;
    float z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Vec3 final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Vec3) */ {
 public:
  inline Vec3() : Vec3(nullptr) {}
  ~Vec3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vec3* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vec3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vec3(
      ::google::protobuf::internal::ConstantInitialized);

  inline Vec3(const Vec3& from) : Vec3(nullptr, from) {}
  inline Vec3(Vec3&& from) noexcept
      : Vec3(nullptr, std::move(from)) {}
  inline Vec3& operator=(const Vec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec3& operator=(Vec3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vec3& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vec3* internal_default_instance() {
    return reinterpret_cast<const Vec3*>(
        &_Vec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Vec3& a, Vec3& b) { a.Swap(&b); }
  inline void Swap(Vec3* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vec3* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vec3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vec3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vec3& from) { Vec3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vec3* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Vec3"; }

 protected:
  explicit Vec3(::google::protobuf::Arena* arena);
  Vec3(::google::protobuf::Arena* arena, const Vec3& from);
  Vec3(::google::protobuf::Arena* arena, Vec3&& from) noexcept
      : Vec3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Vec3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Vec3& from_msg);
    double x_;
    double y_;
    double z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Vec2f final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Vec2f) */ {
 public:
  inline Vec2f() : Vec2f(nullptr) {}
  ~Vec2f() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vec2f* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vec2f));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vec2f(
      ::google::protobuf::internal::ConstantInitialized);

  inline Vec2f(const Vec2f& from) : Vec2f(nullptr, from) {}
  inline Vec2f(Vec2f&& from) noexcept
      : Vec2f(nullptr, std::move(from)) {}
  inline Vec2f& operator=(const Vec2f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec2f& operator=(Vec2f&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vec2f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vec2f* internal_default_instance() {
    return reinterpret_cast<const Vec2f*>(
        &_Vec2f_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Vec2f& a, Vec2f& b) { a.Swap(&b); }
  inline void Swap(Vec2f* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec2f* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vec2f* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vec2f>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vec2f& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vec2f& from) { Vec2f::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vec2f* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Vec2f"; }

 protected:
  explicit Vec2f(::google::protobuf::Arena* arena);
  Vec2f(::google::protobuf::Arena* arena, const Vec2f& from);
  Vec2f(::google::protobuf::Arena* arena, Vec2f&& from) noexcept
      : Vec2f(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float x = 1 [json_name = "x"];
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2 [json_name = "y"];
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Vec2f)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Vec2f& from_msg);
    float x_;
    float y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Vec2 final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Vec2) */ {
 public:
  inline Vec2() : Vec2(nullptr) {}
  ~Vec2() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vec2* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vec2));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vec2(
      ::google::protobuf::internal::ConstantInitialized);

  inline Vec2(const Vec2& from) : Vec2(nullptr, from) {}
  inline Vec2(Vec2&& from) noexcept
      : Vec2(nullptr, std::move(from)) {}
  inline Vec2& operator=(const Vec2& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec2& operator=(Vec2&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vec2& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vec2* internal_default_instance() {
    return reinterpret_cast<const Vec2*>(
        &_Vec2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Vec2& a, Vec2& b) { a.Swap(&b); }
  inline void Swap(Vec2* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vec2* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vec2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vec2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vec2& from) { Vec2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vec2* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Vec2"; }

 protected:
  explicit Vec2(::google::protobuf::Arena* arena);
  Vec2(::google::protobuf::Arena* arena, const Vec2& from);
  Vec2(::google::protobuf::Arena* arena, Vec2&& from) noexcept
      : Vec2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Vec2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Vec2& from_msg);
    double x_;
    double y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Uint64Range final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Uint64Range) */ {
 public:
  inline Uint64Range() : Uint64Range(nullptr) {}
  ~Uint64Range() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Uint64Range* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Uint64Range));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Uint64Range(
      ::google::protobuf::internal::ConstantInitialized);

  inline Uint64Range(const Uint64Range& from) : Uint64Range(nullptr, from) {}
  inline Uint64Range(Uint64Range&& from) noexcept
      : Uint64Range(nullptr, std::move(from)) {}
  inline Uint64Range& operator=(const Uint64Range& from) {
    CopyFrom(from);
    return *this;
  }
  inline Uint64Range& operator=(Uint64Range&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Uint64Range& default_instance() {
    return *internal_default_instance();
  }
  static inline const Uint64Range* internal_default_instance() {
    return reinterpret_cast<const Uint64Range*>(
        &_Uint64Range_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(Uint64Range& a, Uint64Range& b) { a.Swap(&b); }
  inline void Swap(Uint64Range* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Uint64Range* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Uint64Range* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Uint64Range>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Uint64Range& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Uint64Range& from) { Uint64Range::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Uint64Range* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Uint64Range"; }

 protected:
  explicit Uint64Range(::google::protobuf::Arena* arena);
  Uint64Range(::google::protobuf::Arena* arena, const Uint64Range& from);
  Uint64Range(::google::protobuf::Arena* arena, Uint64Range&& from) noexcept
      : Uint64Range(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // uint64 min = 1 [json_name = "min"];
  void clear_min() ;
  ::uint64_t min() const;
  void set_min(::uint64_t value);

  private:
  ::uint64_t _internal_min() const;
  void _internal_set_min(::uint64_t value);

  public:
  // uint64 max = 2 [json_name = "max"];
  void clear_max() ;
  ::uint64_t max() const;
  void set_max(::uint64_t value);

  private:
  ::uint64_t _internal_max() const;
  void _internal_set_max(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Uint64Range)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Uint64Range& from_msg);
    ::uint64_t min_;
    ::uint64_t max_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class ThetaPhi final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.ThetaPhi) */ {
 public:
  inline ThetaPhi() : ThetaPhi(nullptr) {}
  ~ThetaPhi() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ThetaPhi* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ThetaPhi));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThetaPhi(
      ::google::protobuf::internal::ConstantInitialized);

  inline ThetaPhi(const ThetaPhi& from) : ThetaPhi(nullptr, from) {}
  inline ThetaPhi(ThetaPhi&& from) noexcept
      : ThetaPhi(nullptr, std::move(from)) {}
  inline ThetaPhi& operator=(const ThetaPhi& from) {
    CopyFrom(from);
    return *this;
  }
  inline ThetaPhi& operator=(ThetaPhi&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ThetaPhi& default_instance() {
    return *internal_default_instance();
  }
  static inline const ThetaPhi* internal_default_instance() {
    return reinterpret_cast<const ThetaPhi*>(
        &_ThetaPhi_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ThetaPhi& a, ThetaPhi& b) { a.Swap(&b); }
  inline void Swap(ThetaPhi* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ThetaPhi* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ThetaPhi* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ThetaPhi>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ThetaPhi& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ThetaPhi& from) { ThetaPhi::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ThetaPhi* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.ThetaPhi"; }

 protected:
  explicit ThetaPhi(::google::protobuf::Arena* arena);
  ThetaPhi(::google::protobuf::Arena* arena, const ThetaPhi& from);
  ThetaPhi(::google::protobuf::Arena* arena, ThetaPhi&& from) noexcept
      : ThetaPhi(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kThetaFieldNumber = 1,
    kPhiFieldNumber = 2,
  };
  // double theta = 1 [json_name = "theta"];
  void clear_theta() ;
  double theta() const;
  void set_theta(double value);

  private:
  double _internal_theta() const;
  void _internal_set_theta(double value);

  public:
  // double phi = 2 [json_name = "phi"];
  void clear_phi() ;
  double phi() const;
  void set_phi(double value);

  private:
  double _internal_phi() const;
  void _internal_set_phi(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.ThetaPhi)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ThetaPhi& from_msg);
    double theta_;
    double phi_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class TMat4f final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.TMat4f) */ {
 public:
  inline TMat4f() : TMat4f(nullptr) {}
  ~TMat4f() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TMat4f* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TMat4f));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TMat4f(
      ::google::protobuf::internal::ConstantInitialized);

  inline TMat4f(const TMat4f& from) : TMat4f(nullptr, from) {}
  inline TMat4f(TMat4f&& from) noexcept
      : TMat4f(nullptr, std::move(from)) {}
  inline TMat4f& operator=(const TMat4f& from) {
    CopyFrom(from);
    return *this;
  }
  inline TMat4f& operator=(TMat4f&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TMat4f& default_instance() {
    return *internal_default_instance();
  }
  static inline const TMat4f* internal_default_instance() {
    return reinterpret_cast<const TMat4f*>(
        &_TMat4f_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(TMat4f& a, TMat4f& b) { a.Swap(&b); }
  inline void Swap(TMat4f* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TMat4f* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TMat4f* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TMat4f>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TMat4f& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TMat4f& from) { TMat4f::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TMat4f* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.TMat4f"; }

 protected:
  explicit TMat4f(::google::protobuf::Arena* arena);
  TMat4f(::google::protobuf::Arena* arena, const TMat4f& from);
  TMat4f(::google::protobuf::Arena* arena, TMat4f&& from) noexcept
      : TMat4f(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kM00FieldNumber = 1,
    kM01FieldNumber = 2,
    kM02FieldNumber = 3,
    kM03FieldNumber = 4,
    kM11FieldNumber = 5,
    kM12FieldNumber = 6,
    kM13FieldNumber = 7,
    kM22FieldNumber = 8,
    kM23FieldNumber = 9,
    kM33FieldNumber = 10,
  };
  // float m00 = 1 [json_name = "m00"];
  void clear_m00() ;
  float m00() const;
  void set_m00(float value);

  private:
  float _internal_m00() const;
  void _internal_set_m00(float value);

  public:
  // float m01 = 2 [json_name = "m01"];
  void clear_m01() ;
  float m01() const;
  void set_m01(float value);

  private:
  float _internal_m01() const;
  void _internal_set_m01(float value);

  public:
  // float m02 = 3 [json_name = "m02"];
  void clear_m02() ;
  float m02() const;
  void set_m02(float value);

  private:
  float _internal_m02() const;
  void _internal_set_m02(float value);

  public:
  // float m03 = 4 [json_name = "m03"];
  void clear_m03() ;
  float m03() const;
  void set_m03(float value);

  private:
  float _internal_m03() const;
  void _internal_set_m03(float value);

  public:
  // float m11 = 5 [json_name = "m11"];
  void clear_m11() ;
  float m11() const;
  void set_m11(float value);

  private:
  float _internal_m11() const;
  void _internal_set_m11(float value);

  public:
  // float m12 = 6 [json_name = "m12"];
  void clear_m12() ;
  float m12() const;
  void set_m12(float value);

  private:
  float _internal_m12() const;
  void _internal_set_m12(float value);

  public:
  // float m13 = 7 [json_name = "m13"];
  void clear_m13() ;
  float m13() const;
  void set_m13(float value);

  private:
  float _internal_m13() const;
  void _internal_set_m13(float value);

  public:
  // float m22 = 8 [json_name = "m22"];
  void clear_m22() ;
  float m22() const;
  void set_m22(float value);

  private:
  float _internal_m22() const;
  void _internal_set_m22(float value);

  public:
  // float m23 = 9 [json_name = "m23"];
  void clear_m23() ;
  float m23() const;
  void set_m23(float value);

  private:
  float _internal_m23() const;
  void _internal_set_m23(float value);

  public:
  // float m33 = 10 [json_name = "m33"];
  void clear_m33() ;
  float m33() const;
  void set_m33(float value);

  private:
  float _internal_m33() const;
  void _internal_set_m33(float value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.TMat4f)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TMat4f& from_msg);
    float m00_;
    float m01_;
    float m02_;
    float m03_;
    float m11_;
    float m12_;
    float m13_;
    float m22_;
    float m23_;
    float m33_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class TMat3 final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.TMat3) */ {
 public:
  inline TMat3() : TMat3(nullptr) {}
  ~TMat3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TMat3* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TMat3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TMat3(
      ::google::protobuf::internal::ConstantInitialized);

  inline TMat3(const TMat3& from) : TMat3(nullptr, from) {}
  inline TMat3(TMat3&& from) noexcept
      : TMat3(nullptr, std::move(from)) {}
  inline TMat3& operator=(const TMat3& from) {
    CopyFrom(from);
    return *this;
  }
  inline TMat3& operator=(TMat3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TMat3& default_instance() {
    return *internal_default_instance();
  }
  static inline const TMat3* internal_default_instance() {
    return reinterpret_cast<const TMat3*>(
        &_TMat3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(TMat3& a, TMat3& b) { a.Swap(&b); }
  inline void Swap(TMat3* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TMat3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TMat3* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TMat3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TMat3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TMat3& from) { TMat3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TMat3* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.TMat3"; }

 protected:
  explicit TMat3(::google::protobuf::Arena* arena);
  TMat3(::google::protobuf::Arena* arena, const TMat3& from);
  TMat3(::google::protobuf::Arena* arena, TMat3&& from) noexcept
      : TMat3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMxxFieldNumber = 1,
    kMxyFieldNumber = 2,
    kMxzFieldNumber = 3,
    kMyyFieldNumber = 4,
    kMyzFieldNumber = 5,
    kMzzFieldNumber = 6,
  };
  // double mxx = 1 [json_name = "mxx"];
  void clear_mxx() ;
  double mxx() const;
  void set_mxx(double value);

  private:
  double _internal_mxx() const;
  void _internal_set_mxx(double value);

  public:
  // double mxy = 2 [json_name = "mxy"];
  void clear_mxy() ;
  double mxy() const;
  void set_mxy(double value);

  private:
  double _internal_mxy() const;
  void _internal_set_mxy(double value);

  public:
  // double mxz = 3 [json_name = "mxz"];
  void clear_mxz() ;
  double mxz() const;
  void set_mxz(double value);

  private:
  double _internal_mxz() const;
  void _internal_set_mxz(double value);

  public:
  // double myy = 4 [json_name = "myy"];
  void clear_myy() ;
  double myy() const;
  void set_myy(double value);

  private:
  double _internal_myy() const;
  void _internal_set_myy(double value);

  public:
  // double myz = 5 [json_name = "myz"];
  void clear_myz() ;
  double myz() const;
  void set_myz(double value);

  private:
  double _internal_myz() const;
  void _internal_set_myz(double value);

  public:
  // double mzz = 6 [json_name = "mzz"];
  void clear_mzz() ;
  double mzz() const;
  void set_mzz(double value);

  private:
  double _internal_mzz() const;
  void _internal_set_mzz(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.TMat3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TMat3& from_msg);
    double mxx_;
    double mxy_;
    double mxz_;
    double myy_;
    double myz_;
    double mzz_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class TMat2 final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.TMat2) */ {
 public:
  inline TMat2() : TMat2(nullptr) {}
  ~TMat2() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TMat2* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TMat2));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TMat2(
      ::google::protobuf::internal::ConstantInitialized);

  inline TMat2(const TMat2& from) : TMat2(nullptr, from) {}
  inline TMat2(TMat2&& from) noexcept
      : TMat2(nullptr, std::move(from)) {}
  inline TMat2& operator=(const TMat2& from) {
    CopyFrom(from);
    return *this;
  }
  inline TMat2& operator=(TMat2&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TMat2& default_instance() {
    return *internal_default_instance();
  }
  static inline const TMat2* internal_default_instance() {
    return reinterpret_cast<const TMat2*>(
        &_TMat2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(TMat2& a, TMat2& b) { a.Swap(&b); }
  inline void Swap(TMat2* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TMat2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TMat2* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TMat2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TMat2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TMat2& from) { TMat2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TMat2* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.TMat2"; }

 protected:
  explicit TMat2(::google::protobuf::Arena* arena);
  TMat2(::google::protobuf::Arena* arena, const TMat2& from);
  TMat2(::google::protobuf::Arena* arena, TMat2&& from) noexcept
      : TMat2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMxxFieldNumber = 1,
    kMxyFieldNumber = 2,
    kMyyFieldNumber = 3,
  };
  // double mxx = 1 [json_name = "mxx"];
  void clear_mxx() ;
  double mxx() const;
  void set_mxx(double value);

  private:
  double _internal_mxx() const;
  void _internal_set_mxx(double value);

  public:
  // double mxy = 2 [json_name = "mxy"];
  void clear_mxy() ;
  double mxy() const;
  void set_mxy(double value);

  private:
  double _internal_mxy() const;
  void _internal_set_mxy(double value);

  public:
  // double myy = 3 [json_name = "myy"];
  void clear_myy() ;
  double myy() const;
  void set_myy(double value);

  private:
  double _internal_myy() const;
  void _internal_set_myy(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.TMat2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TMat2& from_msg);
    double mxx_;
    double mxy_;
    double myy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Spherical final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Spherical) */ {
 public:
  inline Spherical() : Spherical(nullptr) {}
  ~Spherical() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Spherical* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Spherical));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Spherical(
      ::google::protobuf::internal::ConstantInitialized);

  inline Spherical(const Spherical& from) : Spherical(nullptr, from) {}
  inline Spherical(Spherical&& from) noexcept
      : Spherical(nullptr, std::move(from)) {}
  inline Spherical& operator=(const Spherical& from) {
    CopyFrom(from);
    return *this;
  }
  inline Spherical& operator=(Spherical&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Spherical& default_instance() {
    return *internal_default_instance();
  }
  static inline const Spherical* internal_default_instance() {
    return reinterpret_cast<const Spherical*>(
        &_Spherical_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(Spherical& a, Spherical& b) { a.Swap(&b); }
  inline void Swap(Spherical* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Spherical* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Spherical* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Spherical>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Spherical& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Spherical& from) { Spherical::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Spherical* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Spherical"; }

 protected:
  explicit Spherical(::google::protobuf::Arena* arena);
  Spherical(::google::protobuf::Arena* arena, const Spherical& from);
  Spherical(::google::protobuf::Arena* arena, Spherical&& from) noexcept
      : Spherical(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAzFieldNumber = 1,
    kElFieldNumber = 2,
    kRangeFieldNumber = 3,
  };
  // double az = 1 [json_name = "az"];
  void clear_az() ;
  double az() const;
  void set_az(double value);

  private:
  double _internal_az() const;
  void _internal_set_az(double value);

  public:
  // double el = 2 [json_name = "el"];
  void clear_el() ;
  double el() const;
  void set_el(double value);

  private:
  double _internal_el() const;
  void _internal_set_el(double value);

  public:
  // double range = 3 [json_name = "range"];
  void clear_range() ;
  double range() const;
  void set_range(double value);

  private:
  double _internal_range() const;
  void _internal_set_range(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Spherical)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Spherical& from_msg);
    double az_;
    double el_;
    double range_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Quaternion final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Quaternion) */ {
 public:
  inline Quaternion() : Quaternion(nullptr) {}
  ~Quaternion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Quaternion* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Quaternion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Quaternion(
      ::google::protobuf::internal::ConstantInitialized);

  inline Quaternion(const Quaternion& from) : Quaternion(nullptr, from) {}
  inline Quaternion(Quaternion&& from) noexcept
      : Quaternion(nullptr, std::move(from)) {}
  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Quaternion& default_instance() {
    return *internal_default_instance();
  }
  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
        &_Quaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Quaternion& a, Quaternion& b) { a.Swap(&b); }
  inline void Swap(Quaternion* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quaternion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Quaternion* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Quaternion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Quaternion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Quaternion& from) { Quaternion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Quaternion* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Quaternion"; }

 protected:
  explicit Quaternion(::google::protobuf::Arena* arena);
  Quaternion(::google::protobuf::Arena* arena, const Quaternion& from);
  Quaternion(::google::protobuf::Arena* arena, Quaternion&& from) noexcept
      : Quaternion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kWFieldNumber = 4,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // double w = 4 [json_name = "w"];
  void clear_w() ;
  double w() const;
  void set_w(double value);

  private:
  double _internal_w() const;
  void _internal_set_w(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Quaternion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Quaternion& from_msg);
    double x_;
    double y_;
    double z_;
    double w_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class LLA final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.LLA) */ {
 public:
  inline LLA() : LLA(nullptr) {}
  ~LLA() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LLA* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LLA));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LLA(
      ::google::protobuf::internal::ConstantInitialized);

  inline LLA(const LLA& from) : LLA(nullptr, from) {}
  inline LLA(LLA&& from) noexcept
      : LLA(nullptr, std::move(from)) {}
  inline LLA& operator=(const LLA& from) {
    CopyFrom(from);
    return *this;
  }
  inline LLA& operator=(LLA&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LLA& default_instance() {
    return *internal_default_instance();
  }
  static inline const LLA* internal_default_instance() {
    return reinterpret_cast<const LLA*>(
        &_LLA_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LLA& a, LLA& b) { a.Swap(&b); }
  inline void Swap(LLA* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LLA* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LLA* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LLA>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LLA& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LLA& from) { LLA::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LLA* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.LLA"; }

 protected:
  explicit LLA(::google::protobuf::Arena* arena);
  LLA(::google::protobuf::Arena* arena, const LLA& from);
  LLA(::google::protobuf::Arena* arena, LLA&& from) noexcept
      : LLA(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AltitudeReference = LLA_AltitudeReference;
  static constexpr AltitudeReference ALTITUDE_REFERENCE_INVALID = LLA_AltitudeReference_ALTITUDE_REFERENCE_INVALID;
  static constexpr AltitudeReference ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84 = LLA_AltitudeReference_ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84;
  static constexpr AltitudeReference ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM96 = LLA_AltitudeReference_ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM96;
  static constexpr AltitudeReference ALTITUDE_REFERENCE_UNKNOWN = LLA_AltitudeReference_ALTITUDE_REFERENCE_UNKNOWN;
  static constexpr AltitudeReference ALTITUDE_REFERENCE_BAROMETRIC = LLA_AltitudeReference_ALTITUDE_REFERENCE_BAROMETRIC;
  static constexpr AltitudeReference ALTITUDE_REFERENCE_ABOVE_SEA_FLOOR = LLA_AltitudeReference_ALTITUDE_REFERENCE_ABOVE_SEA_FLOOR;
  static constexpr AltitudeReference ALTITUDE_REFERENCE_BELOW_SEA_SURFACE = LLA_AltitudeReference_ALTITUDE_REFERENCE_BELOW_SEA_SURFACE;
  static inline bool AltitudeReference_IsValid(int value) {
    return LLA_AltitudeReference_IsValid(value);
  }
  static constexpr AltitudeReference AltitudeReference_MIN = LLA_AltitudeReference_AltitudeReference_MIN;
  static constexpr AltitudeReference AltitudeReference_MAX = LLA_AltitudeReference_AltitudeReference_MAX;
  static constexpr int AltitudeReference_ARRAYSIZE = LLA_AltitudeReference_AltitudeReference_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AltitudeReference_descriptor() {
    return LLA_AltitudeReference_descriptor();
  }
  template <typename T>
  static inline const std::string& AltitudeReference_Name(T value) {
    return LLA_AltitudeReference_Name(value);
  }
  static inline bool AltitudeReference_Parse(absl::string_view name, AltitudeReference* value) {
    return LLA_AltitudeReference_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kLonFieldNumber = 1,
    kLatFieldNumber = 2,
    kAltFieldNumber = 3,
    kIs2DFieldNumber = 4,
    kAltitudeReferenceFieldNumber = 5,
  };
  // double lon = 1 [json_name = "lon"];
  void clear_lon() ;
  double lon() const;
  void set_lon(double value);

  private:
  double _internal_lon() const;
  void _internal_set_lon(double value);

  public:
  // double lat = 2 [json_name = "lat"];
  void clear_lat() ;
  double lat() const;
  void set_lat(double value);

  private:
  double _internal_lat() const;
  void _internal_set_lat(double value);

  public:
  // double alt = 3 [json_name = "alt"];
  void clear_alt() ;
  double alt() const;
  void set_alt(double value);

  private:
  double _internal_alt() const;
  void _internal_set_alt(double value);

  public:
  // bool is2d = 4 [json_name = "is2d"];
  void clear_is2d() ;
  bool is2d() const;
  void set_is2d(bool value);

  private:
  bool _internal_is2d() const;
  void _internal_set_is2d(bool value);

  public:
  // .anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];
  void clear_altitude_reference() ;
  ::anduril::type::LLA_AltitudeReference altitude_reference() const;
  void set_altitude_reference(::anduril::type::LLA_AltitudeReference value);

  private:
  ::anduril::type::LLA_AltitudeReference _internal_altitude_reference() const;
  void _internal_set_altitude_reference(::anduril::type::LLA_AltitudeReference value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.LLA)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LLA& from_msg);
    double lon_;
    double lat_;
    double alt_;
    bool is2d_;
    int altitude_reference_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class ENU final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.ENU) */ {
 public:
  inline ENU() : ENU(nullptr) {}
  ~ENU() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ENU* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ENU));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ENU(
      ::google::protobuf::internal::ConstantInitialized);

  inline ENU(const ENU& from) : ENU(nullptr, from) {}
  inline ENU(ENU&& from) noexcept
      : ENU(nullptr, std::move(from)) {}
  inline ENU& operator=(const ENU& from) {
    CopyFrom(from);
    return *this;
  }
  inline ENU& operator=(ENU&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ENU& default_instance() {
    return *internal_default_instance();
  }
  static inline const ENU* internal_default_instance() {
    return reinterpret_cast<const ENU*>(
        &_ENU_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ENU& a, ENU& b) { a.Swap(&b); }
  inline void Swap(ENU* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ENU* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ENU* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ENU>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ENU& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ENU& from) { ENU::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ENU* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.ENU"; }

 protected:
  explicit ENU(::google::protobuf::Arena* arena);
  ENU(::google::protobuf::Arena* arena, const ENU& from);
  ENU(::google::protobuf::Arena* arena, ENU&& from) noexcept
      : ENU(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEFieldNumber = 1,
    kNFieldNumber = 2,
    kUFieldNumber = 3,
  };
  // double e = 1 [json_name = "e"];
  void clear_e() ;
  double e() const;
  void set_e(double value);

  private:
  double _internal_e() const;
  void _internal_set_e(double value);

  public:
  // double n = 2 [json_name = "n"];
  void clear_n() ;
  double n() const;
  void set_n(double value);

  private:
  double _internal_n() const;
  void _internal_set_n(double value);

  public:
  // double u = 3 [json_name = "u"];
  void clear_u() ;
  double u() const;
  void set_u(double value);

  private:
  double _internal_u() const;
  void _internal_set_u(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.ENU)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ENU& from_msg);
    double e_;
    double n_;
    double u_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class ECI final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.ECI) */ {
 public:
  inline ECI() : ECI(nullptr) {}
  ~ECI() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ECI* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ECI));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ECI(
      ::google::protobuf::internal::ConstantInitialized);

  inline ECI(const ECI& from) : ECI(nullptr, from) {}
  inline ECI(ECI&& from) noexcept
      : ECI(nullptr, std::move(from)) {}
  inline ECI& operator=(const ECI& from) {
    CopyFrom(from);
    return *this;
  }
  inline ECI& operator=(ECI&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ECI& default_instance() {
    return *internal_default_instance();
  }
  static inline const ECI* internal_default_instance() {
    return reinterpret_cast<const ECI*>(
        &_ECI_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ECI& a, ECI& b) { a.Swap(&b); }
  inline void Swap(ECI* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ECI* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ECI* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ECI>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ECI& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ECI& from) { ECI::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ECI* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.ECI"; }

 protected:
  explicit ECI(::google::protobuf::Arena* arena);
  ECI(::google::protobuf::Arena* arena, const ECI& from);
  ECI(::google::protobuf::Arena* arena, ECI&& from) noexcept
      : ECI(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.ECI)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ECI& from_msg);
    double x_;
    double y_;
    double z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class DoubleRange final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.DoubleRange) */ {
 public:
  inline DoubleRange() : DoubleRange(nullptr) {}
  ~DoubleRange() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DoubleRange* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DoubleRange));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DoubleRange(
      ::google::protobuf::internal::ConstantInitialized);

  inline DoubleRange(const DoubleRange& from) : DoubleRange(nullptr, from) {}
  inline DoubleRange(DoubleRange&& from) noexcept
      : DoubleRange(nullptr, std::move(from)) {}
  inline DoubleRange& operator=(const DoubleRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoubleRange& operator=(DoubleRange&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DoubleRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const DoubleRange* internal_default_instance() {
    return reinterpret_cast<const DoubleRange*>(
        &_DoubleRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(DoubleRange& a, DoubleRange& b) { a.Swap(&b); }
  inline void Swap(DoubleRange* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoubleRange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DoubleRange* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DoubleRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DoubleRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DoubleRange& from) { DoubleRange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DoubleRange* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.DoubleRange"; }

 protected:
  explicit DoubleRange(::google::protobuf::Arena* arena);
  DoubleRange(::google::protobuf::Arena* arena, const DoubleRange& from);
  DoubleRange(::google::protobuf::Arena* arena, DoubleRange&& from) noexcept
      : DoubleRange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // double min = 1 [json_name = "min"];
  void clear_min() ;
  double min() const;
  void set_min(double value);

  private:
  double _internal_min() const;
  void _internal_set_min(double value);

  public:
  // double max = 2 [json_name = "max"];
  void clear_max() ;
  double max() const;
  void set_max(double value);

  private:
  double _internal_max() const;
  void _internal_set_max(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.DoubleRange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DoubleRange& from_msg);
    double min_;
    double max_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class RigidTransform final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.RigidTransform) */ {
 public:
  inline RigidTransform() : RigidTransform(nullptr) {}
  ~RigidTransform() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RigidTransform* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RigidTransform));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RigidTransform(
      ::google::protobuf::internal::ConstantInitialized);

  inline RigidTransform(const RigidTransform& from) : RigidTransform(nullptr, from) {}
  inline RigidTransform(RigidTransform&& from) noexcept
      : RigidTransform(nullptr, std::move(from)) {}
  inline RigidTransform& operator=(const RigidTransform& from) {
    CopyFrom(from);
    return *this;
  }
  inline RigidTransform& operator=(RigidTransform&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RigidTransform& default_instance() {
    return *internal_default_instance();
  }
  static inline const RigidTransform* internal_default_instance() {
    return reinterpret_cast<const RigidTransform*>(
        &_RigidTransform_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(RigidTransform& a, RigidTransform& b) { a.Swap(&b); }
  inline void Swap(RigidTransform* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RigidTransform* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RigidTransform* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RigidTransform>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RigidTransform& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RigidTransform& from) { RigidTransform::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RigidTransform* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.RigidTransform"; }

 protected:
  explicit RigidTransform(::google::protobuf::Arena* arena);
  RigidTransform(::google::protobuf::Arena* arena, const RigidTransform& from);
  RigidTransform(::google::protobuf::Arena* arena, RigidTransform&& from) noexcept
      : RigidTransform(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRotationFieldNumber = 3,
    kTranslationFieldNumber = 4,
  };
  // .anduril.type.Quaternion rotation = 3 [json_name = "rotation"];
  bool has_rotation() const;
  void clear_rotation() ;
  const ::anduril::type::Quaternion& rotation() const;
  PROTOBUF_NODISCARD ::anduril::type::Quaternion* release_rotation();
  ::anduril::type::Quaternion* mutable_rotation();
  void set_allocated_rotation(::anduril::type::Quaternion* value);
  void unsafe_arena_set_allocated_rotation(::anduril::type::Quaternion* value);
  ::anduril::type::Quaternion* unsafe_arena_release_rotation();

  private:
  const ::anduril::type::Quaternion& _internal_rotation() const;
  ::anduril::type::Quaternion* _internal_mutable_rotation();

  public:
  // .anduril.type.Vec3 translation = 4 [json_name = "translation"];
  bool has_translation() const;
  void clear_translation() ;
  const ::anduril::type::Vec3& translation() const;
  PROTOBUF_NODISCARD ::anduril::type::Vec3* release_translation();
  ::anduril::type::Vec3* mutable_translation();
  void set_allocated_translation(::anduril::type::Vec3* value);
  void unsafe_arena_set_allocated_translation(::anduril::type::Vec3* value);
  ::anduril::type::Vec3* unsafe_arena_release_translation();

  private:
  const ::anduril::type::Vec3& _internal_translation() const;
  ::anduril::type::Vec3* _internal_mutable_translation();

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.RigidTransform)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RigidTransform& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::type::Quaternion* rotation_;
    ::anduril::type::Vec3* translation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class Pose final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.Pose) */ {
 public:
  inline Pose() : Pose(nullptr) {}
  ~Pose() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Pose* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Pose));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Pose(
      ::google::protobuf::internal::ConstantInitialized);

  inline Pose(const Pose& from) : Pose(nullptr, from) {}
  inline Pose(Pose&& from) noexcept
      : Pose(nullptr, std::move(from)) {}
  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pose& operator=(Pose&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pose& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
        &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Pose& a, Pose& b) { a.Swap(&b); }
  inline void Swap(Pose* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pose* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pose* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Pose>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pose& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Pose& from) { Pose::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Pose* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.Pose"; }

 protected:
  explicit Pose(::google::protobuf::Arena* arena);
  Pose(::google::protobuf::Arena* arena, const Pose& from);
  Pose(::google::protobuf::Arena* arena, Pose&& from) noexcept
      : Pose(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPosFieldNumber = 1,
    kAttEnuFieldNumber = 2,
  };
  // .anduril.type.LLA pos = 1 [json_name = "pos"];
  bool has_pos() const;
  void clear_pos() ;
  const ::anduril::type::LLA& pos() const;
  PROTOBUF_NODISCARD ::anduril::type::LLA* release_pos();
  ::anduril::type::LLA* mutable_pos();
  void set_allocated_pos(::anduril::type::LLA* value);
  void unsafe_arena_set_allocated_pos(::anduril::type::LLA* value);
  ::anduril::type::LLA* unsafe_arena_release_pos();

  private:
  const ::anduril::type::LLA& _internal_pos() const;
  ::anduril::type::LLA* _internal_mutable_pos();

  public:
  // .anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];
  bool has_att_enu() const;
  void clear_att_enu() ;
  const ::anduril::type::Quaternion& att_enu() const;
  PROTOBUF_NODISCARD ::anduril::type::Quaternion* release_att_enu();
  ::anduril::type::Quaternion* mutable_att_enu();
  void set_allocated_att_enu(::anduril::type::Quaternion* value);
  void unsafe_arena_set_allocated_att_enu(::anduril::type::Quaternion* value);
  ::anduril::type::Quaternion* unsafe_arena_release_att_enu();

  private:
  const ::anduril::type::Quaternion& _internal_att_enu() const;
  ::anduril::type::Quaternion* _internal_mutable_att_enu();

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.Pose)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Pose& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::type::LLA* pos_;
    ::anduril::type::Quaternion* att_enu_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class LLAPolygon final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.LLAPolygon) */ {
 public:
  inline LLAPolygon() : LLAPolygon(nullptr) {}
  ~LLAPolygon() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LLAPolygon* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LLAPolygon));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LLAPolygon(
      ::google::protobuf::internal::ConstantInitialized);

  inline LLAPolygon(const LLAPolygon& from) : LLAPolygon(nullptr, from) {}
  inline LLAPolygon(LLAPolygon&& from) noexcept
      : LLAPolygon(nullptr, std::move(from)) {}
  inline LLAPolygon& operator=(const LLAPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  inline LLAPolygon& operator=(LLAPolygon&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LLAPolygon& default_instance() {
    return *internal_default_instance();
  }
  static inline const LLAPolygon* internal_default_instance() {
    return reinterpret_cast<const LLAPolygon*>(
        &_LLAPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(LLAPolygon& a, LLAPolygon& b) { a.Swap(&b); }
  inline void Swap(LLAPolygon* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LLAPolygon* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LLAPolygon* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LLAPolygon>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LLAPolygon& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LLAPolygon& from) { LLAPolygon::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LLAPolygon* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.LLAPolygon"; }

 protected:
  explicit LLAPolygon(::google::protobuf::Arena* arena);
  LLAPolygon(::google::protobuf::Arena* arena, const LLAPolygon& from);
  LLAPolygon(::google::protobuf::Arena* arena, LLAPolygon&& from) noexcept
      : LLAPolygon(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPointsFieldNumber = 1,
  };
  // repeated .anduril.type.LLA points = 1 [json_name = "points"];
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::anduril::type::LLA* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>* mutable_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>& _internal_points() const;
  ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>* _internal_mutable_points();
  public:
  const ::anduril::type::LLA& points(int index) const;
  ::anduril::type::LLA* add_points();
  const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>& points() const;
  // @@protoc_insertion_point(class_scope:anduril.type.LLAPolygon)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LLAPolygon& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::type::LLA > points_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class LLAPath final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.LLAPath) */ {
 public:
  inline LLAPath() : LLAPath(nullptr) {}
  ~LLAPath() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LLAPath* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LLAPath));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LLAPath(
      ::google::protobuf::internal::ConstantInitialized);

  inline LLAPath(const LLAPath& from) : LLAPath(nullptr, from) {}
  inline LLAPath(LLAPath&& from) noexcept
      : LLAPath(nullptr, std::move(from)) {}
  inline LLAPath& operator=(const LLAPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline LLAPath& operator=(LLAPath&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LLAPath& default_instance() {
    return *internal_default_instance();
  }
  static inline const LLAPath* internal_default_instance() {
    return reinterpret_cast<const LLAPath*>(
        &_LLAPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(LLAPath& a, LLAPath& b) { a.Swap(&b); }
  inline void Swap(LLAPath* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LLAPath* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LLAPath* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LLAPath>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LLAPath& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LLAPath& from) { LLAPath::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LLAPath* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.LLAPath"; }

 protected:
  explicit LLAPath(::google::protobuf::Arena* arena);
  LLAPath(::google::protobuf::Arena* arena, const LLAPath& from);
  LLAPath(::google::protobuf::Arena* arena, LLAPath&& from) noexcept
      : LLAPath(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPointsFieldNumber = 1,
    kLoopFieldNumber = 2,
  };
  // repeated .anduril.type.LLA points = 1 [json_name = "points"];
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::anduril::type::LLA* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>* mutable_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>& _internal_points() const;
  ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>* _internal_mutable_points();
  public:
  const ::anduril::type::LLA& points(int index) const;
  ::anduril::type::LLA* add_points();
  const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>& points() const;
  // bool loop = 2 [json_name = "loop"];
  void clear_loop() ;
  bool loop() const;
  void set_loop(bool value);

  private:
  bool _internal_loop() const;
  void _internal_set_loop(bool value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.type.LLAPath)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LLAPath& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::type::LLA > points_;
    bool loop_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};
// -------------------------------------------------------------------

class AERPolygon final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.type.AERPolygon) */ {
 public:
  inline AERPolygon() : AERPolygon(nullptr) {}
  ~AERPolygon() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AERPolygon* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AERPolygon));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AERPolygon(
      ::google::protobuf::internal::ConstantInitialized);

  inline AERPolygon(const AERPolygon& from) : AERPolygon(nullptr, from) {}
  inline AERPolygon(AERPolygon&& from) noexcept
      : AERPolygon(nullptr, std::move(from)) {}
  inline AERPolygon& operator=(const AERPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  inline AERPolygon& operator=(AERPolygon&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AERPolygon& default_instance() {
    return *internal_default_instance();
  }
  static inline const AERPolygon* internal_default_instance() {
    return reinterpret_cast<const AERPolygon*>(
        &_AERPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(AERPolygon& a, AERPolygon& b) { a.Swap(&b); }
  inline void Swap(AERPolygon* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AERPolygon* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AERPolygon* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AERPolygon>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AERPolygon& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AERPolygon& from) { AERPolygon::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AERPolygon* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.type.AERPolygon"; }

 protected:
  explicit AERPolygon(::google::protobuf::Arena* arena);
  AERPolygon(::google::protobuf::Arena* arena, const AERPolygon& from);
  AERPolygon(::google::protobuf::Arena* arena, AERPolygon&& from) noexcept
      : AERPolygon(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPointsFieldNumber = 1,
  };
  // repeated .anduril.type.Spherical points = 1 [json_name = "points"];
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::anduril::type::Spherical* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>* mutable_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>& _internal_points() const;
  ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>* _internal_mutable_points();
  public:
  const ::anduril::type::Spherical& points(int index) const;
  ::anduril::type::Spherical* add_points();
  const ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>& points() const;
  // @@protoc_insertion_point(class_scope:anduril.type.AERPolygon)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AERPolygon& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::type::Spherical > points_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftype_2fcoords_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ThetaPhi

// double theta = 1 [json_name = "theta"];
inline void ThetaPhi::clear_theta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.theta_ = 0;
}
inline double ThetaPhi::theta() const {
  // @@protoc_insertion_point(field_get:anduril.type.ThetaPhi.theta)
  return _internal_theta();
}
inline void ThetaPhi::set_theta(double value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:anduril.type.ThetaPhi.theta)
}
inline double ThetaPhi::_internal_theta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.theta_;
}
inline void ThetaPhi::_internal_set_theta(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.theta_ = value;
}

// double phi = 2 [json_name = "phi"];
inline void ThetaPhi::clear_phi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phi_ = 0;
}
inline double ThetaPhi::phi() const {
  // @@protoc_insertion_point(field_get:anduril.type.ThetaPhi.phi)
  return _internal_phi();
}
inline void ThetaPhi::set_phi(double value) {
  _internal_set_phi(value);
  // @@protoc_insertion_point(field_set:anduril.type.ThetaPhi.phi)
}
inline double ThetaPhi::_internal_phi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phi_;
}
inline void ThetaPhi::_internal_set_phi(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phi_ = value;
}

// -------------------------------------------------------------------

// LLA

// double lon = 1 [json_name = "lon"];
inline void LLA::clear_lon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = 0;
}
inline double LLA::lon() const {
  // @@protoc_insertion_point(field_get:anduril.type.LLA.lon)
  return _internal_lon();
}
inline void LLA::set_lon(double value) {
  _internal_set_lon(value);
  // @@protoc_insertion_point(field_set:anduril.type.LLA.lon)
}
inline double LLA::_internal_lon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lon_;
}
inline void LLA::_internal_set_lon(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = value;
}

// double lat = 2 [json_name = "lat"];
inline void LLA::clear_lat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = 0;
}
inline double LLA::lat() const {
  // @@protoc_insertion_point(field_get:anduril.type.LLA.lat)
  return _internal_lat();
}
inline void LLA::set_lat(double value) {
  _internal_set_lat(value);
  // @@protoc_insertion_point(field_set:anduril.type.LLA.lat)
}
inline double LLA::_internal_lat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lat_;
}
inline void LLA::_internal_set_lat(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = value;
}

// double alt = 3 [json_name = "alt"];
inline void LLA::clear_alt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alt_ = 0;
}
inline double LLA::alt() const {
  // @@protoc_insertion_point(field_get:anduril.type.LLA.alt)
  return _internal_alt();
}
inline void LLA::set_alt(double value) {
  _internal_set_alt(value);
  // @@protoc_insertion_point(field_set:anduril.type.LLA.alt)
}
inline double LLA::_internal_alt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alt_;
}
inline void LLA::_internal_set_alt(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alt_ = value;
}

// bool is2d = 4 [json_name = "is2d"];
inline void LLA::clear_is2d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is2d_ = false;
}
inline bool LLA::is2d() const {
  // @@protoc_insertion_point(field_get:anduril.type.LLA.is2d)
  return _internal_is2d();
}
inline void LLA::set_is2d(bool value) {
  _internal_set_is2d(value);
  // @@protoc_insertion_point(field_set:anduril.type.LLA.is2d)
}
inline bool LLA::_internal_is2d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is2d_;
}
inline void LLA::_internal_set_is2d(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is2d_ = value;
}

// .anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];
inline void LLA::clear_altitude_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_reference_ = 0;
}
inline ::anduril::type::LLA_AltitudeReference LLA::altitude_reference() const {
  // @@protoc_insertion_point(field_get:anduril.type.LLA.altitude_reference)
  return _internal_altitude_reference();
}
inline void LLA::set_altitude_reference(::anduril::type::LLA_AltitudeReference value) {
  _internal_set_altitude_reference(value);
  // @@protoc_insertion_point(field_set:anduril.type.LLA.altitude_reference)
}
inline ::anduril::type::LLA_AltitudeReference LLA::_internal_altitude_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::type::LLA_AltitudeReference>(_impl_.altitude_reference_);
}
inline void LLA::_internal_set_altitude_reference(::anduril::type::LLA_AltitudeReference value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_reference_ = value;
}

// -------------------------------------------------------------------

// ENU

// double e = 1 [json_name = "e"];
inline void ENU::clear_e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.e_ = 0;
}
inline double ENU::e() const {
  // @@protoc_insertion_point(field_get:anduril.type.ENU.e)
  return _internal_e();
}
inline void ENU::set_e(double value) {
  _internal_set_e(value);
  // @@protoc_insertion_point(field_set:anduril.type.ENU.e)
}
inline double ENU::_internal_e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.e_;
}
inline void ENU::_internal_set_e(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.e_ = value;
}

// double n = 2 [json_name = "n"];
inline void ENU::clear_n() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.n_ = 0;
}
inline double ENU::n() const {
  // @@protoc_insertion_point(field_get:anduril.type.ENU.n)
  return _internal_n();
}
inline void ENU::set_n(double value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:anduril.type.ENU.n)
}
inline double ENU::_internal_n() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.n_;
}
inline void ENU::_internal_set_n(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.n_ = value;
}

// double u = 3 [json_name = "u"];
inline void ENU::clear_u() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u_ = 0;
}
inline double ENU::u() const {
  // @@protoc_insertion_point(field_get:anduril.type.ENU.u)
  return _internal_u();
}
inline void ENU::set_u(double value) {
  _internal_set_u(value);
  // @@protoc_insertion_point(field_set:anduril.type.ENU.u)
}
inline double ENU::_internal_u() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.u_;
}
inline void ENU::_internal_set_u(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u_ = value;
}

// -------------------------------------------------------------------

// ECI

// double x = 1 [json_name = "x"];
inline void ECI::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline double ECI::x() const {
  // @@protoc_insertion_point(field_get:anduril.type.ECI.x)
  return _internal_x();
}
inline void ECI::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:anduril.type.ECI.x)
}
inline double ECI::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void ECI::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void ECI::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline double ECI::y() const {
  // @@protoc_insertion_point(field_get:anduril.type.ECI.y)
  return _internal_y();
}
inline void ECI::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:anduril.type.ECI.y)
}
inline double ECI::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void ECI::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void ECI::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline double ECI::z() const {
  // @@protoc_insertion_point(field_get:anduril.type.ECI.z)
  return _internal_z();
}
inline void ECI::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:anduril.type.ECI.z)
}
inline double ECI::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void ECI::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Vec2

// double x = 1 [json_name = "x"];
inline void Vec2::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline double Vec2::x() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec2.x)
  return _internal_x();
}
inline void Vec2::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec2.x)
}
inline double Vec2::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Vec2::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Vec2::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline double Vec2::y() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec2.y)
  return _internal_y();
}
inline void Vec2::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec2.y)
}
inline double Vec2::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Vec2::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// Vec2f

// float x = 1 [json_name = "x"];
inline void Vec2f::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float Vec2f::x() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec2f.x)
  return _internal_x();
}
inline void Vec2f::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec2f.x)
}
inline float Vec2f::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Vec2f::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2 [json_name = "y"];
inline void Vec2f::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float Vec2f::y() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec2f.y)
  return _internal_y();
}
inline void Vec2f::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec2f.y)
}
inline float Vec2f::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Vec2f::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// Vec3

// double x = 1 [json_name = "x"];
inline void Vec3::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline double Vec3::x() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec3.x)
  return _internal_x();
}
inline void Vec3::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec3.x)
}
inline double Vec3::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Vec3::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Vec3::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline double Vec3::y() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec3.y)
  return _internal_y();
}
inline void Vec3::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec3.y)
}
inline double Vec3::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Vec3::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void Vec3::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline double Vec3::z() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec3.z)
  return _internal_z();
}
inline void Vec3::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec3.z)
}
inline double Vec3::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Vec3::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Vec3f

// float x = 1 [json_name = "x"];
inline void Vec3f::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float Vec3f::x() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec3f.x)
  return _internal_x();
}
inline void Vec3f::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec3f.x)
}
inline float Vec3f::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Vec3f::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2 [json_name = "y"];
inline void Vec3f::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float Vec3f::y() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec3f.y)
  return _internal_y();
}
inline void Vec3f::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec3f.y)
}
inline float Vec3f::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Vec3f::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 3 [json_name = "z"];
inline void Vec3f::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline float Vec3f::z() const {
  // @@protoc_insertion_point(field_get:anduril.type.Vec3f.z)
  return _internal_z();
}
inline void Vec3f::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:anduril.type.Vec3f.z)
}
inline float Vec3f::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Vec3f::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Quaternion

// double x = 1 [json_name = "x"];
inline void Quaternion::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline double Quaternion::x() const {
  // @@protoc_insertion_point(field_get:anduril.type.Quaternion.x)
  return _internal_x();
}
inline void Quaternion::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:anduril.type.Quaternion.x)
}
inline double Quaternion::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Quaternion::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Quaternion::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline double Quaternion::y() const {
  // @@protoc_insertion_point(field_get:anduril.type.Quaternion.y)
  return _internal_y();
}
inline void Quaternion::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:anduril.type.Quaternion.y)
}
inline double Quaternion::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Quaternion::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void Quaternion::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline double Quaternion::z() const {
  // @@protoc_insertion_point(field_get:anduril.type.Quaternion.z)
  return _internal_z();
}
inline void Quaternion::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:anduril.type.Quaternion.z)
}
inline double Quaternion::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Quaternion::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// double w = 4 [json_name = "w"];
inline void Quaternion::clear_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = 0;
}
inline double Quaternion::w() const {
  // @@protoc_insertion_point(field_get:anduril.type.Quaternion.w)
  return _internal_w();
}
inline void Quaternion::set_w(double value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:anduril.type.Quaternion.w)
}
inline double Quaternion::_internal_w() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.w_;
}
inline void Quaternion::_internal_set_w(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = value;
}

// -------------------------------------------------------------------

// YawPitch

// double yaw = 1 [json_name = "yaw"];
inline void YawPitch::clear_yaw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = 0;
}
inline double YawPitch::yaw() const {
  // @@protoc_insertion_point(field_get:anduril.type.YawPitch.yaw)
  return _internal_yaw();
}
inline void YawPitch::set_yaw(double value) {
  _internal_set_yaw(value);
  // @@protoc_insertion_point(field_set:anduril.type.YawPitch.yaw)
}
inline double YawPitch::_internal_yaw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yaw_;
}
inline void YawPitch::_internal_set_yaw(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = value;
}

// double pitch = 2 [json_name = "pitch"];
inline void YawPitch::clear_pitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = 0;
}
inline double YawPitch::pitch() const {
  // @@protoc_insertion_point(field_get:anduril.type.YawPitch.pitch)
  return _internal_pitch();
}
inline void YawPitch::set_pitch(double value) {
  _internal_set_pitch(value);
  // @@protoc_insertion_point(field_set:anduril.type.YawPitch.pitch)
}
inline double YawPitch::_internal_pitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pitch_;
}
inline void YawPitch::_internal_set_pitch(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = value;
}

// -------------------------------------------------------------------

// YPR

// double yaw = 1 [json_name = "yaw"];
inline void YPR::clear_yaw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = 0;
}
inline double YPR::yaw() const {
  // @@protoc_insertion_point(field_get:anduril.type.YPR.yaw)
  return _internal_yaw();
}
inline void YPR::set_yaw(double value) {
  _internal_set_yaw(value);
  // @@protoc_insertion_point(field_set:anduril.type.YPR.yaw)
}
inline double YPR::_internal_yaw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yaw_;
}
inline void YPR::_internal_set_yaw(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = value;
}

// double pitch = 2 [json_name = "pitch"];
inline void YPR::clear_pitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = 0;
}
inline double YPR::pitch() const {
  // @@protoc_insertion_point(field_get:anduril.type.YPR.pitch)
  return _internal_pitch();
}
inline void YPR::set_pitch(double value) {
  _internal_set_pitch(value);
  // @@protoc_insertion_point(field_set:anduril.type.YPR.pitch)
}
inline double YPR::_internal_pitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pitch_;
}
inline void YPR::_internal_set_pitch(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = value;
}

// double roll = 3 [json_name = "roll"];
inline void YPR::clear_roll() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roll_ = 0;
}
inline double YPR::roll() const {
  // @@protoc_insertion_point(field_get:anduril.type.YPR.roll)
  return _internal_roll();
}
inline void YPR::set_roll(double value) {
  _internal_set_roll(value);
  // @@protoc_insertion_point(field_set:anduril.type.YPR.roll)
}
inline double YPR::_internal_roll() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roll_;
}
inline void YPR::_internal_set_roll(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roll_ = value;
}

// -------------------------------------------------------------------

// Pose

// .anduril.type.LLA pos = 1 [json_name = "pos"];
inline bool Pose::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline void Pose::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::type::LLA& Pose::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::LLA* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::LLA&>(::anduril::type::_LLA_default_instance_);
}
inline const ::anduril::type::LLA& Pose::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.Pose.pos)
  return _internal_pos();
}
inline void Pose::unsafe_arena_set_allocated_pos(::anduril::type::LLA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::anduril::type::LLA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.Pose.pos)
}
inline ::anduril::type::LLA* Pose::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::LLA* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::LLA* Pose::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.Pose.pos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::LLA* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::anduril::type::LLA* Pose::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::LLA>(GetArena());
    _impl_.pos_ = reinterpret_cast<::anduril::type::LLA*>(p);
  }
  return _impl_.pos_;
}
inline ::anduril::type::LLA* Pose::mutable_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::type::LLA* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:anduril.type.Pose.pos)
  return _msg;
}
inline void Pose::set_allocated_pos(::anduril::type::LLA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pos_ = reinterpret_cast<::anduril::type::LLA*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.Pose.pos)
}

// .anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];
inline bool Pose::has_att_enu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.att_enu_ != nullptr);
  return value;
}
inline void Pose::clear_att_enu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.att_enu_ != nullptr) _impl_.att_enu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::anduril::type::Quaternion& Pose::_internal_att_enu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::Quaternion* p = _impl_.att_enu_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::Quaternion&>(::anduril::type::_Quaternion_default_instance_);
}
inline const ::anduril::type::Quaternion& Pose::att_enu() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.Pose.att_enu)
  return _internal_att_enu();
}
inline void Pose::unsafe_arena_set_allocated_att_enu(::anduril::type::Quaternion* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.att_enu_);
  }
  _impl_.att_enu_ = reinterpret_cast<::anduril::type::Quaternion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.Pose.att_enu)
}
inline ::anduril::type::Quaternion* Pose::release_att_enu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::Quaternion* released = _impl_.att_enu_;
  _impl_.att_enu_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::Quaternion* Pose::unsafe_arena_release_att_enu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.Pose.att_enu)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::Quaternion* temp = _impl_.att_enu_;
  _impl_.att_enu_ = nullptr;
  return temp;
}
inline ::anduril::type::Quaternion* Pose::_internal_mutable_att_enu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.att_enu_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::Quaternion>(GetArena());
    _impl_.att_enu_ = reinterpret_cast<::anduril::type::Quaternion*>(p);
  }
  return _impl_.att_enu_;
}
inline ::anduril::type::Quaternion* Pose::mutable_att_enu() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::type::Quaternion* _msg = _internal_mutable_att_enu();
  // @@protoc_insertion_point(field_mutable:anduril.type.Pose.att_enu)
  return _msg;
}
inline void Pose::set_allocated_att_enu(::anduril::type::Quaternion* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.att_enu_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.att_enu_ = reinterpret_cast<::anduril::type::Quaternion*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.Pose.att_enu)
}

// -------------------------------------------------------------------

// LLAPolygon

// repeated .anduril.type.LLA points = 1 [json_name = "points"];
inline int LLAPolygon::_internal_points_size() const {
  return _internal_points().size();
}
inline int LLAPolygon::points_size() const {
  return _internal_points_size();
}
inline void LLAPolygon::clear_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.points_.Clear();
}
inline ::anduril::type::LLA* LLAPolygon::mutable_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.type.LLAPolygon.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>* LLAPolygon::mutable_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.type.LLAPolygon.points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_points();
}
inline const ::anduril::type::LLA& LLAPolygon::points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.LLAPolygon.points)
  return _internal_points().Get(index);
}
inline ::anduril::type::LLA* LLAPolygon::add_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::type::LLA* _add = _internal_mutable_points()->Add();
  // @@protoc_insertion_point(field_add:anduril.type.LLAPolygon.points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>& LLAPolygon::points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.type.LLAPolygon.points)
  return _internal_points();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>&
LLAPolygon::_internal_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.points_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>*
LLAPolygon::_internal_mutable_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.points_;
}

// -------------------------------------------------------------------

// AERPolygon

// repeated .anduril.type.Spherical points = 1 [json_name = "points"];
inline int AERPolygon::_internal_points_size() const {
  return _internal_points().size();
}
inline int AERPolygon::points_size() const {
  return _internal_points_size();
}
inline void AERPolygon::clear_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.points_.Clear();
}
inline ::anduril::type::Spherical* AERPolygon::mutable_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.type.AERPolygon.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>* AERPolygon::mutable_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.type.AERPolygon.points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_points();
}
inline const ::anduril::type::Spherical& AERPolygon::points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.AERPolygon.points)
  return _internal_points().Get(index);
}
inline ::anduril::type::Spherical* AERPolygon::add_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::type::Spherical* _add = _internal_mutable_points()->Add();
  // @@protoc_insertion_point(field_add:anduril.type.AERPolygon.points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>& AERPolygon::points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.type.AERPolygon.points)
  return _internal_points();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>&
AERPolygon::_internal_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.points_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::type::Spherical>*
AERPolygon::_internal_mutable_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.points_;
}

// -------------------------------------------------------------------

// LLAPath

// repeated .anduril.type.LLA points = 1 [json_name = "points"];
inline int LLAPath::_internal_points_size() const {
  return _internal_points().size();
}
inline int LLAPath::points_size() const {
  return _internal_points_size();
}
inline void LLAPath::clear_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.points_.Clear();
}
inline ::anduril::type::LLA* LLAPath::mutable_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.type.LLAPath.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>* LLAPath::mutable_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.type.LLAPath.points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_points();
}
inline const ::anduril::type::LLA& LLAPath::points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.LLAPath.points)
  return _internal_points().Get(index);
}
inline ::anduril::type::LLA* LLAPath::add_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::type::LLA* _add = _internal_mutable_points()->Add();
  // @@protoc_insertion_point(field_add:anduril.type.LLAPath.points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>& LLAPath::points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.type.LLAPath.points)
  return _internal_points();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>&
LLAPath::_internal_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.points_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::type::LLA>*
LLAPath::_internal_mutable_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.points_;
}

// bool loop = 2 [json_name = "loop"];
inline void LLAPath::clear_loop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loop_ = false;
}
inline bool LLAPath::loop() const {
  // @@protoc_insertion_point(field_get:anduril.type.LLAPath.loop)
  return _internal_loop();
}
inline void LLAPath::set_loop(bool value) {
  _internal_set_loop(value);
  // @@protoc_insertion_point(field_set:anduril.type.LLAPath.loop)
}
inline bool LLAPath::_internal_loop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.loop_;
}
inline void LLAPath::_internal_set_loop(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loop_ = value;
}

// -------------------------------------------------------------------

// Spherical

// double az = 1 [json_name = "az"];
inline void Spherical::clear_az() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.az_ = 0;
}
inline double Spherical::az() const {
  // @@protoc_insertion_point(field_get:anduril.type.Spherical.az)
  return _internal_az();
}
inline void Spherical::set_az(double value) {
  _internal_set_az(value);
  // @@protoc_insertion_point(field_set:anduril.type.Spherical.az)
}
inline double Spherical::_internal_az() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.az_;
}
inline void Spherical::_internal_set_az(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.az_ = value;
}

// double el = 2 [json_name = "el"];
inline void Spherical::clear_el() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.el_ = 0;
}
inline double Spherical::el() const {
  // @@protoc_insertion_point(field_get:anduril.type.Spherical.el)
  return _internal_el();
}
inline void Spherical::set_el(double value) {
  _internal_set_el(value);
  // @@protoc_insertion_point(field_set:anduril.type.Spherical.el)
}
inline double Spherical::_internal_el() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.el_;
}
inline void Spherical::_internal_set_el(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.el_ = value;
}

// double range = 3 [json_name = "range"];
inline void Spherical::clear_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_ = 0;
}
inline double Spherical::range() const {
  // @@protoc_insertion_point(field_get:anduril.type.Spherical.range)
  return _internal_range();
}
inline void Spherical::set_range(double value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:anduril.type.Spherical.range)
}
inline double Spherical::_internal_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.range_;
}
inline void Spherical::_internal_set_range(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_ = value;
}

// -------------------------------------------------------------------

// DoubleRange

// double min = 1 [json_name = "min"];
inline void DoubleRange::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0;
}
inline double DoubleRange::min() const {
  // @@protoc_insertion_point(field_get:anduril.type.DoubleRange.min)
  return _internal_min();
}
inline void DoubleRange::set_min(double value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:anduril.type.DoubleRange.min)
}
inline double DoubleRange::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void DoubleRange::_internal_set_min(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// double max = 2 [json_name = "max"];
inline void DoubleRange::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0;
}
inline double DoubleRange::max() const {
  // @@protoc_insertion_point(field_get:anduril.type.DoubleRange.max)
  return _internal_max();
}
inline void DoubleRange::set_max(double value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:anduril.type.DoubleRange.max)
}
inline double DoubleRange::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void DoubleRange::_internal_set_max(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// Uint64Range

// uint64 min = 1 [json_name = "min"];
inline void Uint64Range::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = ::uint64_t{0u};
}
inline ::uint64_t Uint64Range::min() const {
  // @@protoc_insertion_point(field_get:anduril.type.Uint64Range.min)
  return _internal_min();
}
inline void Uint64Range::set_min(::uint64_t value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:anduril.type.Uint64Range.min)
}
inline ::uint64_t Uint64Range::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void Uint64Range::_internal_set_min(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// uint64 max = 2 [json_name = "max"];
inline void Uint64Range::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = ::uint64_t{0u};
}
inline ::uint64_t Uint64Range::max() const {
  // @@protoc_insertion_point(field_get:anduril.type.Uint64Range.max)
  return _internal_max();
}
inline void Uint64Range::set_max(::uint64_t value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:anduril.type.Uint64Range.max)
}
inline ::uint64_t Uint64Range::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void Uint64Range::_internal_set_max(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// TMat4f

// float m00 = 1 [json_name = "m00"];
inline void TMat4f::clear_m00() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m00_ = 0;
}
inline float TMat4f::m00() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m00)
  return _internal_m00();
}
inline void TMat4f::set_m00(float value) {
  _internal_set_m00(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m00)
}
inline float TMat4f::_internal_m00() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m00_;
}
inline void TMat4f::_internal_set_m00(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m00_ = value;
}

// float m01 = 2 [json_name = "m01"];
inline void TMat4f::clear_m01() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m01_ = 0;
}
inline float TMat4f::m01() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m01)
  return _internal_m01();
}
inline void TMat4f::set_m01(float value) {
  _internal_set_m01(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m01)
}
inline float TMat4f::_internal_m01() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m01_;
}
inline void TMat4f::_internal_set_m01(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m01_ = value;
}

// float m02 = 3 [json_name = "m02"];
inline void TMat4f::clear_m02() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m02_ = 0;
}
inline float TMat4f::m02() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m02)
  return _internal_m02();
}
inline void TMat4f::set_m02(float value) {
  _internal_set_m02(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m02)
}
inline float TMat4f::_internal_m02() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m02_;
}
inline void TMat4f::_internal_set_m02(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m02_ = value;
}

// float m03 = 4 [json_name = "m03"];
inline void TMat4f::clear_m03() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m03_ = 0;
}
inline float TMat4f::m03() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m03)
  return _internal_m03();
}
inline void TMat4f::set_m03(float value) {
  _internal_set_m03(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m03)
}
inline float TMat4f::_internal_m03() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m03_;
}
inline void TMat4f::_internal_set_m03(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m03_ = value;
}

// float m11 = 5 [json_name = "m11"];
inline void TMat4f::clear_m11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m11_ = 0;
}
inline float TMat4f::m11() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m11)
  return _internal_m11();
}
inline void TMat4f::set_m11(float value) {
  _internal_set_m11(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m11)
}
inline float TMat4f::_internal_m11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m11_;
}
inline void TMat4f::_internal_set_m11(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m11_ = value;
}

// float m12 = 6 [json_name = "m12"];
inline void TMat4f::clear_m12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m12_ = 0;
}
inline float TMat4f::m12() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m12)
  return _internal_m12();
}
inline void TMat4f::set_m12(float value) {
  _internal_set_m12(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m12)
}
inline float TMat4f::_internal_m12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m12_;
}
inline void TMat4f::_internal_set_m12(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m12_ = value;
}

// float m13 = 7 [json_name = "m13"];
inline void TMat4f::clear_m13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m13_ = 0;
}
inline float TMat4f::m13() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m13)
  return _internal_m13();
}
inline void TMat4f::set_m13(float value) {
  _internal_set_m13(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m13)
}
inline float TMat4f::_internal_m13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m13_;
}
inline void TMat4f::_internal_set_m13(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m13_ = value;
}

// float m22 = 8 [json_name = "m22"];
inline void TMat4f::clear_m22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m22_ = 0;
}
inline float TMat4f::m22() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m22)
  return _internal_m22();
}
inline void TMat4f::set_m22(float value) {
  _internal_set_m22(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m22)
}
inline float TMat4f::_internal_m22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m22_;
}
inline void TMat4f::_internal_set_m22(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m22_ = value;
}

// float m23 = 9 [json_name = "m23"];
inline void TMat4f::clear_m23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m23_ = 0;
}
inline float TMat4f::m23() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m23)
  return _internal_m23();
}
inline void TMat4f::set_m23(float value) {
  _internal_set_m23(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m23)
}
inline float TMat4f::_internal_m23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m23_;
}
inline void TMat4f::_internal_set_m23(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m23_ = value;
}

// float m33 = 10 [json_name = "m33"];
inline void TMat4f::clear_m33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m33_ = 0;
}
inline float TMat4f::m33() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat4f.m33)
  return _internal_m33();
}
inline void TMat4f::set_m33(float value) {
  _internal_set_m33(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat4f.m33)
}
inline float TMat4f::_internal_m33() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m33_;
}
inline void TMat4f::_internal_set_m33(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m33_ = value;
}

// -------------------------------------------------------------------

// TMat3

// double mxx = 1 [json_name = "mxx"];
inline void TMat3::clear_mxx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxx_ = 0;
}
inline double TMat3::mxx() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat3.mxx)
  return _internal_mxx();
}
inline void TMat3::set_mxx(double value) {
  _internal_set_mxx(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat3.mxx)
}
inline double TMat3::_internal_mxx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mxx_;
}
inline void TMat3::_internal_set_mxx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxx_ = value;
}

// double mxy = 2 [json_name = "mxy"];
inline void TMat3::clear_mxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxy_ = 0;
}
inline double TMat3::mxy() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat3.mxy)
  return _internal_mxy();
}
inline void TMat3::set_mxy(double value) {
  _internal_set_mxy(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat3.mxy)
}
inline double TMat3::_internal_mxy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mxy_;
}
inline void TMat3::_internal_set_mxy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxy_ = value;
}

// double mxz = 3 [json_name = "mxz"];
inline void TMat3::clear_mxz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxz_ = 0;
}
inline double TMat3::mxz() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat3.mxz)
  return _internal_mxz();
}
inline void TMat3::set_mxz(double value) {
  _internal_set_mxz(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat3.mxz)
}
inline double TMat3::_internal_mxz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mxz_;
}
inline void TMat3::_internal_set_mxz(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxz_ = value;
}

// double myy = 4 [json_name = "myy"];
inline void TMat3::clear_myy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.myy_ = 0;
}
inline double TMat3::myy() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat3.myy)
  return _internal_myy();
}
inline void TMat3::set_myy(double value) {
  _internal_set_myy(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat3.myy)
}
inline double TMat3::_internal_myy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.myy_;
}
inline void TMat3::_internal_set_myy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.myy_ = value;
}

// double myz = 5 [json_name = "myz"];
inline void TMat3::clear_myz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.myz_ = 0;
}
inline double TMat3::myz() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat3.myz)
  return _internal_myz();
}
inline void TMat3::set_myz(double value) {
  _internal_set_myz(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat3.myz)
}
inline double TMat3::_internal_myz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.myz_;
}
inline void TMat3::_internal_set_myz(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.myz_ = value;
}

// double mzz = 6 [json_name = "mzz"];
inline void TMat3::clear_mzz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mzz_ = 0;
}
inline double TMat3::mzz() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat3.mzz)
  return _internal_mzz();
}
inline void TMat3::set_mzz(double value) {
  _internal_set_mzz(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat3.mzz)
}
inline double TMat3::_internal_mzz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mzz_;
}
inline void TMat3::_internal_set_mzz(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mzz_ = value;
}

// -------------------------------------------------------------------

// TMat2

// double mxx = 1 [json_name = "mxx"];
inline void TMat2::clear_mxx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxx_ = 0;
}
inline double TMat2::mxx() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat2.mxx)
  return _internal_mxx();
}
inline void TMat2::set_mxx(double value) {
  _internal_set_mxx(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat2.mxx)
}
inline double TMat2::_internal_mxx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mxx_;
}
inline void TMat2::_internal_set_mxx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxx_ = value;
}

// double mxy = 2 [json_name = "mxy"];
inline void TMat2::clear_mxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxy_ = 0;
}
inline double TMat2::mxy() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat2.mxy)
  return _internal_mxy();
}
inline void TMat2::set_mxy(double value) {
  _internal_set_mxy(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat2.mxy)
}
inline double TMat2::_internal_mxy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mxy_;
}
inline void TMat2::_internal_set_mxy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mxy_ = value;
}

// double myy = 3 [json_name = "myy"];
inline void TMat2::clear_myy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.myy_ = 0;
}
inline double TMat2::myy() const {
  // @@protoc_insertion_point(field_get:anduril.type.TMat2.myy)
  return _internal_myy();
}
inline void TMat2::set_myy(double value) {
  _internal_set_myy(value);
  // @@protoc_insertion_point(field_set:anduril.type.TMat2.myy)
}
inline double TMat2::_internal_myy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.myy_;
}
inline void TMat2::_internal_set_myy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.myy_ = value;
}

// -------------------------------------------------------------------

// RigidTransform

// .anduril.type.Quaternion rotation = 3 [json_name = "rotation"];
inline bool RigidTransform::has_rotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotation_ != nullptr);
  return value;
}
inline void RigidTransform::clear_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotation_ != nullptr) _impl_.rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::type::Quaternion& RigidTransform::_internal_rotation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::Quaternion* p = _impl_.rotation_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::Quaternion&>(::anduril::type::_Quaternion_default_instance_);
}
inline const ::anduril::type::Quaternion& RigidTransform::rotation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.RigidTransform.rotation)
  return _internal_rotation();
}
inline void RigidTransform::unsafe_arena_set_allocated_rotation(::anduril::type::Quaternion* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotation_);
  }
  _impl_.rotation_ = reinterpret_cast<::anduril::type::Quaternion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.RigidTransform.rotation)
}
inline ::anduril::type::Quaternion* RigidTransform::release_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::Quaternion* released = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::Quaternion* RigidTransform::unsafe_arena_release_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.RigidTransform.rotation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::Quaternion* temp = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
  return temp;
}
inline ::anduril::type::Quaternion* RigidTransform::_internal_mutable_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::Quaternion>(GetArena());
    _impl_.rotation_ = reinterpret_cast<::anduril::type::Quaternion*>(p);
  }
  return _impl_.rotation_;
}
inline ::anduril::type::Quaternion* RigidTransform::mutable_rotation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::type::Quaternion* _msg = _internal_mutable_rotation();
  // @@protoc_insertion_point(field_mutable:anduril.type.RigidTransform.rotation)
  return _msg;
}
inline void RigidTransform::set_allocated_rotation(::anduril::type::Quaternion* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.rotation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rotation_ = reinterpret_cast<::anduril::type::Quaternion*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.RigidTransform.rotation)
}

// .anduril.type.Vec3 translation = 4 [json_name = "translation"];
inline bool RigidTransform::has_translation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.translation_ != nullptr);
  return value;
}
inline void RigidTransform::clear_translation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.translation_ != nullptr) _impl_.translation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::anduril::type::Vec3& RigidTransform::_internal_translation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::Vec3* p = _impl_.translation_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::Vec3&>(::anduril::type::_Vec3_default_instance_);
}
inline const ::anduril::type::Vec3& RigidTransform::translation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.type.RigidTransform.translation)
  return _internal_translation();
}
inline void RigidTransform::unsafe_arena_set_allocated_translation(::anduril::type::Vec3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.translation_);
  }
  _impl_.translation_ = reinterpret_cast<::anduril::type::Vec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.type.RigidTransform.translation)
}
inline ::anduril::type::Vec3* RigidTransform::release_translation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::Vec3* released = _impl_.translation_;
  _impl_.translation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::Vec3* RigidTransform::unsafe_arena_release_translation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.type.RigidTransform.translation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::type::Vec3* temp = _impl_.translation_;
  _impl_.translation_ = nullptr;
  return temp;
}
inline ::anduril::type::Vec3* RigidTransform::_internal_mutable_translation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.translation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::Vec3>(GetArena());
    _impl_.translation_ = reinterpret_cast<::anduril::type::Vec3*>(p);
  }
  return _impl_.translation_;
}
inline ::anduril::type::Vec3* RigidTransform::mutable_translation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::type::Vec3* _msg = _internal_mutable_translation();
  // @@protoc_insertion_point(field_mutable:anduril.type.RigidTransform.translation)
  return _msg;
}
inline void RigidTransform::set_allocated_translation(::anduril::type::Vec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.translation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.translation_ = reinterpret_cast<::anduril::type::Vec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.type.RigidTransform.translation)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::type::LLA_AltitudeReference> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::type::LLA_AltitudeReference>() {
  return ::anduril::type::LLA_AltitudeReference_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2ftype_2fcoords_2epub_2eproto_2epb_2eh
