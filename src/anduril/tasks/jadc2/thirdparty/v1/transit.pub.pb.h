// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/tasks/jadc2/thirdparty/v1/transit.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto_2epb_2eh
#define anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "anduril/type/coords.pub.pb.h"
#include "google/protobuf/wrappers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto;
namespace anduril {
namespace tasks {
namespace jadc2 {
namespace thirdparty {
namespace v1 {
class PathSegment;
struct PathSegmentDefaultTypeInternal;
extern PathSegmentDefaultTypeInternal _PathSegment_default_instance_;
class TeamTransit;
struct TeamTransitDefaultTypeInternal;
extern TeamTransitDefaultTypeInternal _TeamTransit_default_instance_;
class Transit;
struct TransitDefaultTypeInternal;
extern TransitDefaultTypeInternal _Transit_default_instance_;
}  // namespace v1
}  // namespace thirdparty
}  // namespace jadc2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace tasks {
namespace jadc2 {
namespace thirdparty {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class TeamTransit final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.jadc2.thirdparty.v1.TeamTransit) */ {
 public:
  inline TeamTransit() : TeamTransit(nullptr) {}
  ~TeamTransit() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TeamTransit* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TeamTransit));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TeamTransit(
      ::google::protobuf::internal::ConstantInitialized);

  inline TeamTransit(const TeamTransit& from) : TeamTransit(nullptr, from) {}
  inline TeamTransit(TeamTransit&& from) noexcept
      : TeamTransit(nullptr, std::move(from)) {}
  inline TeamTransit& operator=(const TeamTransit& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamTransit& operator=(TeamTransit&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TeamTransit& default_instance() {
    return *internal_default_instance();
  }
  static inline const TeamTransit* internal_default_instance() {
    return reinterpret_cast<const TeamTransit*>(
        &_TeamTransit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TeamTransit& a, TeamTransit& b) { a.Swap(&b); }
  inline void Swap(TeamTransit* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TeamTransit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TeamTransit* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TeamTransit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TeamTransit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TeamTransit& from) { TeamTransit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TeamTransit* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.jadc2.thirdparty.v1.TeamTransit"; }

 protected:
  explicit TeamTransit(::google::protobuf::Arena* arena);
  TeamTransit(::google::protobuf::Arena* arena, const TeamTransit& from);
  TeamTransit(::google::protobuf::Arena* arena, TeamTransit&& from) noexcept
      : TeamTransit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransitZoneEntityIdFieldNumber = 1,
    kSurfaceSpeedMsFieldNumber = 2,
  };
  // string transit_zone_entity_id = 1 [json_name = "transitZoneEntityId"];
  void clear_transit_zone_entity_id() ;
  const std::string& transit_zone_entity_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transit_zone_entity_id(Arg_&& arg, Args_... args);
  std::string* mutable_transit_zone_entity_id();
  PROTOBUF_NODISCARD std::string* release_transit_zone_entity_id();
  void set_allocated_transit_zone_entity_id(std::string* value);

  private:
  const std::string& _internal_transit_zone_entity_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transit_zone_entity_id(
      const std::string& value);
  std::string* _internal_mutable_transit_zone_entity_id();

  public:
  // .google.protobuf.DoubleValue surface_speed_ms = 2 [json_name = "surfaceSpeedMs"];
  bool has_surface_speed_ms() const;
  void clear_surface_speed_ms() ;
  const ::google::protobuf::DoubleValue& surface_speed_ms() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_surface_speed_ms();
  ::google::protobuf::DoubleValue* mutable_surface_speed_ms();
  void set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_surface_speed_ms();

  private:
  const ::google::protobuf::DoubleValue& _internal_surface_speed_ms() const;
  ::google::protobuf::DoubleValue* _internal_mutable_surface_speed_ms();

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.jadc2.thirdparty.v1.TeamTransit)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      76, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TeamTransit& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr transit_zone_entity_id_;
    ::google::protobuf::DoubleValue* surface_speed_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto;
};
// -------------------------------------------------------------------

class PathSegment final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.jadc2.thirdparty.v1.PathSegment) */ {
 public:
  inline PathSegment() : PathSegment(nullptr) {}
  ~PathSegment() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PathSegment* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PathSegment));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PathSegment(
      ::google::protobuf::internal::ConstantInitialized);

  inline PathSegment(const PathSegment& from) : PathSegment(nullptr, from) {}
  inline PathSegment(PathSegment&& from) noexcept
      : PathSegment(nullptr, std::move(from)) {}
  inline PathSegment& operator=(const PathSegment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathSegment& operator=(PathSegment&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PathSegment& default_instance() {
    return *internal_default_instance();
  }
  static inline const PathSegment* internal_default_instance() {
    return reinterpret_cast<const PathSegment*>(
        &_PathSegment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PathSegment& a, PathSegment& b) { a.Swap(&b); }
  inline void Swap(PathSegment* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PathSegment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PathSegment* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PathSegment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PathSegment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PathSegment& from) { PathSegment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PathSegment* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.jadc2.thirdparty.v1.PathSegment"; }

 protected:
  explicit PathSegment(::google::protobuf::Arena* arena);
  PathSegment(::google::protobuf::Arena* arena, const PathSegment& from);
  PathSegment(::google::protobuf::Arena* arena, PathSegment&& from) noexcept
      : PathSegment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEndpointFieldNumber = 1,
  };
  // .anduril.type.LLA endpoint = 1 [json_name = "endpoint"];
  bool has_endpoint() const;
  void clear_endpoint() ;
  const ::anduril::type::LLA& endpoint() const;
  PROTOBUF_NODISCARD ::anduril::type::LLA* release_endpoint();
  ::anduril::type::LLA* mutable_endpoint();
  void set_allocated_endpoint(::anduril::type::LLA* value);
  void unsafe_arena_set_allocated_endpoint(::anduril::type::LLA* value);
  ::anduril::type::LLA* unsafe_arena_release_endpoint();

  private:
  const ::anduril::type::LLA& _internal_endpoint() const;
  ::anduril::type::LLA* _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.jadc2.thirdparty.v1.PathSegment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PathSegment& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::type::LLA* endpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto;
};
// -------------------------------------------------------------------

class Transit final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.jadc2.thirdparty.v1.Transit) */ {
 public:
  inline Transit() : Transit(nullptr) {}
  ~Transit() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Transit* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Transit));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Transit(
      ::google::protobuf::internal::ConstantInitialized);

  inline Transit(const Transit& from) : Transit(nullptr, from) {}
  inline Transit(Transit&& from) noexcept
      : Transit(nullptr, std::move(from)) {}
  inline Transit& operator=(const Transit& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transit& operator=(Transit&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Transit& default_instance() {
    return *internal_default_instance();
  }
  static inline const Transit* internal_default_instance() {
    return reinterpret_cast<const Transit*>(
        &_Transit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Transit& a, Transit& b) { a.Swap(&b); }
  inline void Swap(Transit* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Transit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Transit* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Transit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Transit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Transit& from) { Transit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Transit* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.jadc2.thirdparty.v1.Transit"; }

 protected:
  explicit Transit(::google::protobuf::Arena* arena);
  Transit(::google::protobuf::Arena* arena, const Transit& from);
  Transit(::google::protobuf::Arena* arena, Transit&& from) noexcept
      : Transit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
    kSurfaceSpeedMsFieldNumber = 2,
  };
  // repeated .anduril.tasks.jadc2.thirdparty.v1.PathSegment path = 1 [json_name = "path"];
  int path_size() const;
  private:
  int _internal_path_size() const;

  public:
  void clear_path() ;
  ::anduril::tasks::jadc2::thirdparty::v1::PathSegment* mutable_path(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>* mutable_path();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>& _internal_path() const;
  ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>* _internal_mutable_path();
  public:
  const ::anduril::tasks::jadc2::thirdparty::v1::PathSegment& path(int index) const;
  ::anduril::tasks::jadc2::thirdparty::v1::PathSegment* add_path();
  const ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>& path() const;
  // .google.protobuf.DoubleValue surface_speed_ms = 2 [json_name = "surfaceSpeedMs"];
  bool has_surface_speed_ms() const;
  void clear_surface_speed_ms() ;
  const ::google::protobuf::DoubleValue& surface_speed_ms() const;
  PROTOBUF_NODISCARD ::google::protobuf::DoubleValue* release_surface_speed_ms();
  ::google::protobuf::DoubleValue* mutable_surface_speed_ms();
  void set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value);
  void unsafe_arena_set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value);
  ::google::protobuf::DoubleValue* unsafe_arena_release_surface_speed_ms();

  private:
  const ::google::protobuf::DoubleValue& _internal_surface_speed_ms() const;
  ::google::protobuf::DoubleValue* _internal_mutable_surface_speed_ms();

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.jadc2.thirdparty.v1.Transit)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Transit& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::anduril::tasks::jadc2::thirdparty::v1::PathSegment > path_;
    ::google::protobuf::DoubleValue* surface_speed_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Transit

// repeated .anduril.tasks.jadc2.thirdparty.v1.PathSegment path = 1 [json_name = "path"];
inline int Transit::_internal_path_size() const {
  return _internal_path().size();
}
inline int Transit::path_size() const {
  return _internal_path_size();
}
inline void Transit::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Clear();
}
inline ::anduril::tasks::jadc2::thirdparty::v1::PathSegment* Transit::mutable_path(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.tasks.jadc2.thirdparty.v1.Transit.path)
  return _internal_mutable_path()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>* Transit::mutable_path()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.tasks.jadc2.thirdparty.v1.Transit.path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_path();
}
inline const ::anduril::tasks::jadc2::thirdparty::v1::PathSegment& Transit::path(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.jadc2.thirdparty.v1.Transit.path)
  return _internal_path().Get(index);
}
inline ::anduril::tasks::jadc2::thirdparty::v1::PathSegment* Transit::add_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::tasks::jadc2::thirdparty::v1::PathSegment* _add = _internal_mutable_path()->Add();
  // @@protoc_insertion_point(field_add:anduril.tasks.jadc2.thirdparty.v1.Transit.path)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>& Transit::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.tasks.jadc2.thirdparty.v1.Transit.path)
  return _internal_path();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>&
Transit::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::tasks::jadc2::thirdparty::v1::PathSegment>*
Transit::_internal_mutable_path() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.path_;
}

// .google.protobuf.DoubleValue surface_speed_ms = 2 [json_name = "surfaceSpeedMs"];
inline bool Transit::has_surface_speed_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.surface_speed_ms_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& Transit::_internal_surface_speed_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.surface_speed_ms_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& Transit::surface_speed_ms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.jadc2.thirdparty.v1.Transit.surface_speed_ms)
  return _internal_surface_speed_ms();
}
inline void Transit::unsafe_arena_set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_speed_ms_);
  }
  _impl_.surface_speed_ms_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.tasks.jadc2.thirdparty.v1.Transit.surface_speed_ms)
}
inline ::google::protobuf::DoubleValue* Transit::release_surface_speed_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* released = _impl_.surface_speed_ms_;
  _impl_.surface_speed_ms_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* Transit::unsafe_arena_release_surface_speed_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.jadc2.thirdparty.v1.Transit.surface_speed_ms)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* temp = _impl_.surface_speed_ms_;
  _impl_.surface_speed_ms_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* Transit::_internal_mutable_surface_speed_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_speed_ms_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.surface_speed_ms_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.surface_speed_ms_;
}
inline ::google::protobuf::DoubleValue* Transit::mutable_surface_speed_ms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_surface_speed_ms();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.jadc2.thirdparty.v1.Transit.surface_speed_ms)
  return _msg;
}
inline void Transit::set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_speed_ms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.surface_speed_ms_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.jadc2.thirdparty.v1.Transit.surface_speed_ms)
}

// -------------------------------------------------------------------

// PathSegment

// .anduril.type.LLA endpoint = 1 [json_name = "endpoint"];
inline bool PathSegment::has_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endpoint_ != nullptr);
  return value;
}
inline const ::anduril::type::LLA& PathSegment::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::type::LLA* p = _impl_.endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::type::LLA&>(::anduril::type::_LLA_default_instance_);
}
inline const ::anduril::type::LLA& PathSegment::endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.jadc2.thirdparty.v1.PathSegment.endpoint)
  return _internal_endpoint();
}
inline void PathSegment::unsafe_arena_set_allocated_endpoint(::anduril::type::LLA* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }
  _impl_.endpoint_ = reinterpret_cast<::anduril::type::LLA*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.tasks.jadc2.thirdparty.v1.PathSegment.endpoint)
}
inline ::anduril::type::LLA* PathSegment::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::LLA* released = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::type::LLA* PathSegment::unsafe_arena_release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.jadc2.thirdparty.v1.PathSegment.endpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::type::LLA* temp = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  return temp;
}
inline ::anduril::type::LLA* PathSegment::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::type::LLA>(GetArena());
    _impl_.endpoint_ = reinterpret_cast<::anduril::type::LLA*>(p);
  }
  return _impl_.endpoint_;
}
inline ::anduril::type::LLA* PathSegment::mutable_endpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::type::LLA* _msg = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.jadc2.thirdparty.v1.PathSegment.endpoint)
  return _msg;
}
inline void PathSegment::set_allocated_endpoint(::anduril::type::LLA* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.endpoint_ = reinterpret_cast<::anduril::type::LLA*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.jadc2.thirdparty.v1.PathSegment.endpoint)
}

// -------------------------------------------------------------------

// TeamTransit

// string transit_zone_entity_id = 1 [json_name = "transitZoneEntityId"];
inline void TeamTransit::clear_transit_zone_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transit_zone_entity_id_.ClearToEmpty();
}
inline const std::string& TeamTransit::transit_zone_entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.transit_zone_entity_id)
  return _internal_transit_zone_entity_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TeamTransit::set_transit_zone_entity_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transit_zone_entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.transit_zone_entity_id)
}
inline std::string* TeamTransit::mutable_transit_zone_entity_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transit_zone_entity_id();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.transit_zone_entity_id)
  return _s;
}
inline const std::string& TeamTransit::_internal_transit_zone_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transit_zone_entity_id_.Get();
}
inline void TeamTransit::_internal_set_transit_zone_entity_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transit_zone_entity_id_.Set(value, GetArena());
}
inline std::string* TeamTransit::_internal_mutable_transit_zone_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transit_zone_entity_id_.Mutable( GetArena());
}
inline std::string* TeamTransit::release_transit_zone_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.transit_zone_entity_id)
  return _impl_.transit_zone_entity_id_.Release();
}
inline void TeamTransit::set_allocated_transit_zone_entity_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transit_zone_entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transit_zone_entity_id_.IsDefault()) {
    _impl_.transit_zone_entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.transit_zone_entity_id)
}

// .google.protobuf.DoubleValue surface_speed_ms = 2 [json_name = "surfaceSpeedMs"];
inline bool TeamTransit::has_surface_speed_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.surface_speed_ms_ != nullptr);
  return value;
}
inline const ::google::protobuf::DoubleValue& TeamTransit::_internal_surface_speed_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::DoubleValue* p = _impl_.surface_speed_ms_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::DoubleValue&>(::google::protobuf::_DoubleValue_default_instance_);
}
inline const ::google::protobuf::DoubleValue& TeamTransit::surface_speed_ms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.surface_speed_ms)
  return _internal_surface_speed_ms();
}
inline void TeamTransit::unsafe_arena_set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_speed_ms_);
  }
  _impl_.surface_speed_ms_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.surface_speed_ms)
}
inline ::google::protobuf::DoubleValue* TeamTransit::release_surface_speed_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* released = _impl_.surface_speed_ms_;
  _impl_.surface_speed_ms_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::DoubleValue* TeamTransit::unsafe_arena_release_surface_speed_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.surface_speed_ms)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::DoubleValue* temp = _impl_.surface_speed_ms_;
  _impl_.surface_speed_ms_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* TeamTransit::_internal_mutable_surface_speed_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_speed_ms_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::DoubleValue>(GetArena());
    _impl_.surface_speed_ms_ = reinterpret_cast<::google::protobuf::DoubleValue*>(p);
  }
  return _impl_.surface_speed_ms_;
}
inline ::google::protobuf::DoubleValue* TeamTransit::mutable_surface_speed_ms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::DoubleValue* _msg = _internal_mutable_surface_speed_ms();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.surface_speed_ms)
  return _msg;
}
inline void TeamTransit::set_allocated_surface_speed_ms(::google::protobuf::DoubleValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_speed_ms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.surface_speed_ms_ = reinterpret_cast<::google::protobuf::DoubleValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.jadc2.thirdparty.v1.TeamTransit.surface_speed_ms)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace thirdparty
}  // namespace jadc2
}  // namespace tasks
}  // namespace anduril


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2ftasks_2fjadc2_2fthirdparty_2fv1_2ftransit_2epub_2eproto_2epb_2eh
