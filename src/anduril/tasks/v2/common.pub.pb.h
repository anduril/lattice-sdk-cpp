// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/tasks/v2/common.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2ftasks_2fv2_2fcommon_2epub_2eproto_2epb_2eh
#define anduril_2ftasks_2fv2_2fcommon_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/duration.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto;
namespace anduril {
namespace tasks {
namespace v2 {
class Agent;
struct AgentDefaultTypeInternal;
extern AgentDefaultTypeInternal _Agent_default_instance_;
class AltitudeConstraint;
struct AltitudeConstraintDefaultTypeInternal;
extern AltitudeConstraintDefaultTypeInternal _AltitudeConstraint_default_instance_;
class AnglePair;
struct AnglePairDefaultTypeInternal;
extern AnglePairDefaultTypeInternal _AnglePair_default_instance_;
class AreaConstraints;
struct AreaConstraintsDefaultTypeInternal;
extern AreaConstraintsDefaultTypeInternal _AreaConstraints_default_instance_;
class ControlArea;
struct ControlAreaDefaultTypeInternal;
extern ControlAreaDefaultTypeInternal _ControlArea_default_instance_;
class DurationRange;
struct DurationRangeDefaultTypeInternal;
extern DurationRangeDefaultTypeInternal _DurationRange_default_instance_;
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace tasks {
namespace v2 {
enum ControlAreaType : int {
  CONTROL_AREA_TYPE_INVALID = 0,
  CONTROL_AREA_TYPE_KEEP_IN_ZONE = 1,
  CONTROL_AREA_TYPE_KEEP_OUT_ZONE = 2,
  CONTROL_AREA_TYPE_DITCH_ZONE = 3,
  ControlAreaType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ControlAreaType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ControlAreaType_IsValid(int value);
extern const uint32_t ControlAreaType_internal_data_[];
constexpr ControlAreaType ControlAreaType_MIN = static_cast<ControlAreaType>(0);
constexpr ControlAreaType ControlAreaType_MAX = static_cast<ControlAreaType>(3);
constexpr int ControlAreaType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ControlAreaType_descriptor();
template <typename T>
const std::string& ControlAreaType_Name(T value) {
  static_assert(std::is_same<T, ControlAreaType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ControlAreaType_Name().");
  return ControlAreaType_Name(static_cast<ControlAreaType>(value));
}
template <>
inline const std::string& ControlAreaType_Name(ControlAreaType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ControlAreaType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ControlAreaType_Parse(absl::string_view name, ControlAreaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ControlAreaType>(
      ControlAreaType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ControlArea final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.v2.ControlArea) */ {
 public:
  inline ControlArea() : ControlArea(nullptr) {}
  ~ControlArea() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ControlArea* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ControlArea));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ControlArea(
      ::google::protobuf::internal::ConstantInitialized);

  inline ControlArea(const ControlArea& from) : ControlArea(nullptr, from) {}
  inline ControlArea(ControlArea&& from) noexcept
      : ControlArea(nullptr, std::move(from)) {}
  inline ControlArea& operator=(const ControlArea& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlArea& operator=(ControlArea&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ControlArea& default_instance() {
    return *internal_default_instance();
  }
  static inline const ControlArea* internal_default_instance() {
    return reinterpret_cast<const ControlArea*>(
        &_ControlArea_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ControlArea& a, ControlArea& b) { a.Swap(&b); }
  inline void Swap(ControlArea* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlArea* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ControlArea* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ControlArea>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ControlArea& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ControlArea& from) { ControlArea::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ControlArea* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.v2.ControlArea"; }

 protected:
  explicit ControlArea(::google::protobuf::Arena* arena);
  ControlArea(::google::protobuf::Arena* arena, const ControlArea& from);
  ControlArea(::google::protobuf::Arena* arena, ControlArea&& from) noexcept
      : ControlArea(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kControlAreaTypeFieldNumber = 2,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const std::string& entity_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  std::string* mutable_entity_id();
  PROTOBUF_NODISCARD std::string* release_entity_id();
  void set_allocated_entity_id(std::string* value);

  private:
  const std::string& _internal_entity_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(
      const std::string& value);
  std::string* _internal_mutable_entity_id();

  public:
  // .anduril.tasks.v2.ControlAreaType control_area_type = 2 [json_name = "controlAreaType"];
  void clear_control_area_type() ;
  ::anduril::tasks::v2::ControlAreaType control_area_type() const;
  void set_control_area_type(::anduril::tasks::v2::ControlAreaType value);

  private:
  ::anduril::tasks::v2::ControlAreaType _internal_control_area_type() const;
  void _internal_set_control_area_type(::anduril::tasks::v2::ControlAreaType value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.v2.ControlArea)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ControlArea& from_msg);
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    int control_area_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto;
};
// -------------------------------------------------------------------

class AnglePair final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.v2.AnglePair) */ {
 public:
  inline AnglePair() : AnglePair(nullptr) {}
  ~AnglePair() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AnglePair* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AnglePair));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AnglePair(
      ::google::protobuf::internal::ConstantInitialized);

  inline AnglePair(const AnglePair& from) : AnglePair(nullptr, from) {}
  inline AnglePair(AnglePair&& from) noexcept
      : AnglePair(nullptr, std::move(from)) {}
  inline AnglePair& operator=(const AnglePair& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnglePair& operator=(AnglePair&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AnglePair& default_instance() {
    return *internal_default_instance();
  }
  static inline const AnglePair* internal_default_instance() {
    return reinterpret_cast<const AnglePair*>(
        &_AnglePair_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AnglePair& a, AnglePair& b) { a.Swap(&b); }
  inline void Swap(AnglePair* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnglePair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AnglePair* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AnglePair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AnglePair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AnglePair& from) { AnglePair::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AnglePair* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.v2.AnglePair"; }

 protected:
  explicit AnglePair(::google::protobuf::Arena* arena);
  AnglePair(::google::protobuf::Arena* arena, const AnglePair& from);
  AnglePair(::google::protobuf::Arena* arena, AnglePair&& from) noexcept
      : AnglePair(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // double min = 1 [json_name = "min"];
  void clear_min() ;
  double min() const;
  void set_min(double value);

  private:
  double _internal_min() const;
  void _internal_set_min(double value);

  public:
  // double max = 2 [json_name = "max"];
  void clear_max() ;
  double max() const;
  void set_max(double value);

  private:
  double _internal_max() const;
  void _internal_set_max(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.v2.AnglePair)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AnglePair& from_msg);
    double min_;
    double max_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto;
};
// -------------------------------------------------------------------

class AltitudeConstraint final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.v2.AltitudeConstraint) */ {
 public:
  inline AltitudeConstraint() : AltitudeConstraint(nullptr) {}
  ~AltitudeConstraint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AltitudeConstraint* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AltitudeConstraint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AltitudeConstraint(
      ::google::protobuf::internal::ConstantInitialized);

  inline AltitudeConstraint(const AltitudeConstraint& from) : AltitudeConstraint(nullptr, from) {}
  inline AltitudeConstraint(AltitudeConstraint&& from) noexcept
      : AltitudeConstraint(nullptr, std::move(from)) {}
  inline AltitudeConstraint& operator=(const AltitudeConstraint& from) {
    CopyFrom(from);
    return *this;
  }
  inline AltitudeConstraint& operator=(AltitudeConstraint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AltitudeConstraint& default_instance() {
    return *internal_default_instance();
  }
  static inline const AltitudeConstraint* internal_default_instance() {
    return reinterpret_cast<const AltitudeConstraint*>(
        &_AltitudeConstraint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AltitudeConstraint& a, AltitudeConstraint& b) { a.Swap(&b); }
  inline void Swap(AltitudeConstraint* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AltitudeConstraint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AltitudeConstraint* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AltitudeConstraint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AltitudeConstraint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AltitudeConstraint& from) { AltitudeConstraint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AltitudeConstraint* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.v2.AltitudeConstraint"; }

 protected:
  explicit AltitudeConstraint(::google::protobuf::Arena* arena);
  AltitudeConstraint(::google::protobuf::Arena* arena, const AltitudeConstraint& from);
  AltitudeConstraint(::google::protobuf::Arena* arena, AltitudeConstraint&& from) noexcept
      : AltitudeConstraint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // double min = 1 [json_name = "min"];
  void clear_min() ;
  double min() const;
  void set_min(double value);

  private:
  double _internal_min() const;
  void _internal_set_min(double value);

  public:
  // double max = 2 [json_name = "max"];
  void clear_max() ;
  double max() const;
  void set_max(double value);

  private:
  double _internal_max() const;
  void _internal_set_max(double value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.v2.AltitudeConstraint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AltitudeConstraint& from_msg);
    double min_;
    double max_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto;
};
// -------------------------------------------------------------------

class Agent final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.v2.Agent) */ {
 public:
  inline Agent() : Agent(nullptr) {}
  ~Agent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Agent* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Agent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Agent(
      ::google::protobuf::internal::ConstantInitialized);

  inline Agent(const Agent& from) : Agent(nullptr, from) {}
  inline Agent(Agent&& from) noexcept
      : Agent(nullptr, std::move(from)) {}
  inline Agent& operator=(const Agent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Agent& operator=(Agent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Agent& default_instance() {
    return *internal_default_instance();
  }
  static inline const Agent* internal_default_instance() {
    return reinterpret_cast<const Agent*>(
        &_Agent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Agent& a, Agent& b) { a.Swap(&b); }
  inline void Swap(Agent* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Agent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Agent* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Agent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Agent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Agent& from) { Agent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Agent* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.v2.Agent"; }

 protected:
  explicit Agent(::google::protobuf::Arena* arena);
  Agent(::google::protobuf::Arena* arena, const Agent& from);
  Agent(::google::protobuf::Arena* arena, Agent&& from) noexcept
      : Agent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 2,
  };
  // string entity_id = 2 [json_name = "entityId"];
  void clear_entity_id() ;
  const std::string& entity_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  std::string* mutable_entity_id();
  PROTOBUF_NODISCARD std::string* release_entity_id();
  void set_allocated_entity_id(std::string* value);

  private:
  const std::string& _internal_entity_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(
      const std::string& value);
  std::string* _internal_mutable_entity_id();

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.v2.Agent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Agent& from_msg);
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto;
};
// -------------------------------------------------------------------

class DurationRange final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.v2.DurationRange) */ {
 public:
  inline DurationRange() : DurationRange(nullptr) {}
  ~DurationRange() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DurationRange* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DurationRange));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DurationRange(
      ::google::protobuf::internal::ConstantInitialized);

  inline DurationRange(const DurationRange& from) : DurationRange(nullptr, from) {}
  inline DurationRange(DurationRange&& from) noexcept
      : DurationRange(nullptr, std::move(from)) {}
  inline DurationRange& operator=(const DurationRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline DurationRange& operator=(DurationRange&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DurationRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const DurationRange* internal_default_instance() {
    return reinterpret_cast<const DurationRange*>(
        &_DurationRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DurationRange& a, DurationRange& b) { a.Swap(&b); }
  inline void Swap(DurationRange* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DurationRange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DurationRange* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DurationRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DurationRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DurationRange& from) { DurationRange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DurationRange* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.v2.DurationRange"; }

 protected:
  explicit DurationRange(::google::protobuf::Arena* arena);
  DurationRange(::google::protobuf::Arena* arena, const DurationRange& from);
  DurationRange(::google::protobuf::Arena* arena, DurationRange&& from) noexcept
      : DurationRange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // .google.protobuf.Duration min = 1 [json_name = "min"];
  bool has_min() const;
  void clear_min() ;
  const ::google::protobuf::Duration& min() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_min();
  ::google::protobuf::Duration* mutable_min();
  void set_allocated_min(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_min(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_min();

  private:
  const ::google::protobuf::Duration& _internal_min() const;
  ::google::protobuf::Duration* _internal_mutable_min();

  public:
  // .google.protobuf.Duration max = 2 [json_name = "max"];
  bool has_max() const;
  void clear_max() ;
  const ::google::protobuf::Duration& max() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_max();
  ::google::protobuf::Duration* mutable_max();
  void set_allocated_max(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_max(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_max();

  private:
  const ::google::protobuf::Duration& _internal_max() const;
  ::google::protobuf::Duration* _internal_mutable_max();

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.v2.DurationRange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DurationRange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* min_;
    ::google::protobuf::Duration* max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto;
};
// -------------------------------------------------------------------

class AreaConstraints final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.v2.AreaConstraints) */ {
 public:
  inline AreaConstraints() : AreaConstraints(nullptr) {}
  ~AreaConstraints() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AreaConstraints* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AreaConstraints));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AreaConstraints(
      ::google::protobuf::internal::ConstantInitialized);

  inline AreaConstraints(const AreaConstraints& from) : AreaConstraints(nullptr, from) {}
  inline AreaConstraints(AreaConstraints&& from) noexcept
      : AreaConstraints(nullptr, std::move(from)) {}
  inline AreaConstraints& operator=(const AreaConstraints& from) {
    CopyFrom(from);
    return *this;
  }
  inline AreaConstraints& operator=(AreaConstraints&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AreaConstraints& default_instance() {
    return *internal_default_instance();
  }
  static inline const AreaConstraints* internal_default_instance() {
    return reinterpret_cast<const AreaConstraints*>(
        &_AreaConstraints_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AreaConstraints& a, AreaConstraints& b) { a.Swap(&b); }
  inline void Swap(AreaConstraints* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AreaConstraints* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AreaConstraints* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AreaConstraints>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AreaConstraints& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AreaConstraints& from) { AreaConstraints::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AreaConstraints* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.v2.AreaConstraints"; }

 protected:
  explicit AreaConstraints(::google::protobuf::Arena* arena);
  AreaConstraints(::google::protobuf::Arena* arena, const AreaConstraints& from);
  AreaConstraints(::google::protobuf::Arena* arena, AreaConstraints&& from) noexcept
      : AreaConstraints(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAltitudeConstraintFieldNumber = 1,
  };
  // .anduril.tasks.v2.AltitudeConstraint altitude_constraint = 1 [json_name = "altitudeConstraint"];
  bool has_altitude_constraint() const;
  void clear_altitude_constraint() ;
  const ::anduril::tasks::v2::AltitudeConstraint& altitude_constraint() const;
  PROTOBUF_NODISCARD ::anduril::tasks::v2::AltitudeConstraint* release_altitude_constraint();
  ::anduril::tasks::v2::AltitudeConstraint* mutable_altitude_constraint();
  void set_allocated_altitude_constraint(::anduril::tasks::v2::AltitudeConstraint* value);
  void unsafe_arena_set_allocated_altitude_constraint(::anduril::tasks::v2::AltitudeConstraint* value);
  ::anduril::tasks::v2::AltitudeConstraint* unsafe_arena_release_altitude_constraint();

  private:
  const ::anduril::tasks::v2::AltitudeConstraint& _internal_altitude_constraint() const;
  ::anduril::tasks::v2::AltitudeConstraint* _internal_mutable_altitude_constraint();

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.v2.AreaConstraints)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AreaConstraints& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::tasks::v2::AltitudeConstraint* altitude_constraint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DurationRange

// .google.protobuf.Duration min = 1 [json_name = "min"];
inline bool DurationRange::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.min_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& DurationRange::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.min_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& DurationRange::min() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.DurationRange.min)
  return _internal_min();
}
inline void DurationRange::unsafe_arena_set_allocated_min(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_);
  }
  _impl_.min_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.tasks.v2.DurationRange.min)
}
inline ::google::protobuf::Duration* DurationRange::release_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.min_;
  _impl_.min_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* DurationRange::unsafe_arena_release_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.v2.DurationRange.min)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.min_;
  _impl_.min_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* DurationRange::_internal_mutable_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.min_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.min_;
}
inline ::google::protobuf::Duration* DurationRange::mutable_min() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_min();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.v2.DurationRange.min)
  return _msg;
}
inline void DurationRange::set_allocated_min(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.min_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.DurationRange.min)
}

// .google.protobuf.Duration max = 2 [json_name = "max"];
inline bool DurationRange::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& DurationRange::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.max_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& DurationRange::max() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.DurationRange.max)
  return _internal_max();
}
inline void DurationRange::unsafe_arena_set_allocated_max(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_);
  }
  _impl_.max_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.tasks.v2.DurationRange.max)
}
inline ::google::protobuf::Duration* DurationRange::release_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* released = _impl_.max_;
  _impl_.max_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* DurationRange::unsafe_arena_release_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.v2.DurationRange.max)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* temp = _impl_.max_;
  _impl_.max_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* DurationRange::_internal_mutable_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.max_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.max_;
}
inline ::google::protobuf::Duration* DurationRange::mutable_max() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Duration* _msg = _internal_mutable_max();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.v2.DurationRange.max)
  return _msg;
}
inline void DurationRange::set_allocated_max(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.max_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.DurationRange.max)
}

// -------------------------------------------------------------------

// AnglePair

// double min = 1 [json_name = "min"];
inline void AnglePair::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0;
}
inline double AnglePair::min() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.AnglePair.min)
  return _internal_min();
}
inline void AnglePair::set_min(double value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.v2.AnglePair.min)
}
inline double AnglePair::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void AnglePair::_internal_set_min(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// double max = 2 [json_name = "max"];
inline void AnglePair::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0;
}
inline double AnglePair::max() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.AnglePair.max)
  return _internal_max();
}
inline void AnglePair::set_max(double value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.v2.AnglePair.max)
}
inline double AnglePair::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void AnglePair::_internal_set_max(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// AreaConstraints

// .anduril.tasks.v2.AltitudeConstraint altitude_constraint = 1 [json_name = "altitudeConstraint"];
inline bool AreaConstraints::has_altitude_constraint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.altitude_constraint_ != nullptr);
  return value;
}
inline void AreaConstraints::clear_altitude_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.altitude_constraint_ != nullptr) _impl_.altitude_constraint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::anduril::tasks::v2::AltitudeConstraint& AreaConstraints::_internal_altitude_constraint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::tasks::v2::AltitudeConstraint* p = _impl_.altitude_constraint_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::tasks::v2::AltitudeConstraint&>(::anduril::tasks::v2::_AltitudeConstraint_default_instance_);
}
inline const ::anduril::tasks::v2::AltitudeConstraint& AreaConstraints::altitude_constraint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.AreaConstraints.altitude_constraint)
  return _internal_altitude_constraint();
}
inline void AreaConstraints::unsafe_arena_set_allocated_altitude_constraint(::anduril::tasks::v2::AltitudeConstraint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.altitude_constraint_);
  }
  _impl_.altitude_constraint_ = reinterpret_cast<::anduril::tasks::v2::AltitudeConstraint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.tasks.v2.AreaConstraints.altitude_constraint)
}
inline ::anduril::tasks::v2::AltitudeConstraint* AreaConstraints::release_altitude_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::tasks::v2::AltitudeConstraint* released = _impl_.altitude_constraint_;
  _impl_.altitude_constraint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::anduril::tasks::v2::AltitudeConstraint* AreaConstraints::unsafe_arena_release_altitude_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.v2.AreaConstraints.altitude_constraint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::tasks::v2::AltitudeConstraint* temp = _impl_.altitude_constraint_;
  _impl_.altitude_constraint_ = nullptr;
  return temp;
}
inline ::anduril::tasks::v2::AltitudeConstraint* AreaConstraints::_internal_mutable_altitude_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.altitude_constraint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::tasks::v2::AltitudeConstraint>(GetArena());
    _impl_.altitude_constraint_ = reinterpret_cast<::anduril::tasks::v2::AltitudeConstraint*>(p);
  }
  return _impl_.altitude_constraint_;
}
inline ::anduril::tasks::v2::AltitudeConstraint* AreaConstraints::mutable_altitude_constraint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::tasks::v2::AltitudeConstraint* _msg = _internal_mutable_altitude_constraint();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.v2.AreaConstraints.altitude_constraint)
  return _msg;
}
inline void AreaConstraints::set_allocated_altitude_constraint(::anduril::tasks::v2::AltitudeConstraint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.altitude_constraint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.altitude_constraint_ = reinterpret_cast<::anduril::tasks::v2::AltitudeConstraint*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.AreaConstraints.altitude_constraint)
}

// -------------------------------------------------------------------

// AltitudeConstraint

// double min = 1 [json_name = "min"];
inline void AltitudeConstraint::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0;
}
inline double AltitudeConstraint::min() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.AltitudeConstraint.min)
  return _internal_min();
}
inline void AltitudeConstraint::set_min(double value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.v2.AltitudeConstraint.min)
}
inline double AltitudeConstraint::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void AltitudeConstraint::_internal_set_min(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// double max = 2 [json_name = "max"];
inline void AltitudeConstraint::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0;
}
inline double AltitudeConstraint::max() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.AltitudeConstraint.max)
  return _internal_max();
}
inline void AltitudeConstraint::set_max(double value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.v2.AltitudeConstraint.max)
}
inline double AltitudeConstraint::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void AltitudeConstraint::_internal_set_max(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// Agent

// string entity_id = 2 [json_name = "entityId"];
inline void Agent::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
}
inline const std::string& Agent::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.Agent.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_entity_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.tasks.v2.Agent.entity_id)
}
inline std::string* Agent::mutable_entity_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.v2.Agent.entity_id)
  return _s;
}
inline const std::string& Agent::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void Agent::_internal_set_entity_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_id_.Mutable( GetArena());
}
inline std::string* Agent::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.v2.Agent.entity_id)
  return _impl_.entity_id_.Release();
}
inline void Agent::set_allocated_entity_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.Agent.entity_id)
}

// -------------------------------------------------------------------

// ControlArea

// string entity_id = 1 [json_name = "entityId"];
inline void ControlArea::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
}
inline const std::string& ControlArea::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.ControlArea.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ControlArea::set_entity_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.tasks.v2.ControlArea.entity_id)
}
inline std::string* ControlArea::mutable_entity_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:anduril.tasks.v2.ControlArea.entity_id)
  return _s;
}
inline const std::string& ControlArea::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void ControlArea::_internal_set_entity_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(value, GetArena());
}
inline std::string* ControlArea::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_id_.Mutable( GetArena());
}
inline std::string* ControlArea::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.tasks.v2.ControlArea.entity_id)
  return _impl_.entity_id_.Release();
}
inline void ControlArea::set_allocated_entity_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.ControlArea.entity_id)
}

// .anduril.tasks.v2.ControlAreaType control_area_type = 2 [json_name = "controlAreaType"];
inline void ControlArea::clear_control_area_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_area_type_ = 0;
}
inline ::anduril::tasks::v2::ControlAreaType ControlArea::control_area_type() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.v2.ControlArea.control_area_type)
  return _internal_control_area_type();
}
inline void ControlArea::set_control_area_type(::anduril::tasks::v2::ControlAreaType value) {
  _internal_set_control_area_type(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.v2.ControlArea.control_area_type)
}
inline ::anduril::tasks::v2::ControlAreaType ControlArea::_internal_control_area_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::tasks::v2::ControlAreaType>(_impl_.control_area_type_);
}
inline void ControlArea::_internal_set_control_area_type(::anduril::tasks::v2::ControlAreaType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_area_type_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tasks
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::tasks::v2::ControlAreaType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::tasks::v2::ControlAreaType>() {
  return ::anduril::tasks::v2::ControlAreaType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2ftasks_2fv2_2fcommon_2epub_2eproto_2epb_2eh
