// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/tasks/v2/shared/maneuver.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/tasks/v2/shared/maneuver.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace tasks {
namespace v2 {

inline constexpr Waypoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : point_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Waypoint::Waypoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WaypointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WaypointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WaypointDefaultTypeInternal() {}
  union {
    Waypoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WaypointDefaultTypeInternal _Waypoint_default_instance_;

inline constexpr Marshal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Marshal::Marshal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarshalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarshalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarshalDefaultTypeInternal() {}
  union {
    Marshal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarshalDefaultTypeInternal _Marshal_default_instance_;

inline constexpr PathSegment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : end_point_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PathSegment::PathSegment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathSegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathSegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathSegmentDefaultTypeInternal() {}
  union {
    PathSegment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathSegmentDefaultTypeInternal _PathSegment_default_instance_;

inline constexpr Route::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Route::Route(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RouteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RouteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RouteDefaultTypeInternal() {}
  union {
    Route _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RouteDefaultTypeInternal _Route_default_instance_;

inline constexpr RoutePlan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        route_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoutePlan::RoutePlan(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoutePlanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutePlanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutePlanDefaultTypeInternal() {}
  union {
    RoutePlan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutePlanDefaultTypeInternal _RoutePlan_default_instance_;

inline constexpr Transit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        plan_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Transit::Transit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransitDefaultTypeInternal() {}
  union {
    Transit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransitDefaultTypeInternal _Transit_default_instance_;

inline constexpr SetLaunchRoute::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        plan_{nullptr},
        tracking_mode_{static_cast< ::anduril::tasks::v2::LaunchTrackingMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SetLaunchRoute::SetLaunchRoute(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetLaunchRouteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLaunchRouteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLaunchRouteDefaultTypeInternal() {}
  union {
    SetLaunchRoute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLaunchRouteDefaultTypeInternal _SetLaunchRoute_default_instance_;
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Marshal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Marshal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Marshal, _impl_.objective_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Transit, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Transit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Transit, _impl_.plan_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::RoutePlan, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::RoutePlan, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::RoutePlan, _impl_.route_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Route, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Route, _impl_.path_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _impl_.end_point_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _impl_.point_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _impl_.plan_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _impl_.tracking_mode_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::anduril::tasks::v2::Marshal)},
        {10, 19, -1, sizeof(::anduril::tasks::v2::Transit)},
        {20, 29, -1, sizeof(::anduril::tasks::v2::RoutePlan)},
        {30, -1, -1, sizeof(::anduril::tasks::v2::Route)},
        {39, -1, -1, sizeof(::anduril::tasks::v2::PathSegment)},
        {50, -1, -1, sizeof(::anduril::tasks::v2::Waypoint)},
        {60, 70, -1, sizeof(::anduril::tasks::v2::SetLaunchRoute)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::tasks::v2::_Marshal_default_instance_._instance,
    &::anduril::tasks::v2::_Transit_default_instance_._instance,
    &::anduril::tasks::v2::_RoutePlan_default_instance_._instance,
    &::anduril::tasks::v2::_Route_default_instance_._instance,
    &::anduril::tasks::v2::_PathSegment_default_instance_._instance,
    &::anduril::tasks::v2::_Waypoint_default_instance_._instance,
    &::anduril::tasks::v2::_SetLaunchRoute_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n*anduril/tasks/v2/shared/maneuver.pub.p"
    "roto\022\020anduril.tasks.v2\032$anduril/tasks/v2"
    "/objective.pub.proto\032%anduril/tasks/v2/s"
    "hared/isr.pub.proto\"D\n\007Marshal\0229\n\tobject"
    "ive\030\001 \001(\0132\033.anduril.tasks.v2.ObjectiveR\t"
    "objective\":\n\007Transit\022/\n\004plan\030\001 \001(\0132\033.and"
    "uril.tasks.v2.RoutePlanR\004plan\":\n\tRoutePl"
    "an\022-\n\005route\030\001 \001(\0132\027.anduril.tasks.v2.Rou"
    "teR\005route\":\n\005Route\0221\n\004path\030\001 \003(\0132\035.andur"
    "il.tasks.v2.PathSegmentR\004path\"\210\001\n\013PathSe"
    "gment\0228\n\010waypoint\030\001 \001(\0132\032.anduril.tasks."
    "v2.WaypointH\000R\010waypoint\0222\n\006loiter\030\002 \001(\0132"
    "\030.anduril.tasks.v2.LoiterH\000R\006loiterB\013\n\te"
    "nd_point\"K\n\010Waypoint\0226\n\tlla_point\030\001 \001(\0132"
    "\027.anduril.tasks.v2.PointH\000R\010llaPointB\007\n\005"
    "point\"\214\001\n\016SetLaunchRoute\022/\n\004plan\030\001 \001(\0132\033"
    ".anduril.tasks.v2.RoutePlanR\004plan\022I\n\rtra"
    "cking_mode\030\002 \001(\0162$.anduril.tasks.v2.Laun"
    "chTrackingModeR\014trackingMode*\213\001\n\022LaunchT"
    "rackingMode\022 \n\034LAUNCH_TRACKING_MODE_INVA"
    "LID\020\000\022\'\n#LAUNCH_TRACKING_MODE_GO_TO_WAYP"
    "OINT\020\001\022*\n&LAUNCH_TRACKING_MODE_TRACK_TO_"
    "WAYPOINT\020\002B\311\001\n\024com.anduril.tasks.v2B\020Man"
    "euverPubProtoP\001Z=ghe.anduril.dev/anduril"
    "/andurilapis-go/anduril/tasks/v2;tasks\242\002"
    "\003ATX\252\002\020Anduril.Tasks.V2\312\002\020Anduril\\Tasks\\"
    "V2\342\002\034Anduril\\Tasks\\V2\\GPBMetadata\352\002\022Andu"
    "ril::Tasks::V2b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_deps[2] =
    {
        &::descriptor_table_anduril_2ftasks_2fv2_2fobjective_2epub_2eproto,
        &::descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto = {
    false,
    false,
    1102,
    descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    "anduril/tasks/v2/shared/maneuver.pub.proto",
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
    descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_deps,
    2,
    7,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
};
namespace anduril {
namespace tasks {
namespace v2 {
const ::google::protobuf::EnumDescriptor* LaunchTrackingMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LaunchTrackingMode_internal_data_[] = {
    196608u, 0u, };
bool LaunchTrackingMode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Marshal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Marshal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Marshal, _impl_._has_bits_);
};

void Marshal::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Marshal::Marshal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Marshal)
}
inline PROTOBUF_NDEBUG_INLINE Marshal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Marshal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Marshal::Marshal(
    ::google::protobuf::Arena* arena,
    const Marshal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Marshal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Marshal)
}
inline PROTOBUF_NDEBUG_INLINE Marshal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Marshal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
Marshal::~Marshal() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Marshal)
  SharedDtor(*this);
}
inline void Marshal::SharedDtor(MessageLite& self) {
  Marshal& this_ = static_cast<Marshal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  this_._impl_.~Impl_();
}

inline void* Marshal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Marshal(arena);
}
constexpr auto Marshal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Marshal),
                                            alignof(Marshal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Marshal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Marshal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Marshal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Marshal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Marshal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Marshal>(), &Marshal::ByteSizeLong,
            &Marshal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Marshal, _impl_._cached_size_),
        false,
    },
    &Marshal::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Marshal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Marshal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Marshal, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Marshal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Marshal, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Marshal, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Marshal::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Marshal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Marshal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Marshal& this_ = static_cast<const Marshal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Marshal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Marshal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Marshal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Marshal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Marshal::ByteSizeLong(const MessageLite& base) {
          const Marshal& this_ = static_cast<const Marshal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Marshal::ByteSizeLong() const {
          const Marshal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Marshal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Marshal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Marshal*>(&to_msg);
  auto& from = static_cast<const Marshal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Marshal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.objective_ != nullptr);
    if (_this->_impl_.objective_ == nullptr) {
      _this->_impl_.objective_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
    } else {
      _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Marshal::CopyFrom(const Marshal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Marshal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Marshal::InternalSwap(Marshal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata Marshal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Transit::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Transit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Transit, _impl_._has_bits_);
};

Transit::Transit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Transit)
}
inline PROTOBUF_NDEBUG_INLINE Transit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Transit& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Transit::Transit(
    ::google::protobuf::Arena* arena,
    const Transit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Transit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.plan_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::RoutePlan>(
                              arena, *from._impl_.plan_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Transit)
}
inline PROTOBUF_NDEBUG_INLINE Transit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Transit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.plan_ = {};
}
Transit::~Transit() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Transit)
  SharedDtor(*this);
}
inline void Transit::SharedDtor(MessageLite& self) {
  Transit& this_ = static_cast<Transit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.plan_;
  this_._impl_.~Impl_();
}

inline void* Transit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Transit(arena);
}
constexpr auto Transit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Transit),
                                            alignof(Transit));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Transit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Transit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Transit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Transit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Transit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Transit>(), &Transit::ByteSizeLong,
            &Transit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Transit, _impl_._cached_size_),
        false,
    },
    &Transit::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Transit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Transit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Transit, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Transit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Transit, _impl_.plan_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {PROTOBUF_FIELD_OFFSET(Transit, _impl_.plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::RoutePlan>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Transit::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Transit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.plan_ != nullptr);
    _impl_.plan_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Transit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Transit& this_ = static_cast<const Transit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Transit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Transit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Transit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.plan_, this_._impl_.plan_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Transit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Transit::ByteSizeLong(const MessageLite& base) {
          const Transit& this_ = static_cast<const Transit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Transit::ByteSizeLong() const {
          const Transit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Transit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.plan_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Transit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Transit*>(&to_msg);
  auto& from = static_cast<const Transit&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Transit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.plan_ != nullptr);
    if (_this->_impl_.plan_ == nullptr) {
      _this->_impl_.plan_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::RoutePlan>(arena, *from._impl_.plan_);
    } else {
      _this->_impl_.plan_->MergeFrom(*from._impl_.plan_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transit::CopyFrom(const Transit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Transit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Transit::InternalSwap(Transit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.plan_, other->_impl_.plan_);
}

::google::protobuf::Metadata Transit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoutePlan::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RoutePlan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_._has_bits_);
};

RoutePlan::RoutePlan(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.RoutePlan)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::RoutePlan& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RoutePlan::RoutePlan(
    ::google::protobuf::Arena* arena,
    const RoutePlan& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoutePlan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.route_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Route>(
                              arena, *from._impl_.route_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.RoutePlan)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RoutePlan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.route_ = {};
}
RoutePlan::~RoutePlan() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.RoutePlan)
  SharedDtor(*this);
}
inline void RoutePlan::SharedDtor(MessageLite& self) {
  RoutePlan& this_ = static_cast<RoutePlan&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.route_;
  this_._impl_.~Impl_();
}

inline void* RoutePlan::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RoutePlan(arena);
}
constexpr auto RoutePlan::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RoutePlan),
                                            alignof(RoutePlan));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RoutePlan::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RoutePlan_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RoutePlan::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RoutePlan>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RoutePlan::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RoutePlan>(), &RoutePlan::ByteSizeLong,
            &RoutePlan::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_._cached_size_),
        false,
    },
    &RoutePlan::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RoutePlan::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RoutePlan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::RoutePlan>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_.route_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
    {PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_.route_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Route>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RoutePlan::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.RoutePlan)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.route_ != nullptr);
    _impl_.route_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RoutePlan::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RoutePlan& this_ = static_cast<const RoutePlan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RoutePlan::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RoutePlan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.RoutePlan)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.route_, this_._impl_.route_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.RoutePlan)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RoutePlan::ByteSizeLong(const MessageLite& base) {
          const RoutePlan& this_ = static_cast<const RoutePlan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RoutePlan::ByteSizeLong() const {
          const RoutePlan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.RoutePlan)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.route_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RoutePlan::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoutePlan*>(&to_msg);
  auto& from = static_cast<const RoutePlan&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.RoutePlan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.route_ != nullptr);
    if (_this->_impl_.route_ == nullptr) {
      _this->_impl_.route_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Route>(arena, *from._impl_.route_);
    } else {
      _this->_impl_.route_->MergeFrom(*from._impl_.route_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoutePlan::CopyFrom(const RoutePlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.RoutePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoutePlan::InternalSwap(RoutePlan* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.route_, other->_impl_.route_);
}

::google::protobuf::Metadata RoutePlan::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Route::_Internal {
 public:
};

Route::Route(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Route)
}
inline PROTOBUF_NDEBUG_INLINE Route::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Route& from_msg)
      : path_{visibility, arena, from.path_},
        _cached_size_{0} {}

Route::Route(
    ::google::protobuf::Arena* arena,
    const Route& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Route* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Route)
}
inline PROTOBUF_NDEBUG_INLINE Route::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_{visibility, arena},
        _cached_size_{0} {}

inline void Route::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Route::~Route() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Route)
  SharedDtor(*this);
}
inline void Route::SharedDtor(MessageLite& self) {
  Route& this_ = static_cast<Route&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Route::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Route(arena);
}
constexpr auto Route::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Route, _impl_.path_) +
          decltype(Route::_impl_.path_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Route), alignof(Route), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Route::PlacementNew_,
                                 sizeof(Route),
                                 alignof(Route));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Route::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Route_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Route::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Route>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Route::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Route>(), &Route::ByteSizeLong,
            &Route::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Route, _impl_._cached_size_),
        false,
    },
    &Route::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Route::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Route::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Route>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Route, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(Route, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::PathSegment>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Route::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Route)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Route::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Route& this_ = static_cast<const Route&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Route::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Route& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Route)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_path_size());
               i < n; i++) {
            const auto& repfield = this_._internal_path().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Route)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Route::ByteSizeLong(const MessageLite& base) {
          const Route& this_ = static_cast<const Route&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Route::ByteSizeLong() const {
          const Route& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Route)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
            {
              total_size += 1UL * this_._internal_path_size();
              for (const auto& msg : this_._internal_path()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Route::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Route*>(&to_msg);
  auto& from = static_cast<const Route&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Route)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path()->MergeFrom(
      from._internal_path());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Route::CopyFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Route::InternalSwap(Route* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.path_.InternalSwap(&other->_impl_.path_);
}

::google::protobuf::Metadata Route::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PathSegment::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _impl_._oneof_case_);
};

void PathSegment::set_allocated_waypoint(::anduril::tasks::v2::Waypoint* waypoint) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_end_point();
  if (waypoint) {
    ::google::protobuf::Arena* submessage_arena = waypoint->GetArena();
    if (message_arena != submessage_arena) {
      waypoint = ::google::protobuf::internal::GetOwnedMessage(message_arena, waypoint, submessage_arena);
    }
    set_has_waypoint();
    _impl_.end_point_.waypoint_ = waypoint;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.PathSegment.waypoint)
}
void PathSegment::set_allocated_loiter(::anduril::tasks::v2::Loiter* loiter) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_end_point();
  if (loiter) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(loiter)->GetArena();
    if (message_arena != submessage_arena) {
      loiter = ::google::protobuf::internal::GetOwnedMessage(message_arena, loiter, submessage_arena);
    }
    set_has_loiter();
    _impl_.end_point_.loiter_ = loiter;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.PathSegment.loiter)
}
void PathSegment::clear_loiter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (end_point_case() == kLoiter) {
    if (GetArena() == nullptr) {
      delete _impl_.end_point_.loiter_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.end_point_.loiter_);
    }
    clear_has_end_point();
  }
}
PathSegment::PathSegment(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.PathSegment)
}
inline PROTOBUF_NDEBUG_INLINE PathSegment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::PathSegment& from_msg)
      : end_point_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PathSegment::PathSegment(
    ::google::protobuf::Arena* arena,
    const PathSegment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PathSegment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (end_point_case()) {
    case END_POINT_NOT_SET:
      break;
      case kWaypoint:
        _impl_.end_point_.waypoint_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Waypoint>(arena, *from._impl_.end_point_.waypoint_);
        break;
      case kLoiter:
        _impl_.end_point_.loiter_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Loiter>(arena, *from._impl_.end_point_.loiter_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.PathSegment)
}
inline PROTOBUF_NDEBUG_INLINE PathSegment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : end_point_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PathSegment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PathSegment::~PathSegment() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.PathSegment)
  SharedDtor(*this);
}
inline void PathSegment::SharedDtor(MessageLite& self) {
  PathSegment& this_ = static_cast<PathSegment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_end_point()) {
    this_.clear_end_point();
  }
  this_._impl_.~Impl_();
}

void PathSegment::clear_end_point() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.PathSegment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (end_point_case()) {
    case kWaypoint: {
      if (GetArena() == nullptr) {
        delete _impl_.end_point_.waypoint_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.end_point_.waypoint_);
      }
      break;
    }
    case kLoiter: {
      if (GetArena() == nullptr) {
        delete _impl_.end_point_.loiter_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.end_point_.loiter_);
      }
      break;
    }
    case END_POINT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = END_POINT_NOT_SET;
}


inline void* PathSegment::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PathSegment(arena);
}
constexpr auto PathSegment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PathSegment),
                                            alignof(PathSegment));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PathSegment::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PathSegment_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PathSegment::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PathSegment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PathSegment::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PathSegment>(), &PathSegment::ByteSizeLong,
            &PathSegment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PathSegment, _impl_._cached_size_),
        false,
    },
    &PathSegment::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PathSegment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> PathSegment::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::PathSegment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Waypoint waypoint = 1 [json_name = "waypoint"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.end_point_.waypoint_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.Loiter loiter = 2 [json_name = "loiter"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.end_point_.loiter_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Waypoint>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Loiter>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PathSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.PathSegment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_end_point();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PathSegment::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PathSegment& this_ = static_cast<const PathSegment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PathSegment::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PathSegment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.PathSegment)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.end_point_case()) {
            case kWaypoint: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.end_point_.waypoint_, this_._impl_.end_point_.waypoint_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLoiter: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.end_point_.loiter_, this_._impl_.end_point_.loiter_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.PathSegment)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PathSegment::ByteSizeLong(const MessageLite& base) {
          const PathSegment& this_ = static_cast<const PathSegment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PathSegment::ByteSizeLong() const {
          const PathSegment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.PathSegment)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.end_point_case()) {
            // .anduril.tasks.v2.Waypoint waypoint = 1 [json_name = "waypoint"];
            case kWaypoint: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_point_.waypoint_);
              break;
            }
            // .anduril.tasks.v2.Loiter loiter = 2 [json_name = "loiter"];
            case kLoiter: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_point_.loiter_);
              break;
            }
            case END_POINT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PathSegment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PathSegment*>(&to_msg);
  auto& from = static_cast<const PathSegment&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.PathSegment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_end_point();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWaypoint: {
        if (oneof_needs_init) {
          _this->_impl_.end_point_.waypoint_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Waypoint>(arena, *from._impl_.end_point_.waypoint_);
        } else {
          _this->_impl_.end_point_.waypoint_->MergeFrom(from._internal_waypoint());
        }
        break;
      }
      case kLoiter: {
        if (oneof_needs_init) {
          _this->_impl_.end_point_.loiter_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Loiter>(arena, *from._impl_.end_point_.loiter_);
        } else {
          _this->_impl_.end_point_.loiter_->MergeFrom(from._internal_loiter());
        }
        break;
      }
      case END_POINT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathSegment::CopyFrom(const PathSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.PathSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PathSegment::InternalSwap(PathSegment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.end_point_, other->_impl_.end_point_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PathSegment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Waypoint::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _impl_._oneof_case_);
};

void Waypoint::set_allocated_lla_point(::anduril::tasks::v2::Point* lla_point) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point();
  if (lla_point) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(lla_point)->GetArena();
    if (message_arena != submessage_arena) {
      lla_point = ::google::protobuf::internal::GetOwnedMessage(message_arena, lla_point, submessage_arena);
    }
    set_has_lla_point();
    _impl_.point_.lla_point_ = lla_point;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.Waypoint.lla_point)
}
void Waypoint::clear_lla_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (point_case() == kLlaPoint) {
    if (GetArena() == nullptr) {
      delete _impl_.point_.lla_point_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.point_.lla_point_);
    }
    clear_has_point();
  }
}
Waypoint::Waypoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Waypoint)
}
inline PROTOBUF_NDEBUG_INLINE Waypoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Waypoint& from_msg)
      : point_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Waypoint::Waypoint(
    ::google::protobuf::Arena* arena,
    const Waypoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Waypoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (point_case()) {
    case POINT_NOT_SET:
      break;
      case kLlaPoint:
        _impl_.point_.lla_point_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Point>(arena, *from._impl_.point_.lla_point_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Waypoint)
}
inline PROTOBUF_NDEBUG_INLINE Waypoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : point_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Waypoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Waypoint::~Waypoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Waypoint)
  SharedDtor(*this);
}
inline void Waypoint::SharedDtor(MessageLite& self) {
  Waypoint& this_ = static_cast<Waypoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_point()) {
    this_.clear_point();
  }
  this_._impl_.~Impl_();
}

void Waypoint::clear_point() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.Waypoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (point_case()) {
    case kLlaPoint: {
      if (GetArena() == nullptr) {
        delete _impl_.point_.lla_point_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.point_.lla_point_);
      }
      break;
    }
    case POINT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = POINT_NOT_SET;
}


inline void* Waypoint::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Waypoint(arena);
}
constexpr auto Waypoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Waypoint),
                                            alignof(Waypoint));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Waypoint::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Waypoint_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Waypoint::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Waypoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Waypoint::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Waypoint>(), &Waypoint::ByteSizeLong,
            &Waypoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Waypoint, _impl_._cached_size_),
        false,
    },
    &Waypoint::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Waypoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Waypoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Waypoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Point lla_point = 1 [json_name = "llaPoint"];
    {PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.point_.lla_point_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Point>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Waypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Waypoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_point();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Waypoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Waypoint& this_ = static_cast<const Waypoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Waypoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Waypoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Waypoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.tasks.v2.Point lla_point = 1 [json_name = "llaPoint"];
          if (this_.point_case() == kLlaPoint) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.point_.lla_point_, this_._impl_.point_.lla_point_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Waypoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Waypoint::ByteSizeLong(const MessageLite& base) {
          const Waypoint& this_ = static_cast<const Waypoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Waypoint::ByteSizeLong() const {
          const Waypoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Waypoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.point_case()) {
            // .anduril.tasks.v2.Point lla_point = 1 [json_name = "llaPoint"];
            case kLlaPoint: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.point_.lla_point_);
              break;
            }
            case POINT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Waypoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Waypoint*>(&to_msg);
  auto& from = static_cast<const Waypoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Waypoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_point();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLlaPoint: {
        if (oneof_needs_init) {
          _this->_impl_.point_.lla_point_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Point>(arena, *from._impl_.point_.lla_point_);
        } else {
          _this->_impl_.point_.lla_point_->MergeFrom(from._internal_lla_point());
        }
        break;
      }
      case POINT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Waypoint::CopyFrom(const Waypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Waypoint::InternalSwap(Waypoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.point_, other->_impl_.point_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Waypoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetLaunchRoute::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetLaunchRoute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_._has_bits_);
};

SetLaunchRoute::SetLaunchRoute(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.SetLaunchRoute)
}
inline PROTOBUF_NDEBUG_INLINE SetLaunchRoute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::SetLaunchRoute& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLaunchRoute::SetLaunchRoute(
    ::google::protobuf::Arena* arena,
    const SetLaunchRoute& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetLaunchRoute* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.plan_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::RoutePlan>(
                              arena, *from._impl_.plan_)
                        : nullptr;
  _impl_.tracking_mode_ = from._impl_.tracking_mode_;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.SetLaunchRoute)
}
inline PROTOBUF_NDEBUG_INLINE SetLaunchRoute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLaunchRoute::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plan_),
           0,
           offsetof(Impl_, tracking_mode_) -
               offsetof(Impl_, plan_) +
               sizeof(Impl_::tracking_mode_));
}
SetLaunchRoute::~SetLaunchRoute() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.SetLaunchRoute)
  SharedDtor(*this);
}
inline void SetLaunchRoute::SharedDtor(MessageLite& self) {
  SetLaunchRoute& this_ = static_cast<SetLaunchRoute&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.plan_;
  this_._impl_.~Impl_();
}

inline void* SetLaunchRoute::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetLaunchRoute(arena);
}
constexpr auto SetLaunchRoute::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetLaunchRoute),
                                            alignof(SetLaunchRoute));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetLaunchRoute::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetLaunchRoute_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetLaunchRoute::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetLaunchRoute>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetLaunchRoute::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetLaunchRoute>(), &SetLaunchRoute::ByteSizeLong,
            &SetLaunchRoute::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_._cached_size_),
        false,
    },
    &SetLaunchRoute::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetLaunchRoute::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SetLaunchRoute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::SetLaunchRoute>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetLaunchRoute, _impl_.tracking_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.tracking_mode_)}},
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.plan_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
    {PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.tracking_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::RoutePlan>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetLaunchRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.SetLaunchRoute)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.plan_ != nullptr);
    _impl_.plan_->Clear();
  }
  _impl_.tracking_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetLaunchRoute::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetLaunchRoute& this_ = static_cast<const SetLaunchRoute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetLaunchRoute::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetLaunchRoute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.SetLaunchRoute)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.plan_, this_._impl_.plan_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
          if (this_._internal_tracking_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_tracking_mode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.SetLaunchRoute)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetLaunchRoute::ByteSizeLong(const MessageLite& base) {
          const SetLaunchRoute& this_ = static_cast<const SetLaunchRoute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetLaunchRoute::ByteSizeLong() const {
          const SetLaunchRoute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.SetLaunchRoute)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.plan_);
            }
          }
           {
            // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
            if (this_._internal_tracking_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_tracking_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetLaunchRoute::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetLaunchRoute*>(&to_msg);
  auto& from = static_cast<const SetLaunchRoute&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.SetLaunchRoute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.plan_ != nullptr);
    if (_this->_impl_.plan_ == nullptr) {
      _this->_impl_.plan_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::RoutePlan>(arena, *from._impl_.plan_);
    } else {
      _this->_impl_.plan_->MergeFrom(*from._impl_.plan_);
    }
  }
  if (from._internal_tracking_mode() != 0) {
    _this->_impl_.tracking_mode_ = from._impl_.tracking_mode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLaunchRoute::CopyFrom(const SetLaunchRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.SetLaunchRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetLaunchRoute::InternalSwap(SetLaunchRoute* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.tracking_mode_)
      + sizeof(SetLaunchRoute::_impl_.tracking_mode_)
      - PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.plan_)>(
          reinterpret_cast<char*>(&_impl_.plan_),
          reinterpret_cast<char*>(&other->_impl_.plan_));
}

::google::protobuf::Metadata SetLaunchRoute::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
