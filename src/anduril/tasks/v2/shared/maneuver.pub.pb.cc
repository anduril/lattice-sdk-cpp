// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/tasks/v2/shared/maneuver.pub.proto

#include "anduril/tasks/v2/shared/maneuver.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace tasks {
namespace v2 {

inline constexpr Waypoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : point_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Waypoint::Waypoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WaypointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WaypointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WaypointDefaultTypeInternal() {}
  union {
    Waypoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WaypointDefaultTypeInternal _Waypoint_default_instance_;

inline constexpr Marshal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Marshal::Marshal(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MarshalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarshalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarshalDefaultTypeInternal() {}
  union {
    Marshal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarshalDefaultTypeInternal _Marshal_default_instance_;

inline constexpr PathSegment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : end_point_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PathSegment::PathSegment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PathSegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathSegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathSegmentDefaultTypeInternal() {}
  union {
    PathSegment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathSegmentDefaultTypeInternal _PathSegment_default_instance_;

inline constexpr Route::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Route::Route(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RouteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RouteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RouteDefaultTypeInternal() {}
  union {
    Route _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RouteDefaultTypeInternal _Route_default_instance_;

inline constexpr RoutePlan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        route_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoutePlan::RoutePlan(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RoutePlanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutePlanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutePlanDefaultTypeInternal() {}
  union {
    RoutePlan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutePlanDefaultTypeInternal _RoutePlan_default_instance_;

inline constexpr Transit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        plan_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Transit::Transit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransitDefaultTypeInternal() {}
  union {
    Transit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransitDefaultTypeInternal _Transit_default_instance_;

inline constexpr SetLaunchRoute::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        plan_{nullptr},
        tracking_mode_{static_cast< ::anduril::tasks::v2::LaunchTrackingMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SetLaunchRoute::SetLaunchRoute(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetLaunchRouteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLaunchRouteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLaunchRouteDefaultTypeInternal() {}
  union {
    SetLaunchRoute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLaunchRouteDefaultTypeInternal _SetLaunchRoute_default_instance_;
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Marshal, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Marshal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Marshal, _impl_.objective_),
    0,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Transit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Transit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Transit, _impl_.plan_),
    0,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::RoutePlan, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::RoutePlan, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::RoutePlan, _impl_.route_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Route, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Route, _impl_.path_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _impl_.end_point_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _impl_.point_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _impl_.plan_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::SetLaunchRoute, _impl_.tracking_mode_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::anduril::tasks::v2::Marshal)},
        {10, 19, -1, sizeof(::anduril::tasks::v2::Transit)},
        {20, 29, -1, sizeof(::anduril::tasks::v2::RoutePlan)},
        {30, -1, -1, sizeof(::anduril::tasks::v2::Route)},
        {39, -1, -1, sizeof(::anduril::tasks::v2::PathSegment)},
        {50, -1, -1, sizeof(::anduril::tasks::v2::Waypoint)},
        {60, 70, -1, sizeof(::anduril::tasks::v2::SetLaunchRoute)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::tasks::v2::_Marshal_default_instance_._instance,
    &::anduril::tasks::v2::_Transit_default_instance_._instance,
    &::anduril::tasks::v2::_RoutePlan_default_instance_._instance,
    &::anduril::tasks::v2::_Route_default_instance_._instance,
    &::anduril::tasks::v2::_PathSegment_default_instance_._instance,
    &::anduril::tasks::v2::_Waypoint_default_instance_._instance,
    &::anduril::tasks::v2::_SetLaunchRoute_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n*anduril/tasks/v2/shared/maneuver.pub.p"
    "roto\022\020anduril.tasks.v2\032$anduril/tasks/v2"
    "/objective.pub.proto\032%anduril/tasks/v2/s"
    "hared/isr.pub.proto\"D\n\007Marshal\0229\n\tobject"
    "ive\030\001 \001(\0132\033.anduril.tasks.v2.ObjectiveR\t"
    "objective\":\n\007Transit\022/\n\004plan\030\001 \001(\0132\033.and"
    "uril.tasks.v2.RoutePlanR\004plan\":\n\tRoutePl"
    "an\022-\n\005route\030\001 \001(\0132\027.anduril.tasks.v2.Rou"
    "teR\005route\":\n\005Route\0221\n\004path\030\001 \003(\0132\035.andur"
    "il.tasks.v2.PathSegmentR\004path\"\210\001\n\013PathSe"
    "gment\0228\n\010waypoint\030\001 \001(\0132\032.anduril.tasks."
    "v2.WaypointH\000R\010waypoint\0222\n\006loiter\030\002 \001(\0132"
    "\030.anduril.tasks.v2.LoiterH\000R\006loiterB\013\n\te"
    "nd_point\"K\n\010Waypoint\0226\n\tlla_point\030\001 \001(\0132"
    "\027.anduril.tasks.v2.PointH\000R\010llaPointB\007\n\005"
    "point\"\214\001\n\016SetLaunchRoute\022/\n\004plan\030\001 \001(\0132\033"
    ".anduril.tasks.v2.RoutePlanR\004plan\022I\n\rtra"
    "cking_mode\030\002 \001(\0162$.anduril.tasks.v2.Laun"
    "chTrackingModeR\014trackingMode*\213\001\n\022LaunchT"
    "rackingMode\022 \n\034LAUNCH_TRACKING_MODE_INVA"
    "LID\020\000\022\'\n#LAUNCH_TRACKING_MODE_GO_TO_WAYP"
    "OINT\020\001\022*\n&LAUNCH_TRACKING_MODE_TRACK_TO_"
    "WAYPOINT\020\002B\311\001\n\024com.anduril.tasks.v2B\020Man"
    "euverPubProtoP\001Z=ghe.anduril.dev/anduril"
    "/andurilapis-go/anduril/tasks/v2;tasks\242\002"
    "\003ATX\252\002\020Anduril.Tasks.V2\312\002\020Anduril\\Tasks\\"
    "V2\342\002\034Anduril\\Tasks\\V2\\GPBMetadata\352\002\022Andu"
    "ril::Tasks::V2b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_deps[2] =
    {
        &::descriptor_table_anduril_2ftasks_2fv2_2fobjective_2epub_2eproto,
        &::descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto = {
    false,
    false,
    1102,
    descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    "anduril/tasks/v2/shared/maneuver.pub.proto",
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
    descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_deps,
    2,
    7,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto::offsets,
    file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto);
namespace anduril {
namespace tasks {
namespace v2 {
const ::google::protobuf::EnumDescriptor* LaunchTrackingMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LaunchTrackingMode_internal_data_[] = {
    196608u, 0u, };
bool LaunchTrackingMode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Marshal::_Internal {
 public:
  using HasBits = decltype(std::declval<Marshal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Marshal, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Marshal* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::Objective& Marshal::_Internal::objective(const Marshal* msg) {
  return *msg->_impl_.objective_;
}
void Marshal::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Marshal::Marshal(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Marshal)
}
inline PROTOBUF_NDEBUG_INLINE Marshal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Marshal::Marshal(
    ::google::protobuf::Arena* arena,
    const Marshal& from)
    : ::google::protobuf::Message(arena) {
  Marshal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Marshal)
}
inline PROTOBUF_NDEBUG_INLINE Marshal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Marshal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
Marshal::~Marshal() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Marshal)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Marshal::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Marshal::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Marshal)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Marshal::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Marshal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Marshal, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Marshal_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Marshal, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Marshal, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
  }}, {{
  }},
};

::uint8_t* Marshal::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Marshal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Marshal)
  return target;
}

::size_t Marshal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Marshal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Marshal::_class_data_ = {
    Marshal::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Marshal::GetClassData() const {
  return &_class_data_;
}

void Marshal::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Marshal*>(&to_msg);
  auto& from = static_cast<const Marshal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Marshal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
        from._internal_objective());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Marshal::CopyFrom(const Marshal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Marshal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Marshal::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Marshal::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Marshal::InternalSwap(Marshal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata Marshal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[0]);
}
// ===================================================================

class Transit::_Internal {
 public:
  using HasBits = decltype(std::declval<Transit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Transit, _impl_._has_bits_);
  static const ::anduril::tasks::v2::RoutePlan& plan(const Transit* msg);
  static void set_has_plan(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::RoutePlan& Transit::_Internal::plan(const Transit* msg) {
  return *msg->_impl_.plan_;
}
Transit::Transit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Transit)
}
inline PROTOBUF_NDEBUG_INLINE Transit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Transit::Transit(
    ::google::protobuf::Arena* arena,
    const Transit& from)
    : ::google::protobuf::Message(arena) {
  Transit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.plan_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::RoutePlan>(arena, *from._impl_.plan_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Transit)
}
inline PROTOBUF_NDEBUG_INLINE Transit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Transit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.plan_ = {};
}
Transit::~Transit() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Transit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Transit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.plan_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Transit::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Transit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.plan_ != nullptr);
    _impl_.plan_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Transit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Transit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Transit, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Transit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Transit, _impl_.plan_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {PROTOBUF_FIELD_OFFSET(Transit, _impl_.plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::RoutePlan>()},
  }}, {{
  }},
};

::uint8_t* Transit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Transit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::plan(this),
        _Internal::plan(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Transit)
  return target;
}

::size_t Transit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Transit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.plan_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Transit::_class_data_ = {
    Transit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Transit::GetClassData() const {
  return &_class_data_;
}

void Transit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Transit*>(&to_msg);
  auto& from = static_cast<const Transit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Transit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_plan()->::anduril::tasks::v2::RoutePlan::MergeFrom(
        from._internal_plan());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transit::CopyFrom(const Transit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Transit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Transit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Transit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Transit::InternalSwap(Transit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.plan_, other->_impl_.plan_);
}

::google::protobuf::Metadata Transit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[1]);
}
// ===================================================================

class RoutePlan::_Internal {
 public:
  using HasBits = decltype(std::declval<RoutePlan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Route& route(const RoutePlan* msg);
  static void set_has_route(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::Route& RoutePlan::_Internal::route(const RoutePlan* msg) {
  return *msg->_impl_.route_;
}
RoutePlan::RoutePlan(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.RoutePlan)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RoutePlan::RoutePlan(
    ::google::protobuf::Arena* arena,
    const RoutePlan& from)
    : ::google::protobuf::Message(arena) {
  RoutePlan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.route_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Route>(arena, *from._impl_.route_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.RoutePlan)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RoutePlan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.route_ = {};
}
RoutePlan::~RoutePlan() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.RoutePlan)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RoutePlan::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.route_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RoutePlan::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.RoutePlan)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.route_ != nullptr);
    _impl_.route_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RoutePlan::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RoutePlan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RoutePlan_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_.route_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
    {PROTOBUF_FIELD_OFFSET(RoutePlan, _impl_.route_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Route>()},
  }}, {{
  }},
};

::uint8_t* RoutePlan::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.RoutePlan)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::route(this),
        _Internal::route(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.RoutePlan)
  return target;
}

::size_t RoutePlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.RoutePlan)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.tasks.v2.Route route = 1 [json_name = "route"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.route_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RoutePlan::_class_data_ = {
    RoutePlan::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RoutePlan::GetClassData() const {
  return &_class_data_;
}

void RoutePlan::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RoutePlan*>(&to_msg);
  auto& from = static_cast<const RoutePlan&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.RoutePlan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_route()->::anduril::tasks::v2::Route::MergeFrom(
        from._internal_route());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoutePlan::CopyFrom(const RoutePlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.RoutePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RoutePlan::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RoutePlan::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RoutePlan::InternalSwap(RoutePlan* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.route_, other->_impl_.route_);
}

::google::protobuf::Metadata RoutePlan::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[2]);
}
// ===================================================================

class Route::_Internal {
 public:
};

Route::Route(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Route)
}
inline PROTOBUF_NDEBUG_INLINE Route::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : path_{visibility, arena, from.path_},
        _cached_size_{0} {}

Route::Route(
    ::google::protobuf::Arena* arena,
    const Route& from)
    : ::google::protobuf::Message(arena) {
  Route* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Route)
}
inline PROTOBUF_NDEBUG_INLINE Route::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_{visibility, arena},
        _cached_size_{0} {}

inline void Route::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Route::~Route() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Route)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Route::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Route::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Route)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Route::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Route::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Route_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Route, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(Route, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::PathSegment>()},
  }}, {{
  }},
};

::uint8_t* Route::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Route)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_path_size()); i < n; i++) {
    const auto& repfield = this->_internal_path().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Route)
  return target;
}

::size_t Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Route)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.tasks.v2.PathSegment path = 1 [json_name = "path"];
  total_size += 1UL * this->_internal_path_size();
  for (const auto& msg : this->_internal_path()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Route::_class_data_ = {
    Route::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Route::GetClassData() const {
  return &_class_data_;
}

void Route::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Route*>(&to_msg);
  auto& from = static_cast<const Route&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Route)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path()->MergeFrom(
      from._internal_path());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Route::CopyFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Route::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Route::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Route::InternalSwap(Route* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.path_.InternalSwap(&other->_impl_.path_);
}

::google::protobuf::Metadata Route::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[3]);
}
// ===================================================================

class PathSegment::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PathSegment, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::Waypoint& waypoint(const PathSegment* msg);
  static const ::anduril::tasks::v2::Loiter& loiter(const PathSegment* msg);
};

const ::anduril::tasks::v2::Waypoint& PathSegment::_Internal::waypoint(const PathSegment* msg) {
  return *msg->_impl_.end_point_.waypoint_;
}
const ::anduril::tasks::v2::Loiter& PathSegment::_Internal::loiter(const PathSegment* msg) {
  return *msg->_impl_.end_point_.loiter_;
}
void PathSegment::set_allocated_waypoint(::anduril::tasks::v2::Waypoint* waypoint) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_end_point();
  if (waypoint) {
    ::google::protobuf::Arena* submessage_arena = waypoint->GetArena();
    if (message_arena != submessage_arena) {
      waypoint = ::google::protobuf::internal::GetOwnedMessage(message_arena, waypoint, submessage_arena);
    }
    set_has_waypoint();
    _impl_.end_point_.waypoint_ = waypoint;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.PathSegment.waypoint)
}
void PathSegment::set_allocated_loiter(::anduril::tasks::v2::Loiter* loiter) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_end_point();
  if (loiter) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(loiter)->GetArena();
    if (message_arena != submessage_arena) {
      loiter = ::google::protobuf::internal::GetOwnedMessage(message_arena, loiter, submessage_arena);
    }
    set_has_loiter();
    _impl_.end_point_.loiter_ = loiter;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.PathSegment.loiter)
}
void PathSegment::clear_loiter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (end_point_case() == kLoiter) {
    if (GetArena() == nullptr) {
      delete _impl_.end_point_.loiter_;
    }
    clear_has_end_point();
  }
}
PathSegment::PathSegment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.PathSegment)
}
inline PROTOBUF_NDEBUG_INLINE PathSegment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : end_point_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PathSegment::PathSegment(
    ::google::protobuf::Arena* arena,
    const PathSegment& from)
    : ::google::protobuf::Message(arena) {
  PathSegment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (end_point_case()) {
    case END_POINT_NOT_SET:
      break;
      case kWaypoint:
        _impl_.end_point_.waypoint_ = CreateMaybeMessage<::anduril::tasks::v2::Waypoint>(arena, *from._impl_.end_point_.waypoint_);
        break;
      case kLoiter:
        _impl_.end_point_.loiter_ = CreateMaybeMessage<::anduril::tasks::v2::Loiter>(arena, *from._impl_.end_point_.loiter_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.PathSegment)
}
inline PROTOBUF_NDEBUG_INLINE PathSegment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : end_point_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PathSegment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PathSegment::~PathSegment() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.PathSegment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PathSegment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_end_point()) {
    clear_end_point();
  }
  _impl_.~Impl_();
}

void PathSegment::clear_end_point() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.PathSegment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (end_point_case()) {
    case kWaypoint: {
      if (GetArena() == nullptr) {
        delete _impl_.end_point_.waypoint_;
      }
      break;
    }
    case kLoiter: {
      if (GetArena() == nullptr) {
        delete _impl_.end_point_.loiter_;
      }
      break;
    }
    case END_POINT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = END_POINT_NOT_SET;
}


PROTOBUF_NOINLINE void PathSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.PathSegment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_end_point();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PathSegment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> PathSegment::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PathSegment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Waypoint waypoint = 1 [json_name = "waypoint"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.end_point_.waypoint_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.Loiter loiter = 2 [json_name = "loiter"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.end_point_.loiter_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Waypoint>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Loiter>()},
  }}, {{
  }},
};

::uint8_t* PathSegment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.PathSegment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (end_point_case()) {
    case kWaypoint: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::waypoint(this),
          _Internal::waypoint(this).GetCachedSize(), target, stream);
      break;
    }
    case kLoiter: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::loiter(this),
          _Internal::loiter(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.PathSegment)
  return target;
}

::size_t PathSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.PathSegment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (end_point_case()) {
    // .anduril.tasks.v2.Waypoint waypoint = 1 [json_name = "waypoint"];
    case kWaypoint: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.end_point_.waypoint_);
      break;
    }
    // .anduril.tasks.v2.Loiter loiter = 2 [json_name = "loiter"];
    case kLoiter: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.end_point_.loiter_);
      break;
    }
    case END_POINT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PathSegment::_class_data_ = {
    PathSegment::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PathSegment::GetClassData() const {
  return &_class_data_;
}

void PathSegment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PathSegment*>(&to_msg);
  auto& from = static_cast<const PathSegment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.PathSegment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.end_point_case()) {
    case kWaypoint: {
      _this->_internal_mutable_waypoint()->::anduril::tasks::v2::Waypoint::MergeFrom(
          from._internal_waypoint());
      break;
    }
    case kLoiter: {
      _this->_internal_mutable_loiter()->::anduril::tasks::v2::Loiter::MergeFrom(
          from._internal_loiter());
      break;
    }
    case END_POINT_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathSegment::CopyFrom(const PathSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.PathSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PathSegment::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PathSegment::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PathSegment::InternalSwap(PathSegment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.end_point_, other->_impl_.end_point_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PathSegment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[4]);
}
// ===================================================================

class Waypoint::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Waypoint, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::Point& lla_point(const Waypoint* msg);
};

const ::anduril::tasks::v2::Point& Waypoint::_Internal::lla_point(const Waypoint* msg) {
  return *msg->_impl_.point_.lla_point_;
}
void Waypoint::set_allocated_lla_point(::anduril::tasks::v2::Point* lla_point) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point();
  if (lla_point) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(lla_point)->GetArena();
    if (message_arena != submessage_arena) {
      lla_point = ::google::protobuf::internal::GetOwnedMessage(message_arena, lla_point, submessage_arena);
    }
    set_has_lla_point();
    _impl_.point_.lla_point_ = lla_point;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.Waypoint.lla_point)
}
void Waypoint::clear_lla_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (point_case() == kLlaPoint) {
    if (GetArena() == nullptr) {
      delete _impl_.point_.lla_point_;
    }
    clear_has_point();
  }
}
Waypoint::Waypoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Waypoint)
}
inline PROTOBUF_NDEBUG_INLINE Waypoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : point_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Waypoint::Waypoint(
    ::google::protobuf::Arena* arena,
    const Waypoint& from)
    : ::google::protobuf::Message(arena) {
  Waypoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (point_case()) {
    case POINT_NOT_SET:
      break;
      case kLlaPoint:
        _impl_.point_.lla_point_ = CreateMaybeMessage<::anduril::tasks::v2::Point>(arena, *from._impl_.point_.lla_point_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Waypoint)
}
inline PROTOBUF_NDEBUG_INLINE Waypoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : point_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Waypoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Waypoint::~Waypoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Waypoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Waypoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_point()) {
    clear_point();
  }
  _impl_.~Impl_();
}

void Waypoint::clear_point() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.Waypoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (point_case()) {
    case kLlaPoint: {
      if (GetArena() == nullptr) {
        delete _impl_.point_.lla_point_;
      }
      break;
    }
    case POINT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = POINT_NOT_SET;
}


PROTOBUF_NOINLINE void Waypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Waypoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_point();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Waypoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Waypoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Waypoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Point lla_point = 1 [json_name = "llaPoint"];
    {PROTOBUF_FIELD_OFFSET(Waypoint, _impl_.point_.lla_point_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Point>()},
  }}, {{
  }},
};

::uint8_t* Waypoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Waypoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.tasks.v2.Point lla_point = 1 [json_name = "llaPoint"];
  if (point_case() == kLlaPoint) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::lla_point(this),
        _Internal::lla_point(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Waypoint)
  return target;
}

::size_t Waypoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Waypoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (point_case()) {
    // .anduril.tasks.v2.Point lla_point = 1 [json_name = "llaPoint"];
    case kLlaPoint: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.point_.lla_point_);
      break;
    }
    case POINT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Waypoint::_class_data_ = {
    Waypoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Waypoint::GetClassData() const {
  return &_class_data_;
}

void Waypoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Waypoint*>(&to_msg);
  auto& from = static_cast<const Waypoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Waypoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.point_case()) {
    case kLlaPoint: {
      _this->_internal_mutable_lla_point()->::anduril::tasks::v2::Point::MergeFrom(
          from._internal_lla_point());
      break;
    }
    case POINT_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Waypoint::CopyFrom(const Waypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Waypoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Waypoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Waypoint::InternalSwap(Waypoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.point_, other->_impl_.point_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Waypoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[5]);
}
// ===================================================================

class SetLaunchRoute::_Internal {
 public:
  using HasBits = decltype(std::declval<SetLaunchRoute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_._has_bits_);
  static const ::anduril::tasks::v2::RoutePlan& plan(const SetLaunchRoute* msg);
  static void set_has_plan(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::RoutePlan& SetLaunchRoute::_Internal::plan(const SetLaunchRoute* msg) {
  return *msg->_impl_.plan_;
}
SetLaunchRoute::SetLaunchRoute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.SetLaunchRoute)
}
inline PROTOBUF_NDEBUG_INLINE SetLaunchRoute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLaunchRoute::SetLaunchRoute(
    ::google::protobuf::Arena* arena,
    const SetLaunchRoute& from)
    : ::google::protobuf::Message(arena) {
  SetLaunchRoute* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.plan_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::RoutePlan>(arena, *from._impl_.plan_)
                : nullptr;
  _impl_.tracking_mode_ = from._impl_.tracking_mode_;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.SetLaunchRoute)
}
inline PROTOBUF_NDEBUG_INLINE SetLaunchRoute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLaunchRoute::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plan_),
           0,
           offsetof(Impl_, tracking_mode_) -
               offsetof(Impl_, plan_) +
               sizeof(Impl_::tracking_mode_));
}
SetLaunchRoute::~SetLaunchRoute() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.SetLaunchRoute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLaunchRoute::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.plan_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetLaunchRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.SetLaunchRoute)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.plan_ != nullptr);
    _impl_.plan_->Clear();
  }
  _impl_.tracking_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLaunchRoute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SetLaunchRoute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetLaunchRoute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetLaunchRoute, _impl_.tracking_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.tracking_mode_)}},
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.plan_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
    {PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
    {PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.tracking_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::RoutePlan>()},
  }}, {{
  }},
};

::uint8_t* SetLaunchRoute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.SetLaunchRoute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::plan(this),
        _Internal::plan(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
  if (this->_internal_tracking_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_tracking_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.SetLaunchRoute)
  return target;
}

::size_t SetLaunchRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.SetLaunchRoute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.tasks.v2.RoutePlan plan = 1 [json_name = "plan"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.plan_);
  }

  // .anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2 [json_name = "trackingMode"];
  if (this->_internal_tracking_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_tracking_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLaunchRoute::_class_data_ = {
    SetLaunchRoute::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetLaunchRoute::GetClassData() const {
  return &_class_data_;
}

void SetLaunchRoute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLaunchRoute*>(&to_msg);
  auto& from = static_cast<const SetLaunchRoute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.SetLaunchRoute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_plan()->::anduril::tasks::v2::RoutePlan::MergeFrom(
        from._internal_plan());
  }
  if (from._internal_tracking_mode() != 0) {
    _this->_internal_set_tracking_mode(from._internal_tracking_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLaunchRoute::CopyFrom(const SetLaunchRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.SetLaunchRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLaunchRoute::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetLaunchRoute::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetLaunchRoute::InternalSwap(SetLaunchRoute* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.tracking_mode_)
      + sizeof(SetLaunchRoute::_impl_.tracking_mode_)
      - PROTOBUF_FIELD_OFFSET(SetLaunchRoute, _impl_.plan_)>(
          reinterpret_cast<char*>(&_impl_.plan_),
          reinterpret_cast<char*>(&other->_impl_.plan_));
}

::google::protobuf::Metadata SetLaunchRoute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fmaneuver_2epub_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
