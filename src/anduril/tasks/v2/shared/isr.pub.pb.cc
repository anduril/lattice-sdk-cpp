// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/tasks/v2/shared/isr.pub.proto

#include "anduril/tasks/v2/shared/isr.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace tasks {
namespace v2 {

inline constexpr AzimuthElevationPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : azimuth_{0},
        elevation_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AzimuthElevationPoint::AzimuthElevationPoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AzimuthElevationPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AzimuthElevationPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AzimuthElevationPointDefaultTypeInternal() {}
  union {
    AzimuthElevationPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AzimuthElevationPointDefaultTypeInternal _AzimuthElevationPoint_default_instance_;

inline constexpr ISRParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_{nullptr},
        speed_m_s_{nullptr},
        standoff_distance_m_{nullptr},
        standoff_distance_{nullptr},
        standoff_angle_{nullptr},
        expiration_time_ms_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ISRParameters::ISRParameters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ISRParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ISRParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ISRParametersDefaultTypeInternal() {}
  union {
    ISRParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ISRParametersDefaultTypeInternal _ISRParameters_default_instance_;

inline constexpr GimbalZoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalZoom::GimbalZoom(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GimbalZoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalZoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalZoomDefaultTypeInternal() {}
  union {
    GimbalZoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalZoomDefaultTypeInternal _GimbalZoom_default_instance_;

inline constexpr FramePoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr},
        x_{0},
        y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FramePoint::FramePoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FramePointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FramePointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FramePointDefaultTypeInternal() {}
  union {
    FramePoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FramePointDefaultTypeInternal _FramePoint_default_instance_;

inline constexpr Prior::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : prior_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Prior::Prior(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PriorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PriorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PriorDefaultTypeInternal() {}
  union {
    Prior _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PriorDefaultTypeInternal _Prior_default_instance_;

inline constexpr OrbitDuration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : duration_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR OrbitDuration::OrbitDuration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrbitDurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrbitDurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrbitDurationDefaultTypeInternal() {}
  union {
    OrbitDuration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrbitDurationDefaultTypeInternal _OrbitDuration_default_instance_;

inline constexpr VolumeSearch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        priors_{},
        participants_{},
        control_areas_{},
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeSearch::VolumeSearch(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VolumeSearchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeSearchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeSearchDefaultTypeInternal() {}
  union {
    VolumeSearch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeSearchDefaultTypeInternal _VolumeSearch_default_instance_;

inline constexpr VisualId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VisualId::VisualId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisualIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisualIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisualIdDefaultTypeInternal() {}
  union {
    VisualId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisualIdDefaultTypeInternal _VisualId_default_instance_;

inline constexpr Shadow::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Shadow::Shadow(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShadowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShadowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShadowDefaultTypeInternal() {}
  union {
    Shadow _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShadowDefaultTypeInternal _Shadow_default_instance_;

inline constexpr Scan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Scan::Scan(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanDefaultTypeInternal() {}
  union {
    Scan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanDefaultTypeInternal _Scan_default_instance_;

inline constexpr OrbitType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        duration_{nullptr},
        direction_{static_cast< ::anduril::tasks::v2::OrbitDirection >(0)},
        pattern_{static_cast< ::anduril::tasks::v2::OrbitPattern >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrbitType::OrbitType(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrbitTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrbitTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrbitTypeDefaultTypeInternal() {}
  union {
    OrbitType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrbitTypeDefaultTypeInternal _OrbitType_default_instance_;

inline constexpr Monitor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        track_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        track_producer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Monitor::Monitor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MonitorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitorDefaultTypeInternal() {}
  union {
    Monitor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitorDefaultTypeInternal _Monitor_default_instance_;

inline constexpr Map::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr},
        min_niirs_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Map::Map(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapDefaultTypeInternal() {}
  union {
    Map _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapDefaultTypeInternal _Map_default_instance_;

inline constexpr Investigate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Investigate::Investigate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InvestigateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvestigateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvestigateDefaultTypeInternal() {}
  union {
    Investigate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvestigateDefaultTypeInternal _Investigate_default_instance_;

inline constexpr ImproveTrackQuality::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        termination_track_quality_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ImproveTrackQuality::ImproveTrackQuality(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ImproveTrackQualityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImproveTrackQualityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImproveTrackQualityDefaultTypeInternal() {}
  union {
    ImproveTrackQuality _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImproveTrackQualityDefaultTypeInternal _ImproveTrackQuality_default_instance_;

inline constexpr GimbalPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{nullptr},
        point_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalPoint::GimbalPoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GimbalPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalPointDefaultTypeInternal() {}
  union {
    GimbalPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalPointDefaultTypeInternal _GimbalPoint_default_instance_;

inline constexpr BattleDamageAssessment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BattleDamageAssessment::BattleDamageAssessment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BattleDamageAssessmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BattleDamageAssessmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BattleDamageAssessmentDefaultTypeInternal() {}
  union {
    BattleDamageAssessment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BattleDamageAssessmentDefaultTypeInternal _BattleDamageAssessment_default_instance_;

inline constexpr AreaSearch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        priors_{},
        participants_{},
        control_areas_{},
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AreaSearch::AreaSearch(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AreaSearchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaSearchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaSearchDefaultTypeInternal() {}
  union {
    AreaSearch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaSearchDefaultTypeInternal _AreaSearch_default_instance_;

inline constexpr LoiterType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loiter_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR LoiterType::LoiterType(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoiterTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoiterTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoiterTypeDefaultTypeInternal() {}
  union {
    LoiterType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoiterTypeDefaultTypeInternal _LoiterType_default_instance_;

inline constexpr Loiter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        loiter_type_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Loiter::Loiter(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoiterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoiterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoiterDefaultTypeInternal() {}
  union {
    Loiter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoiterDefaultTypeInternal _Loiter_default_instance_;
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[20];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _impl_.parameters_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _impl_.parameters_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_.min_niirs_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_.loiter_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_.parameters_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.priors_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.participants_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.control_areas_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.priors_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.participants_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.control_areas_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _impl_.termination_track_quality_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _impl_.parameters_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _impl_.loiter_type_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_.pattern_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_.duration_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _impl_.duration_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _impl_.prior_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.speed_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.speed_m_s_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.standoff_distance_m_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.standoff_distance_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.standoff_angle_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.expiration_time_ms_),
    0,
    1,
    2,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_.point_type_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AzimuthElevationPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AzimuthElevationPoint, _impl_.azimuth_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AzimuthElevationPoint, _impl_.elevation_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_.timestamp_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _impl_.track_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _impl_.track_producer_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _impl_.parameters_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _impl_.parameters_),
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::anduril::tasks::v2::Investigate)},
        {12, 22, -1, sizeof(::anduril::tasks::v2::VisualId)},
        {24, 35, -1, sizeof(::anduril::tasks::v2::Map)},
        {38, 49, -1, sizeof(::anduril::tasks::v2::Loiter)},
        {52, 64, -1, sizeof(::anduril::tasks::v2::AreaSearch)},
        {68, 80, -1, sizeof(::anduril::tasks::v2::VolumeSearch)},
        {84, 94, -1, sizeof(::anduril::tasks::v2::ImproveTrackQuality)},
        {96, 106, -1, sizeof(::anduril::tasks::v2::Shadow)},
        {108, -1, -1, sizeof(::anduril::tasks::v2::LoiterType)},
        {118, 129, -1, sizeof(::anduril::tasks::v2::OrbitType)},
        {132, -1, -1, sizeof(::anduril::tasks::v2::OrbitDuration)},
        {143, -1, -1, sizeof(::anduril::tasks::v2::Prior)},
        {154, 168, -1, sizeof(::anduril::tasks::v2::ISRParameters)},
        {174, 187, -1, sizeof(::anduril::tasks::v2::GimbalPoint)},
        {191, -1, -1, sizeof(::anduril::tasks::v2::AzimuthElevationPoint)},
        {201, 212, -1, sizeof(::anduril::tasks::v2::FramePoint)},
        {215, -1, -1, sizeof(::anduril::tasks::v2::GimbalZoom)},
        {226, 237, -1, sizeof(::anduril::tasks::v2::Monitor)},
        {240, 250, -1, sizeof(::anduril::tasks::v2::Scan)},
        {252, 262, -1, sizeof(::anduril::tasks::v2::BattleDamageAssessment)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::tasks::v2::_Investigate_default_instance_._instance,
    &::anduril::tasks::v2::_VisualId_default_instance_._instance,
    &::anduril::tasks::v2::_Map_default_instance_._instance,
    &::anduril::tasks::v2::_Loiter_default_instance_._instance,
    &::anduril::tasks::v2::_AreaSearch_default_instance_._instance,
    &::anduril::tasks::v2::_VolumeSearch_default_instance_._instance,
    &::anduril::tasks::v2::_ImproveTrackQuality_default_instance_._instance,
    &::anduril::tasks::v2::_Shadow_default_instance_._instance,
    &::anduril::tasks::v2::_LoiterType_default_instance_._instance,
    &::anduril::tasks::v2::_OrbitType_default_instance_._instance,
    &::anduril::tasks::v2::_OrbitDuration_default_instance_._instance,
    &::anduril::tasks::v2::_Prior_default_instance_._instance,
    &::anduril::tasks::v2::_ISRParameters_default_instance_._instance,
    &::anduril::tasks::v2::_GimbalPoint_default_instance_._instance,
    &::anduril::tasks::v2::_AzimuthElevationPoint_default_instance_._instance,
    &::anduril::tasks::v2::_FramePoint_default_instance_._instance,
    &::anduril::tasks::v2::_GimbalZoom_default_instance_._instance,
    &::anduril::tasks::v2::_Monitor_default_instance_._instance,
    &::anduril::tasks::v2::_Scan_default_instance_._instance,
    &::anduril::tasks::v2::_BattleDamageAssessment_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n%anduril/tasks/v2/shared/isr.pub.proto\022"
    "\020anduril.tasks.v2\032!anduril/tasks/v2/comm"
    "on.pub.proto\032$anduril/tasks/v2/objective"
    ".pub.proto\032\037google/protobuf/timestamp.pr"
    "oto\032\036google/protobuf/wrappers.proto\"\211\001\n\013"
    "Investigate\0229\n\tobjective\030\001 \001(\0132\033.anduril"
    ".tasks.v2.ObjectiveR\tobjective\022\?\n\nparame"
    "ters\030\002 \001(\0132\037.anduril.tasks.v2.ISRParamet"
    "ersR\nparameters\"\206\001\n\010VisualId\0229\n\tobjectiv"
    "e\030\001 \001(\0132\033.anduril.tasks.v2.ObjectiveR\tob"
    "jective\022\?\n\nparameters\030\002 \001(\0132\037.anduril.ta"
    "sks.v2.ISRParametersR\nparameters\"\274\001\n\003Map"
    "\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks.v2.O"
    "bjectiveR\tobjective\022\?\n\nparameters\030\002 \001(\0132"
    "\037.anduril.tasks.v2.ISRParametersR\nparame"
    "ters\0229\n\tmin_niirs\030\003 \001(\0132\034.google.protobu"
    "f.UInt32ValueR\010minNiirs\"\303\001\n\006Loiter\0229\n\tob"
    "jective\030\001 \001(\0132\033.anduril.tasks.v2.Objecti"
    "veR\tobjective\022=\n\013loiter_type\030\002 \001(\0132\034.and"
    "uril.tasks.v2.LoiterTypeR\nloiterType\022\?\n\n"
    "parameters\030\003 \001(\0132\037.anduril.tasks.v2.ISRP"
    "arametersR\nparameters\"\371\001\n\nAreaSearch\0229\n\t"
    "objective\030\001 \001(\0132\033.anduril.tasks.v2.Objec"
    "tiveR\tobjective\022/\n\006priors\030\002 \003(\0132\027.anduri"
    "l.tasks.v2.PriorR\006priors\022;\n\014participants"
    "\030\003 \003(\0132\027.anduril.tasks.v2.AgentR\014partici"
    "pants\022B\n\rcontrol_areas\030\004 \003(\0132\035.anduril.t"
    "asks.v2.ControlAreaR\014controlAreas\"\373\001\n\014Vo"
    "lumeSearch\0229\n\tobjective\030\001 \001(\0132\033.anduril."
    "tasks.v2.ObjectiveR\tobjective\022/\n\006priors\030"
    "\002 \003(\0132\027.anduril.tasks.v2.PriorR\006priors\022;"
    "\n\014participants\030\003 \003(\0132\027.anduril.tasks.v2."
    "AgentR\014participants\022B\n\rcontrol_areas\030\004 \003"
    "(\0132\035.anduril.tasks.v2.ControlAreaR\014contr"
    "olAreas\"\214\001\n\023ImproveTrackQuality\0229\n\tobjec"
    "tive\030\001 \001(\0132\033.anduril.tasks.v2.ObjectiveR"
    "\tobjective\022:\n\031termination_track_quality\030"
    "\002 \001(\rR\027terminationTrackQuality\"\204\001\n\006Shado"
    "w\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks.v2."
    "ObjectiveR\tobjective\022\?\n\nparameters\030\002 \001(\013"
    "2\037.anduril.tasks.v2.ISRParametersR\nparam"
    "eters\"Y\n\nLoiterType\022<\n\norbit_type\030\001 \001(\0132"
    "\033.anduril.tasks.v2.OrbitTypeH\000R\torbitTyp"
    "eB\r\n\013loiter_type\"\302\001\n\tOrbitType\022>\n\tdirect"
    "ion\030\001 \001(\0162 .anduril.tasks.v2.OrbitDirect"
    "ionR\tdirection\0228\n\007pattern\030\002 \001(\0162\036.anduri"
    "l.tasks.v2.OrbitPatternR\007pattern\022;\n\010dura"
    "tion\030\003 \001(\0132\037.anduril.tasks.v2.OrbitDurat"
    "ionR\010duration\"\213\001\n\rOrbitDuration\022H\n\016durat"
    "ion_range\030\001 \001(\0132\037.anduril.tasks.v2.Durat"
    "ionRangeH\000R\rdurationRange\022$\n\rnum_of_orbi"
    "ts\030\002 \001(\004H\000R\013numOfOrbitsB\n\n\010duration\"`\n\005P"
    "rior\022\035\n\tentity_id\030\001 \001(\tH\000R\010entityId\022/\n\005p"
    "oint\030\005 \001(\0132\027.anduril.tasks.v2.PointH\000R\005p"
    "ointB\007\n\005prior\"\252\003\n\rISRParameters\0225\n\005speed"
    "\030\001 \001(\0132\033.google.protobuf.FloatValueB\002\030\001R"
    "\005speed\0227\n\tspeed_m_s\030\002 \001(\0132\033.google.proto"
    "buf.FloatValueR\007speedMS\022K\n\023standoff_dist"
    "ance_m\030\003 \001(\0132\033.google.protobuf.FloatValu"
    "eR\021standoffDistanceM\022L\n\021standoff_distanc"
    "e\030\004 \001(\0132\033.google.protobuf.FloatValueB\002\030\001"
    "R\020standoffDistance\022B\n\016standoff_angle\030\005 \001"
    "(\0132\033.google.protobuf.FloatValueR\rstandof"
    "fAngle\022J\n\022expiration_time_ms\030\006 \001(\0132\034.goo"
    "gle.protobuf.UInt64ValueR\020expirationTime"
    "Ms\"\265\002\n\013GimbalPoint\0226\n\007look_at\030\001 \001(\0132\033.an"
    "duril.tasks.v2.ObjectiveH\000R\006lookAt\022X\n\022ce"
    "lestial_location\030\002 \001(\0132\'.anduril.tasks.v"
    "2.AzimuthElevationPointH\000R\021celestialLoca"
    "tion\022E\n\016frame_location\030\004 \001(\0132\034.anduril.t"
    "asks.v2.FramePointH\000R\rframeLocation\022\?\n\np"
    "arameters\030\003 \001(\0132\037.anduril.tasks.v2.ISRPa"
    "rametersR\nparametersB\014\n\npoint_type\"O\n\025Az"
    "imuthElevationPoint\022\030\n\007azimuth\030\001 \001(\001R\007az"
    "imuth\022\034\n\televation\030\002 \001(\001R\televation\"b\n\nF"
    "ramePoint\022\014\n\001x\030\001 \001(\002R\001x\022\014\n\001y\030\002 \001(\002R\001y\0228\n"
    "\ttimestamp\030\003 \001(\0132\032.google.protobuf.Times"
    "tampR\ttimestamp\"\256\001\n\nGimbalZoom\022L\n\022set_ho"
    "rizontal_fov\030\001 \001(\0132\034.google.protobuf.Dou"
    "bleValueH\000R\020setHorizontalFov\022J\n\021set_magn"
    "ification\030\002 \001(\0132\033.google.protobuf.FloatV"
    "alueH\000R\020setMagnificationB\006\n\004mode\"\206\001\n\007Mon"
    "itor\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks."
    "v2.ObjectiveR\tobjective\022\031\n\010track_id\030\002 \001("
    "\tR\007trackId\022%\n\016track_producer\030\003 \001(\tR\rtrac"
    "kProducer\"\202\001\n\004Scan\0229\n\tobjective\030\001 \001(\0132\033."
    "anduril.tasks.v2.ObjectiveR\tobjective\022\?\n"
    "\nparameters\030\002 \001(\0132\037.anduril.tasks.v2.ISR"
    "ParametersR\nparameters\"\224\001\n\026BattleDamageA"
    "ssessment\0229\n\tobjective\030\001 \001(\0132\033.anduril.t"
    "asks.v2.ObjectiveR\tobjective\022\?\n\nparamete"
    "rs\030\002 \001(\0132\037.anduril.tasks.v2.ISRParameter"
    "sR\nparameters*l\n\016OrbitDirection\022%\n!ORBIT"
    "_DIRECTION_DIRECTION_INVALID\020\000\022\031\n\025ORBIT_"
    "DIRECTION_RIGHT\020\001\022\030\n\024ORBIT_DIRECTION_LEF"
    "T\020\002*\200\001\n\014OrbitPattern\022\031\n\025ORBIT_PATTERN_IN"
    "VALID\020\000\022\030\n\024ORBIT_PATTERN_CIRCLE\020\001\022\033\n\027ORB"
    "IT_PATTERN_RACETRACK\020\002\022\036\n\032ORBIT_PATTERN_"
    "FIGURE_EIGHT\020\003B\304\001\n\024com.anduril.tasks.v2B"
    "\013IsrPubProtoP\001Z=ghe.anduril.dev/anduril/"
    "andurilapis-go/anduril/tasks/v2;tasks\242\002\003"
    "ATX\252\002\020Anduril.Tasks.V2\312\002\020Anduril\\Tasks\\V"
    "2\342\002\034Anduril\\Tasks\\V2\\GPBMetadata\352\002\022Andur"
    "il::Tasks::V2b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_deps[4] =
    {
        &::descriptor_table_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto,
        &::descriptor_table_anduril_2ftasks_2fv2_2fobjective_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto = {
    false,
    false,
    4141,
    descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    "anduril/tasks/v2/shared/isr.pub.proto",
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
    descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_deps,
    4,
    20,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto::offsets,
    file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto);
namespace anduril {
namespace tasks {
namespace v2 {
const ::google::protobuf::EnumDescriptor* OrbitDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t OrbitDirection_internal_data_[] = {
    196608u, 0u, };
bool OrbitDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* OrbitPattern_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t OrbitPattern_internal_data_[] = {
    262144u, 0u, };
bool OrbitPattern_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class Investigate::_Internal {
 public:
  using HasBits = decltype(std::declval<Investigate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Investigate, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Investigate* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::ISRParameters& parameters(const Investigate* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::tasks::v2::Objective& Investigate::_Internal::objective(const Investigate* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::ISRParameters& Investigate::_Internal::parameters(const Investigate* msg) {
  return *msg->_impl_.parameters_;
}
void Investigate::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Investigate::Investigate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Investigate)
}
inline PROTOBUF_NDEBUG_INLINE Investigate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Investigate::Investigate(
    ::google::protobuf::Arena* arena,
    const Investigate& from)
    : ::google::protobuf::Message(arena) {
  Investigate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Investigate)
}
inline PROTOBUF_NDEBUG_INLINE Investigate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Investigate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Investigate::~Investigate() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Investigate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Investigate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Investigate::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Investigate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Investigate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Investigate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Investigate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Investigate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Investigate, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Investigate, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Investigate, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Investigate, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

::uint8_t* Investigate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Investigate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Investigate)
  return target;
}

::size_t Investigate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Investigate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Investigate::_class_data_ = {
    Investigate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Investigate::GetClassData() const {
  return &_class_data_;
}

void Investigate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Investigate*>(&to_msg);
  auto& from = static_cast<const Investigate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Investigate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Investigate::CopyFrom(const Investigate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Investigate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Investigate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Investigate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Investigate::InternalSwap(Investigate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Investigate, _impl_.parameters_)
      + sizeof(Investigate::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Investigate, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Investigate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[0]);
}
// ===================================================================

class VisualId::_Internal {
 public:
  using HasBits = decltype(std::declval<VisualId>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VisualId, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const VisualId* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::ISRParameters& parameters(const VisualId* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::tasks::v2::Objective& VisualId::_Internal::objective(const VisualId* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::ISRParameters& VisualId::_Internal::parameters(const VisualId* msg) {
  return *msg->_impl_.parameters_;
}
void VisualId::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VisualId::VisualId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.VisualId)
}
inline PROTOBUF_NDEBUG_INLINE VisualId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VisualId::VisualId(
    ::google::protobuf::Arena* arena,
    const VisualId& from)
    : ::google::protobuf::Message(arena) {
  VisualId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.VisualId)
}
inline PROTOBUF_NDEBUG_INLINE VisualId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VisualId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
VisualId::~VisualId() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.VisualId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisualId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VisualId::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.VisualId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisualId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VisualId::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VisualId, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VisualId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VisualId, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VisualId, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(VisualId, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(VisualId, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

::uint8_t* VisualId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.VisualId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.VisualId)
  return target;
}

::size_t VisualId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.VisualId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisualId::_class_data_ = {
    VisualId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VisualId::GetClassData() const {
  return &_class_data_;
}

void VisualId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisualId*>(&to_msg);
  auto& from = static_cast<const VisualId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.VisualId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisualId::CopyFrom(const VisualId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.VisualId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisualId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VisualId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VisualId::InternalSwap(VisualId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisualId, _impl_.parameters_)
      + sizeof(VisualId::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(VisualId, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata VisualId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[1]);
}
// ===================================================================

class Map::_Internal {
 public:
  using HasBits = decltype(std::declval<Map>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Map, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Map* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::ISRParameters& parameters(const Map* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::UInt32Value& min_niirs(const Map* msg);
  static void set_has_min_niirs(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::tasks::v2::Objective& Map::_Internal::objective(const Map* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::ISRParameters& Map::_Internal::parameters(const Map* msg) {
  return *msg->_impl_.parameters_;
}
const ::google::protobuf::UInt32Value& Map::_Internal::min_niirs(const Map* msg) {
  return *msg->_impl_.min_niirs_;
}
void Map::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Map::clear_min_niirs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.min_niirs_ != nullptr) _impl_.min_niirs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Map::Map(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Map)
}
inline PROTOBUF_NDEBUG_INLINE Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Map::Map(
    ::google::protobuf::Arena* arena,
    const Map& from)
    : ::google::protobuf::Message(arena) {
  Map* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;
  _impl_.min_niirs_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::UInt32Value>(arena, *from._impl_.min_niirs_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Map)
}
inline PROTOBUF_NDEBUG_INLINE Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Map::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, min_niirs_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::min_niirs_));
}
Map::~Map() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Map)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Map::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.parameters_;
  delete _impl_.min_niirs_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Map::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Map)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.min_niirs_ != nullptr);
      _impl_.min_niirs_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Map::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Map::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Map, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Map_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Map, _impl_.objective_)}},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Map, _impl_.parameters_)}},
    // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Map, _impl_.min_niirs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.min_niirs_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::UInt32Value>()},
  }}, {{
  }},
};

::uint8_t* Map::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Map)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::min_niirs(this),
        _Internal::min_niirs(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Map)
  return target;
}

::size_t Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Map)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

    // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.min_niirs_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Map::_class_data_ = {
    Map::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Map::GetClassData() const {
  return &_class_data_;
}

void Map::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Map*>(&to_msg);
  auto& from = static_cast<const Map&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Map)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
          from._internal_parameters());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_min_niirs()->::google::protobuf::UInt32Value::MergeFrom(
          from._internal_min_niirs());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Map::CopyFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Map::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Map::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Map::InternalSwap(Map* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Map, _impl_.min_niirs_)
      + sizeof(Map::_impl_.min_niirs_)
      - PROTOBUF_FIELD_OFFSET(Map, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Map::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[2]);
}
// ===================================================================

class Loiter::_Internal {
 public:
  using HasBits = decltype(std::declval<Loiter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Loiter, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Loiter* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::LoiterType& loiter_type(const Loiter* msg);
  static void set_has_loiter_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::tasks::v2::ISRParameters& parameters(const Loiter* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::anduril::tasks::v2::Objective& Loiter::_Internal::objective(const Loiter* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::LoiterType& Loiter::_Internal::loiter_type(const Loiter* msg) {
  return *msg->_impl_.loiter_type_;
}
const ::anduril::tasks::v2::ISRParameters& Loiter::_Internal::parameters(const Loiter* msg) {
  return *msg->_impl_.parameters_;
}
void Loiter::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Loiter::Loiter(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Loiter)
}
inline PROTOBUF_NDEBUG_INLINE Loiter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Loiter::Loiter(
    ::google::protobuf::Arena* arena,
    const Loiter& from)
    : ::google::protobuf::Message(arena) {
  Loiter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.loiter_type_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::LoiterType>(arena, *from._impl_.loiter_type_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Loiter)
}
inline PROTOBUF_NDEBUG_INLINE Loiter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Loiter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Loiter::~Loiter() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Loiter)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Loiter::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.loiter_type_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Loiter::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Loiter)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.loiter_type_ != nullptr);
      _impl_.loiter_type_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Loiter::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Loiter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Loiter, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Loiter_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Loiter, _impl_.objective_)}},
    // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Loiter, _impl_.loiter_type_)}},
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Loiter, _impl_.parameters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Loiter, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
    {PROTOBUF_FIELD_OFFSET(Loiter, _impl_.loiter_type_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Loiter, _impl_.parameters_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::LoiterType>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

::uint8_t* Loiter::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Loiter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::loiter_type(this),
        _Internal::loiter_type(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Loiter)
  return target;
}

::size_t Loiter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Loiter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.loiter_type_);
    }

    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Loiter::_class_data_ = {
    Loiter::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Loiter::GetClassData() const {
  return &_class_data_;
}

void Loiter::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Loiter*>(&to_msg);
  auto& from = static_cast<const Loiter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Loiter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_loiter_type()->::anduril::tasks::v2::LoiterType::MergeFrom(
          from._internal_loiter_type());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Loiter::CopyFrom(const Loiter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Loiter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Loiter::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Loiter::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Loiter::InternalSwap(Loiter* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Loiter, _impl_.parameters_)
      + sizeof(Loiter::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Loiter, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Loiter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[3]);
}
// ===================================================================

class AreaSearch::_Internal {
 public:
  using HasBits = decltype(std::declval<AreaSearch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const AreaSearch* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::Objective& AreaSearch::_Internal::objective(const AreaSearch* msg) {
  return *msg->_impl_.objective_;
}
void AreaSearch::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AreaSearch::clear_participants() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.participants_.Clear();
}
void AreaSearch::clear_control_areas() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.control_areas_.Clear();
}
AreaSearch::AreaSearch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.AreaSearch)
}
inline PROTOBUF_NDEBUG_INLINE AreaSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        priors_{visibility, arena, from.priors_},
        participants_{visibility, arena, from.participants_},
        control_areas_{visibility, arena, from.control_areas_} {}

AreaSearch::AreaSearch(
    ::google::protobuf::Arena* arena,
    const AreaSearch& from)
    : ::google::protobuf::Message(arena) {
  AreaSearch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.AreaSearch)
}
inline PROTOBUF_NDEBUG_INLINE AreaSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        priors_{visibility, arena},
        participants_{visibility, arena},
        control_areas_{visibility, arena} {}

inline void AreaSearch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
AreaSearch::~AreaSearch() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.AreaSearch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AreaSearch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AreaSearch::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.AreaSearch)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.priors_.Clear();
  _impl_.participants_.Clear();
  _impl_.control_areas_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AreaSearch::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> AreaSearch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AreaSearch_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.control_areas_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.objective_)}},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.priors_)}},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.participants_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.priors_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.participants_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.control_areas_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Prior>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Agent>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ControlArea>()},
  }}, {{
  }},
};

::uint8_t* AreaSearch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.AreaSearch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_priors_size()); i < n; i++) {
    const auto& repfield = this->_internal_priors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_participants_size()); i < n; i++) {
    const auto& repfield = this->_internal_participants().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_control_areas_size()); i < n; i++) {
    const auto& repfield = this->_internal_control_areas().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.AreaSearch)
  return target;
}

::size_t AreaSearch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.AreaSearch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
  total_size += 1UL * this->_internal_priors_size();
  for (const auto& msg : this->_internal_priors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
  total_size += 1UL * this->_internal_participants_size();
  for (const auto& msg : this->_internal_participants()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
  total_size += 1UL * this->_internal_control_areas_size();
  for (const auto& msg : this->_internal_control_areas()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AreaSearch::_class_data_ = {
    AreaSearch::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AreaSearch::GetClassData() const {
  return &_class_data_;
}

void AreaSearch::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AreaSearch*>(&to_msg);
  auto& from = static_cast<const AreaSearch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.AreaSearch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_priors()->MergeFrom(
      from._internal_priors());
  _this->_internal_mutable_participants()->MergeFrom(
      from._internal_participants());
  _this->_internal_mutable_control_areas()->MergeFrom(
      from._internal_control_areas());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
        from._internal_objective());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreaSearch::CopyFrom(const AreaSearch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.AreaSearch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AreaSearch::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AreaSearch::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AreaSearch::InternalSwap(AreaSearch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.priors_.InternalSwap(&other->_impl_.priors_);
  _impl_.participants_.InternalSwap(&other->_impl_.participants_);
  _impl_.control_areas_.InternalSwap(&other->_impl_.control_areas_);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata AreaSearch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[4]);
}
// ===================================================================

class VolumeSearch::_Internal {
 public:
  using HasBits = decltype(std::declval<VolumeSearch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const VolumeSearch* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::Objective& VolumeSearch::_Internal::objective(const VolumeSearch* msg) {
  return *msg->_impl_.objective_;
}
void VolumeSearch::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VolumeSearch::clear_participants() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.participants_.Clear();
}
void VolumeSearch::clear_control_areas() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.control_areas_.Clear();
}
VolumeSearch::VolumeSearch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.VolumeSearch)
}
inline PROTOBUF_NDEBUG_INLINE VolumeSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        priors_{visibility, arena, from.priors_},
        participants_{visibility, arena, from.participants_},
        control_areas_{visibility, arena, from.control_areas_} {}

VolumeSearch::VolumeSearch(
    ::google::protobuf::Arena* arena,
    const VolumeSearch& from)
    : ::google::protobuf::Message(arena) {
  VolumeSearch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.VolumeSearch)
}
inline PROTOBUF_NDEBUG_INLINE VolumeSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        priors_{visibility, arena},
        participants_{visibility, arena},
        control_areas_{visibility, arena} {}

inline void VolumeSearch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
VolumeSearch::~VolumeSearch() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.VolumeSearch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VolumeSearch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VolumeSearch::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.VolumeSearch)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.priors_.Clear();
  _impl_.participants_.Clear();
  _impl_.control_areas_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VolumeSearch::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> VolumeSearch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VolumeSearch_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.control_areas_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.objective_)}},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.priors_)}},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.participants_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.priors_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.participants_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.control_areas_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Prior>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Agent>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ControlArea>()},
  }}, {{
  }},
};

::uint8_t* VolumeSearch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.VolumeSearch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_priors_size()); i < n; i++) {
    const auto& repfield = this->_internal_priors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_participants_size()); i < n; i++) {
    const auto& repfield = this->_internal_participants().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_control_areas_size()); i < n; i++) {
    const auto& repfield = this->_internal_control_areas().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.VolumeSearch)
  return target;
}

::size_t VolumeSearch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.VolumeSearch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
  total_size += 1UL * this->_internal_priors_size();
  for (const auto& msg : this->_internal_priors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
  total_size += 1UL * this->_internal_participants_size();
  for (const auto& msg : this->_internal_participants()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
  total_size += 1UL * this->_internal_control_areas_size();
  for (const auto& msg : this->_internal_control_areas()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VolumeSearch::_class_data_ = {
    VolumeSearch::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VolumeSearch::GetClassData() const {
  return &_class_data_;
}

void VolumeSearch::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VolumeSearch*>(&to_msg);
  auto& from = static_cast<const VolumeSearch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.VolumeSearch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_priors()->MergeFrom(
      from._internal_priors());
  _this->_internal_mutable_participants()->MergeFrom(
      from._internal_participants());
  _this->_internal_mutable_control_areas()->MergeFrom(
      from._internal_control_areas());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
        from._internal_objective());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeSearch::CopyFrom(const VolumeSearch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.VolumeSearch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VolumeSearch::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VolumeSearch::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VolumeSearch::InternalSwap(VolumeSearch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.priors_.InternalSwap(&other->_impl_.priors_);
  _impl_.participants_.InternalSwap(&other->_impl_.participants_);
  _impl_.control_areas_.InternalSwap(&other->_impl_.control_areas_);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata VolumeSearch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[5]);
}
// ===================================================================

class ImproveTrackQuality::_Internal {
 public:
  using HasBits = decltype(std::declval<ImproveTrackQuality>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const ImproveTrackQuality* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::Objective& ImproveTrackQuality::_Internal::objective(const ImproveTrackQuality* msg) {
  return *msg->_impl_.objective_;
}
void ImproveTrackQuality::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ImproveTrackQuality::ImproveTrackQuality(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.ImproveTrackQuality)
}
inline PROTOBUF_NDEBUG_INLINE ImproveTrackQuality::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ImproveTrackQuality::ImproveTrackQuality(
    ::google::protobuf::Arena* arena,
    const ImproveTrackQuality& from)
    : ::google::protobuf::Message(arena) {
  ImproveTrackQuality* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.termination_track_quality_ = from._impl_.termination_track_quality_;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.ImproveTrackQuality)
}
inline PROTOBUF_NDEBUG_INLINE ImproveTrackQuality::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ImproveTrackQuality::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, termination_track_quality_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::termination_track_quality_));
}
ImproveTrackQuality::~ImproveTrackQuality() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.ImproveTrackQuality)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ImproveTrackQuality::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ImproveTrackQuality::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.ImproveTrackQuality)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_.termination_track_quality_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ImproveTrackQuality::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ImproveTrackQuality::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ImproveTrackQuality_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImproveTrackQuality, _impl_.termination_track_quality_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.termination_track_quality_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
    {PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.termination_track_quality_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
  }}, {{
  }},
};

::uint8_t* ImproveTrackQuality::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.ImproveTrackQuality)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
  if (this->_internal_termination_track_quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_termination_track_quality(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.ImproveTrackQuality)
  return target;
}

::size_t ImproveTrackQuality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.ImproveTrackQuality)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
  }

  // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
  if (this->_internal_termination_track_quality() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_termination_track_quality());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ImproveTrackQuality::_class_data_ = {
    ImproveTrackQuality::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ImproveTrackQuality::GetClassData() const {
  return &_class_data_;
}

void ImproveTrackQuality::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ImproveTrackQuality*>(&to_msg);
  auto& from = static_cast<const ImproveTrackQuality&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.ImproveTrackQuality)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
        from._internal_objective());
  }
  if (from._internal_termination_track_quality() != 0) {
    _this->_internal_set_termination_track_quality(from._internal_termination_track_quality());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImproveTrackQuality::CopyFrom(const ImproveTrackQuality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.ImproveTrackQuality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ImproveTrackQuality::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ImproveTrackQuality::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ImproveTrackQuality::InternalSwap(ImproveTrackQuality* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.termination_track_quality_)
      + sizeof(ImproveTrackQuality::_impl_.termination_track_quality_)
      - PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata ImproveTrackQuality::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[6]);
}
// ===================================================================

class Shadow::_Internal {
 public:
  using HasBits = decltype(std::declval<Shadow>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Shadow, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Shadow* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::ISRParameters& parameters(const Shadow* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::tasks::v2::Objective& Shadow::_Internal::objective(const Shadow* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::ISRParameters& Shadow::_Internal::parameters(const Shadow* msg) {
  return *msg->_impl_.parameters_;
}
void Shadow::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Shadow::Shadow(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Shadow)
}
inline PROTOBUF_NDEBUG_INLINE Shadow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Shadow::Shadow(
    ::google::protobuf::Arena* arena,
    const Shadow& from)
    : ::google::protobuf::Message(arena) {
  Shadow* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Shadow)
}
inline PROTOBUF_NDEBUG_INLINE Shadow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Shadow::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Shadow::~Shadow() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Shadow)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Shadow::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Shadow::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Shadow)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Shadow::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Shadow::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Shadow, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Shadow_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Shadow, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Shadow, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Shadow, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Shadow, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

::uint8_t* Shadow::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Shadow)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Shadow)
  return target;
}

::size_t Shadow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Shadow)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Shadow::_class_data_ = {
    Shadow::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Shadow::GetClassData() const {
  return &_class_data_;
}

void Shadow::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Shadow*>(&to_msg);
  auto& from = static_cast<const Shadow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Shadow)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Shadow::CopyFrom(const Shadow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Shadow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Shadow::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Shadow::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Shadow::InternalSwap(Shadow* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Shadow, _impl_.parameters_)
      + sizeof(Shadow::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Shadow, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Shadow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[7]);
}
// ===================================================================

class LoiterType::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::OrbitType& orbit_type(const LoiterType* msg);
};

const ::anduril::tasks::v2::OrbitType& LoiterType::_Internal::orbit_type(const LoiterType* msg) {
  return *msg->_impl_.loiter_type_.orbit_type_;
}
void LoiterType::set_allocated_orbit_type(::anduril::tasks::v2::OrbitType* orbit_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_loiter_type();
  if (orbit_type) {
    ::google::protobuf::Arena* submessage_arena = orbit_type->GetArena();
    if (message_arena != submessage_arena) {
      orbit_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, orbit_type, submessage_arena);
    }
    set_has_orbit_type();
    _impl_.loiter_type_.orbit_type_ = orbit_type;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.LoiterType.orbit_type)
}
LoiterType::LoiterType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.LoiterType)
}
inline PROTOBUF_NDEBUG_INLINE LoiterType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : loiter_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

LoiterType::LoiterType(
    ::google::protobuf::Arena* arena,
    const LoiterType& from)
    : ::google::protobuf::Message(arena) {
  LoiterType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (loiter_type_case()) {
    case LOITER_TYPE_NOT_SET:
      break;
      case kOrbitType:
        _impl_.loiter_type_.orbit_type_ = CreateMaybeMessage<::anduril::tasks::v2::OrbitType>(arena, *from._impl_.loiter_type_.orbit_type_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.LoiterType)
}
inline PROTOBUF_NDEBUG_INLINE LoiterType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loiter_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void LoiterType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoiterType::~LoiterType() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.LoiterType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoiterType::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_loiter_type()) {
    clear_loiter_type();
  }
  _impl_.~Impl_();
}

void LoiterType::clear_loiter_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.LoiterType)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (loiter_type_case()) {
    case kOrbitType: {
      if (GetArena() == nullptr) {
        delete _impl_.loiter_type_.orbit_type_;
      }
      break;
    }
    case LOITER_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = LOITER_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void LoiterType::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.LoiterType)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_loiter_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoiterType::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LoiterType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LoiterType_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.OrbitType orbit_type = 1 [json_name = "orbitType"];
    {PROTOBUF_FIELD_OFFSET(LoiterType, _impl_.loiter_type_.orbit_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::OrbitType>()},
  }}, {{
  }},
};

::uint8_t* LoiterType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.LoiterType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.tasks.v2.OrbitType orbit_type = 1 [json_name = "orbitType"];
  if (loiter_type_case() == kOrbitType) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::orbit_type(this),
        _Internal::orbit_type(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.LoiterType)
  return target;
}

::size_t LoiterType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.LoiterType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (loiter_type_case()) {
    // .anduril.tasks.v2.OrbitType orbit_type = 1 [json_name = "orbitType"];
    case kOrbitType: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.loiter_type_.orbit_type_);
      break;
    }
    case LOITER_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoiterType::_class_data_ = {
    LoiterType::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoiterType::GetClassData() const {
  return &_class_data_;
}

void LoiterType::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoiterType*>(&to_msg);
  auto& from = static_cast<const LoiterType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.LoiterType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.loiter_type_case()) {
    case kOrbitType: {
      _this->_internal_mutable_orbit_type()->::anduril::tasks::v2::OrbitType::MergeFrom(
          from._internal_orbit_type());
      break;
    }
    case LOITER_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoiterType::CopyFrom(const LoiterType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.LoiterType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoiterType::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoiterType::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoiterType::InternalSwap(LoiterType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.loiter_type_, other->_impl_.loiter_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata LoiterType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[8]);
}
// ===================================================================

class OrbitType::_Internal {
 public:
  using HasBits = decltype(std::declval<OrbitType>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrbitType, _impl_._has_bits_);
  static const ::anduril::tasks::v2::OrbitDuration& duration(const OrbitType* msg);
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::OrbitDuration& OrbitType::_Internal::duration(const OrbitType* msg) {
  return *msg->_impl_.duration_;
}
OrbitType::OrbitType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.OrbitType)
}
inline PROTOBUF_NDEBUG_INLINE OrbitType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

OrbitType::OrbitType(
    ::google::protobuf::Arena* arena,
    const OrbitType& from)
    : ::google::protobuf::Message(arena) {
  OrbitType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.duration_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::OrbitDuration>(arena, *from._impl_.duration_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, direction_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, direction_),
           offsetof(Impl_, pattern_) -
               offsetof(Impl_, direction_) +
               sizeof(Impl_::pattern_));

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.OrbitType)
}
inline PROTOBUF_NDEBUG_INLINE OrbitType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OrbitType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, pattern_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::pattern_));
}
OrbitType::~OrbitType() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.OrbitType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrbitType::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.duration_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OrbitType::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.OrbitType)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.duration_ != nullptr);
    _impl_.duration_->Clear();
  }
  ::memset(&_impl_.direction_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pattern_) -
      reinterpret_cast<char*>(&_impl_.direction_)) + sizeof(_impl_.pattern_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrbitType::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> OrbitType::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrbitType, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrbitType_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrbitType, _impl_.direction_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.direction_)}},
    // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrbitType, _impl_.pattern_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.pattern_)}},
    // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.duration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
    {PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.pattern_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
    {PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.duration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::OrbitDuration>()},
  }}, {{
  }},
};

::uint8_t* OrbitType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.OrbitType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_direction(), target);
  }

  // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
  if (this->_internal_pattern() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_pattern(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::duration(this),
        _Internal::duration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.OrbitType)
  return target;
}

::size_t OrbitType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.OrbitType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.duration_);
  }

  // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
  if (this->_internal_pattern() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_pattern());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OrbitType::_class_data_ = {
    OrbitType::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OrbitType::GetClassData() const {
  return &_class_data_;
}

void OrbitType::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OrbitType*>(&to_msg);
  auto& from = static_cast<const OrbitType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.OrbitType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_duration()->::anduril::tasks::v2::OrbitDuration::MergeFrom(
        from._internal_duration());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_pattern() != 0) {
    _this->_internal_set_pattern(from._internal_pattern());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrbitType::CopyFrom(const OrbitType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.OrbitType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrbitType::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OrbitType::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OrbitType::InternalSwap(OrbitType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.pattern_)
      + sizeof(OrbitType::_impl_.pattern_)
      - PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata OrbitType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[9]);
}
// ===================================================================

class OrbitDuration::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::DurationRange& duration_range(const OrbitDuration* msg);
};

const ::anduril::tasks::v2::DurationRange& OrbitDuration::_Internal::duration_range(const OrbitDuration* msg) {
  return *msg->_impl_.duration_.duration_range_;
}
void OrbitDuration::set_allocated_duration_range(::anduril::tasks::v2::DurationRange* duration_range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_duration();
  if (duration_range) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(duration_range)->GetArena();
    if (message_arena != submessage_arena) {
      duration_range = ::google::protobuf::internal::GetOwnedMessage(message_arena, duration_range, submessage_arena);
    }
    set_has_duration_range();
    _impl_.duration_.duration_range_ = duration_range;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.OrbitDuration.duration_range)
}
void OrbitDuration::clear_duration_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (duration_case() == kDurationRange) {
    if (GetArena() == nullptr) {
      delete _impl_.duration_.duration_range_;
    }
    clear_has_duration();
  }
}
OrbitDuration::OrbitDuration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.OrbitDuration)
}
inline PROTOBUF_NDEBUG_INLINE OrbitDuration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : duration_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

OrbitDuration::OrbitDuration(
    ::google::protobuf::Arena* arena,
    const OrbitDuration& from)
    : ::google::protobuf::Message(arena) {
  OrbitDuration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (duration_case()) {
    case DURATION_NOT_SET:
      break;
      case kDurationRange:
        _impl_.duration_.duration_range_ = CreateMaybeMessage<::anduril::tasks::v2::DurationRange>(arena, *from._impl_.duration_.duration_range_);
        break;
      case kNumOfOrbits:
        _impl_.duration_.num_of_orbits_ = from._impl_.duration_.num_of_orbits_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.OrbitDuration)
}
inline PROTOBUF_NDEBUG_INLINE OrbitDuration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : duration_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void OrbitDuration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OrbitDuration::~OrbitDuration() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.OrbitDuration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrbitDuration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_duration()) {
    clear_duration();
  }
  _impl_.~Impl_();
}

void OrbitDuration::clear_duration() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.OrbitDuration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (duration_case()) {
    case kDurationRange: {
      if (GetArena() == nullptr) {
        delete _impl_.duration_.duration_range_;
      }
      break;
    }
    case kNumOfOrbits: {
      // No need to clear
      break;
    }
    case DURATION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DURATION_NOT_SET;
}


PROTOBUF_NOINLINE void OrbitDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.OrbitDuration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_duration();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrbitDuration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 0, 2> OrbitDuration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrbitDuration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.DurationRange duration_range = 1 [json_name = "durationRange"];
    {PROTOBUF_FIELD_OFFSET(OrbitDuration, _impl_.duration_.duration_range_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 num_of_orbits = 2 [json_name = "numOfOrbits"];
    {PROTOBUF_FIELD_OFFSET(OrbitDuration, _impl_.duration_.num_of_orbits_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::DurationRange>()},
  }}, {{
  }},
};

::uint8_t* OrbitDuration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.OrbitDuration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (duration_case()) {
    case kDurationRange: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::duration_range(this),
          _Internal::duration_range(this).GetCachedSize(), target, stream);
      break;
    }
    case kNumOfOrbits: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this->_internal_num_of_orbits(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.OrbitDuration)
  return target;
}

::size_t OrbitDuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.OrbitDuration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (duration_case()) {
    // .anduril.tasks.v2.DurationRange duration_range = 1 [json_name = "durationRange"];
    case kDurationRange: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.duration_.duration_range_);
      break;
    }
    // uint64 num_of_orbits = 2 [json_name = "numOfOrbits"];
    case kNumOfOrbits: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_num_of_orbits());
      break;
    }
    case DURATION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OrbitDuration::_class_data_ = {
    OrbitDuration::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OrbitDuration::GetClassData() const {
  return &_class_data_;
}

void OrbitDuration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OrbitDuration*>(&to_msg);
  auto& from = static_cast<const OrbitDuration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.OrbitDuration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.duration_case()) {
    case kDurationRange: {
      _this->_internal_mutable_duration_range()->::anduril::tasks::v2::DurationRange::MergeFrom(
          from._internal_duration_range());
      break;
    }
    case kNumOfOrbits: {
      _this->_internal_set_num_of_orbits(from._internal_num_of_orbits());
      break;
    }
    case DURATION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrbitDuration::CopyFrom(const OrbitDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.OrbitDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrbitDuration::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OrbitDuration::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OrbitDuration::InternalSwap(OrbitDuration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.duration_, other->_impl_.duration_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata OrbitDuration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[10]);
}
// ===================================================================

class Prior::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::Point& point(const Prior* msg);
};

const ::anduril::tasks::v2::Point& Prior::_Internal::point(const Prior* msg) {
  return *msg->_impl_.prior_.point_;
}
void Prior::set_allocated_point(::anduril::tasks::v2::Point* point) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_prior();
  if (point) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(point)->GetArena();
    if (message_arena != submessage_arena) {
      point = ::google::protobuf::internal::GetOwnedMessage(message_arena, point, submessage_arena);
    }
    set_has_point();
    _impl_.prior_.point_ = point;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.Prior.point)
}
void Prior::clear_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (prior_case() == kPoint) {
    if (GetArena() == nullptr) {
      delete _impl_.prior_.point_;
    }
    clear_has_prior();
  }
}
Prior::Prior(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Prior)
}
inline PROTOBUF_NDEBUG_INLINE Prior::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : prior_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Prior::Prior(
    ::google::protobuf::Arena* arena,
    const Prior& from)
    : ::google::protobuf::Message(arena) {
  Prior* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (prior_case()) {
    case PRIOR_NOT_SET:
      break;
      case kEntityId:
        new (&_impl_.prior_.entity_id_) decltype(_impl_.prior_.entity_id_){arena, from._impl_.prior_.entity_id_};
        break;
      case kPoint:
        _impl_.prior_.point_ = CreateMaybeMessage<::anduril::tasks::v2::Point>(arena, *from._impl_.prior_.point_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Prior)
}
inline PROTOBUF_NDEBUG_INLINE Prior::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : prior_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Prior::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Prior::~Prior() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Prior)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Prior::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_prior()) {
    clear_prior();
  }
  _impl_.~Impl_();
}

void Prior::clear_prior() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.Prior)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (prior_case()) {
    case kEntityId: {
      _impl_.prior_.entity_id_.Destroy();
      break;
    }
    case kPoint: {
      if (GetArena() == nullptr) {
        delete _impl_.prior_.point_;
      }
      break;
    }
    case PRIOR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PRIOR_NOT_SET;
}


PROTOBUF_NOINLINE void Prior::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Prior)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_prior();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Prior::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 40, 2> Prior::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967278,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Prior_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(Prior, _impl_.prior_.entity_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.tasks.v2.Point point = 5 [json_name = "point"];
    {PROTOBUF_FIELD_OFFSET(Prior, _impl_.prior_.point_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Point>()},
  }}, {{
    "\26\11\0\0\0\0\0\0"
    "anduril.tasks.v2.Prior"
    "entity_id"
  }},
};

::uint8_t* Prior::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Prior)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (prior_case()) {
    case kEntityId: {
      const std::string& _s = this->_internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.tasks.v2.Prior.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kPoint: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::point(this),
          _Internal::point(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Prior)
  return target;
}

::size_t Prior::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Prior)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (prior_case()) {
    // string entity_id = 1 [json_name = "entityId"];
    case kEntityId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_entity_id());
      break;
    }
    // .anduril.tasks.v2.Point point = 5 [json_name = "point"];
    case kPoint: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.prior_.point_);
      break;
    }
    case PRIOR_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Prior::_class_data_ = {
    Prior::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Prior::GetClassData() const {
  return &_class_data_;
}

void Prior::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Prior*>(&to_msg);
  auto& from = static_cast<const Prior&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Prior)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.prior_case()) {
    case kEntityId: {
      _this->_internal_set_entity_id(from._internal_entity_id());
      break;
    }
    case kPoint: {
      _this->_internal_mutable_point()->::anduril::tasks::v2::Point::MergeFrom(
          from._internal_point());
      break;
    }
    case PRIOR_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Prior::CopyFrom(const Prior& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Prior)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Prior::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Prior::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Prior::InternalSwap(Prior* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.prior_, other->_impl_.prior_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Prior::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[11]);
}
// ===================================================================

class ISRParameters::_Internal {
 public:
  using HasBits = decltype(std::declval<ISRParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_._has_bits_);
  static const ::google::protobuf::FloatValue& speed(const ISRParameters* msg);
  static void set_has_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::FloatValue& speed_m_s(const ISRParameters* msg);
  static void set_has_speed_m_s(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::FloatValue& standoff_distance_m(const ISRParameters* msg);
  static void set_has_standoff_distance_m(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::FloatValue& standoff_distance(const ISRParameters* msg);
  static void set_has_standoff_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::google::protobuf::FloatValue& standoff_angle(const ISRParameters* msg);
  static void set_has_standoff_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::google::protobuf::UInt64Value& expiration_time_ms(const ISRParameters* msg);
  static void set_has_expiration_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::google::protobuf::FloatValue& ISRParameters::_Internal::speed(const ISRParameters* msg) {
  return *msg->_impl_.speed_;
}
const ::google::protobuf::FloatValue& ISRParameters::_Internal::speed_m_s(const ISRParameters* msg) {
  return *msg->_impl_.speed_m_s_;
}
const ::google::protobuf::FloatValue& ISRParameters::_Internal::standoff_distance_m(const ISRParameters* msg) {
  return *msg->_impl_.standoff_distance_m_;
}
const ::google::protobuf::FloatValue& ISRParameters::_Internal::standoff_distance(const ISRParameters* msg) {
  return *msg->_impl_.standoff_distance_;
}
const ::google::protobuf::FloatValue& ISRParameters::_Internal::standoff_angle(const ISRParameters* msg) {
  return *msg->_impl_.standoff_angle_;
}
const ::google::protobuf::UInt64Value& ISRParameters::_Internal::expiration_time_ms(const ISRParameters* msg) {
  return *msg->_impl_.expiration_time_ms_;
}
void ISRParameters::clear_speed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.speed_ != nullptr) _impl_.speed_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ISRParameters::clear_speed_m_s() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.speed_m_s_ != nullptr) _impl_.speed_m_s_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ISRParameters::clear_standoff_distance_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.standoff_distance_m_ != nullptr) _impl_.standoff_distance_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ISRParameters::clear_standoff_distance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.standoff_distance_ != nullptr) _impl_.standoff_distance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ISRParameters::clear_standoff_angle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.standoff_angle_ != nullptr) _impl_.standoff_angle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ISRParameters::clear_expiration_time_ms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expiration_time_ms_ != nullptr) _impl_.expiration_time_ms_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
ISRParameters::ISRParameters(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.ISRParameters)
}
inline PROTOBUF_NDEBUG_INLINE ISRParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ISRParameters::ISRParameters(
    ::google::protobuf::Arena* arena,
    const ISRParameters& from)
    : ::google::protobuf::Message(arena) {
  ISRParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.speed_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.speed_)
                : nullptr;
  _impl_.speed_m_s_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.speed_m_s_)
                : nullptr;
  _impl_.standoff_distance_m_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.standoff_distance_m_)
                : nullptr;
  _impl_.standoff_distance_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.standoff_distance_)
                : nullptr;
  _impl_.standoff_angle_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.standoff_angle_)
                : nullptr;
  _impl_.expiration_time_ms_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::google::protobuf::UInt64Value>(arena, *from._impl_.expiration_time_ms_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.ISRParameters)
}
inline PROTOBUF_NDEBUG_INLINE ISRParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ISRParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_),
           0,
           offsetof(Impl_, expiration_time_ms_) -
               offsetof(Impl_, speed_) +
               sizeof(Impl_::expiration_time_ms_));
}
ISRParameters::~ISRParameters() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.ISRParameters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ISRParameters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.speed_;
  delete _impl_.speed_m_s_;
  delete _impl_.standoff_distance_m_;
  delete _impl_.standoff_distance_;
  delete _impl_.standoff_angle_;
  delete _impl_.expiration_time_ms_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ISRParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.ISRParameters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.speed_ != nullptr);
      _impl_.speed_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.speed_m_s_ != nullptr);
      _impl_.speed_m_s_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.standoff_distance_m_ != nullptr);
      _impl_.standoff_distance_m_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.standoff_distance_ != nullptr);
      _impl_.standoff_distance_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.standoff_angle_ != nullptr);
      _impl_.standoff_angle_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.expiration_time_ms_ != nullptr);
      _impl_.expiration_time_ms_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ISRParameters::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> ISRParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ISRParameters_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_)}},
    // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_m_s_)}},
    // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_distance_m_)}},
    // .google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_distance_)}},
    // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_angle_)}},
    // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.expiration_time_ms_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_m_s_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_distance_m_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_distance_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_angle_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.expiration_time_ms_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::UInt64Value>()},
  }}, {{
  }},
};

::uint8_t* ISRParameters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.ISRParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::speed(this),
        _Internal::speed(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::speed_m_s(this),
        _Internal::speed_m_s(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::standoff_distance_m(this),
        _Internal::standoff_distance_m(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::standoff_distance(this),
        _Internal::standoff_distance(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::standoff_angle(this),
        _Internal::standoff_angle(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::expiration_time_ms(this),
        _Internal::expiration_time_ms(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.ISRParameters)
  return target;
}

::size_t ISRParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.ISRParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // .google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.speed_);
    }

    // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.speed_m_s_);
    }

    // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.standoff_distance_m_);
    }

    // .google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.standoff_distance_);
    }

    // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.standoff_angle_);
    }

    // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expiration_time_ms_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ISRParameters::_class_data_ = {
    ISRParameters::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ISRParameters::GetClassData() const {
  return &_class_data_;
}

void ISRParameters::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ISRParameters*>(&to_msg);
  auto& from = static_cast<const ISRParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.ISRParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_speed()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_speed());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_speed_m_s()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_speed_m_s());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_standoff_distance_m()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_standoff_distance_m());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_standoff_distance()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_standoff_distance());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_standoff_angle()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_standoff_angle());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_expiration_time_ms()->::google::protobuf::UInt64Value::MergeFrom(
          from._internal_expiration_time_ms());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ISRParameters::CopyFrom(const ISRParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.ISRParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ISRParameters::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ISRParameters::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ISRParameters::InternalSwap(ISRParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.expiration_time_ms_)
      + sizeof(ISRParameters::_impl_.expiration_time_ms_)
      - PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_)>(
          reinterpret_cast<char*>(&_impl_.speed_),
          reinterpret_cast<char*>(&other->_impl_.speed_));
}

::google::protobuf::Metadata ISRParameters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[12]);
}
// ===================================================================

class GimbalPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<GimbalPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::Objective& look_at(const GimbalPoint* msg);
  static const ::anduril::tasks::v2::AzimuthElevationPoint& celestial_location(const GimbalPoint* msg);
  static const ::anduril::tasks::v2::FramePoint& frame_location(const GimbalPoint* msg);
  static const ::anduril::tasks::v2::ISRParameters& parameters(const GimbalPoint* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::Objective& GimbalPoint::_Internal::look_at(const GimbalPoint* msg) {
  return *msg->_impl_.point_type_.look_at_;
}
const ::anduril::tasks::v2::AzimuthElevationPoint& GimbalPoint::_Internal::celestial_location(const GimbalPoint* msg) {
  return *msg->_impl_.point_type_.celestial_location_;
}
const ::anduril::tasks::v2::FramePoint& GimbalPoint::_Internal::frame_location(const GimbalPoint* msg) {
  return *msg->_impl_.point_type_.frame_location_;
}
const ::anduril::tasks::v2::ISRParameters& GimbalPoint::_Internal::parameters(const GimbalPoint* msg) {
  return *msg->_impl_.parameters_;
}
void GimbalPoint::set_allocated_look_at(::anduril::tasks::v2::Objective* look_at) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point_type();
  if (look_at) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(look_at)->GetArena();
    if (message_arena != submessage_arena) {
      look_at = ::google::protobuf::internal::GetOwnedMessage(message_arena, look_at, submessage_arena);
    }
    set_has_look_at();
    _impl_.point_type_.look_at_ = look_at;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalPoint.look_at)
}
void GimbalPoint::clear_look_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (point_type_case() == kLookAt) {
    if (GetArena() == nullptr) {
      delete _impl_.point_type_.look_at_;
    }
    clear_has_point_type();
  }
}
void GimbalPoint::set_allocated_celestial_location(::anduril::tasks::v2::AzimuthElevationPoint* celestial_location) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point_type();
  if (celestial_location) {
    ::google::protobuf::Arena* submessage_arena = celestial_location->GetArena();
    if (message_arena != submessage_arena) {
      celestial_location = ::google::protobuf::internal::GetOwnedMessage(message_arena, celestial_location, submessage_arena);
    }
    set_has_celestial_location();
    _impl_.point_type_.celestial_location_ = celestial_location;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalPoint.celestial_location)
}
void GimbalPoint::set_allocated_frame_location(::anduril::tasks::v2::FramePoint* frame_location) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point_type();
  if (frame_location) {
    ::google::protobuf::Arena* submessage_arena = frame_location->GetArena();
    if (message_arena != submessage_arena) {
      frame_location = ::google::protobuf::internal::GetOwnedMessage(message_arena, frame_location, submessage_arena);
    }
    set_has_frame_location();
    _impl_.point_type_.frame_location_ = frame_location;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalPoint.frame_location)
}
GimbalPoint::GimbalPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.GimbalPoint)
}
inline PROTOBUF_NDEBUG_INLINE GimbalPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        point_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

GimbalPoint::GimbalPoint(
    ::google::protobuf::Arena* arena,
    const GimbalPoint& from)
    : ::google::protobuf::Message(arena) {
  GimbalPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.parameters_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;
  switch (point_type_case()) {
    case POINT_TYPE_NOT_SET:
      break;
      case kLookAt:
        _impl_.point_type_.look_at_ = CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.point_type_.look_at_);
        break;
      case kCelestialLocation:
        _impl_.point_type_.celestial_location_ = CreateMaybeMessage<::anduril::tasks::v2::AzimuthElevationPoint>(arena, *from._impl_.point_type_.celestial_location_);
        break;
      case kFrameLocation:
        _impl_.point_type_.frame_location_ = CreateMaybeMessage<::anduril::tasks::v2::FramePoint>(arena, *from._impl_.point_type_.frame_location_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.GimbalPoint)
}
inline PROTOBUF_NDEBUG_INLINE GimbalPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        point_type_{},
        _oneof_case_{} {}

inline void GimbalPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.parameters_ = {};
}
GimbalPoint::~GimbalPoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.GimbalPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GimbalPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.parameters_;
  if (has_point_type()) {
    clear_point_type();
  }
  _impl_.~Impl_();
}

void GimbalPoint::clear_point_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.GimbalPoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (point_type_case()) {
    case kLookAt: {
      if (GetArena() == nullptr) {
        delete _impl_.point_type_.look_at_;
      }
      break;
    }
    case kCelestialLocation: {
      if (GetArena() == nullptr) {
        delete _impl_.point_type_.celestial_location_;
      }
      break;
    }
    case kFrameLocation: {
      if (GetArena() == nullptr) {
        delete _impl_.point_type_.frame_location_;
      }
      break;
    }
    case POINT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = POINT_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void GimbalPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.GimbalPoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.parameters_ != nullptr);
    _impl_.parameters_->Clear();
  }
  clear_point_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GimbalPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> GimbalPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_._has_bits_),
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GimbalPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.parameters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective look_at = 1 [json_name = "lookAt"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.point_type_.look_at_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.AzimuthElevationPoint celestial_location = 2 [json_name = "celestialLocation"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.point_type_.celestial_location_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.parameters_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.FramePoint frame_location = 4 [json_name = "frameLocation"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.point_type_.frame_location_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::AzimuthElevationPoint>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::FramePoint>()},
  }}, {{
  }},
};

::uint8_t* GimbalPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.GimbalPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (point_type_case()) {
    case kLookAt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::look_at(this),
          _Internal::look_at(this).GetCachedSize(), target, stream);
      break;
    }
    case kCelestialLocation: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::celestial_location(this),
          _Internal::celestial_location(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.FramePoint frame_location = 4 [json_name = "frameLocation"];
  if (point_type_case() == kFrameLocation) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::frame_location(this),
        _Internal::frame_location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.GimbalPoint)
  return target;
}

::size_t GimbalPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.GimbalPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
  }

  switch (point_type_case()) {
    // .anduril.tasks.v2.Objective look_at = 1 [json_name = "lookAt"];
    case kLookAt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.point_type_.look_at_);
      break;
    }
    // .anduril.tasks.v2.AzimuthElevationPoint celestial_location = 2 [json_name = "celestialLocation"];
    case kCelestialLocation: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.point_type_.celestial_location_);
      break;
    }
    // .anduril.tasks.v2.FramePoint frame_location = 4 [json_name = "frameLocation"];
    case kFrameLocation: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.point_type_.frame_location_);
      break;
    }
    case POINT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GimbalPoint::_class_data_ = {
    GimbalPoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GimbalPoint::GetClassData() const {
  return &_class_data_;
}

void GimbalPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GimbalPoint*>(&to_msg);
  auto& from = static_cast<const GimbalPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.GimbalPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
        from._internal_parameters());
  }
  switch (from.point_type_case()) {
    case kLookAt: {
      _this->_internal_mutable_look_at()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_look_at());
      break;
    }
    case kCelestialLocation: {
      _this->_internal_mutable_celestial_location()->::anduril::tasks::v2::AzimuthElevationPoint::MergeFrom(
          from._internal_celestial_location());
      break;
    }
    case kFrameLocation: {
      _this->_internal_mutable_frame_location()->::anduril::tasks::v2::FramePoint::MergeFrom(
          from._internal_frame_location());
      break;
    }
    case POINT_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalPoint::CopyFrom(const GimbalPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.GimbalPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GimbalPoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GimbalPoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GimbalPoint::InternalSwap(GimbalPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.parameters_, other->_impl_.parameters_);
  swap(_impl_.point_type_, other->_impl_.point_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GimbalPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[13]);
}
// ===================================================================

class AzimuthElevationPoint::_Internal {
 public:
};

AzimuthElevationPoint::AzimuthElevationPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.AzimuthElevationPoint)
}
AzimuthElevationPoint::AzimuthElevationPoint(
    ::google::protobuf::Arena* arena, const AzimuthElevationPoint& from)
    : AzimuthElevationPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AzimuthElevationPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AzimuthElevationPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, azimuth_),
           0,
           offsetof(Impl_, elevation_) -
               offsetof(Impl_, azimuth_) +
               sizeof(Impl_::elevation_));
}
AzimuthElevationPoint::~AzimuthElevationPoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.AzimuthElevationPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AzimuthElevationPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AzimuthElevationPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.AzimuthElevationPoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.azimuth_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.elevation_) -
      reinterpret_cast<char*>(&_impl_.azimuth_)) + sizeof(_impl_.elevation_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AzimuthElevationPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AzimuthElevationPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AzimuthElevationPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double elevation = 2 [json_name = "elevation"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.elevation_)}},
    // double azimuth = 1 [json_name = "azimuth"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.azimuth_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double azimuth = 1 [json_name = "azimuth"];
    {PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.azimuth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double elevation = 2 [json_name = "elevation"];
    {PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.elevation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AzimuthElevationPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.AzimuthElevationPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double azimuth = 1 [json_name = "azimuth"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = this->_internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_azimuth(), target);
  }

  // double elevation = 2 [json_name = "elevation"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = this->_internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_elevation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.AzimuthElevationPoint)
  return target;
}

::size_t AzimuthElevationPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.AzimuthElevationPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double azimuth = 1 [json_name = "azimuth"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = this->_internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    total_size += 9;
  }

  // double elevation = 2 [json_name = "elevation"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = this->_internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AzimuthElevationPoint::_class_data_ = {
    AzimuthElevationPoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AzimuthElevationPoint::GetClassData() const {
  return &_class_data_;
}

void AzimuthElevationPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AzimuthElevationPoint*>(&to_msg);
  auto& from = static_cast<const AzimuthElevationPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.AzimuthElevationPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = from._internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    _this->_internal_set_azimuth(from._internal_azimuth());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = from._internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    _this->_internal_set_elevation(from._internal_elevation());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AzimuthElevationPoint::CopyFrom(const AzimuthElevationPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.AzimuthElevationPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AzimuthElevationPoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AzimuthElevationPoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AzimuthElevationPoint::InternalSwap(AzimuthElevationPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.elevation_)
      + sizeof(AzimuthElevationPoint::_impl_.elevation_)
      - PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.azimuth_)>(
          reinterpret_cast<char*>(&_impl_.azimuth_),
          reinterpret_cast<char*>(&other->_impl_.azimuth_));
}

::google::protobuf::Metadata AzimuthElevationPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[14]);
}
// ===================================================================

class FramePoint::_Internal {
 public:
  using HasBits = decltype(std::declval<FramePoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FramePoint, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& timestamp(const FramePoint* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& FramePoint::_Internal::timestamp(const FramePoint* msg) {
  return *msg->_impl_.timestamp_;
}
void FramePoint::clear_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
FramePoint::FramePoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.FramePoint)
}
inline PROTOBUF_NDEBUG_INLINE FramePoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FramePoint::FramePoint(
    ::google::protobuf::Arena* arena,
    const FramePoint& from)
    : ::google::protobuf::Message(arena) {
  FramePoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.FramePoint)
}
inline PROTOBUF_NDEBUG_INLINE FramePoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FramePoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::y_));
}
FramePoint::~FramePoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.FramePoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FramePoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.timestamp_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FramePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.FramePoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FramePoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> FramePoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FramePoint, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FramePoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.x_)}},
    // float y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.y_)}},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* FramePoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.FramePoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1 [json_name = "x"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float y = 2 [json_name = "y"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.FramePoint)
  return target;
}

::size_t FramePoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.FramePoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.timestamp_);
  }

  // float x = 1 [json_name = "x"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 2 [json_name = "y"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FramePoint::_class_data_ = {
    FramePoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FramePoint::GetClassData() const {
  return &_class_data_;
}

void FramePoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FramePoint*>(&to_msg);
  auto& from = static_cast<const FramePoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.FramePoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_timestamp());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FramePoint::CopyFrom(const FramePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.FramePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FramePoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FramePoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FramePoint::InternalSwap(FramePoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.y_)
      + sizeof(FramePoint::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata FramePoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[15]);
}
// ===================================================================

class GimbalZoom::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _impl_._oneof_case_);
  static const ::google::protobuf::DoubleValue& set_horizontal_fov(const GimbalZoom* msg);
  static const ::google::protobuf::FloatValue& set_magnification(const GimbalZoom* msg);
};

const ::google::protobuf::DoubleValue& GimbalZoom::_Internal::set_horizontal_fov(const GimbalZoom* msg) {
  return *msg->_impl_.mode_.set_horizontal_fov_;
}
const ::google::protobuf::FloatValue& GimbalZoom::_Internal::set_magnification(const GimbalZoom* msg) {
  return *msg->_impl_.mode_.set_magnification_;
}
void GimbalZoom::set_allocated_set_horizontal_fov(::google::protobuf::DoubleValue* set_horizontal_fov) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_mode();
  if (set_horizontal_fov) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(set_horizontal_fov)->GetArena();
    if (message_arena != submessage_arena) {
      set_horizontal_fov = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_horizontal_fov, submessage_arena);
    }
    set_has_set_horizontal_fov();
    _impl_.mode_.set_horizontal_fov_ = set_horizontal_fov;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalZoom.set_horizontal_fov)
}
void GimbalZoom::clear_set_horizontal_fov() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (mode_case() == kSetHorizontalFov) {
    if (GetArena() == nullptr) {
      delete _impl_.mode_.set_horizontal_fov_;
    }
    clear_has_mode();
  }
}
void GimbalZoom::set_allocated_set_magnification(::google::protobuf::FloatValue* set_magnification) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_mode();
  if (set_magnification) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(set_magnification)->GetArena();
    if (message_arena != submessage_arena) {
      set_magnification = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_magnification, submessage_arena);
    }
    set_has_set_magnification();
    _impl_.mode_.set_magnification_ = set_magnification;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalZoom.set_magnification)
}
void GimbalZoom::clear_set_magnification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (mode_case() == kSetMagnification) {
    if (GetArena() == nullptr) {
      delete _impl_.mode_.set_magnification_;
    }
    clear_has_mode();
  }
}
GimbalZoom::GimbalZoom(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.GimbalZoom)
}
inline PROTOBUF_NDEBUG_INLINE GimbalZoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : mode_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GimbalZoom::GimbalZoom(
    ::google::protobuf::Arena* arena,
    const GimbalZoom& from)
    : ::google::protobuf::Message(arena) {
  GimbalZoom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (mode_case()) {
    case MODE_NOT_SET:
      break;
      case kSetHorizontalFov:
        _impl_.mode_.set_horizontal_fov_ = CreateMaybeMessage<::google::protobuf::DoubleValue>(arena, *from._impl_.mode_.set_horizontal_fov_);
        break;
      case kSetMagnification:
        _impl_.mode_.set_magnification_ = CreateMaybeMessage<::google::protobuf::FloatValue>(arena, *from._impl_.mode_.set_magnification_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.GimbalZoom)
}
inline PROTOBUF_NDEBUG_INLINE GimbalZoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mode_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GimbalZoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GimbalZoom::~GimbalZoom() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.GimbalZoom)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GimbalZoom::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_mode()) {
    clear_mode();
  }
  _impl_.~Impl_();
}

void GimbalZoom::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.GimbalZoom)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (mode_case()) {
    case kSetHorizontalFov: {
      if (GetArena() == nullptr) {
        delete _impl_.mode_.set_horizontal_fov_;
      }
      break;
    }
    case kSetMagnification: {
      if (GetArena() == nullptr) {
        delete _impl_.mode_.set_magnification_;
      }
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MODE_NOT_SET;
}


PROTOBUF_NOINLINE void GimbalZoom::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.GimbalZoom)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mode();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GimbalZoom::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> GimbalZoom::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GimbalZoom_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue set_horizontal_fov = 1 [json_name = "setHorizontalFov"];
    {PROTOBUF_FIELD_OFFSET(GimbalZoom, _impl_.mode_.set_horizontal_fov_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue set_magnification = 2 [json_name = "setMagnification"];
    {PROTOBUF_FIELD_OFFSET(GimbalZoom, _impl_.mode_.set_magnification_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
  }}, {{
  }},
};

::uint8_t* GimbalZoom::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.GimbalZoom)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (mode_case()) {
    case kSetHorizontalFov: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::set_horizontal_fov(this),
          _Internal::set_horizontal_fov(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetMagnification: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::set_magnification(this),
          _Internal::set_magnification(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.GimbalZoom)
  return target;
}

::size_t GimbalZoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.GimbalZoom)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (mode_case()) {
    // .google.protobuf.DoubleValue set_horizontal_fov = 1 [json_name = "setHorizontalFov"];
    case kSetHorizontalFov: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mode_.set_horizontal_fov_);
      break;
    }
    // .google.protobuf.FloatValue set_magnification = 2 [json_name = "setMagnification"];
    case kSetMagnification: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mode_.set_magnification_);
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GimbalZoom::_class_data_ = {
    GimbalZoom::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GimbalZoom::GetClassData() const {
  return &_class_data_;
}

void GimbalZoom::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GimbalZoom*>(&to_msg);
  auto& from = static_cast<const GimbalZoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.GimbalZoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mode_case()) {
    case kSetHorizontalFov: {
      _this->_internal_mutable_set_horizontal_fov()->::google::protobuf::DoubleValue::MergeFrom(
          from._internal_set_horizontal_fov());
      break;
    }
    case kSetMagnification: {
      _this->_internal_mutable_set_magnification()->::google::protobuf::FloatValue::MergeFrom(
          from._internal_set_magnification());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalZoom::CopyFrom(const GimbalZoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.GimbalZoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GimbalZoom::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GimbalZoom::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GimbalZoom::InternalSwap(GimbalZoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GimbalZoom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[16]);
}
// ===================================================================

class Monitor::_Internal {
 public:
  using HasBits = decltype(std::declval<Monitor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Monitor, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Monitor* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::anduril::tasks::v2::Objective& Monitor::_Internal::objective(const Monitor* msg) {
  return *msg->_impl_.objective_;
}
void Monitor::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Monitor::Monitor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Monitor)
}
inline PROTOBUF_NDEBUG_INLINE Monitor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        track_id_(arena, from.track_id_),
        track_producer_(arena, from.track_producer_) {}

Monitor::Monitor(
    ::google::protobuf::Arena* arena,
    const Monitor& from)
    : ::google::protobuf::Message(arena) {
  Monitor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Monitor)
}
inline PROTOBUF_NDEBUG_INLINE Monitor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        track_id_(arena),
        track_producer_(arena) {}

inline void Monitor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
Monitor::~Monitor() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Monitor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Monitor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.track_id_.Destroy();
  _impl_.track_producer_.Destroy();
  delete _impl_.objective_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Monitor::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Monitor)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.track_id_.ClearToEmpty();
  _impl_.track_producer_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Monitor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 55, 2> Monitor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Monitor, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Monitor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Monitor, _impl_.objective_)}},
    // string track_id = 2 [json_name = "trackId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Monitor, _impl_.track_id_)}},
    // string track_producer = 3 [json_name = "trackProducer"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Monitor, _impl_.track_producer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Monitor, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string track_id = 2 [json_name = "trackId"];
    {PROTOBUF_FIELD_OFFSET(Monitor, _impl_.track_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string track_producer = 3 [json_name = "trackProducer"];
    {PROTOBUF_FIELD_OFFSET(Monitor, _impl_.track_producer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
  }}, {{
    "\30\0\10\16\0\0\0\0"
    "anduril.tasks.v2.Monitor"
    "track_id"
    "track_producer"
  }},
};

::uint8_t* Monitor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Monitor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // string track_id = 2 [json_name = "trackId"];
  if (!this->_internal_track_id().empty()) {
    const std::string& _s = this->_internal_track_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.tasks.v2.Monitor.track_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string track_producer = 3 [json_name = "trackProducer"];
  if (!this->_internal_track_producer().empty()) {
    const std::string& _s = this->_internal_track_producer();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.tasks.v2.Monitor.track_producer");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Monitor)
  return target;
}

::size_t Monitor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Monitor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string track_id = 2 [json_name = "trackId"];
  if (!this->_internal_track_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_track_id());
  }

  // string track_producer = 3 [json_name = "trackProducer"];
  if (!this->_internal_track_producer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_track_producer());
  }

  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Monitor::_class_data_ = {
    Monitor::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Monitor::GetClassData() const {
  return &_class_data_;
}

void Monitor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Monitor*>(&to_msg);
  auto& from = static_cast<const Monitor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Monitor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_track_id().empty()) {
    _this->_internal_set_track_id(from._internal_track_id());
  }
  if (!from._internal_track_producer().empty()) {
    _this->_internal_set_track_producer(from._internal_track_producer());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
        from._internal_objective());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Monitor::CopyFrom(const Monitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Monitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Monitor::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Monitor::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Monitor::InternalSwap(Monitor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.track_id_, &other->_impl_.track_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.track_producer_, &other->_impl_.track_producer_, arena);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata Monitor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[17]);
}
// ===================================================================

class Scan::_Internal {
 public:
  using HasBits = decltype(std::declval<Scan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Scan, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Scan* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::ISRParameters& parameters(const Scan* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::tasks::v2::Objective& Scan::_Internal::objective(const Scan* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::ISRParameters& Scan::_Internal::parameters(const Scan* msg) {
  return *msg->_impl_.parameters_;
}
void Scan::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Scan::Scan(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Scan)
}
inline PROTOBUF_NDEBUG_INLINE Scan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Scan::Scan(
    ::google::protobuf::Arena* arena,
    const Scan& from)
    : ::google::protobuf::Message(arena) {
  Scan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Scan)
}
inline PROTOBUF_NDEBUG_INLINE Scan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Scan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Scan::~Scan() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Scan)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Scan::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Scan::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Scan)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Scan::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Scan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Scan, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Scan_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Scan, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Scan, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Scan, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Scan, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

::uint8_t* Scan::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Scan)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Scan)
  return target;
}

::size_t Scan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Scan)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Scan::_class_data_ = {
    Scan::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Scan::GetClassData() const {
  return &_class_data_;
}

void Scan::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Scan*>(&to_msg);
  auto& from = static_cast<const Scan&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Scan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Scan::CopyFrom(const Scan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Scan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Scan::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Scan::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Scan::InternalSwap(Scan* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scan, _impl_.parameters_)
      + sizeof(Scan::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Scan, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Scan::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[18]);
}
// ===================================================================

class BattleDamageAssessment::_Internal {
 public:
  using HasBits = decltype(std::declval<BattleDamageAssessment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const BattleDamageAssessment* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::ISRParameters& parameters(const BattleDamageAssessment* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::tasks::v2::Objective& BattleDamageAssessment::_Internal::objective(const BattleDamageAssessment* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::ISRParameters& BattleDamageAssessment::_Internal::parameters(const BattleDamageAssessment* msg) {
  return *msg->_impl_.parameters_;
}
void BattleDamageAssessment::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BattleDamageAssessment::BattleDamageAssessment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.BattleDamageAssessment)
}
inline PROTOBUF_NDEBUG_INLINE BattleDamageAssessment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BattleDamageAssessment::BattleDamageAssessment(
    ::google::protobuf::Arena* arena,
    const BattleDamageAssessment& from)
    : ::google::protobuf::Message(arena) {
  BattleDamageAssessment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.BattleDamageAssessment)
}
inline PROTOBUF_NDEBUG_INLINE BattleDamageAssessment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BattleDamageAssessment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
BattleDamageAssessment::~BattleDamageAssessment() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.BattleDamageAssessment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BattleDamageAssessment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BattleDamageAssessment::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.BattleDamageAssessment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BattleDamageAssessment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BattleDamageAssessment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BattleDamageAssessment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

::uint8_t* BattleDamageAssessment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.BattleDamageAssessment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.BattleDamageAssessment)
  return target;
}

::size_t BattleDamageAssessment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.BattleDamageAssessment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BattleDamageAssessment::_class_data_ = {
    BattleDamageAssessment::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BattleDamageAssessment::GetClassData() const {
  return &_class_data_;
}

void BattleDamageAssessment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BattleDamageAssessment*>(&to_msg);
  auto& from = static_cast<const BattleDamageAssessment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.BattleDamageAssessment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::ISRParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BattleDamageAssessment::CopyFrom(const BattleDamageAssessment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.BattleDamageAssessment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BattleDamageAssessment::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BattleDamageAssessment::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BattleDamageAssessment::InternalSwap(BattleDamageAssessment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.parameters_)
      + sizeof(BattleDamageAssessment::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata BattleDamageAssessment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[19]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
