// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/tasks/v2/shared/isr.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/tasks/v2/shared/isr.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace tasks {
namespace v2 {

inline constexpr AzimuthElevationPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : azimuth_{0},
        elevation_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AzimuthElevationPoint::AzimuthElevationPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AzimuthElevationPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AzimuthElevationPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AzimuthElevationPointDefaultTypeInternal() {}
  union {
    AzimuthElevationPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AzimuthElevationPointDefaultTypeInternal _AzimuthElevationPoint_default_instance_;

inline constexpr ISRParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_m_s_{nullptr},
        standoff_distance_m_{nullptr},
        standoff_angle_{nullptr},
        expiration_time_ms_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ISRParameters::ISRParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ISRParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ISRParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ISRParametersDefaultTypeInternal() {}
  union {
    ISRParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ISRParametersDefaultTypeInternal _ISRParameters_default_instance_;

inline constexpr GimbalZoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalZoom::GimbalZoom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GimbalZoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalZoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalZoomDefaultTypeInternal() {}
  union {
    GimbalZoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalZoomDefaultTypeInternal _GimbalZoom_default_instance_;

inline constexpr FramePoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr},
        x_{0},
        y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FramePoint::FramePoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FramePointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FramePointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FramePointDefaultTypeInternal() {}
  union {
    FramePoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FramePointDefaultTypeInternal _FramePoint_default_instance_;

inline constexpr Prior::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : prior_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Prior::Prior(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PriorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PriorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PriorDefaultTypeInternal() {}
  union {
    Prior _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PriorDefaultTypeInternal _Prior_default_instance_;

inline constexpr OrbitDuration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : duration_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR OrbitDuration::OrbitDuration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrbitDurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrbitDurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrbitDurationDefaultTypeInternal() {}
  union {
    OrbitDuration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrbitDurationDefaultTypeInternal _OrbitDuration_default_instance_;

inline constexpr VolumeSearch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        priors_{},
        participants_{},
        control_areas_{},
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VolumeSearch::VolumeSearch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VolumeSearchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VolumeSearchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VolumeSearchDefaultTypeInternal() {}
  union {
    VolumeSearch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VolumeSearchDefaultTypeInternal _VolumeSearch_default_instance_;

inline constexpr VisualId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VisualId::VisualId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VisualIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisualIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisualIdDefaultTypeInternal() {}
  union {
    VisualId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisualIdDefaultTypeInternal _VisualId_default_instance_;

inline constexpr Shadow::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Shadow::Shadow(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShadowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShadowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShadowDefaultTypeInternal() {}
  union {
    Shadow _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShadowDefaultTypeInternal _Shadow_default_instance_;

inline constexpr Scan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Scan::Scan(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanDefaultTypeInternal() {}
  union {
    Scan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanDefaultTypeInternal _Scan_default_instance_;

inline constexpr OrbitType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        duration_{nullptr},
        direction_{static_cast< ::anduril::tasks::v2::OrbitDirection >(0)},
        pattern_{static_cast< ::anduril::tasks::v2::OrbitPattern >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrbitType::OrbitType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrbitTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrbitTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrbitTypeDefaultTypeInternal() {}
  union {
    OrbitType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrbitTypeDefaultTypeInternal _OrbitType_default_instance_;

inline constexpr Monitor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Monitor::Monitor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MonitorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitorDefaultTypeInternal() {}
  union {
    Monitor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitorDefaultTypeInternal _Monitor_default_instance_;

inline constexpr Map::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr},
        min_niirs_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Map::Map(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapDefaultTypeInternal() {}
  union {
    Map _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapDefaultTypeInternal _Map_default_instance_;

inline constexpr Investigate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Investigate::Investigate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InvestigateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvestigateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvestigateDefaultTypeInternal() {}
  union {
    Investigate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvestigateDefaultTypeInternal _Investigate_default_instance_;

inline constexpr ImproveTrackQuality::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        termination_track_quality_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ImproveTrackQuality::ImproveTrackQuality(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImproveTrackQualityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImproveTrackQualityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImproveTrackQualityDefaultTypeInternal() {}
  union {
    ImproveTrackQuality _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImproveTrackQualityDefaultTypeInternal _ImproveTrackQuality_default_instance_;

inline constexpr GimbalPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{nullptr},
        point_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalPoint::GimbalPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GimbalPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalPointDefaultTypeInternal() {}
  union {
    GimbalPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalPointDefaultTypeInternal _GimbalPoint_default_instance_;

inline constexpr BattleDamageAssessment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BattleDamageAssessment::BattleDamageAssessment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BattleDamageAssessmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BattleDamageAssessmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BattleDamageAssessmentDefaultTypeInternal() {}
  union {
    BattleDamageAssessment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BattleDamageAssessmentDefaultTypeInternal _BattleDamageAssessment_default_instance_;

inline constexpr AreaSearch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        priors_{},
        participants_{},
        control_areas_{},
        objective_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AreaSearch::AreaSearch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AreaSearchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaSearchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaSearchDefaultTypeInternal() {}
  union {
    AreaSearch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaSearchDefaultTypeInternal _AreaSearch_default_instance_;

inline constexpr LoiterType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loiter_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR LoiterType::LoiterType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoiterTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoiterTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoiterTypeDefaultTypeInternal() {}
  union {
    LoiterType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoiterTypeDefaultTypeInternal _LoiterType_default_instance_;

inline constexpr Loiter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        loiter_type_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Loiter::Loiter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoiterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoiterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoiterDefaultTypeInternal() {}
  union {
    Loiter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoiterDefaultTypeInternal _Loiter_default_instance_;
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Investigate, _impl_.parameters_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VisualId, _impl_.parameters_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Map, _impl_.min_niirs_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_.loiter_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Loiter, _impl_.parameters_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.priors_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.participants_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AreaSearch, _impl_.control_areas_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.priors_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.participants_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::VolumeSearch, _impl_.control_areas_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ImproveTrackQuality, _impl_.termination_track_quality_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Shadow, _impl_.parameters_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _impl_.loiter_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_.pattern_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitType, _impl_.duration_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _impl_.duration_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _impl_.prior_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.speed_m_s_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.standoff_distance_m_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.standoff_angle_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ISRParameters, _impl_.expiration_time_ms_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_.point_type_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AzimuthElevationPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AzimuthElevationPoint, _impl_.azimuth_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::AzimuthElevationPoint, _impl_.elevation_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::FramePoint, _impl_.timestamp_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Monitor, _impl_.objective_),
        0,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Scan, _impl_.parameters_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::BattleDamageAssessment, _impl_.parameters_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::anduril::tasks::v2::Investigate)},
        {12, 22, -1, sizeof(::anduril::tasks::v2::VisualId)},
        {24, 35, -1, sizeof(::anduril::tasks::v2::Map)},
        {38, 49, -1, sizeof(::anduril::tasks::v2::Loiter)},
        {52, 64, -1, sizeof(::anduril::tasks::v2::AreaSearch)},
        {68, 80, -1, sizeof(::anduril::tasks::v2::VolumeSearch)},
        {84, 94, -1, sizeof(::anduril::tasks::v2::ImproveTrackQuality)},
        {96, 106, -1, sizeof(::anduril::tasks::v2::Shadow)},
        {108, -1, -1, sizeof(::anduril::tasks::v2::LoiterType)},
        {118, 129, -1, sizeof(::anduril::tasks::v2::OrbitType)},
        {132, -1, -1, sizeof(::anduril::tasks::v2::OrbitDuration)},
        {143, -1, -1, sizeof(::anduril::tasks::v2::Prior)},
        {154, 166, -1, sizeof(::anduril::tasks::v2::ISRParameters)},
        {170, 183, -1, sizeof(::anduril::tasks::v2::GimbalPoint)},
        {187, -1, -1, sizeof(::anduril::tasks::v2::AzimuthElevationPoint)},
        {197, 208, -1, sizeof(::anduril::tasks::v2::FramePoint)},
        {211, -1, -1, sizeof(::anduril::tasks::v2::GimbalZoom)},
        {222, 231, -1, sizeof(::anduril::tasks::v2::Monitor)},
        {232, 242, -1, sizeof(::anduril::tasks::v2::Scan)},
        {244, 254, -1, sizeof(::anduril::tasks::v2::BattleDamageAssessment)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::tasks::v2::_Investigate_default_instance_._instance,
    &::anduril::tasks::v2::_VisualId_default_instance_._instance,
    &::anduril::tasks::v2::_Map_default_instance_._instance,
    &::anduril::tasks::v2::_Loiter_default_instance_._instance,
    &::anduril::tasks::v2::_AreaSearch_default_instance_._instance,
    &::anduril::tasks::v2::_VolumeSearch_default_instance_._instance,
    &::anduril::tasks::v2::_ImproveTrackQuality_default_instance_._instance,
    &::anduril::tasks::v2::_Shadow_default_instance_._instance,
    &::anduril::tasks::v2::_LoiterType_default_instance_._instance,
    &::anduril::tasks::v2::_OrbitType_default_instance_._instance,
    &::anduril::tasks::v2::_OrbitDuration_default_instance_._instance,
    &::anduril::tasks::v2::_Prior_default_instance_._instance,
    &::anduril::tasks::v2::_ISRParameters_default_instance_._instance,
    &::anduril::tasks::v2::_GimbalPoint_default_instance_._instance,
    &::anduril::tasks::v2::_AzimuthElevationPoint_default_instance_._instance,
    &::anduril::tasks::v2::_FramePoint_default_instance_._instance,
    &::anduril::tasks::v2::_GimbalZoom_default_instance_._instance,
    &::anduril::tasks::v2::_Monitor_default_instance_._instance,
    &::anduril::tasks::v2::_Scan_default_instance_._instance,
    &::anduril::tasks::v2::_BattleDamageAssessment_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%anduril/tasks/v2/shared/isr.pub.proto\022"
    "\020anduril.tasks.v2\032!anduril/tasks/v2/comm"
    "on.pub.proto\032$anduril/tasks/v2/objective"
    ".pub.proto\032\037google/protobuf/timestamp.pr"
    "oto\032\036google/protobuf/wrappers.proto\"\211\001\n\013"
    "Investigate\0229\n\tobjective\030\001 \001(\0132\033.anduril"
    ".tasks.v2.ObjectiveR\tobjective\022\?\n\nparame"
    "ters\030\002 \001(\0132\037.anduril.tasks.v2.ISRParamet"
    "ersR\nparameters\"\206\001\n\010VisualId\0229\n\tobjectiv"
    "e\030\001 \001(\0132\033.anduril.tasks.v2.ObjectiveR\tob"
    "jective\022\?\n\nparameters\030\002 \001(\0132\037.anduril.ta"
    "sks.v2.ISRParametersR\nparameters\"\274\001\n\003Map"
    "\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks.v2.O"
    "bjectiveR\tobjective\022\?\n\nparameters\030\002 \001(\0132"
    "\037.anduril.tasks.v2.ISRParametersR\nparame"
    "ters\0229\n\tmin_niirs\030\003 \001(\0132\034.google.protobu"
    "f.UInt32ValueR\010minNiirs\"\303\001\n\006Loiter\0229\n\tob"
    "jective\030\001 \001(\0132\033.anduril.tasks.v2.Objecti"
    "veR\tobjective\022=\n\013loiter_type\030\002 \001(\0132\034.and"
    "uril.tasks.v2.LoiterTypeR\nloiterType\022\?\n\n"
    "parameters\030\003 \001(\0132\037.anduril.tasks.v2.ISRP"
    "arametersR\nparameters\"\371\001\n\nAreaSearch\0229\n\t"
    "objective\030\001 \001(\0132\033.anduril.tasks.v2.Objec"
    "tiveR\tobjective\022/\n\006priors\030\002 \003(\0132\027.anduri"
    "l.tasks.v2.PriorR\006priors\022;\n\014participants"
    "\030\003 \003(\0132\027.anduril.tasks.v2.AgentR\014partici"
    "pants\022B\n\rcontrol_areas\030\004 \003(\0132\035.anduril.t"
    "asks.v2.ControlAreaR\014controlAreas\"\373\001\n\014Vo"
    "lumeSearch\0229\n\tobjective\030\001 \001(\0132\033.anduril."
    "tasks.v2.ObjectiveR\tobjective\022/\n\006priors\030"
    "\002 \003(\0132\027.anduril.tasks.v2.PriorR\006priors\022;"
    "\n\014participants\030\003 \003(\0132\027.anduril.tasks.v2."
    "AgentR\014participants\022B\n\rcontrol_areas\030\004 \003"
    "(\0132\035.anduril.tasks.v2.ControlAreaR\014contr"
    "olAreas\"\214\001\n\023ImproveTrackQuality\0229\n\tobjec"
    "tive\030\001 \001(\0132\033.anduril.tasks.v2.ObjectiveR"
    "\tobjective\022:\n\031termination_track_quality\030"
    "\002 \001(\rR\027terminationTrackQuality\"\204\001\n\006Shado"
    "w\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks.v2."
    "ObjectiveR\tobjective\022\?\n\nparameters\030\002 \001(\013"
    "2\037.anduril.tasks.v2.ISRParametersR\nparam"
    "eters\"Y\n\nLoiterType\022<\n\norbit_type\030\001 \001(\0132"
    "\033.anduril.tasks.v2.OrbitTypeH\000R\torbitTyp"
    "eB\r\n\013loiter_type\"\302\001\n\tOrbitType\022>\n\tdirect"
    "ion\030\001 \001(\0162 .anduril.tasks.v2.OrbitDirect"
    "ionR\tdirection\0228\n\007pattern\030\002 \001(\0162\036.anduri"
    "l.tasks.v2.OrbitPatternR\007pattern\022;\n\010dura"
    "tion\030\003 \001(\0132\037.anduril.tasks.v2.OrbitDurat"
    "ionR\010duration\"\213\001\n\rOrbitDuration\022H\n\016durat"
    "ion_range\030\001 \001(\0132\037.anduril.tasks.v2.Durat"
    "ionRangeH\000R\rdurationRange\022$\n\rnum_of_orbi"
    "ts\030\002 \001(\004H\000R\013numOfOrbitsB\n\n\010duration\"`\n\005P"
    "rior\022\035\n\tentity_id\030\001 \001(\tH\000R\010entityId\022/\n\005p"
    "oint\030\005 \001(\0132\027.anduril.tasks.v2.PointH\000R\005p"
    "ointB\007\n\005prior\"\261\002\n\rISRParameters\0227\n\tspeed"
    "_m_s\030\002 \001(\0132\033.google.protobuf.FloatValueR"
    "\007speedMS\022K\n\023standoff_distance_m\030\003 \001(\0132\033."
    "google.protobuf.FloatValueR\021standoffDist"
    "anceM\022B\n\016standoff_angle\030\005 \001(\0132\033.google.p"
    "rotobuf.FloatValueR\rstandoffAngle\022J\n\022exp"
    "iration_time_ms\030\006 \001(\0132\034.google.protobuf."
    "UInt64ValueR\020expirationTimeMsJ\004\010\001\020\002J\004\010\004\020"
    "\005\"\265\002\n\013GimbalPoint\0226\n\007look_at\030\001 \001(\0132\033.and"
    "uril.tasks.v2.ObjectiveH\000R\006lookAt\022X\n\022cel"
    "estial_location\030\002 \001(\0132\'.anduril.tasks.v2"
    ".AzimuthElevationPointH\000R\021celestialLocat"
    "ion\022E\n\016frame_location\030\004 \001(\0132\034.anduril.ta"
    "sks.v2.FramePointH\000R\rframeLocation\022\?\n\npa"
    "rameters\030\003 \001(\0132\037.anduril.tasks.v2.ISRPar"
    "ametersR\nparametersB\014\n\npoint_type\"O\n\025Azi"
    "muthElevationPoint\022\030\n\007azimuth\030\001 \001(\001R\007azi"
    "muth\022\034\n\televation\030\002 \001(\001R\televation\"b\n\nFr"
    "amePoint\022\014\n\001x\030\001 \001(\002R\001x\022\014\n\001y\030\002 \001(\002R\001y\0228\n\t"
    "timestamp\030\003 \001(\0132\032.google.protobuf.Timest"
    "ampR\ttimestamp\"\256\001\n\nGimbalZoom\022L\n\022set_hor"
    "izontal_fov\030\001 \001(\0132\034.google.protobuf.Doub"
    "leValueH\000R\020setHorizontalFov\022J\n\021set_magni"
    "fication\030\002 \001(\0132\033.google.protobuf.FloatVa"
    "lueH\000R\020setMagnificationB\006\n\004mode\"P\n\007Monit"
    "or\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks.v2"
    ".ObjectiveR\tobjectiveJ\004\010\002\020\003J\004\010\003\020\004\"\202\001\n\004Sc"
    "an\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks.v2"
    ".ObjectiveR\tobjective\022\?\n\nparameters\030\002 \001("
    "\0132\037.anduril.tasks.v2.ISRParametersR\npara"
    "meters\"\224\001\n\026BattleDamageAssessment\0229\n\tobj"
    "ective\030\001 \001(\0132\033.anduril.tasks.v2.Objectiv"
    "eR\tobjective\022\?\n\nparameters\030\002 \001(\0132\037.andur"
    "il.tasks.v2.ISRParametersR\nparameters*l\n"
    "\016OrbitDirection\022%\n!ORBIT_DIRECTION_DIREC"
    "TION_INVALID\020\000\022\031\n\025ORBIT_DIRECTION_RIGHT\020"
    "\001\022\030\n\024ORBIT_DIRECTION_LEFT\020\002*\200\001\n\014OrbitPat"
    "tern\022\031\n\025ORBIT_PATTERN_INVALID\020\000\022\030\n\024ORBIT"
    "_PATTERN_CIRCLE\020\001\022\033\n\027ORBIT_PATTERN_RACET"
    "RACK\020\002\022\036\n\032ORBIT_PATTERN_FIGURE_EIGHT\020\003B\304"
    "\001\n\024com.anduril.tasks.v2B\013IsrPubProtoP\001Z="
    "ghe.anduril.dev/anduril/andurilapis-go/a"
    "nduril/tasks/v2;tasks\242\002\003ATX\252\002\020Anduril.Ta"
    "sks.V2\312\002\020Anduril\\Tasks\\V2\342\002\034Anduril\\Task"
    "s\\V2\\GPBMetadata\352\002\022Anduril::Tasks::V2b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_deps[4] =
    {
        &::descriptor_table_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto,
        &::descriptor_table_anduril_2ftasks_2fv2_2fobjective_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto = {
    false,
    false,
    3965,
    descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    "anduril/tasks/v2/shared/isr.pub.proto",
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_once,
    descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto_deps,
    4,
    20,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
};
namespace anduril {
namespace tasks {
namespace v2 {
const ::google::protobuf::EnumDescriptor* OrbitDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t OrbitDirection_internal_data_[] = {
    196608u, 0u, };
bool OrbitDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* OrbitPattern_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t OrbitPattern_internal_data_[] = {
    262144u, 0u, };
bool OrbitPattern_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class Investigate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Investigate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Investigate, _impl_._has_bits_);
};

void Investigate::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Investigate::Investigate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Investigate)
}
inline PROTOBUF_NDEBUG_INLINE Investigate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Investigate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Investigate::Investigate(
    ::google::protobuf::Arena* arena,
    const Investigate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Investigate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Investigate)
}
inline PROTOBUF_NDEBUG_INLINE Investigate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Investigate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Investigate::~Investigate() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Investigate)
  SharedDtor(*this);
}
inline void Investigate::SharedDtor(MessageLite& self) {
  Investigate& this_ = static_cast<Investigate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* Investigate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Investigate(arena);
}
constexpr auto Investigate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Investigate),
                                            alignof(Investigate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Investigate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Investigate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Investigate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Investigate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Investigate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Investigate>(), &Investigate::ByteSizeLong,
            &Investigate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Investigate, _impl_._cached_size_),
        false,
    },
    &Investigate::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Investigate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Investigate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Investigate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Investigate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Investigate, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Investigate, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Investigate, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Investigate, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Investigate::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Investigate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Investigate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Investigate& this_ = static_cast<const Investigate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Investigate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Investigate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Investigate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Investigate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Investigate::ByteSizeLong(const MessageLite& base) {
          const Investigate& this_ = static_cast<const Investigate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Investigate::ByteSizeLong() const {
          const Investigate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Investigate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Investigate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Investigate*>(&to_msg);
  auto& from = static_cast<const Investigate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Investigate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Investigate::CopyFrom(const Investigate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Investigate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Investigate::InternalSwap(Investigate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Investigate, _impl_.parameters_)
      + sizeof(Investigate::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Investigate, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Investigate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VisualId::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VisualId>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VisualId, _impl_._has_bits_);
};

void VisualId::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VisualId::VisualId(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.VisualId)
}
inline PROTOBUF_NDEBUG_INLINE VisualId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::VisualId& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VisualId::VisualId(
    ::google::protobuf::Arena* arena,
    const VisualId& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VisualId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.VisualId)
}
inline PROTOBUF_NDEBUG_INLINE VisualId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VisualId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
VisualId::~VisualId() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.VisualId)
  SharedDtor(*this);
}
inline void VisualId::SharedDtor(MessageLite& self) {
  VisualId& this_ = static_cast<VisualId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* VisualId::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VisualId(arena);
}
constexpr auto VisualId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VisualId),
                                            alignof(VisualId));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VisualId::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VisualId_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VisualId::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VisualId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VisualId::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VisualId>(), &VisualId::ByteSizeLong,
            &VisualId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VisualId, _impl_._cached_size_),
        false,
    },
    &VisualId::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VisualId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VisualId::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VisualId, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::VisualId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VisualId, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VisualId, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(VisualId, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(VisualId, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void VisualId::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.VisualId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VisualId::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VisualId& this_ = static_cast<const VisualId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VisualId::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VisualId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.VisualId)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.VisualId)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VisualId::ByteSizeLong(const MessageLite& base) {
          const VisualId& this_ = static_cast<const VisualId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VisualId::ByteSizeLong() const {
          const VisualId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.VisualId)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VisualId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VisualId*>(&to_msg);
  auto& from = static_cast<const VisualId&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.VisualId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisualId::CopyFrom(const VisualId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.VisualId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VisualId::InternalSwap(VisualId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisualId, _impl_.parameters_)
      + sizeof(VisualId::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(VisualId, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata VisualId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Map::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Map>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Map, _impl_._has_bits_);
};

void Map::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Map::clear_min_niirs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_niirs_ != nullptr) _impl_.min_niirs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Map::Map(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Map)
}
inline PROTOBUF_NDEBUG_INLINE Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Map& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Map::Map(
    ::google::protobuf::Arena* arena,
    const Map& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Map* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;
  _impl_.min_niirs_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::UInt32Value>(
                              arena, *from._impl_.min_niirs_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Map)
}
inline PROTOBUF_NDEBUG_INLINE Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Map::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, min_niirs_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::min_niirs_));
}
Map::~Map() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Map)
  SharedDtor(*this);
}
inline void Map::SharedDtor(MessageLite& self) {
  Map& this_ = static_cast<Map&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.parameters_;
  delete this_._impl_.min_niirs_;
  this_._impl_.~Impl_();
}

inline void* Map::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Map(arena);
}
constexpr auto Map::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Map),
                                            alignof(Map));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Map::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Map_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Map::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Map>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Map::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Map>(), &Map::ByteSizeLong,
            &Map::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Map, _impl_._cached_size_),
        false,
    },
    &Map::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Map::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Map::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Map, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Map>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Map, _impl_.objective_)}},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Map, _impl_.parameters_)}},
    // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Map, _impl_.min_niirs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
    {PROTOBUF_FIELD_OFFSET(Map, _impl_.min_niirs_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::UInt32Value>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Map::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Map)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.min_niirs_ != nullptr);
      _impl_.min_niirs_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Map::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Map& this_ = static_cast<const Map&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Map::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Map& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Map)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.min_niirs_, this_._impl_.min_niirs_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Map)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Map::ByteSizeLong(const MessageLite& base) {
          const Map& this_ = static_cast<const Map&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Map::ByteSizeLong() const {
          const Map& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Map)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
            // .google.protobuf.UInt32Value min_niirs = 3 [json_name = "minNiirs"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.min_niirs_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Map::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Map*>(&to_msg);
  auto& from = static_cast<const Map&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Map)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.min_niirs_ != nullptr);
      if (_this->_impl_.min_niirs_ == nullptr) {
        _this->_impl_.min_niirs_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::UInt32Value>(arena, *from._impl_.min_niirs_);
      } else {
        _this->_impl_.min_niirs_->MergeFrom(*from._impl_.min_niirs_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Map::CopyFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Map::InternalSwap(Map* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Map, _impl_.min_niirs_)
      + sizeof(Map::_impl_.min_niirs_)
      - PROTOBUF_FIELD_OFFSET(Map, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Map::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Loiter::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Loiter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Loiter, _impl_._has_bits_);
};

void Loiter::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Loiter::Loiter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Loiter)
}
inline PROTOBUF_NDEBUG_INLINE Loiter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Loiter& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Loiter::Loiter(
    ::google::protobuf::Arena* arena,
    const Loiter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Loiter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.loiter_type_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::LoiterType>(
                              arena, *from._impl_.loiter_type_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Loiter)
}
inline PROTOBUF_NDEBUG_INLINE Loiter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Loiter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Loiter::~Loiter() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Loiter)
  SharedDtor(*this);
}
inline void Loiter::SharedDtor(MessageLite& self) {
  Loiter& this_ = static_cast<Loiter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.loiter_type_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* Loiter::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Loiter(arena);
}
constexpr auto Loiter::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Loiter),
                                            alignof(Loiter));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Loiter::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Loiter_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Loiter::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Loiter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Loiter::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Loiter>(), &Loiter::ByteSizeLong,
            &Loiter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Loiter, _impl_._cached_size_),
        false,
    },
    &Loiter::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Loiter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Loiter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Loiter, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Loiter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Loiter, _impl_.objective_)}},
    // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Loiter, _impl_.loiter_type_)}},
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Loiter, _impl_.parameters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Loiter, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
    {PROTOBUF_FIELD_OFFSET(Loiter, _impl_.loiter_type_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Loiter, _impl_.parameters_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::LoiterType>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Loiter::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Loiter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.loiter_type_ != nullptr);
      _impl_.loiter_type_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Loiter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Loiter& this_ = static_cast<const Loiter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Loiter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Loiter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Loiter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.loiter_type_, this_._impl_.loiter_type_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Loiter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Loiter::ByteSizeLong(const MessageLite& base) {
          const Loiter& this_ = static_cast<const Loiter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Loiter::ByteSizeLong() const {
          const Loiter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Loiter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.LoiterType loiter_type = 2 [json_name = "loiterType"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.loiter_type_);
            }
            // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Loiter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Loiter*>(&to_msg);
  auto& from = static_cast<const Loiter&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Loiter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.loiter_type_ != nullptr);
      if (_this->_impl_.loiter_type_ == nullptr) {
        _this->_impl_.loiter_type_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::LoiterType>(arena, *from._impl_.loiter_type_);
      } else {
        _this->_impl_.loiter_type_->MergeFrom(*from._impl_.loiter_type_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Loiter::CopyFrom(const Loiter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Loiter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Loiter::InternalSwap(Loiter* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Loiter, _impl_.parameters_)
      + sizeof(Loiter::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Loiter, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Loiter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AreaSearch::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AreaSearch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_._has_bits_);
};

void AreaSearch::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AreaSearch::clear_participants() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participants_.Clear();
}
void AreaSearch::clear_control_areas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_areas_.Clear();
}
AreaSearch::AreaSearch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.AreaSearch)
}
inline PROTOBUF_NDEBUG_INLINE AreaSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::AreaSearch& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        priors_{visibility, arena, from.priors_},
        participants_{visibility, arena, from.participants_},
        control_areas_{visibility, arena, from.control_areas_} {}

AreaSearch::AreaSearch(
    ::google::protobuf::Arena* arena,
    const AreaSearch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AreaSearch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.AreaSearch)
}
inline PROTOBUF_NDEBUG_INLINE AreaSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        priors_{visibility, arena},
        participants_{visibility, arena},
        control_areas_{visibility, arena} {}

inline void AreaSearch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
AreaSearch::~AreaSearch() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.AreaSearch)
  SharedDtor(*this);
}
inline void AreaSearch::SharedDtor(MessageLite& self) {
  AreaSearch& this_ = static_cast<AreaSearch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  this_._impl_.~Impl_();
}

inline void* AreaSearch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AreaSearch(arena);
}
constexpr auto AreaSearch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.priors_) +
          decltype(AreaSearch::_impl_.priors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.participants_) +
          decltype(AreaSearch::_impl_.participants_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.control_areas_) +
          decltype(AreaSearch::_impl_.control_areas_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AreaSearch), alignof(AreaSearch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AreaSearch::PlacementNew_,
                                 sizeof(AreaSearch),
                                 alignof(AreaSearch));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AreaSearch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AreaSearch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AreaSearch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AreaSearch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AreaSearch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AreaSearch>(), &AreaSearch::ByteSizeLong,
            &AreaSearch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_._cached_size_),
        false,
    },
    &AreaSearch::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AreaSearch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> AreaSearch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::AreaSearch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.control_areas_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.objective_)}},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.priors_)}},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.participants_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.priors_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.participants_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {PROTOBUF_FIELD_OFFSET(AreaSearch, _impl_.control_areas_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Prior>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Agent>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ControlArea>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AreaSearch::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.AreaSearch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.priors_.Clear();
  _impl_.participants_.Clear();
  _impl_.control_areas_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AreaSearch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AreaSearch& this_ = static_cast<const AreaSearch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AreaSearch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AreaSearch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.AreaSearch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_priors_size());
               i < n; i++) {
            const auto& repfield = this_._internal_priors().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_participants_size());
               i < n; i++) {
            const auto& repfield = this_._internal_participants().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_control_areas_size());
               i < n; i++) {
            const auto& repfield = this_._internal_control_areas().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.AreaSearch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AreaSearch::ByteSizeLong(const MessageLite& base) {
          const AreaSearch& this_ = static_cast<const AreaSearch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AreaSearch::ByteSizeLong() const {
          const AreaSearch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.AreaSearch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
            {
              total_size += 1UL * this_._internal_priors_size();
              for (const auto& msg : this_._internal_priors()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
            {
              total_size += 1UL * this_._internal_participants_size();
              for (const auto& msg : this_._internal_participants()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
            {
              total_size += 1UL * this_._internal_control_areas_size();
              for (const auto& msg : this_._internal_control_areas()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AreaSearch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AreaSearch*>(&to_msg);
  auto& from = static_cast<const AreaSearch&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.AreaSearch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_priors()->MergeFrom(
      from._internal_priors());
  _this->_internal_mutable_participants()->MergeFrom(
      from._internal_participants());
  _this->_internal_mutable_control_areas()->MergeFrom(
      from._internal_control_areas());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.objective_ != nullptr);
    if (_this->_impl_.objective_ == nullptr) {
      _this->_impl_.objective_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
    } else {
      _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreaSearch::CopyFrom(const AreaSearch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.AreaSearch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AreaSearch::InternalSwap(AreaSearch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.priors_.InternalSwap(&other->_impl_.priors_);
  _impl_.participants_.InternalSwap(&other->_impl_.participants_);
  _impl_.control_areas_.InternalSwap(&other->_impl_.control_areas_);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata AreaSearch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VolumeSearch::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VolumeSearch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_._has_bits_);
};

void VolumeSearch::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VolumeSearch::clear_participants() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participants_.Clear();
}
void VolumeSearch::clear_control_areas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_areas_.Clear();
}
VolumeSearch::VolumeSearch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.VolumeSearch)
}
inline PROTOBUF_NDEBUG_INLINE VolumeSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::VolumeSearch& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        priors_{visibility, arena, from.priors_},
        participants_{visibility, arena, from.participants_},
        control_areas_{visibility, arena, from.control_areas_} {}

VolumeSearch::VolumeSearch(
    ::google::protobuf::Arena* arena,
    const VolumeSearch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VolumeSearch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.VolumeSearch)
}
inline PROTOBUF_NDEBUG_INLINE VolumeSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        priors_{visibility, arena},
        participants_{visibility, arena},
        control_areas_{visibility, arena} {}

inline void VolumeSearch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
VolumeSearch::~VolumeSearch() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.VolumeSearch)
  SharedDtor(*this);
}
inline void VolumeSearch::SharedDtor(MessageLite& self) {
  VolumeSearch& this_ = static_cast<VolumeSearch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  this_._impl_.~Impl_();
}

inline void* VolumeSearch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VolumeSearch(arena);
}
constexpr auto VolumeSearch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.priors_) +
          decltype(VolumeSearch::_impl_.priors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.participants_) +
          decltype(VolumeSearch::_impl_.participants_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.control_areas_) +
          decltype(VolumeSearch::_impl_.control_areas_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(VolumeSearch), alignof(VolumeSearch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&VolumeSearch::PlacementNew_,
                                 sizeof(VolumeSearch),
                                 alignof(VolumeSearch));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VolumeSearch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VolumeSearch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VolumeSearch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VolumeSearch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VolumeSearch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VolumeSearch>(), &VolumeSearch::ByteSizeLong,
            &VolumeSearch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_._cached_size_),
        false,
    },
    &VolumeSearch::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VolumeSearch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> VolumeSearch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::VolumeSearch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.control_areas_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.objective_)}},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.priors_)}},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.participants_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.priors_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.participants_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
    {PROTOBUF_FIELD_OFFSET(VolumeSearch, _impl_.control_areas_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Prior>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Agent>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ControlArea>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void VolumeSearch::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.VolumeSearch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.priors_.Clear();
  _impl_.participants_.Clear();
  _impl_.control_areas_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VolumeSearch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VolumeSearch& this_ = static_cast<const VolumeSearch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VolumeSearch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VolumeSearch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.VolumeSearch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_priors_size());
               i < n; i++) {
            const auto& repfield = this_._internal_priors().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_participants_size());
               i < n; i++) {
            const auto& repfield = this_._internal_participants().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_control_areas_size());
               i < n; i++) {
            const auto& repfield = this_._internal_control_areas().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.VolumeSearch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VolumeSearch::ByteSizeLong(const MessageLite& base) {
          const VolumeSearch& this_ = static_cast<const VolumeSearch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VolumeSearch::ByteSizeLong() const {
          const VolumeSearch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.VolumeSearch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.tasks.v2.Prior priors = 2 [json_name = "priors"];
            {
              total_size += 1UL * this_._internal_priors_size();
              for (const auto& msg : this_._internal_priors()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .anduril.tasks.v2.Agent participants = 3 [json_name = "participants"];
            {
              total_size += 1UL * this_._internal_participants_size();
              for (const auto& msg : this_._internal_participants()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .anduril.tasks.v2.ControlArea control_areas = 4 [json_name = "controlAreas"];
            {
              total_size += 1UL * this_._internal_control_areas_size();
              for (const auto& msg : this_._internal_control_areas()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VolumeSearch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VolumeSearch*>(&to_msg);
  auto& from = static_cast<const VolumeSearch&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.VolumeSearch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_priors()->MergeFrom(
      from._internal_priors());
  _this->_internal_mutable_participants()->MergeFrom(
      from._internal_participants());
  _this->_internal_mutable_control_areas()->MergeFrom(
      from._internal_control_areas());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.objective_ != nullptr);
    if (_this->_impl_.objective_ == nullptr) {
      _this->_impl_.objective_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
    } else {
      _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VolumeSearch::CopyFrom(const VolumeSearch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.VolumeSearch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VolumeSearch::InternalSwap(VolumeSearch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.priors_.InternalSwap(&other->_impl_.priors_);
  _impl_.participants_.InternalSwap(&other->_impl_.participants_);
  _impl_.control_areas_.InternalSwap(&other->_impl_.control_areas_);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata VolumeSearch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImproveTrackQuality::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ImproveTrackQuality>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_._has_bits_);
};

void ImproveTrackQuality::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ImproveTrackQuality::ImproveTrackQuality(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.ImproveTrackQuality)
}
inline PROTOBUF_NDEBUG_INLINE ImproveTrackQuality::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::ImproveTrackQuality& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ImproveTrackQuality::ImproveTrackQuality(
    ::google::protobuf::Arena* arena,
    const ImproveTrackQuality& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImproveTrackQuality* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.termination_track_quality_ = from._impl_.termination_track_quality_;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.ImproveTrackQuality)
}
inline PROTOBUF_NDEBUG_INLINE ImproveTrackQuality::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ImproveTrackQuality::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, termination_track_quality_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::termination_track_quality_));
}
ImproveTrackQuality::~ImproveTrackQuality() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.ImproveTrackQuality)
  SharedDtor(*this);
}
inline void ImproveTrackQuality::SharedDtor(MessageLite& self) {
  ImproveTrackQuality& this_ = static_cast<ImproveTrackQuality&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  this_._impl_.~Impl_();
}

inline void* ImproveTrackQuality::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ImproveTrackQuality(arena);
}
constexpr auto ImproveTrackQuality::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ImproveTrackQuality),
                                            alignof(ImproveTrackQuality));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ImproveTrackQuality::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ImproveTrackQuality_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ImproveTrackQuality::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ImproveTrackQuality>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ImproveTrackQuality::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ImproveTrackQuality>(), &ImproveTrackQuality::ByteSizeLong,
            &ImproveTrackQuality::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_._cached_size_),
        false,
    },
    &ImproveTrackQuality::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ImproveTrackQuality::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ImproveTrackQuality::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::ImproveTrackQuality>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImproveTrackQuality, _impl_.termination_track_quality_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.termination_track_quality_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
    {PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.termination_track_quality_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ImproveTrackQuality::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.ImproveTrackQuality)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_.termination_track_quality_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ImproveTrackQuality::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ImproveTrackQuality& this_ = static_cast<const ImproveTrackQuality&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ImproveTrackQuality::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ImproveTrackQuality& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.ImproveTrackQuality)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
          if (this_._internal_termination_track_quality() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_termination_track_quality(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.ImproveTrackQuality)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ImproveTrackQuality::ByteSizeLong(const MessageLite& base) {
          const ImproveTrackQuality& this_ = static_cast<const ImproveTrackQuality&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ImproveTrackQuality::ByteSizeLong() const {
          const ImproveTrackQuality& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.ImproveTrackQuality)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
          }
           {
            // uint32 termination_track_quality = 2 [json_name = "terminationTrackQuality"];
            if (this_._internal_termination_track_quality() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_termination_track_quality());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ImproveTrackQuality::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImproveTrackQuality*>(&to_msg);
  auto& from = static_cast<const ImproveTrackQuality&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.ImproveTrackQuality)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.objective_ != nullptr);
    if (_this->_impl_.objective_ == nullptr) {
      _this->_impl_.objective_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
    } else {
      _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
    }
  }
  if (from._internal_termination_track_quality() != 0) {
    _this->_impl_.termination_track_quality_ = from._impl_.termination_track_quality_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImproveTrackQuality::CopyFrom(const ImproveTrackQuality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.ImproveTrackQuality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImproveTrackQuality::InternalSwap(ImproveTrackQuality* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.termination_track_quality_)
      + sizeof(ImproveTrackQuality::_impl_.termination_track_quality_)
      - PROTOBUF_FIELD_OFFSET(ImproveTrackQuality, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata ImproveTrackQuality::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Shadow::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Shadow>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Shadow, _impl_._has_bits_);
};

void Shadow::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Shadow::Shadow(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Shadow)
}
inline PROTOBUF_NDEBUG_INLINE Shadow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Shadow& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Shadow::Shadow(
    ::google::protobuf::Arena* arena,
    const Shadow& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Shadow* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Shadow)
}
inline PROTOBUF_NDEBUG_INLINE Shadow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Shadow::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Shadow::~Shadow() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Shadow)
  SharedDtor(*this);
}
inline void Shadow::SharedDtor(MessageLite& self) {
  Shadow& this_ = static_cast<Shadow&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* Shadow::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Shadow(arena);
}
constexpr auto Shadow::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Shadow),
                                            alignof(Shadow));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Shadow::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Shadow_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Shadow::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Shadow>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Shadow::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Shadow>(), &Shadow::ByteSizeLong,
            &Shadow::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Shadow, _impl_._cached_size_),
        false,
    },
    &Shadow::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Shadow::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Shadow::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Shadow, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Shadow>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Shadow, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Shadow, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Shadow, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Shadow, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Shadow::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Shadow)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Shadow::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Shadow& this_ = static_cast<const Shadow&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Shadow::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Shadow& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Shadow)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Shadow)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Shadow::ByteSizeLong(const MessageLite& base) {
          const Shadow& this_ = static_cast<const Shadow&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Shadow::ByteSizeLong() const {
          const Shadow& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Shadow)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Shadow::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Shadow*>(&to_msg);
  auto& from = static_cast<const Shadow&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Shadow)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Shadow::CopyFrom(const Shadow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Shadow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Shadow::InternalSwap(Shadow* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Shadow, _impl_.parameters_)
      + sizeof(Shadow::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Shadow, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Shadow::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoiterType::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::LoiterType, _impl_._oneof_case_);
};

void LoiterType::set_allocated_orbit_type(::anduril::tasks::v2::OrbitType* orbit_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_loiter_type();
  if (orbit_type) {
    ::google::protobuf::Arena* submessage_arena = orbit_type->GetArena();
    if (message_arena != submessage_arena) {
      orbit_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, orbit_type, submessage_arena);
    }
    set_has_orbit_type();
    _impl_.loiter_type_.orbit_type_ = orbit_type;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.LoiterType.orbit_type)
}
LoiterType::LoiterType(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.LoiterType)
}
inline PROTOBUF_NDEBUG_INLINE LoiterType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::LoiterType& from_msg)
      : loiter_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

LoiterType::LoiterType(
    ::google::protobuf::Arena* arena,
    const LoiterType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoiterType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (loiter_type_case()) {
    case LOITER_TYPE_NOT_SET:
      break;
      case kOrbitType:
        _impl_.loiter_type_.orbit_type_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::OrbitType>(arena, *from._impl_.loiter_type_.orbit_type_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.LoiterType)
}
inline PROTOBUF_NDEBUG_INLINE LoiterType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loiter_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void LoiterType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoiterType::~LoiterType() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.LoiterType)
  SharedDtor(*this);
}
inline void LoiterType::SharedDtor(MessageLite& self) {
  LoiterType& this_ = static_cast<LoiterType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_loiter_type()) {
    this_.clear_loiter_type();
  }
  this_._impl_.~Impl_();
}

void LoiterType::clear_loiter_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.LoiterType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (loiter_type_case()) {
    case kOrbitType: {
      if (GetArena() == nullptr) {
        delete _impl_.loiter_type_.orbit_type_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.loiter_type_.orbit_type_);
      }
      break;
    }
    case LOITER_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = LOITER_TYPE_NOT_SET;
}


inline void* LoiterType::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoiterType(arena);
}
constexpr auto LoiterType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LoiterType),
                                            alignof(LoiterType));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoiterType::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoiterType_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoiterType::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoiterType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoiterType::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoiterType>(), &LoiterType::ByteSizeLong,
            &LoiterType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoiterType, _impl_._cached_size_),
        false,
    },
    &LoiterType::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoiterType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LoiterType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::LoiterType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.OrbitType orbit_type = 1 [json_name = "orbitType"];
    {PROTOBUF_FIELD_OFFSET(LoiterType, _impl_.loiter_type_.orbit_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::OrbitType>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LoiterType::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.LoiterType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_loiter_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoiterType::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoiterType& this_ = static_cast<const LoiterType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoiterType::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoiterType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.LoiterType)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.tasks.v2.OrbitType orbit_type = 1 [json_name = "orbitType"];
          if (this_.loiter_type_case() == kOrbitType) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.loiter_type_.orbit_type_, this_._impl_.loiter_type_.orbit_type_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.LoiterType)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoiterType::ByteSizeLong(const MessageLite& base) {
          const LoiterType& this_ = static_cast<const LoiterType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoiterType::ByteSizeLong() const {
          const LoiterType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.LoiterType)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.loiter_type_case()) {
            // .anduril.tasks.v2.OrbitType orbit_type = 1 [json_name = "orbitType"];
            case kOrbitType: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.loiter_type_.orbit_type_);
              break;
            }
            case LOITER_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoiterType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoiterType*>(&to_msg);
  auto& from = static_cast<const LoiterType&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.LoiterType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_loiter_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kOrbitType: {
        if (oneof_needs_init) {
          _this->_impl_.loiter_type_.orbit_type_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::OrbitType>(arena, *from._impl_.loiter_type_.orbit_type_);
        } else {
          _this->_impl_.loiter_type_.orbit_type_->MergeFrom(from._internal_orbit_type());
        }
        break;
      }
      case LOITER_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoiterType::CopyFrom(const LoiterType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.LoiterType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoiterType::InternalSwap(LoiterType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.loiter_type_, other->_impl_.loiter_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata LoiterType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrbitType::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrbitType>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrbitType, _impl_._has_bits_);
};

OrbitType::OrbitType(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.OrbitType)
}
inline PROTOBUF_NDEBUG_INLINE OrbitType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::OrbitType& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

OrbitType::OrbitType(
    ::google::protobuf::Arena* arena,
    const OrbitType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrbitType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.duration_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::OrbitDuration>(
                              arena, *from._impl_.duration_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, direction_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, direction_),
           offsetof(Impl_, pattern_) -
               offsetof(Impl_, direction_) +
               sizeof(Impl_::pattern_));

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.OrbitType)
}
inline PROTOBUF_NDEBUG_INLINE OrbitType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OrbitType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, pattern_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::pattern_));
}
OrbitType::~OrbitType() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.OrbitType)
  SharedDtor(*this);
}
inline void OrbitType::SharedDtor(MessageLite& self) {
  OrbitType& this_ = static_cast<OrbitType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.duration_;
  this_._impl_.~Impl_();
}

inline void* OrbitType::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrbitType(arena);
}
constexpr auto OrbitType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrbitType),
                                            alignof(OrbitType));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrbitType::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrbitType_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrbitType::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrbitType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrbitType::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrbitType>(), &OrbitType::ByteSizeLong,
            &OrbitType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrbitType, _impl_._cached_size_),
        false,
    },
    &OrbitType::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrbitType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> OrbitType::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrbitType, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::OrbitType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrbitType, _impl_.direction_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.direction_)}},
    // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrbitType, _impl_.pattern_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.pattern_)}},
    // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.duration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
    {PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.pattern_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
    {PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.duration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::OrbitDuration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OrbitType::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.OrbitType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.duration_ != nullptr);
    _impl_.duration_->Clear();
  }
  ::memset(&_impl_.direction_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pattern_) -
      reinterpret_cast<char*>(&_impl_.direction_)) + sizeof(_impl_.pattern_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrbitType::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrbitType& this_ = static_cast<const OrbitType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrbitType::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrbitType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.OrbitType)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_direction(), target);
          }

          // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
          if (this_._internal_pattern() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_pattern(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.duration_, this_._impl_.duration_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.OrbitType)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrbitType::ByteSizeLong(const MessageLite& base) {
          const OrbitType& this_ = static_cast<const OrbitType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrbitType::ByteSizeLong() const {
          const OrbitType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.OrbitType)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .anduril.tasks.v2.OrbitDuration duration = 3 [json_name = "duration"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_);
            }
          }
           {
            // .anduril.tasks.v2.OrbitDirection direction = 1 [json_name = "direction"];
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
            // .anduril.tasks.v2.OrbitPattern pattern = 2 [json_name = "pattern"];
            if (this_._internal_pattern() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_pattern());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrbitType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrbitType*>(&to_msg);
  auto& from = static_cast<const OrbitType&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.OrbitType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.duration_ != nullptr);
    if (_this->_impl_.duration_ == nullptr) {
      _this->_impl_.duration_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::OrbitDuration>(arena, *from._impl_.duration_);
    } else {
      _this->_impl_.duration_->MergeFrom(*from._impl_.duration_);
    }
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_pattern() != 0) {
    _this->_impl_.pattern_ = from._impl_.pattern_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrbitType::CopyFrom(const OrbitType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.OrbitType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrbitType::InternalSwap(OrbitType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.pattern_)
      + sizeof(OrbitType::_impl_.pattern_)
      - PROTOBUF_FIELD_OFFSET(OrbitType, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata OrbitType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrbitDuration::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::OrbitDuration, _impl_._oneof_case_);
};

void OrbitDuration::set_allocated_duration_range(::anduril::tasks::v2::DurationRange* duration_range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_duration();
  if (duration_range) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(duration_range)->GetArena();
    if (message_arena != submessage_arena) {
      duration_range = ::google::protobuf::internal::GetOwnedMessage(message_arena, duration_range, submessage_arena);
    }
    set_has_duration_range();
    _impl_.duration_.duration_range_ = duration_range;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.OrbitDuration.duration_range)
}
void OrbitDuration::clear_duration_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (duration_case() == kDurationRange) {
    if (GetArena() == nullptr) {
      delete _impl_.duration_.duration_range_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.duration_.duration_range_);
    }
    clear_has_duration();
  }
}
OrbitDuration::OrbitDuration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.OrbitDuration)
}
inline PROTOBUF_NDEBUG_INLINE OrbitDuration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::OrbitDuration& from_msg)
      : duration_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

OrbitDuration::OrbitDuration(
    ::google::protobuf::Arena* arena,
    const OrbitDuration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrbitDuration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (duration_case()) {
    case DURATION_NOT_SET:
      break;
      case kDurationRange:
        _impl_.duration_.duration_range_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::DurationRange>(arena, *from._impl_.duration_.duration_range_);
        break;
      case kNumOfOrbits:
        _impl_.duration_.num_of_orbits_ = from._impl_.duration_.num_of_orbits_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.OrbitDuration)
}
inline PROTOBUF_NDEBUG_INLINE OrbitDuration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : duration_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void OrbitDuration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OrbitDuration::~OrbitDuration() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.OrbitDuration)
  SharedDtor(*this);
}
inline void OrbitDuration::SharedDtor(MessageLite& self) {
  OrbitDuration& this_ = static_cast<OrbitDuration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_duration()) {
    this_.clear_duration();
  }
  this_._impl_.~Impl_();
}

void OrbitDuration::clear_duration() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.OrbitDuration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (duration_case()) {
    case kDurationRange: {
      if (GetArena() == nullptr) {
        delete _impl_.duration_.duration_range_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.duration_.duration_range_);
      }
      break;
    }
    case kNumOfOrbits: {
      // No need to clear
      break;
    }
    case DURATION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DURATION_NOT_SET;
}


inline void* OrbitDuration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrbitDuration(arena);
}
constexpr auto OrbitDuration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrbitDuration),
                                            alignof(OrbitDuration));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrbitDuration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrbitDuration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrbitDuration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrbitDuration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrbitDuration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrbitDuration>(), &OrbitDuration::ByteSizeLong,
            &OrbitDuration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrbitDuration, _impl_._cached_size_),
        false,
    },
    &OrbitDuration::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrbitDuration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 0, 2> OrbitDuration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::OrbitDuration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.DurationRange duration_range = 1 [json_name = "durationRange"];
    {PROTOBUF_FIELD_OFFSET(OrbitDuration, _impl_.duration_.duration_range_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 num_of_orbits = 2 [json_name = "numOfOrbits"];
    {PROTOBUF_FIELD_OFFSET(OrbitDuration, _impl_.duration_.num_of_orbits_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::DurationRange>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OrbitDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.OrbitDuration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_duration();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrbitDuration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrbitDuration& this_ = static_cast<const OrbitDuration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrbitDuration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrbitDuration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.OrbitDuration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.duration_case()) {
            case kDurationRange: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.duration_.duration_range_, this_._impl_.duration_.duration_range_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kNumOfOrbits: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                  2, this_._internal_num_of_orbits(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.OrbitDuration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrbitDuration::ByteSizeLong(const MessageLite& base) {
          const OrbitDuration& this_ = static_cast<const OrbitDuration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrbitDuration::ByteSizeLong() const {
          const OrbitDuration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.OrbitDuration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.duration_case()) {
            // .anduril.tasks.v2.DurationRange duration_range = 1 [json_name = "durationRange"];
            case kDurationRange: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_.duration_range_);
              break;
            }
            // uint64 num_of_orbits = 2 [json_name = "numOfOrbits"];
            case kNumOfOrbits: {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_num_of_orbits());
              break;
            }
            case DURATION_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrbitDuration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrbitDuration*>(&to_msg);
  auto& from = static_cast<const OrbitDuration&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.OrbitDuration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_duration();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDurationRange: {
        if (oneof_needs_init) {
          _this->_impl_.duration_.duration_range_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::DurationRange>(arena, *from._impl_.duration_.duration_range_);
        } else {
          _this->_impl_.duration_.duration_range_->MergeFrom(from._internal_duration_range());
        }
        break;
      }
      case kNumOfOrbits: {
        _this->_impl_.duration_.num_of_orbits_ = from._impl_.duration_.num_of_orbits_;
        break;
      }
      case DURATION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrbitDuration::CopyFrom(const OrbitDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.OrbitDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrbitDuration::InternalSwap(OrbitDuration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.duration_, other->_impl_.duration_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata OrbitDuration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Prior::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Prior, _impl_._oneof_case_);
};

void Prior::set_allocated_point(::anduril::tasks::v2::Point* point) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_prior();
  if (point) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(point)->GetArena();
    if (message_arena != submessage_arena) {
      point = ::google::protobuf::internal::GetOwnedMessage(message_arena, point, submessage_arena);
    }
    set_has_point();
    _impl_.prior_.point_ = point;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.Prior.point)
}
void Prior::clear_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (prior_case() == kPoint) {
    if (GetArena() == nullptr) {
      delete _impl_.prior_.point_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.prior_.point_);
    }
    clear_has_prior();
  }
}
Prior::Prior(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Prior)
}
inline PROTOBUF_NDEBUG_INLINE Prior::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Prior& from_msg)
      : prior_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Prior::Prior(
    ::google::protobuf::Arena* arena,
    const Prior& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Prior* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (prior_case()) {
    case PRIOR_NOT_SET:
      break;
      case kEntityId:
        new (&_impl_.prior_.entity_id_) decltype(_impl_.prior_.entity_id_){arena, from._impl_.prior_.entity_id_};
        break;
      case kPoint:
        _impl_.prior_.point_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Point>(arena, *from._impl_.prior_.point_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Prior)
}
inline PROTOBUF_NDEBUG_INLINE Prior::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : prior_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Prior::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Prior::~Prior() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Prior)
  SharedDtor(*this);
}
inline void Prior::SharedDtor(MessageLite& self) {
  Prior& this_ = static_cast<Prior&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_prior()) {
    this_.clear_prior();
  }
  this_._impl_.~Impl_();
}

void Prior::clear_prior() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.Prior)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (prior_case()) {
    case kEntityId: {
      _impl_.prior_.entity_id_.Destroy();
      break;
    }
    case kPoint: {
      if (GetArena() == nullptr) {
        delete _impl_.prior_.point_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.prior_.point_);
      }
      break;
    }
    case PRIOR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PRIOR_NOT_SET;
}


inline void* Prior::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Prior(arena);
}
constexpr auto Prior::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Prior),
                                            alignof(Prior));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Prior::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Prior_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Prior::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Prior>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Prior::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Prior>(), &Prior::ByteSizeLong,
            &Prior::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Prior, _impl_._cached_size_),
        false,
    },
    &Prior::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Prior::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 40, 2> Prior::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967278,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Prior>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(Prior, _impl_.prior_.entity_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.tasks.v2.Point point = 5 [json_name = "point"];
    {PROTOBUF_FIELD_OFFSET(Prior, _impl_.prior_.point_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Point>()},
  }}, {{
    "\26\11\0\0\0\0\0\0"
    "anduril.tasks.v2.Prior"
    "entity_id"
  }},
};

PROTOBUF_NOINLINE void Prior::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Prior)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_prior();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Prior::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Prior& this_ = static_cast<const Prior&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Prior::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Prior& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Prior)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.prior_case()) {
            case kEntityId: {
              const std::string& _s = this_._internal_entity_id();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.tasks.v2.Prior.entity_id");
              target = stream->WriteStringMaybeAliased(1, _s, target);
              break;
            }
            case kPoint: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.prior_.point_, this_._impl_.prior_.point_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Prior)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Prior::ByteSizeLong(const MessageLite& base) {
          const Prior& this_ = static_cast<const Prior&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Prior::ByteSizeLong() const {
          const Prior& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Prior)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.prior_case()) {
            // string entity_id = 1 [json_name = "entityId"];
            case kEntityId: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_entity_id());
              break;
            }
            // .anduril.tasks.v2.Point point = 5 [json_name = "point"];
            case kPoint: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.prior_.point_);
              break;
            }
            case PRIOR_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Prior::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Prior*>(&to_msg);
  auto& from = static_cast<const Prior&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Prior)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_prior();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kEntityId: {
        if (oneof_needs_init) {
          _this->_impl_.prior_.entity_id_.InitDefault();
        }
        _this->_impl_.prior_.entity_id_.Set(from._internal_entity_id(), arena);
        break;
      }
      case kPoint: {
        if (oneof_needs_init) {
          _this->_impl_.prior_.point_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Point>(arena, *from._impl_.prior_.point_);
        } else {
          _this->_impl_.prior_.point_->MergeFrom(from._internal_point());
        }
        break;
      }
      case PRIOR_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Prior::CopyFrom(const Prior& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Prior)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Prior::InternalSwap(Prior* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.prior_, other->_impl_.prior_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Prior::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ISRParameters::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ISRParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_._has_bits_);
};

void ISRParameters::clear_speed_m_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.speed_m_s_ != nullptr) _impl_.speed_m_s_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ISRParameters::clear_standoff_distance_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.standoff_distance_m_ != nullptr) _impl_.standoff_distance_m_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ISRParameters::clear_standoff_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.standoff_angle_ != nullptr) _impl_.standoff_angle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ISRParameters::clear_expiration_time_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expiration_time_ms_ != nullptr) _impl_.expiration_time_ms_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ISRParameters::ISRParameters(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.ISRParameters)
}
inline PROTOBUF_NDEBUG_INLINE ISRParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::ISRParameters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ISRParameters::ISRParameters(
    ::google::protobuf::Arena* arena,
    const ISRParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ISRParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.speed_m_s_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(
                              arena, *from._impl_.speed_m_s_)
                        : nullptr;
  _impl_.standoff_distance_m_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(
                              arena, *from._impl_.standoff_distance_m_)
                        : nullptr;
  _impl_.standoff_angle_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(
                              arena, *from._impl_.standoff_angle_)
                        : nullptr;
  _impl_.expiration_time_ms_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::UInt64Value>(
                              arena, *from._impl_.expiration_time_ms_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.ISRParameters)
}
inline PROTOBUF_NDEBUG_INLINE ISRParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ISRParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_m_s_),
           0,
           offsetof(Impl_, expiration_time_ms_) -
               offsetof(Impl_, speed_m_s_) +
               sizeof(Impl_::expiration_time_ms_));
}
ISRParameters::~ISRParameters() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.ISRParameters)
  SharedDtor(*this);
}
inline void ISRParameters::SharedDtor(MessageLite& self) {
  ISRParameters& this_ = static_cast<ISRParameters&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.speed_m_s_;
  delete this_._impl_.standoff_distance_m_;
  delete this_._impl_.standoff_angle_;
  delete this_._impl_.expiration_time_ms_;
  this_._impl_.~Impl_();
}

inline void* ISRParameters::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ISRParameters(arena);
}
constexpr auto ISRParameters::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ISRParameters),
                                            alignof(ISRParameters));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ISRParameters::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ISRParameters_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ISRParameters::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ISRParameters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ISRParameters::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ISRParameters>(), &ISRParameters::ByteSizeLong,
            &ISRParameters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_._cached_size_),
        false,
    },
    &ISRParameters::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ISRParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 4, 0, 2> ISRParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967241,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_m_s_)}},
    // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_distance_m_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_angle_)}},
    // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.expiration_time_ms_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_m_s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_distance_m_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.standoff_angle_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.expiration_time_ms_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::UInt64Value>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ISRParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.ISRParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.speed_m_s_ != nullptr);
      _impl_.speed_m_s_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.standoff_distance_m_ != nullptr);
      _impl_.standoff_distance_m_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.standoff_angle_ != nullptr);
      _impl_.standoff_angle_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.expiration_time_ms_ != nullptr);
      _impl_.expiration_time_ms_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ISRParameters::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ISRParameters& this_ = static_cast<const ISRParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ISRParameters::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ISRParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.ISRParameters)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.speed_m_s_, this_._impl_.speed_m_s_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.standoff_distance_m_, this_._impl_.standoff_distance_m_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.standoff_angle_, this_._impl_.standoff_angle_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.expiration_time_ms_, this_._impl_.expiration_time_ms_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.ISRParameters)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ISRParameters::ByteSizeLong(const MessageLite& base) {
          const ISRParameters& this_ = static_cast<const ISRParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ISRParameters::ByteSizeLong() const {
          const ISRParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.ISRParameters)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.speed_m_s_);
            }
            // .google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.standoff_distance_m_);
            }
            // .google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.standoff_angle_);
            }
            // .google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expiration_time_ms_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ISRParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ISRParameters*>(&to_msg);
  auto& from = static_cast<const ISRParameters&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.ISRParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.speed_m_s_ != nullptr);
      if (_this->_impl_.speed_m_s_ == nullptr) {
        _this->_impl_.speed_m_s_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(arena, *from._impl_.speed_m_s_);
      } else {
        _this->_impl_.speed_m_s_->MergeFrom(*from._impl_.speed_m_s_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.standoff_distance_m_ != nullptr);
      if (_this->_impl_.standoff_distance_m_ == nullptr) {
        _this->_impl_.standoff_distance_m_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(arena, *from._impl_.standoff_distance_m_);
      } else {
        _this->_impl_.standoff_distance_m_->MergeFrom(*from._impl_.standoff_distance_m_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.standoff_angle_ != nullptr);
      if (_this->_impl_.standoff_angle_ == nullptr) {
        _this->_impl_.standoff_angle_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(arena, *from._impl_.standoff_angle_);
      } else {
        _this->_impl_.standoff_angle_->MergeFrom(*from._impl_.standoff_angle_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.expiration_time_ms_ != nullptr);
      if (_this->_impl_.expiration_time_ms_ == nullptr) {
        _this->_impl_.expiration_time_ms_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::UInt64Value>(arena, *from._impl_.expiration_time_ms_);
      } else {
        _this->_impl_.expiration_time_ms_->MergeFrom(*from._impl_.expiration_time_ms_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ISRParameters::CopyFrom(const ISRParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.ISRParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ISRParameters::InternalSwap(ISRParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.expiration_time_ms_)
      + sizeof(ISRParameters::_impl_.expiration_time_ms_)
      - PROTOBUF_FIELD_OFFSET(ISRParameters, _impl_.speed_m_s_)>(
          reinterpret_cast<char*>(&_impl_.speed_m_s_),
          reinterpret_cast<char*>(&other->_impl_.speed_m_s_));
}

::google::protobuf::Metadata ISRParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GimbalPoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GimbalPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalPoint, _impl_._oneof_case_);
};

void GimbalPoint::set_allocated_look_at(::anduril::tasks::v2::Objective* look_at) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point_type();
  if (look_at) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(look_at)->GetArena();
    if (message_arena != submessage_arena) {
      look_at = ::google::protobuf::internal::GetOwnedMessage(message_arena, look_at, submessage_arena);
    }
    set_has_look_at();
    _impl_.point_type_.look_at_ = look_at;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalPoint.look_at)
}
void GimbalPoint::clear_look_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (point_type_case() == kLookAt) {
    if (GetArena() == nullptr) {
      delete _impl_.point_type_.look_at_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.point_type_.look_at_);
    }
    clear_has_point_type();
  }
}
void GimbalPoint::set_allocated_celestial_location(::anduril::tasks::v2::AzimuthElevationPoint* celestial_location) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point_type();
  if (celestial_location) {
    ::google::protobuf::Arena* submessage_arena = celestial_location->GetArena();
    if (message_arena != submessage_arena) {
      celestial_location = ::google::protobuf::internal::GetOwnedMessage(message_arena, celestial_location, submessage_arena);
    }
    set_has_celestial_location();
    _impl_.point_type_.celestial_location_ = celestial_location;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalPoint.celestial_location)
}
void GimbalPoint::set_allocated_frame_location(::anduril::tasks::v2::FramePoint* frame_location) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_point_type();
  if (frame_location) {
    ::google::protobuf::Arena* submessage_arena = frame_location->GetArena();
    if (message_arena != submessage_arena) {
      frame_location = ::google::protobuf::internal::GetOwnedMessage(message_arena, frame_location, submessage_arena);
    }
    set_has_frame_location();
    _impl_.point_type_.frame_location_ = frame_location;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalPoint.frame_location)
}
GimbalPoint::GimbalPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.GimbalPoint)
}
inline PROTOBUF_NDEBUG_INLINE GimbalPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::GimbalPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        point_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

GimbalPoint::GimbalPoint(
    ::google::protobuf::Arena* arena,
    const GimbalPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GimbalPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.parameters_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;
  switch (point_type_case()) {
    case POINT_TYPE_NOT_SET:
      break;
      case kLookAt:
        _impl_.point_type_.look_at_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.point_type_.look_at_);
        break;
      case kCelestialLocation:
        _impl_.point_type_.celestial_location_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::AzimuthElevationPoint>(arena, *from._impl_.point_type_.celestial_location_);
        break;
      case kFrameLocation:
        _impl_.point_type_.frame_location_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::FramePoint>(arena, *from._impl_.point_type_.frame_location_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.GimbalPoint)
}
inline PROTOBUF_NDEBUG_INLINE GimbalPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        point_type_{},
        _oneof_case_{} {}

inline void GimbalPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.parameters_ = {};
}
GimbalPoint::~GimbalPoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.GimbalPoint)
  SharedDtor(*this);
}
inline void GimbalPoint::SharedDtor(MessageLite& self) {
  GimbalPoint& this_ = static_cast<GimbalPoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.parameters_;
  if (this_.has_point_type()) {
    this_.clear_point_type();
  }
  this_._impl_.~Impl_();
}

void GimbalPoint::clear_point_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.GimbalPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (point_type_case()) {
    case kLookAt: {
      if (GetArena() == nullptr) {
        delete _impl_.point_type_.look_at_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.point_type_.look_at_);
      }
      break;
    }
    case kCelestialLocation: {
      if (GetArena() == nullptr) {
        delete _impl_.point_type_.celestial_location_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.point_type_.celestial_location_);
      }
      break;
    }
    case kFrameLocation: {
      if (GetArena() == nullptr) {
        delete _impl_.point_type_.frame_location_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.point_type_.frame_location_);
      }
      break;
    }
    case POINT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = POINT_TYPE_NOT_SET;
}


inline void* GimbalPoint::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GimbalPoint(arena);
}
constexpr auto GimbalPoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GimbalPoint),
                                            alignof(GimbalPoint));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GimbalPoint::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GimbalPoint_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GimbalPoint::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GimbalPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GimbalPoint::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GimbalPoint>(), &GimbalPoint::ByteSizeLong,
            &GimbalPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_._cached_size_),
        false,
    },
    &GimbalPoint::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GimbalPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> GimbalPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_._has_bits_),
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::GimbalPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.parameters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective look_at = 1 [json_name = "lookAt"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.point_type_.look_at_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.AzimuthElevationPoint celestial_location = 2 [json_name = "celestialLocation"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.point_type_.celestial_location_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.parameters_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.FramePoint frame_location = 4 [json_name = "frameLocation"];
    {PROTOBUF_FIELD_OFFSET(GimbalPoint, _impl_.point_type_.frame_location_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::AzimuthElevationPoint>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::FramePoint>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GimbalPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.GimbalPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.parameters_ != nullptr);
    _impl_.parameters_->Clear();
  }
  clear_point_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GimbalPoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GimbalPoint& this_ = static_cast<const GimbalPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GimbalPoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GimbalPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.GimbalPoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.point_type_case()) {
            case kLookAt: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.point_type_.look_at_, this_._impl_.point_type_.look_at_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCelestialLocation: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.point_type_.celestial_location_, this_._impl_.point_type_.celestial_location_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.FramePoint frame_location = 4 [json_name = "frameLocation"];
          if (this_.point_type_case() == kFrameLocation) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.point_type_.frame_location_, this_._impl_.point_type_.frame_location_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.GimbalPoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GimbalPoint::ByteSizeLong(const MessageLite& base) {
          const GimbalPoint& this_ = static_cast<const GimbalPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GimbalPoint::ByteSizeLong() const {
          const GimbalPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.GimbalPoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.tasks.v2.ISRParameters parameters = 3 [json_name = "parameters"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          switch (this_.point_type_case()) {
            // .anduril.tasks.v2.Objective look_at = 1 [json_name = "lookAt"];
            case kLookAt: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.point_type_.look_at_);
              break;
            }
            // .anduril.tasks.v2.AzimuthElevationPoint celestial_location = 2 [json_name = "celestialLocation"];
            case kCelestialLocation: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.point_type_.celestial_location_);
              break;
            }
            // .anduril.tasks.v2.FramePoint frame_location = 4 [json_name = "frameLocation"];
            case kFrameLocation: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.point_type_.frame_location_);
              break;
            }
            case POINT_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GimbalPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GimbalPoint*>(&to_msg);
  auto& from = static_cast<const GimbalPoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.GimbalPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.parameters_ != nullptr);
    if (_this->_impl_.parameters_ == nullptr) {
      _this->_impl_.parameters_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
    } else {
      _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_point_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLookAt: {
        if (oneof_needs_init) {
          _this->_impl_.point_type_.look_at_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.point_type_.look_at_);
        } else {
          _this->_impl_.point_type_.look_at_->MergeFrom(from._internal_look_at());
        }
        break;
      }
      case kCelestialLocation: {
        if (oneof_needs_init) {
          _this->_impl_.point_type_.celestial_location_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::AzimuthElevationPoint>(arena, *from._impl_.point_type_.celestial_location_);
        } else {
          _this->_impl_.point_type_.celestial_location_->MergeFrom(from._internal_celestial_location());
        }
        break;
      }
      case kFrameLocation: {
        if (oneof_needs_init) {
          _this->_impl_.point_type_.frame_location_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::FramePoint>(arena, *from._impl_.point_type_.frame_location_);
        } else {
          _this->_impl_.point_type_.frame_location_->MergeFrom(from._internal_frame_location());
        }
        break;
      }
      case POINT_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalPoint::CopyFrom(const GimbalPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.GimbalPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GimbalPoint::InternalSwap(GimbalPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.parameters_, other->_impl_.parameters_);
  swap(_impl_.point_type_, other->_impl_.point_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GimbalPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AzimuthElevationPoint::_Internal {
 public:
};

AzimuthElevationPoint::AzimuthElevationPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.AzimuthElevationPoint)
}
AzimuthElevationPoint::AzimuthElevationPoint(
    ::google::protobuf::Arena* arena, const AzimuthElevationPoint& from)
    : AzimuthElevationPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AzimuthElevationPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AzimuthElevationPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, azimuth_),
           0,
           offsetof(Impl_, elevation_) -
               offsetof(Impl_, azimuth_) +
               sizeof(Impl_::elevation_));
}
AzimuthElevationPoint::~AzimuthElevationPoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.AzimuthElevationPoint)
  SharedDtor(*this);
}
inline void AzimuthElevationPoint::SharedDtor(MessageLite& self) {
  AzimuthElevationPoint& this_ = static_cast<AzimuthElevationPoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AzimuthElevationPoint::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AzimuthElevationPoint(arena);
}
constexpr auto AzimuthElevationPoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AzimuthElevationPoint),
                                            alignof(AzimuthElevationPoint));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AzimuthElevationPoint::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AzimuthElevationPoint_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AzimuthElevationPoint::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AzimuthElevationPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AzimuthElevationPoint::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AzimuthElevationPoint>(), &AzimuthElevationPoint::ByteSizeLong,
            &AzimuthElevationPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_._cached_size_),
        false,
    },
    &AzimuthElevationPoint::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AzimuthElevationPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AzimuthElevationPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::AzimuthElevationPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double elevation = 2 [json_name = "elevation"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.elevation_)}},
    // double azimuth = 1 [json_name = "azimuth"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.azimuth_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double azimuth = 1 [json_name = "azimuth"];
    {PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.azimuth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double elevation = 2 [json_name = "elevation"];
    {PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.elevation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AzimuthElevationPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.AzimuthElevationPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.azimuth_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.elevation_) -
      reinterpret_cast<char*>(&_impl_.azimuth_)) + sizeof(_impl_.elevation_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AzimuthElevationPoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AzimuthElevationPoint& this_ = static_cast<const AzimuthElevationPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AzimuthElevationPoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AzimuthElevationPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.AzimuthElevationPoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double azimuth = 1 [json_name = "azimuth"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_azimuth()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_azimuth(), target);
          }

          // double elevation = 2 [json_name = "elevation"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_elevation()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_elevation(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.AzimuthElevationPoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AzimuthElevationPoint::ByteSizeLong(const MessageLite& base) {
          const AzimuthElevationPoint& this_ = static_cast<const AzimuthElevationPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AzimuthElevationPoint::ByteSizeLong() const {
          const AzimuthElevationPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.AzimuthElevationPoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double azimuth = 1 [json_name = "azimuth"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_azimuth()) != 0) {
              total_size += 9;
            }
            // double elevation = 2 [json_name = "elevation"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_elevation()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AzimuthElevationPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AzimuthElevationPoint*>(&to_msg);
  auto& from = static_cast<const AzimuthElevationPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.AzimuthElevationPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_azimuth()) != 0) {
    _this->_impl_.azimuth_ = from._impl_.azimuth_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_elevation()) != 0) {
    _this->_impl_.elevation_ = from._impl_.elevation_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AzimuthElevationPoint::CopyFrom(const AzimuthElevationPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.AzimuthElevationPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AzimuthElevationPoint::InternalSwap(AzimuthElevationPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.elevation_)
      + sizeof(AzimuthElevationPoint::_impl_.elevation_)
      - PROTOBUF_FIELD_OFFSET(AzimuthElevationPoint, _impl_.azimuth_)>(
          reinterpret_cast<char*>(&_impl_.azimuth_),
          reinterpret_cast<char*>(&other->_impl_.azimuth_));
}

::google::protobuf::Metadata AzimuthElevationPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FramePoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FramePoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FramePoint, _impl_._has_bits_);
};

void FramePoint::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
FramePoint::FramePoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.FramePoint)
}
inline PROTOBUF_NDEBUG_INLINE FramePoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::FramePoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FramePoint::FramePoint(
    ::google::protobuf::Arena* arena,
    const FramePoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FramePoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.FramePoint)
}
inline PROTOBUF_NDEBUG_INLINE FramePoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FramePoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::y_));
}
FramePoint::~FramePoint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.FramePoint)
  SharedDtor(*this);
}
inline void FramePoint::SharedDtor(MessageLite& self) {
  FramePoint& this_ = static_cast<FramePoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* FramePoint::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FramePoint(arena);
}
constexpr auto FramePoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FramePoint),
                                            alignof(FramePoint));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FramePoint::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FramePoint_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FramePoint::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FramePoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FramePoint::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FramePoint>(), &FramePoint::ByteSizeLong,
            &FramePoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FramePoint, _impl_._cached_size_),
        false,
    },
    &FramePoint::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FramePoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> FramePoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FramePoint, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::FramePoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.x_)}},
    // float y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.y_)}},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FramePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.FramePoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FramePoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FramePoint& this_ = static_cast<const FramePoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FramePoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FramePoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.FramePoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1 [json_name = "x"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2 [json_name = "y"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.FramePoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FramePoint::ByteSizeLong(const MessageLite& base) {
          const FramePoint& this_ = static_cast<const FramePoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FramePoint::ByteSizeLong() const {
          const FramePoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.FramePoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
            }
          }
           {
            // float x = 1 [json_name = "x"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2 [json_name = "y"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FramePoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FramePoint*>(&to_msg);
  auto& from = static_cast<const FramePoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.FramePoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
    if (_this->_impl_.timestamp_ == nullptr) {
      _this->_impl_.timestamp_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
    } else {
      _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
    }
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FramePoint::CopyFrom(const FramePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.FramePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FramePoint::InternalSwap(FramePoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.y_)
      + sizeof(FramePoint::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(FramePoint, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata FramePoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GimbalZoom::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::GimbalZoom, _impl_._oneof_case_);
};

void GimbalZoom::set_allocated_set_horizontal_fov(::google::protobuf::DoubleValue* set_horizontal_fov) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_mode();
  if (set_horizontal_fov) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(set_horizontal_fov)->GetArena();
    if (message_arena != submessage_arena) {
      set_horizontal_fov = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_horizontal_fov, submessage_arena);
    }
    set_has_set_horizontal_fov();
    _impl_.mode_.set_horizontal_fov_ = set_horizontal_fov;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalZoom.set_horizontal_fov)
}
void GimbalZoom::clear_set_horizontal_fov() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (mode_case() == kSetHorizontalFov) {
    if (GetArena() == nullptr) {
      delete _impl_.mode_.set_horizontal_fov_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.mode_.set_horizontal_fov_);
    }
    clear_has_mode();
  }
}
void GimbalZoom::set_allocated_set_magnification(::google::protobuf::FloatValue* set_magnification) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_mode();
  if (set_magnification) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(set_magnification)->GetArena();
    if (message_arena != submessage_arena) {
      set_magnification = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_magnification, submessage_arena);
    }
    set_has_set_magnification();
    _impl_.mode_.set_magnification_ = set_magnification;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.GimbalZoom.set_magnification)
}
void GimbalZoom::clear_set_magnification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (mode_case() == kSetMagnification) {
    if (GetArena() == nullptr) {
      delete _impl_.mode_.set_magnification_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.mode_.set_magnification_);
    }
    clear_has_mode();
  }
}
GimbalZoom::GimbalZoom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.GimbalZoom)
}
inline PROTOBUF_NDEBUG_INLINE GimbalZoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::GimbalZoom& from_msg)
      : mode_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GimbalZoom::GimbalZoom(
    ::google::protobuf::Arena* arena,
    const GimbalZoom& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GimbalZoom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (mode_case()) {
    case MODE_NOT_SET:
      break;
      case kSetHorizontalFov:
        _impl_.mode_.set_horizontal_fov_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.mode_.set_horizontal_fov_);
        break;
      case kSetMagnification:
        _impl_.mode_.set_magnification_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(arena, *from._impl_.mode_.set_magnification_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.GimbalZoom)
}
inline PROTOBUF_NDEBUG_INLINE GimbalZoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mode_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GimbalZoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GimbalZoom::~GimbalZoom() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.GimbalZoom)
  SharedDtor(*this);
}
inline void GimbalZoom::SharedDtor(MessageLite& self) {
  GimbalZoom& this_ = static_cast<GimbalZoom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_mode()) {
    this_.clear_mode();
  }
  this_._impl_.~Impl_();
}

void GimbalZoom::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.GimbalZoom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (mode_case()) {
    case kSetHorizontalFov: {
      if (GetArena() == nullptr) {
        delete _impl_.mode_.set_horizontal_fov_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.mode_.set_horizontal_fov_);
      }
      break;
    }
    case kSetMagnification: {
      if (GetArena() == nullptr) {
        delete _impl_.mode_.set_magnification_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.mode_.set_magnification_);
      }
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MODE_NOT_SET;
}


inline void* GimbalZoom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GimbalZoom(arena);
}
constexpr auto GimbalZoom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GimbalZoom),
                                            alignof(GimbalZoom));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GimbalZoom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GimbalZoom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GimbalZoom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GimbalZoom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GimbalZoom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GimbalZoom>(), &GimbalZoom::ByteSizeLong,
            &GimbalZoom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GimbalZoom, _impl_._cached_size_),
        false,
    },
    &GimbalZoom::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GimbalZoom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> GimbalZoom::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::GimbalZoom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.DoubleValue set_horizontal_fov = 1 [json_name = "setHorizontalFov"];
    {PROTOBUF_FIELD_OFFSET(GimbalZoom, _impl_.mode_.set_horizontal_fov_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FloatValue set_magnification = 2 [json_name = "setMagnification"];
    {PROTOBUF_FIELD_OFFSET(GimbalZoom, _impl_.mode_.set_magnification_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FloatValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GimbalZoom::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.GimbalZoom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mode();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GimbalZoom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GimbalZoom& this_ = static_cast<const GimbalZoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GimbalZoom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GimbalZoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.GimbalZoom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.mode_case()) {
            case kSetHorizontalFov: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.mode_.set_horizontal_fov_, this_._impl_.mode_.set_horizontal_fov_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSetMagnification: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.mode_.set_magnification_, this_._impl_.mode_.set_magnification_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.GimbalZoom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GimbalZoom::ByteSizeLong(const MessageLite& base) {
          const GimbalZoom& this_ = static_cast<const GimbalZoom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GimbalZoom::ByteSizeLong() const {
          const GimbalZoom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.GimbalZoom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.mode_case()) {
            // .google.protobuf.DoubleValue set_horizontal_fov = 1 [json_name = "setHorizontalFov"];
            case kSetHorizontalFov: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mode_.set_horizontal_fov_);
              break;
            }
            // .google.protobuf.FloatValue set_magnification = 2 [json_name = "setMagnification"];
            case kSetMagnification: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mode_.set_magnification_);
              break;
            }
            case MODE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GimbalZoom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GimbalZoom*>(&to_msg);
  auto& from = static_cast<const GimbalZoom&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.GimbalZoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_mode();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSetHorizontalFov: {
        if (oneof_needs_init) {
          _this->_impl_.mode_.set_horizontal_fov_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.mode_.set_horizontal_fov_);
        } else {
          _this->_impl_.mode_.set_horizontal_fov_->MergeFrom(from._internal_set_horizontal_fov());
        }
        break;
      }
      case kSetMagnification: {
        if (oneof_needs_init) {
          _this->_impl_.mode_.set_magnification_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::FloatValue>(arena, *from._impl_.mode_.set_magnification_);
        } else {
          _this->_impl_.mode_.set_magnification_->MergeFrom(from._internal_set_magnification());
        }
        break;
      }
      case MODE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalZoom::CopyFrom(const GimbalZoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.GimbalZoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GimbalZoom::InternalSwap(GimbalZoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GimbalZoom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Monitor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Monitor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Monitor, _impl_._has_bits_);
};

void Monitor::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Monitor::Monitor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Monitor)
}
inline PROTOBUF_NDEBUG_INLINE Monitor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Monitor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Monitor::Monitor(
    ::google::protobuf::Arena* arena,
    const Monitor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Monitor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Monitor)
}
inline PROTOBUF_NDEBUG_INLINE Monitor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Monitor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
Monitor::~Monitor() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Monitor)
  SharedDtor(*this);
}
inline void Monitor::SharedDtor(MessageLite& self) {
  Monitor& this_ = static_cast<Monitor&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  this_._impl_.~Impl_();
}

inline void* Monitor::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Monitor(arena);
}
constexpr auto Monitor::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Monitor),
                                            alignof(Monitor));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Monitor::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Monitor_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Monitor::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Monitor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Monitor::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Monitor>(), &Monitor::ByteSizeLong,
            &Monitor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Monitor, _impl_._cached_size_),
        false,
    },
    &Monitor::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Monitor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Monitor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Monitor, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Monitor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Monitor, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Monitor, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Monitor::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Monitor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Monitor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Monitor& this_ = static_cast<const Monitor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Monitor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Monitor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Monitor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Monitor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Monitor::ByteSizeLong(const MessageLite& base) {
          const Monitor& this_ = static_cast<const Monitor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Monitor::ByteSizeLong() const {
          const Monitor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Monitor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Monitor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Monitor*>(&to_msg);
  auto& from = static_cast<const Monitor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Monitor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.objective_ != nullptr);
    if (_this->_impl_.objective_ == nullptr) {
      _this->_impl_.objective_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
    } else {
      _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Monitor::CopyFrom(const Monitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Monitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Monitor::InternalSwap(Monitor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata Monitor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Scan::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Scan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Scan, _impl_._has_bits_);
};

void Scan::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Scan::Scan(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Scan)
}
inline PROTOBUF_NDEBUG_INLINE Scan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Scan& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Scan::Scan(
    ::google::protobuf::Arena* arena,
    const Scan& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Scan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Scan)
}
inline PROTOBUF_NDEBUG_INLINE Scan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Scan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Scan::~Scan() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Scan)
  SharedDtor(*this);
}
inline void Scan::SharedDtor(MessageLite& self) {
  Scan& this_ = static_cast<Scan&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* Scan::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Scan(arena);
}
constexpr auto Scan::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Scan),
                                            alignof(Scan));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Scan::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Scan_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Scan::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Scan>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Scan::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Scan>(), &Scan::ByteSizeLong,
            &Scan::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Scan, _impl_._cached_size_),
        false,
    },
    &Scan::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Scan::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Scan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Scan, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Scan>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Scan, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Scan, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Scan, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Scan, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Scan::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Scan)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Scan::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Scan& this_ = static_cast<const Scan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Scan::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Scan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Scan)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Scan)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Scan::ByteSizeLong(const MessageLite& base) {
          const Scan& this_ = static_cast<const Scan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Scan::ByteSizeLong() const {
          const Scan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Scan)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Scan::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Scan*>(&to_msg);
  auto& from = static_cast<const Scan&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Scan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Scan::CopyFrom(const Scan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Scan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Scan::InternalSwap(Scan* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scan, _impl_.parameters_)
      + sizeof(Scan::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Scan, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Scan::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BattleDamageAssessment::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BattleDamageAssessment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_._has_bits_);
};

void BattleDamageAssessment::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BattleDamageAssessment::BattleDamageAssessment(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.BattleDamageAssessment)
}
inline PROTOBUF_NDEBUG_INLINE BattleDamageAssessment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::BattleDamageAssessment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BattleDamageAssessment::BattleDamageAssessment(
    ::google::protobuf::Arena* arena,
    const BattleDamageAssessment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BattleDamageAssessment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.BattleDamageAssessment)
}
inline PROTOBUF_NDEBUG_INLINE BattleDamageAssessment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BattleDamageAssessment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
BattleDamageAssessment::~BattleDamageAssessment() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.BattleDamageAssessment)
  SharedDtor(*this);
}
inline void BattleDamageAssessment::SharedDtor(MessageLite& self) {
  BattleDamageAssessment& this_ = static_cast<BattleDamageAssessment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* BattleDamageAssessment::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BattleDamageAssessment(arena);
}
constexpr auto BattleDamageAssessment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BattleDamageAssessment),
                                            alignof(BattleDamageAssessment));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BattleDamageAssessment::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BattleDamageAssessment_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BattleDamageAssessment::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BattleDamageAssessment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BattleDamageAssessment::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BattleDamageAssessment>(), &BattleDamageAssessment::ByteSizeLong,
            &BattleDamageAssessment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_._cached_size_),
        false,
    },
    &BattleDamageAssessment::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BattleDamageAssessment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BattleDamageAssessment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::BattleDamageAssessment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::ISRParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BattleDamageAssessment::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.BattleDamageAssessment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BattleDamageAssessment::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BattleDamageAssessment& this_ = static_cast<const BattleDamageAssessment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BattleDamageAssessment::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BattleDamageAssessment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.BattleDamageAssessment)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.BattleDamageAssessment)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BattleDamageAssessment::ByteSizeLong(const MessageLite& base) {
          const BattleDamageAssessment& this_ = static_cast<const BattleDamageAssessment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BattleDamageAssessment::ByteSizeLong() const {
          const BattleDamageAssessment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.BattleDamageAssessment)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.ISRParameters parameters = 2 [json_name = "parameters"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BattleDamageAssessment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BattleDamageAssessment*>(&to_msg);
  auto& from = static_cast<const BattleDamageAssessment&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.BattleDamageAssessment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::ISRParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BattleDamageAssessment::CopyFrom(const BattleDamageAssessment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.BattleDamageAssessment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BattleDamageAssessment::InternalSwap(BattleDamageAssessment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.parameters_)
      + sizeof(BattleDamageAssessment::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(BattleDamageAssessment, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata BattleDamageAssessment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fisr_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
