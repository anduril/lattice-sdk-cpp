// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/tasks/v2/shared/strike.pub.proto

#include "anduril/tasks/v2/shared/strike.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace tasks {
namespace v2 {

inline constexpr PayloadConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capability_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayloadConfiguration::PayloadConfiguration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayloadConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayloadConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayloadConfigurationDefaultTypeInternal() {}
  union {
    PayloadConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayloadConfigurationDefaultTypeInternal _PayloadConfiguration_default_instance_;

inline constexpr StrikeParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payloads_to_employ_{},
        desired_impact_time_{nullptr},
        run_in_bearing_{0},
        glide_slope_angle_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StrikeParameters::StrikeParameters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StrikeParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrikeParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrikeParametersDefaultTypeInternal() {}
  union {
    StrikeParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrikeParametersDefaultTypeInternal _StrikeParameters_default_instance_;

inline constexpr StrikeReleaseConstraint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : strike_release_constraint_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StrikeReleaseConstraint::StrikeReleaseConstraint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StrikeReleaseConstraintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrikeReleaseConstraintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrikeReleaseConstraintDefaultTypeInternal() {}
  union {
    StrikeReleaseConstraint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrikeReleaseConstraintDefaultTypeInternal _StrikeReleaseConstraint_default_instance_;

inline constexpr Strike::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        ingress_angle_{nullptr},
        strike_release_constraint_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Strike::Strike(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StrikeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrikeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrikeDefaultTypeInternal() {}
  union {
    Strike _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrikeDefaultTypeInternal _Strike_default_instance_;

inline constexpr Smack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Smack::Smack(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SmackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SmackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SmackDefaultTypeInternal() {}
  union {
    Smack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SmackDefaultTypeInternal _Smack_default_instance_;

inline constexpr ReleasePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payloads_{},
        objective_{nullptr},
        release_method_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ReleasePayload::ReleasePayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReleasePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleasePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleasePayloadDefaultTypeInternal() {}
  union {
    ReleasePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleasePayloadDefaultTypeInternal _ReleasePayload_default_instance_;
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _impl_.parameters_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.ingress_angle_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.strike_release_constraint_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.parameters_),
    0,
    1,
    2,
    3,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _impl_.strike_release_constraint_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.payloads_to_employ_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.desired_impact_time_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.run_in_bearing_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.glide_slope_angle_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PayloadConfiguration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PayloadConfiguration, _impl_.capability_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PayloadConfiguration, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_.payloads_),
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_.objective_),
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_.release_method_),
    ~0u,
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::anduril::tasks::v2::Smack)},
        {12, 24, -1, sizeof(::anduril::tasks::v2::Strike)},
        {28, -1, -1, sizeof(::anduril::tasks::v2::StrikeReleaseConstraint)},
        {38, 50, -1, sizeof(::anduril::tasks::v2::StrikeParameters)},
        {54, -1, -1, sizeof(::anduril::tasks::v2::PayloadConfiguration)},
        {64, 76, -1, sizeof(::anduril::tasks::v2::ReleasePayload)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::tasks::v2::_Smack_default_instance_._instance,
    &::anduril::tasks::v2::_Strike_default_instance_._instance,
    &::anduril::tasks::v2::_StrikeReleaseConstraint_default_instance_._instance,
    &::anduril::tasks::v2::_StrikeParameters_default_instance_._instance,
    &::anduril::tasks::v2::_PayloadConfiguration_default_instance_._instance,
    &::anduril::tasks::v2::_ReleasePayload_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n(anduril/tasks/v2/shared/strike.pub.pro"
    "to\022\020anduril.tasks.v2\032!anduril/tasks/v2/c"
    "ommon.pub.proto\032$anduril/tasks/v2/object"
    "ive.pub.proto\032\036google/protobuf/duration."
    "proto\032\033google/protobuf/empty.proto\"\206\001\n\005S"
    "mack\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks."
    "v2.ObjectiveR\tobjective\022B\n\nparameters\030\002 "
    "\001(\0132\".anduril.tasks.v2.StrikeParametersR"
    "\nparameters\"\260\002\n\006Strike\0229\n\tobjective\030\001 \001("
    "\0132\033.anduril.tasks.v2.ObjectiveR\tobjectiv"
    "e\022@\n\ringress_angle\030\002 \001(\0132\033.anduril.tasks"
    ".v2.AnglePairR\014ingressAngle\022e\n\031strike_re"
    "lease_constraint\030\003 \001(\0132).anduril.tasks.v"
    "2.StrikeReleaseConstraintR\027strikeRelease"
    "Constraint\022B\n\nparameters\030\004 \001(\0132\".anduril"
    ".tasks.v2.StrikeParametersR\nparameters\"~"
    "\n\027StrikeReleaseConstraint\022F\n\014release_are"
    "a\030\001 \001(\0132!.anduril.tasks.v2.AreaConstrain"
    "tsH\000R\013releaseAreaB\033\n\031strike_release_cons"
    "traint\"\205\002\n\020StrikeParameters\022T\n\022payloads_"
    "to_employ\030\001 \003(\0132&.anduril.tasks.v2.Paylo"
    "adConfigurationR\020payloadsToEmploy\022I\n\023des"
    "ired_impact_time\030\002 \001(\0132\031.google.protobuf"
    ".DurationR\021desiredImpactTime\022$\n\016run_in_b"
    "earing\030\003 \001(\001R\014runInBearing\022*\n\021glide_slop"
    "e_angle\030\004 \001(\001R\017glideSlopeAngle\"W\n\024Payloa"
    "dConfiguration\022#\n\rcapability_id\030\001 \001(\tR\014c"
    "apabilityId\022\032\n\010quantity\030\002 \001(\rR\010quantity\""
    "\350\001\n\016ReleasePayload\022B\n\010payloads\030\001 \003(\0132&.a"
    "nduril.tasks.v2.PayloadConfigurationR\010pa"
    "yloads\0229\n\tobjective\030\002 \001(\0132\033.anduril.task"
    "s.v2.ObjectiveR\tobjective\022E\n\021precision_r"
    "elease\030\003 \001(\0132\026.google.protobuf.EmptyH\000R\020"
    "precisionReleaseB\020\n\016release_methodB\307\001\n\024c"
    "om.anduril.tasks.v2B\016StrikePubProtoP\001Z=g"
    "he.anduril.dev/anduril/andurilapis-go/an"
    "duril/tasks/v2;tasks\242\002\003ATX\252\002\020Anduril.Tas"
    "ks.V2\312\002\020Anduril\\Tasks\\V2\342\002\034Anduril\\Tasks"
    "\\V2\\GPBMetadata\352\002\022Anduril::Tasks::V2b\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_deps[4] =
    {
        &::descriptor_table_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto,
        &::descriptor_table_anduril_2ftasks_2fv2_2fobjective_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto = {
    false,
    false,
    1564,
    descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    "anduril/tasks/v2/shared/strike.pub.proto",
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
    descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto::offsets,
    file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto);
namespace anduril {
namespace tasks {
namespace v2 {
// ===================================================================

class Smack::_Internal {
 public:
  using HasBits = decltype(std::declval<Smack>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Smack, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Smack* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::StrikeParameters& parameters(const Smack* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::tasks::v2::Objective& Smack::_Internal::objective(const Smack* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::StrikeParameters& Smack::_Internal::parameters(const Smack* msg) {
  return *msg->_impl_.parameters_;
}
void Smack::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Smack::Smack(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Smack)
}
inline PROTOBUF_NDEBUG_INLINE Smack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Smack::Smack(
    ::google::protobuf::Arena* arena,
    const Smack& from)
    : ::google::protobuf::Message(arena) {
  Smack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::StrikeParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Smack)
}
inline PROTOBUF_NDEBUG_INLINE Smack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Smack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Smack::~Smack() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Smack)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Smack::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Smack::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Smack)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Smack::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Smack::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Smack, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Smack_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Smack, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Smack, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Smack, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Smack, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeParameters>()},
  }}, {{
  }},
};

::uint8_t* Smack::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Smack)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Smack)
  return target;
}

::size_t Smack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Smack)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Smack::_class_data_ = {
    Smack::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Smack::GetClassData() const {
  return &_class_data_;
}

void Smack::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Smack*>(&to_msg);
  auto& from = static_cast<const Smack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Smack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::StrikeParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Smack::CopyFrom(const Smack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Smack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Smack::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Smack::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Smack::InternalSwap(Smack* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Smack, _impl_.parameters_)
      + sizeof(Smack::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Smack, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Smack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[0]);
}
// ===================================================================

class Strike::_Internal {
 public:
  using HasBits = decltype(std::declval<Strike>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Strike, _impl_._has_bits_);
  static const ::anduril::tasks::v2::Objective& objective(const Strike* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::tasks::v2::AnglePair& ingress_angle(const Strike* msg);
  static void set_has_ingress_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::tasks::v2::StrikeReleaseConstraint& strike_release_constraint(const Strike* msg);
  static void set_has_strike_release_constraint(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::anduril::tasks::v2::StrikeParameters& parameters(const Strike* msg);
  static void set_has_parameters(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::anduril::tasks::v2::Objective& Strike::_Internal::objective(const Strike* msg) {
  return *msg->_impl_.objective_;
}
const ::anduril::tasks::v2::AnglePair& Strike::_Internal::ingress_angle(const Strike* msg) {
  return *msg->_impl_.ingress_angle_;
}
const ::anduril::tasks::v2::StrikeReleaseConstraint& Strike::_Internal::strike_release_constraint(const Strike* msg) {
  return *msg->_impl_.strike_release_constraint_;
}
const ::anduril::tasks::v2::StrikeParameters& Strike::_Internal::parameters(const Strike* msg) {
  return *msg->_impl_.parameters_;
}
void Strike::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Strike::clear_ingress_angle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.ingress_angle_ != nullptr) _impl_.ingress_angle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Strike::Strike(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Strike)
}
inline PROTOBUF_NDEBUG_INLINE Strike::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Strike::Strike(
    ::google::protobuf::Arena* arena,
    const Strike& from)
    : ::google::protobuf::Message(arena) {
  Strike* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  _impl_.ingress_angle_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::tasks::v2::AnglePair>(arena, *from._impl_.ingress_angle_)
                : nullptr;
  _impl_.strike_release_constraint_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::tasks::v2::StrikeReleaseConstraint>(arena, *from._impl_.strike_release_constraint_)
                : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::anduril::tasks::v2::StrikeParameters>(arena, *from._impl_.parameters_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Strike)
}
inline PROTOBUF_NDEBUG_INLINE Strike::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Strike::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Strike::~Strike() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Strike)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Strike::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  delete _impl_.ingress_angle_;
  delete _impl_.strike_release_constraint_;
  delete _impl_.parameters_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Strike::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Strike)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.ingress_angle_ != nullptr);
      _impl_.ingress_angle_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.strike_release_constraint_ != nullptr);
      _impl_.strike_release_constraint_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Strike::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> Strike::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Strike, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Strike_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Strike, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Strike, _impl_.objective_)}},
    // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Strike, _impl_.ingress_angle_)}},
    // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Strike, _impl_.strike_release_constraint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.ingress_angle_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.strike_release_constraint_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.parameters_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::AnglePair>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeReleaseConstraint>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeParameters>()},
  }}, {{
  }},
};

::uint8_t* Strike::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Strike)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::ingress_angle(this),
        _Internal::ingress_angle(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::strike_release_constraint(this),
        _Internal::strike_release_constraint(this).GetCachedSize(), target, stream);
  }

  // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::parameters(this),
        _Internal::parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Strike)
  return target;
}

::size_t Strike::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Strike)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
    }

    // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ingress_angle_);
    }

    // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.strike_release_constraint_);
    }

    // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parameters_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Strike::_class_data_ = {
    Strike::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Strike::GetClassData() const {
  return &_class_data_;
}

void Strike::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Strike*>(&to_msg);
  auto& from = static_cast<const Strike&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Strike)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
          from._internal_objective());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_ingress_angle()->::anduril::tasks::v2::AnglePair::MergeFrom(
          from._internal_ingress_angle());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_strike_release_constraint()->::anduril::tasks::v2::StrikeReleaseConstraint::MergeFrom(
          from._internal_strike_release_constraint());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_parameters()->::anduril::tasks::v2::StrikeParameters::MergeFrom(
          from._internal_parameters());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Strike::CopyFrom(const Strike& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Strike)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Strike::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Strike::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Strike::InternalSwap(Strike* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Strike, _impl_.parameters_)
      + sizeof(Strike::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Strike, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Strike::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[1]);
}
// ===================================================================

class StrikeReleaseConstraint::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::AreaConstraints& release_area(const StrikeReleaseConstraint* msg);
};

const ::anduril::tasks::v2::AreaConstraints& StrikeReleaseConstraint::_Internal::release_area(const StrikeReleaseConstraint* msg) {
  return *msg->_impl_.strike_release_constraint_.release_area_;
}
void StrikeReleaseConstraint::set_allocated_release_area(::anduril::tasks::v2::AreaConstraints* release_area) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_strike_release_constraint();
  if (release_area) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(release_area)->GetArena();
    if (message_arena != submessage_arena) {
      release_area = ::google::protobuf::internal::GetOwnedMessage(message_arena, release_area, submessage_arena);
    }
    set_has_release_area();
    _impl_.strike_release_constraint_.release_area_ = release_area;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.StrikeReleaseConstraint.release_area)
}
void StrikeReleaseConstraint::clear_release_area() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (strike_release_constraint_case() == kReleaseArea) {
    if (GetArena() == nullptr) {
      delete _impl_.strike_release_constraint_.release_area_;
    }
    clear_has_strike_release_constraint();
  }
}
StrikeReleaseConstraint::StrikeReleaseConstraint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.StrikeReleaseConstraint)
}
inline PROTOBUF_NDEBUG_INLINE StrikeReleaseConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : strike_release_constraint_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

StrikeReleaseConstraint::StrikeReleaseConstraint(
    ::google::protobuf::Arena* arena,
    const StrikeReleaseConstraint& from)
    : ::google::protobuf::Message(arena) {
  StrikeReleaseConstraint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (strike_release_constraint_case()) {
    case STRIKE_RELEASE_CONSTRAINT_NOT_SET:
      break;
      case kReleaseArea:
        _impl_.strike_release_constraint_.release_area_ = CreateMaybeMessage<::anduril::tasks::v2::AreaConstraints>(arena, *from._impl_.strike_release_constraint_.release_area_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.StrikeReleaseConstraint)
}
inline PROTOBUF_NDEBUG_INLINE StrikeReleaseConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : strike_release_constraint_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void StrikeReleaseConstraint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StrikeReleaseConstraint::~StrikeReleaseConstraint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.StrikeReleaseConstraint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StrikeReleaseConstraint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_strike_release_constraint()) {
    clear_strike_release_constraint();
  }
  _impl_.~Impl_();
}

void StrikeReleaseConstraint::clear_strike_release_constraint() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.StrikeReleaseConstraint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (strike_release_constraint_case()) {
    case kReleaseArea: {
      if (GetArena() == nullptr) {
        delete _impl_.strike_release_constraint_.release_area_;
      }
      break;
    }
    case STRIKE_RELEASE_CONSTRAINT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = STRIKE_RELEASE_CONSTRAINT_NOT_SET;
}


PROTOBUF_NOINLINE void StrikeReleaseConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.StrikeReleaseConstraint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_strike_release_constraint();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StrikeReleaseConstraint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StrikeReleaseConstraint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StrikeReleaseConstraint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.AreaConstraints release_area = 1 [json_name = "releaseArea"];
    {PROTOBUF_FIELD_OFFSET(StrikeReleaseConstraint, _impl_.strike_release_constraint_.release_area_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::AreaConstraints>()},
  }}, {{
  }},
};

::uint8_t* StrikeReleaseConstraint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.StrikeReleaseConstraint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.tasks.v2.AreaConstraints release_area = 1 [json_name = "releaseArea"];
  if (strike_release_constraint_case() == kReleaseArea) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::release_area(this),
        _Internal::release_area(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.StrikeReleaseConstraint)
  return target;
}

::size_t StrikeReleaseConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.StrikeReleaseConstraint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (strike_release_constraint_case()) {
    // .anduril.tasks.v2.AreaConstraints release_area = 1 [json_name = "releaseArea"];
    case kReleaseArea: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.strike_release_constraint_.release_area_);
      break;
    }
    case STRIKE_RELEASE_CONSTRAINT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StrikeReleaseConstraint::_class_data_ = {
    StrikeReleaseConstraint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StrikeReleaseConstraint::GetClassData() const {
  return &_class_data_;
}

void StrikeReleaseConstraint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StrikeReleaseConstraint*>(&to_msg);
  auto& from = static_cast<const StrikeReleaseConstraint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.StrikeReleaseConstraint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.strike_release_constraint_case()) {
    case kReleaseArea: {
      _this->_internal_mutable_release_area()->::anduril::tasks::v2::AreaConstraints::MergeFrom(
          from._internal_release_area());
      break;
    }
    case STRIKE_RELEASE_CONSTRAINT_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StrikeReleaseConstraint::CopyFrom(const StrikeReleaseConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.StrikeReleaseConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StrikeReleaseConstraint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StrikeReleaseConstraint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StrikeReleaseConstraint::InternalSwap(StrikeReleaseConstraint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.strike_release_constraint_, other->_impl_.strike_release_constraint_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StrikeReleaseConstraint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[2]);
}
// ===================================================================

class StrikeParameters::_Internal {
 public:
  using HasBits = decltype(std::declval<StrikeParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_._has_bits_);
  static const ::google::protobuf::Duration& desired_impact_time(const StrikeParameters* msg);
  static void set_has_desired_impact_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Duration& StrikeParameters::_Internal::desired_impact_time(const StrikeParameters* msg) {
  return *msg->_impl_.desired_impact_time_;
}
void StrikeParameters::clear_desired_impact_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.desired_impact_time_ != nullptr) _impl_.desired_impact_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StrikeParameters::StrikeParameters(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.StrikeParameters)
}
inline PROTOBUF_NDEBUG_INLINE StrikeParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payloads_to_employ_{visibility, arena, from.payloads_to_employ_} {}

StrikeParameters::StrikeParameters(
    ::google::protobuf::Arena* arena,
    const StrikeParameters& from)
    : ::google::protobuf::Message(arena) {
  StrikeParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.desired_impact_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Duration>(arena, *from._impl_.desired_impact_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, run_in_bearing_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, run_in_bearing_),
           offsetof(Impl_, glide_slope_angle_) -
               offsetof(Impl_, run_in_bearing_) +
               sizeof(Impl_::glide_slope_angle_));

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.StrikeParameters)
}
inline PROTOBUF_NDEBUG_INLINE StrikeParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        payloads_to_employ_{visibility, arena} {}

inline void StrikeParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, desired_impact_time_),
           0,
           offsetof(Impl_, glide_slope_angle_) -
               offsetof(Impl_, desired_impact_time_) +
               sizeof(Impl_::glide_slope_angle_));
}
StrikeParameters::~StrikeParameters() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.StrikeParameters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StrikeParameters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.desired_impact_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StrikeParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.StrikeParameters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payloads_to_employ_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.desired_impact_time_ != nullptr);
    _impl_.desired_impact_time_->Clear();
  }
  ::memset(&_impl_.run_in_bearing_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.glide_slope_angle_) -
      reinterpret_cast<char*>(&_impl_.run_in_bearing_)) + sizeof(_impl_.glide_slope_angle_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StrikeParameters::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> StrikeParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StrikeParameters_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.glide_slope_angle_)}},
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.payloads_to_employ_)}},
    // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.desired_impact_time_)}},
    // double run_in_bearing = 3 [json_name = "runInBearing"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.run_in_bearing_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.payloads_to_employ_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.desired_impact_time_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double run_in_bearing = 3 [json_name = "runInBearing"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.run_in_bearing_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.glide_slope_angle_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::PayloadConfiguration>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

::uint8_t* StrikeParameters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.StrikeParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_payloads_to_employ_size()); i < n; i++) {
    const auto& repfield = this->_internal_payloads_to_employ().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::desired_impact_time(this),
        _Internal::desired_impact_time(this).GetCachedSize(), target, stream);
  }

  // double run_in_bearing = 3 [json_name = "runInBearing"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_run_in_bearing = this->_internal_run_in_bearing();
  ::uint64_t raw_run_in_bearing;
  memcpy(&raw_run_in_bearing, &tmp_run_in_bearing, sizeof(tmp_run_in_bearing));
  if (raw_run_in_bearing != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_run_in_bearing(), target);
  }

  // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_glide_slope_angle = this->_internal_glide_slope_angle();
  ::uint64_t raw_glide_slope_angle;
  memcpy(&raw_glide_slope_angle, &tmp_glide_slope_angle, sizeof(tmp_glide_slope_angle));
  if (raw_glide_slope_angle != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_glide_slope_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.StrikeParameters)
  return target;
}

::size_t StrikeParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.StrikeParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
  total_size += 1UL * this->_internal_payloads_to_employ_size();
  for (const auto& msg : this->_internal_payloads_to_employ()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.desired_impact_time_);
  }

  // double run_in_bearing = 3 [json_name = "runInBearing"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_run_in_bearing = this->_internal_run_in_bearing();
  ::uint64_t raw_run_in_bearing;
  memcpy(&raw_run_in_bearing, &tmp_run_in_bearing, sizeof(tmp_run_in_bearing));
  if (raw_run_in_bearing != 0) {
    total_size += 9;
  }

  // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_glide_slope_angle = this->_internal_glide_slope_angle();
  ::uint64_t raw_glide_slope_angle;
  memcpy(&raw_glide_slope_angle, &tmp_glide_slope_angle, sizeof(tmp_glide_slope_angle));
  if (raw_glide_slope_angle != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StrikeParameters::_class_data_ = {
    StrikeParameters::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StrikeParameters::GetClassData() const {
  return &_class_data_;
}

void StrikeParameters::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StrikeParameters*>(&to_msg);
  auto& from = static_cast<const StrikeParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.StrikeParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_payloads_to_employ()->MergeFrom(
      from._internal_payloads_to_employ());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_desired_impact_time()->::google::protobuf::Duration::MergeFrom(
        from._internal_desired_impact_time());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_run_in_bearing = from._internal_run_in_bearing();
  ::uint64_t raw_run_in_bearing;
  memcpy(&raw_run_in_bearing, &tmp_run_in_bearing, sizeof(tmp_run_in_bearing));
  if (raw_run_in_bearing != 0) {
    _this->_internal_set_run_in_bearing(from._internal_run_in_bearing());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_glide_slope_angle = from._internal_glide_slope_angle();
  ::uint64_t raw_glide_slope_angle;
  memcpy(&raw_glide_slope_angle, &tmp_glide_slope_angle, sizeof(tmp_glide_slope_angle));
  if (raw_glide_slope_angle != 0) {
    _this->_internal_set_glide_slope_angle(from._internal_glide_slope_angle());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StrikeParameters::CopyFrom(const StrikeParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.StrikeParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StrikeParameters::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StrikeParameters::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StrikeParameters::InternalSwap(StrikeParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.payloads_to_employ_.InternalSwap(&other->_impl_.payloads_to_employ_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.glide_slope_angle_)
      + sizeof(StrikeParameters::_impl_.glide_slope_angle_)
      - PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.desired_impact_time_)>(
          reinterpret_cast<char*>(&_impl_.desired_impact_time_),
          reinterpret_cast<char*>(&other->_impl_.desired_impact_time_));
}

::google::protobuf::Metadata StrikeParameters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[3]);
}
// ===================================================================

class PayloadConfiguration::_Internal {
 public:
};

PayloadConfiguration::PayloadConfiguration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.PayloadConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE PayloadConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : capability_id_(arena, from.capability_id_),
        _cached_size_{0} {}

PayloadConfiguration::PayloadConfiguration(
    ::google::protobuf::Arena* arena,
    const PayloadConfiguration& from)
    : ::google::protobuf::Message(arena) {
  PayloadConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.PayloadConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE PayloadConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capability_id_(arena),
        _cached_size_{0} {}

inline void PayloadConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
PayloadConfiguration::~PayloadConfiguration() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.PayloadConfiguration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayloadConfiguration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.capability_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayloadConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.PayloadConfiguration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capability_id_.ClearToEmpty();
  _impl_.quantity_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayloadConfiguration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> PayloadConfiguration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayloadConfiguration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 quantity = 2 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayloadConfiguration, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.quantity_)}},
    // string capability_id = 1 [json_name = "capabilityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.capability_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string capability_id = 1 [json_name = "capabilityId"];
    {PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.capability_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 quantity = 2 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.quantity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\45\15\0\0\0\0\0\0"
    "anduril.tasks.v2.PayloadConfiguration"
    "capability_id"
  }},
};

::uint8_t* PayloadConfiguration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.PayloadConfiguration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string capability_id = 1 [json_name = "capabilityId"];
  if (!this->_internal_capability_id().empty()) {
    const std::string& _s = this->_internal_capability_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.tasks.v2.PayloadConfiguration.capability_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 quantity = 2 [json_name = "quantity"];
  if (this->_internal_quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.PayloadConfiguration)
  return target;
}

::size_t PayloadConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.PayloadConfiguration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string capability_id = 1 [json_name = "capabilityId"];
  if (!this->_internal_capability_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_capability_id());
  }

  // uint32 quantity = 2 [json_name = "quantity"];
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayloadConfiguration::_class_data_ = {
    PayloadConfiguration::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayloadConfiguration::GetClassData() const {
  return &_class_data_;
}

void PayloadConfiguration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayloadConfiguration*>(&to_msg);
  auto& from = static_cast<const PayloadConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.PayloadConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_capability_id().empty()) {
    _this->_internal_set_capability_id(from._internal_capability_id());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayloadConfiguration::CopyFrom(const PayloadConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.PayloadConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayloadConfiguration::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayloadConfiguration::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayloadConfiguration::InternalSwap(PayloadConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.capability_id_, &other->_impl_.capability_id_, arena);
        swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata PayloadConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[4]);
}
// ===================================================================

class ReleasePayload::_Internal {
 public:
  using HasBits = decltype(std::declval<ReleasePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_._oneof_case_);
  static const ::anduril::tasks::v2::Objective& objective(const ReleasePayload* msg);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Empty& precision_release(const ReleasePayload* msg);
};

const ::anduril::tasks::v2::Objective& ReleasePayload::_Internal::objective(const ReleasePayload* msg) {
  return *msg->_impl_.objective_;
}
const ::google::protobuf::Empty& ReleasePayload::_Internal::precision_release(const ReleasePayload* msg) {
  return *msg->_impl_.release_method_.precision_release_;
}
void ReleasePayload::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ReleasePayload::set_allocated_precision_release(::google::protobuf::Empty* precision_release) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_release_method();
  if (precision_release) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(precision_release)->GetArena();
    if (message_arena != submessage_arena) {
      precision_release = ::google::protobuf::internal::GetOwnedMessage(message_arena, precision_release, submessage_arena);
    }
    set_has_precision_release();
    _impl_.release_method_.precision_release_ = precision_release;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.ReleasePayload.precision_release)
}
void ReleasePayload::clear_precision_release() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (release_method_case() == kPrecisionRelease) {
    if (GetArena() == nullptr) {
      delete _impl_.release_method_.precision_release_;
    }
    clear_has_release_method();
  }
}
ReleasePayload::ReleasePayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.ReleasePayload)
}
inline PROTOBUF_NDEBUG_INLINE ReleasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payloads_{visibility, arena, from.payloads_},
        release_method_{},
        _oneof_case_{from._oneof_case_[0]} {}

ReleasePayload::ReleasePayload(
    ::google::protobuf::Arena* arena,
    const ReleasePayload& from)
    : ::google::protobuf::Message(arena) {
  ReleasePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_)
                : nullptr;
  switch (release_method_case()) {
    case RELEASE_METHOD_NOT_SET:
      break;
      case kPrecisionRelease:
        _impl_.release_method_.precision_release_ = CreateMaybeMessage<::google::protobuf::Empty>(arena, *from._impl_.release_method_.precision_release_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.ReleasePayload)
}
inline PROTOBUF_NDEBUG_INLINE ReleasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        payloads_{visibility, arena},
        release_method_{},
        _oneof_case_{} {}

inline void ReleasePayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
ReleasePayload::~ReleasePayload() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.ReleasePayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReleasePayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.objective_;
  if (has_release_method()) {
    clear_release_method();
  }
  _impl_.~Impl_();
}

void ReleasePayload::clear_release_method() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.ReleasePayload)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (release_method_case()) {
    case kPrecisionRelease: {
      if (GetArena() == nullptr) {
        delete _impl_.release_method_.precision_release_;
      }
      break;
    }
    case RELEASE_METHOD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RELEASE_METHOD_NOT_SET;
}


PROTOBUF_NOINLINE void ReleasePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.ReleasePayload)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payloads_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  clear_release_method();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReleasePayload::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 3, 0, 2> ReleasePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReleasePayload_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.objective_)}},
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.payloads_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
    {PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.payloads_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.objective_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Empty precision_release = 3 [json_name = "precisionRelease"];
    {PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.release_method_.precision_release_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::PayloadConfiguration>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::google::protobuf::_Empty_default_instance_},
  }}, {{
  }},
};

::uint8_t* ReleasePayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.ReleasePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_payloads_size()); i < n; i++) {
    const auto& repfield = this->_internal_payloads().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Empty precision_release = 3 [json_name = "precisionRelease"];
  if (release_method_case() == kPrecisionRelease) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::precision_release(this),
        _Internal::precision_release(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.ReleasePayload)
  return target;
}

::size_t ReleasePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.ReleasePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
  total_size += 1UL * this->_internal_payloads_size();
  for (const auto& msg : this->_internal_payloads()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.objective_);
  }

  switch (release_method_case()) {
    // .google.protobuf.Empty precision_release = 3 [json_name = "precisionRelease"];
    case kPrecisionRelease: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.release_method_.precision_release_);
      break;
    }
    case RELEASE_METHOD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ReleasePayload::_class_data_ = {
    ReleasePayload::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ReleasePayload::GetClassData() const {
  return &_class_data_;
}

void ReleasePayload::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ReleasePayload*>(&to_msg);
  auto& from = static_cast<const ReleasePayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.ReleasePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_payloads()->MergeFrom(
      from._internal_payloads());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_objective()->::anduril::tasks::v2::Objective::MergeFrom(
        from._internal_objective());
  }
  switch (from.release_method_case()) {
    case kPrecisionRelease: {
      _this->_internal_mutable_precision_release()->::google::protobuf::Empty::MergeFrom(
          from._internal_precision_release());
      break;
    }
    case RELEASE_METHOD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleasePayload::CopyFrom(const ReleasePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.ReleasePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReleasePayload::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ReleasePayload::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ReleasePayload::InternalSwap(ReleasePayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.payloads_.InternalSwap(&other->_impl_.payloads_);
  swap(_impl_.objective_, other->_impl_.objective_);
  swap(_impl_.release_method_, other->_impl_.release_method_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ReleasePayload::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_getter, &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
      file_level_metadata_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
