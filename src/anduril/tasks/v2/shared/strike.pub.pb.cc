// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/tasks/v2/shared/strike.pub.proto
// Protobuf C++ Version: 5.29.0

#include "anduril/tasks/v2/shared/strike.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace tasks {
namespace v2 {

inline constexpr PayloadConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capability_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayloadConfiguration::PayloadConfiguration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PayloadConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayloadConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayloadConfigurationDefaultTypeInternal() {}
  union {
    PayloadConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayloadConfigurationDefaultTypeInternal _PayloadConfiguration_default_instance_;

inline constexpr StrikeParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payloads_to_employ_{},
        desired_impact_time_{nullptr},
        run_in_bearing_{0},
        glide_slope_angle_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StrikeParameters::StrikeParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StrikeParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrikeParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrikeParametersDefaultTypeInternal() {}
  union {
    StrikeParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrikeParametersDefaultTypeInternal _StrikeParameters_default_instance_;

inline constexpr StrikeReleaseConstraint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : strike_release_constraint_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StrikeReleaseConstraint::StrikeReleaseConstraint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StrikeReleaseConstraintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrikeReleaseConstraintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrikeReleaseConstraintDefaultTypeInternal() {}
  union {
    StrikeReleaseConstraint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrikeReleaseConstraintDefaultTypeInternal _StrikeReleaseConstraint_default_instance_;

inline constexpr Strike::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        ingress_angle_{nullptr},
        strike_release_constraint_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Strike::Strike(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StrikeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrikeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrikeDefaultTypeInternal() {}
  union {
    Strike _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrikeDefaultTypeInternal _Strike_default_instance_;

inline constexpr Smack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objective_{nullptr},
        parameters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Smack::Smack(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SmackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SmackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SmackDefaultTypeInternal() {}
  union {
    Smack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SmackDefaultTypeInternal _Smack_default_instance_;

inline constexpr ReleasePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payloads_{},
        objective_{nullptr},
        release_method_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ReleasePayload::ReleasePayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReleasePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleasePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleasePayloadDefaultTypeInternal() {}
  union {
    ReleasePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleasePayloadDefaultTypeInternal _ReleasePayload_default_instance_;
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Smack, _impl_.parameters_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.ingress_angle_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.strike_release_constraint_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::Strike, _impl_.parameters_),
        0,
        1,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _impl_.strike_release_constraint_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.payloads_to_employ_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.desired_impact_time_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.run_in_bearing_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeParameters, _impl_.glide_slope_angle_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PayloadConfiguration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PayloadConfiguration, _impl_.capability_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::PayloadConfiguration, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_.payloads_),
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_.objective_),
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_.release_method_),
        ~0u,
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::anduril::tasks::v2::Smack)},
        {12, 24, -1, sizeof(::anduril::tasks::v2::Strike)},
        {28, -1, -1, sizeof(::anduril::tasks::v2::StrikeReleaseConstraint)},
        {38, 50, -1, sizeof(::anduril::tasks::v2::StrikeParameters)},
        {54, -1, -1, sizeof(::anduril::tasks::v2::PayloadConfiguration)},
        {64, 76, -1, sizeof(::anduril::tasks::v2::ReleasePayload)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::tasks::v2::_Smack_default_instance_._instance,
    &::anduril::tasks::v2::_Strike_default_instance_._instance,
    &::anduril::tasks::v2::_StrikeReleaseConstraint_default_instance_._instance,
    &::anduril::tasks::v2::_StrikeParameters_default_instance_._instance,
    &::anduril::tasks::v2::_PayloadConfiguration_default_instance_._instance,
    &::anduril::tasks::v2::_ReleasePayload_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(anduril/tasks/v2/shared/strike.pub.pro"
    "to\022\020anduril.tasks.v2\032!anduril/tasks/v2/c"
    "ommon.pub.proto\032$anduril/tasks/v2/object"
    "ive.pub.proto\032\036google/protobuf/duration."
    "proto\032\033google/protobuf/empty.proto\"\206\001\n\005S"
    "mack\0229\n\tobjective\030\001 \001(\0132\033.anduril.tasks."
    "v2.ObjectiveR\tobjective\022B\n\nparameters\030\002 "
    "\001(\0132\".anduril.tasks.v2.StrikeParametersR"
    "\nparameters\"\260\002\n\006Strike\0229\n\tobjective\030\001 \001("
    "\0132\033.anduril.tasks.v2.ObjectiveR\tobjectiv"
    "e\022@\n\ringress_angle\030\002 \001(\0132\033.anduril.tasks"
    ".v2.AnglePairR\014ingressAngle\022e\n\031strike_re"
    "lease_constraint\030\003 \001(\0132).anduril.tasks.v"
    "2.StrikeReleaseConstraintR\027strikeRelease"
    "Constraint\022B\n\nparameters\030\004 \001(\0132\".anduril"
    ".tasks.v2.StrikeParametersR\nparameters\"~"
    "\n\027StrikeReleaseConstraint\022F\n\014release_are"
    "a\030\001 \001(\0132!.anduril.tasks.v2.AreaConstrain"
    "tsH\000R\013releaseAreaB\033\n\031strike_release_cons"
    "traint\"\205\002\n\020StrikeParameters\022T\n\022payloads_"
    "to_employ\030\001 \003(\0132&.anduril.tasks.v2.Paylo"
    "adConfigurationR\020payloadsToEmploy\022I\n\023des"
    "ired_impact_time\030\002 \001(\0132\031.google.protobuf"
    ".DurationR\021desiredImpactTime\022$\n\016run_in_b"
    "earing\030\003 \001(\001R\014runInBearing\022*\n\021glide_slop"
    "e_angle\030\004 \001(\001R\017glideSlopeAngle\"W\n\024Payloa"
    "dConfiguration\022#\n\rcapability_id\030\001 \001(\tR\014c"
    "apabilityId\022\032\n\010quantity\030\002 \001(\rR\010quantity\""
    "\350\001\n\016ReleasePayload\022B\n\010payloads\030\001 \003(\0132&.a"
    "nduril.tasks.v2.PayloadConfigurationR\010pa"
    "yloads\0229\n\tobjective\030\002 \001(\0132\033.anduril.task"
    "s.v2.ObjectiveR\tobjective\022E\n\021precision_r"
    "elease\030\003 \001(\0132\026.google.protobuf.EmptyH\000R\020"
    "precisionReleaseB\020\n\016release_methodB\307\001\n\024c"
    "om.anduril.tasks.v2B\016StrikePubProtoP\001Z=g"
    "he.anduril.dev/anduril/andurilapis-go/an"
    "duril/tasks/v2;tasks\242\002\003ATX\252\002\020Anduril.Tas"
    "ks.V2\312\002\020Anduril\\Tasks\\V2\342\002\034Anduril\\Tasks"
    "\\V2\\GPBMetadata\352\002\022Anduril::Tasks::V2b\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_deps[4] =
    {
        &::descriptor_table_anduril_2ftasks_2fv2_2fcommon_2epub_2eproto,
        &::descriptor_table_anduril_2ftasks_2fv2_2fobjective_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto = {
    false,
    false,
    1564,
    descriptor_table_protodef_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    "anduril/tasks/v2/shared/strike.pub.proto",
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_once,
    descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    file_level_service_descriptors_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
};
namespace anduril {
namespace tasks {
namespace v2 {
// ===================================================================

class Smack::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Smack>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Smack, _impl_._has_bits_);
};

void Smack::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Smack::Smack(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Smack)
}
inline PROTOBUF_NDEBUG_INLINE Smack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Smack& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Smack::Smack(
    ::google::protobuf::Arena* arena,
    const Smack& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Smack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::StrikeParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Smack)
}
inline PROTOBUF_NDEBUG_INLINE Smack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Smack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Smack::~Smack() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Smack)
  SharedDtor(*this);
}
inline void Smack::SharedDtor(MessageLite& self) {
  Smack& this_ = static_cast<Smack&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* Smack::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Smack(arena);
}
constexpr auto Smack::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Smack),
                                            alignof(Smack));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Smack::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Smack_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Smack::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Smack>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Smack::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Smack>(), &Smack::ByteSizeLong,
            &Smack::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Smack, _impl_._cached_size_),
        false,
    },
    &Smack::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Smack::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Smack::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Smack, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Smack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Smack, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Smack, _impl_.objective_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Smack, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Smack, _impl_.parameters_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Smack::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Smack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Smack::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Smack& this_ = static_cast<const Smack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Smack::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Smack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Smack)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Smack)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Smack::ByteSizeLong(const MessageLite& base) {
          const Smack& this_ = static_cast<const Smack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Smack::ByteSizeLong() const {
          const Smack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Smack)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.StrikeParameters parameters = 2 [json_name = "parameters"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Smack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Smack*>(&to_msg);
  auto& from = static_cast<const Smack&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Smack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::StrikeParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Smack::CopyFrom(const Smack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Smack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Smack::InternalSwap(Smack* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Smack, _impl_.parameters_)
      + sizeof(Smack::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Smack, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Smack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Strike::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Strike>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Strike, _impl_._has_bits_);
};

void Strike::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Strike::clear_ingress_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ingress_angle_ != nullptr) _impl_.ingress_angle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Strike::Strike(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.Strike)
}
inline PROTOBUF_NDEBUG_INLINE Strike::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::Strike& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Strike::Strike(
    ::google::protobuf::Arena* arena,
    const Strike& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Strike* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  _impl_.ingress_angle_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::AnglePair>(
                              arena, *from._impl_.ingress_angle_)
                        : nullptr;
  _impl_.strike_release_constraint_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::StrikeReleaseConstraint>(
                              arena, *from._impl_.strike_release_constraint_)
                        : nullptr;
  _impl_.parameters_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::StrikeParameters>(
                              arena, *from._impl_.parameters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.Strike)
}
inline PROTOBUF_NDEBUG_INLINE Strike::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Strike::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           0,
           offsetof(Impl_, parameters_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::parameters_));
}
Strike::~Strike() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.Strike)
  SharedDtor(*this);
}
inline void Strike::SharedDtor(MessageLite& self) {
  Strike& this_ = static_cast<Strike&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  delete this_._impl_.ingress_angle_;
  delete this_._impl_.strike_release_constraint_;
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* Strike::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Strike(arena);
}
constexpr auto Strike::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Strike),
                                            alignof(Strike));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Strike::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Strike_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Strike::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Strike>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Strike::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Strike>(), &Strike::ByteSizeLong,
            &Strike::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Strike, _impl_._cached_size_),
        false,
    },
    &Strike::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Strike::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> Strike::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Strike, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::Strike>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Strike, _impl_.parameters_)}},
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Strike, _impl_.objective_)}},
    // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Strike, _impl_.ingress_angle_)}},
    // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Strike, _impl_.strike_release_constraint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.ingress_angle_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.strike_release_constraint_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Strike, _impl_.parameters_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::AnglePair>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeReleaseConstraint>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Strike::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.Strike)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.objective_ != nullptr);
      _impl_.objective_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.ingress_angle_ != nullptr);
      _impl_.ingress_angle_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.strike_release_constraint_ != nullptr);
      _impl_.strike_release_constraint_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Strike::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Strike& this_ = static_cast<const Strike&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Strike::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Strike& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.Strike)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.ingress_angle_, this_._impl_.ingress_angle_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.strike_release_constraint_, this_._impl_.strike_release_constraint_->GetCachedSize(), target,
                stream);
          }

          // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.Strike)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Strike::ByteSizeLong(const MessageLite& base) {
          const Strike& this_ = static_cast<const Strike&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Strike::ByteSizeLong() const {
          const Strike& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.Strike)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .anduril.tasks.v2.Objective objective = 1 [json_name = "objective"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
            // .anduril.tasks.v2.AnglePair ingress_angle = 2 [json_name = "ingressAngle"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ingress_angle_);
            }
            // .anduril.tasks.v2.StrikeReleaseConstraint strike_release_constraint = 3 [json_name = "strikeReleaseConstraint"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.strike_release_constraint_);
            }
            // .anduril.tasks.v2.StrikeParameters parameters = 4 [json_name = "parameters"];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Strike::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Strike*>(&to_msg);
  auto& from = static_cast<const Strike&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.Strike)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.objective_ != nullptr);
      if (_this->_impl_.objective_ == nullptr) {
        _this->_impl_.objective_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
      } else {
        _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.ingress_angle_ != nullptr);
      if (_this->_impl_.ingress_angle_ == nullptr) {
        _this->_impl_.ingress_angle_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::AnglePair>(arena, *from._impl_.ingress_angle_);
      } else {
        _this->_impl_.ingress_angle_->MergeFrom(*from._impl_.ingress_angle_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.strike_release_constraint_ != nullptr);
      if (_this->_impl_.strike_release_constraint_ == nullptr) {
        _this->_impl_.strike_release_constraint_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::StrikeReleaseConstraint>(arena, *from._impl_.strike_release_constraint_);
      } else {
        _this->_impl_.strike_release_constraint_->MergeFrom(*from._impl_.strike_release_constraint_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::StrikeParameters>(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Strike::CopyFrom(const Strike& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.Strike)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Strike::InternalSwap(Strike* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Strike, _impl_.parameters_)
      + sizeof(Strike::_impl_.parameters_)
      - PROTOBUF_FIELD_OFFSET(Strike, _impl_.objective_)>(
          reinterpret_cast<char*>(&_impl_.objective_),
          reinterpret_cast<char*>(&other->_impl_.objective_));
}

::google::protobuf::Metadata Strike::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StrikeReleaseConstraint::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::StrikeReleaseConstraint, _impl_._oneof_case_);
};

void StrikeReleaseConstraint::set_allocated_release_area(::anduril::tasks::v2::AreaConstraints* release_area) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_strike_release_constraint();
  if (release_area) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(release_area)->GetArena();
    if (message_arena != submessage_arena) {
      release_area = ::google::protobuf::internal::GetOwnedMessage(message_arena, release_area, submessage_arena);
    }
    set_has_release_area();
    _impl_.strike_release_constraint_.release_area_ = release_area;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.StrikeReleaseConstraint.release_area)
}
void StrikeReleaseConstraint::clear_release_area() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (strike_release_constraint_case() == kReleaseArea) {
    if (GetArena() == nullptr) {
      delete _impl_.strike_release_constraint_.release_area_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.strike_release_constraint_.release_area_);
    }
    clear_has_strike_release_constraint();
  }
}
StrikeReleaseConstraint::StrikeReleaseConstraint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.StrikeReleaseConstraint)
}
inline PROTOBUF_NDEBUG_INLINE StrikeReleaseConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::StrikeReleaseConstraint& from_msg)
      : strike_release_constraint_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

StrikeReleaseConstraint::StrikeReleaseConstraint(
    ::google::protobuf::Arena* arena,
    const StrikeReleaseConstraint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StrikeReleaseConstraint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (strike_release_constraint_case()) {
    case STRIKE_RELEASE_CONSTRAINT_NOT_SET:
      break;
      case kReleaseArea:
        _impl_.strike_release_constraint_.release_area_ = ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::AreaConstraints>(arena, *from._impl_.strike_release_constraint_.release_area_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.StrikeReleaseConstraint)
}
inline PROTOBUF_NDEBUG_INLINE StrikeReleaseConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : strike_release_constraint_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void StrikeReleaseConstraint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StrikeReleaseConstraint::~StrikeReleaseConstraint() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.StrikeReleaseConstraint)
  SharedDtor(*this);
}
inline void StrikeReleaseConstraint::SharedDtor(MessageLite& self) {
  StrikeReleaseConstraint& this_ = static_cast<StrikeReleaseConstraint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_strike_release_constraint()) {
    this_.clear_strike_release_constraint();
  }
  this_._impl_.~Impl_();
}

void StrikeReleaseConstraint::clear_strike_release_constraint() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.StrikeReleaseConstraint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (strike_release_constraint_case()) {
    case kReleaseArea: {
      if (GetArena() == nullptr) {
        delete _impl_.strike_release_constraint_.release_area_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.strike_release_constraint_.release_area_);
      }
      break;
    }
    case STRIKE_RELEASE_CONSTRAINT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = STRIKE_RELEASE_CONSTRAINT_NOT_SET;
}


inline void* StrikeReleaseConstraint::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StrikeReleaseConstraint(arena);
}
constexpr auto StrikeReleaseConstraint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StrikeReleaseConstraint),
                                            alignof(StrikeReleaseConstraint));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StrikeReleaseConstraint::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StrikeReleaseConstraint_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StrikeReleaseConstraint::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StrikeReleaseConstraint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StrikeReleaseConstraint::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StrikeReleaseConstraint>(), &StrikeReleaseConstraint::ByteSizeLong,
            &StrikeReleaseConstraint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StrikeReleaseConstraint, _impl_._cached_size_),
        false,
    },
    &StrikeReleaseConstraint::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StrikeReleaseConstraint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StrikeReleaseConstraint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeReleaseConstraint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.tasks.v2.AreaConstraints release_area = 1 [json_name = "releaseArea"];
    {PROTOBUF_FIELD_OFFSET(StrikeReleaseConstraint, _impl_.strike_release_constraint_.release_area_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::AreaConstraints>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StrikeReleaseConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.StrikeReleaseConstraint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_strike_release_constraint();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StrikeReleaseConstraint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StrikeReleaseConstraint& this_ = static_cast<const StrikeReleaseConstraint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StrikeReleaseConstraint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StrikeReleaseConstraint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.StrikeReleaseConstraint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .anduril.tasks.v2.AreaConstraints release_area = 1 [json_name = "releaseArea"];
          if (this_.strike_release_constraint_case() == kReleaseArea) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.strike_release_constraint_.release_area_, this_._impl_.strike_release_constraint_.release_area_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.StrikeReleaseConstraint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StrikeReleaseConstraint::ByteSizeLong(const MessageLite& base) {
          const StrikeReleaseConstraint& this_ = static_cast<const StrikeReleaseConstraint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StrikeReleaseConstraint::ByteSizeLong() const {
          const StrikeReleaseConstraint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.StrikeReleaseConstraint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.strike_release_constraint_case()) {
            // .anduril.tasks.v2.AreaConstraints release_area = 1 [json_name = "releaseArea"];
            case kReleaseArea: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.strike_release_constraint_.release_area_);
              break;
            }
            case STRIKE_RELEASE_CONSTRAINT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StrikeReleaseConstraint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StrikeReleaseConstraint*>(&to_msg);
  auto& from = static_cast<const StrikeReleaseConstraint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.StrikeReleaseConstraint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_strike_release_constraint();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kReleaseArea: {
        if (oneof_needs_init) {
          _this->_impl_.strike_release_constraint_.release_area_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::AreaConstraints>(arena, *from._impl_.strike_release_constraint_.release_area_);
        } else {
          _this->_impl_.strike_release_constraint_.release_area_->MergeFrom(from._internal_release_area());
        }
        break;
      }
      case STRIKE_RELEASE_CONSTRAINT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StrikeReleaseConstraint::CopyFrom(const StrikeReleaseConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.StrikeReleaseConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StrikeReleaseConstraint::InternalSwap(StrikeReleaseConstraint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.strike_release_constraint_, other->_impl_.strike_release_constraint_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StrikeReleaseConstraint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StrikeParameters::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StrikeParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_._has_bits_);
};

void StrikeParameters::clear_desired_impact_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.desired_impact_time_ != nullptr) _impl_.desired_impact_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StrikeParameters::StrikeParameters(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.StrikeParameters)
}
inline PROTOBUF_NDEBUG_INLINE StrikeParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::StrikeParameters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payloads_to_employ_{visibility, arena, from.payloads_to_employ_} {}

StrikeParameters::StrikeParameters(
    ::google::protobuf::Arena* arena,
    const StrikeParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StrikeParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.desired_impact_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.desired_impact_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, run_in_bearing_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, run_in_bearing_),
           offsetof(Impl_, glide_slope_angle_) -
               offsetof(Impl_, run_in_bearing_) +
               sizeof(Impl_::glide_slope_angle_));

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.StrikeParameters)
}
inline PROTOBUF_NDEBUG_INLINE StrikeParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        payloads_to_employ_{visibility, arena} {}

inline void StrikeParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, desired_impact_time_),
           0,
           offsetof(Impl_, glide_slope_angle_) -
               offsetof(Impl_, desired_impact_time_) +
               sizeof(Impl_::glide_slope_angle_));
}
StrikeParameters::~StrikeParameters() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.StrikeParameters)
  SharedDtor(*this);
}
inline void StrikeParameters::SharedDtor(MessageLite& self) {
  StrikeParameters& this_ = static_cast<StrikeParameters&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.desired_impact_time_;
  this_._impl_.~Impl_();
}

inline void* StrikeParameters::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StrikeParameters(arena);
}
constexpr auto StrikeParameters::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.payloads_to_employ_) +
          decltype(StrikeParameters::_impl_.payloads_to_employ_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StrikeParameters), alignof(StrikeParameters), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StrikeParameters::PlacementNew_,
                                 sizeof(StrikeParameters),
                                 alignof(StrikeParameters));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StrikeParameters::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StrikeParameters_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StrikeParameters::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StrikeParameters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StrikeParameters::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StrikeParameters>(), &StrikeParameters::ByteSizeLong,
            &StrikeParameters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_._cached_size_),
        false,
    },
    &StrikeParameters::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StrikeParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> StrikeParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::StrikeParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.glide_slope_angle_)}},
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.payloads_to_employ_)}},
    // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.desired_impact_time_)}},
    // double run_in_bearing = 3 [json_name = "runInBearing"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.run_in_bearing_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.payloads_to_employ_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.desired_impact_time_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double run_in_bearing = 3 [json_name = "runInBearing"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.run_in_bearing_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
    {PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.glide_slope_angle_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::PayloadConfiguration>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StrikeParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.StrikeParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payloads_to_employ_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.desired_impact_time_ != nullptr);
    _impl_.desired_impact_time_->Clear();
  }
  ::memset(&_impl_.run_in_bearing_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.glide_slope_angle_) -
      reinterpret_cast<char*>(&_impl_.run_in_bearing_)) + sizeof(_impl_.glide_slope_angle_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StrikeParameters::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StrikeParameters& this_ = static_cast<const StrikeParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StrikeParameters::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StrikeParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.StrikeParameters)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_payloads_to_employ_size());
               i < n; i++) {
            const auto& repfield = this_._internal_payloads_to_employ().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.desired_impact_time_, this_._impl_.desired_impact_time_->GetCachedSize(), target,
                stream);
          }

          // double run_in_bearing = 3 [json_name = "runInBearing"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_run_in_bearing()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_run_in_bearing(), target);
          }

          // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_glide_slope_angle()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_glide_slope_angle(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.StrikeParameters)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StrikeParameters::ByteSizeLong(const MessageLite& base) {
          const StrikeParameters& this_ = static_cast<const StrikeParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StrikeParameters::ByteSizeLong() const {
          const StrikeParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.StrikeParameters)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.tasks.v2.PayloadConfiguration payloads_to_employ = 1 [json_name = "payloadsToEmploy"];
            {
              total_size += 1UL * this_._internal_payloads_to_employ_size();
              for (const auto& msg : this_._internal_payloads_to_employ()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .google.protobuf.Duration desired_impact_time = 2 [json_name = "desiredImpactTime"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.desired_impact_time_);
            }
          }
           {
            // double run_in_bearing = 3 [json_name = "runInBearing"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_run_in_bearing()) != 0) {
              total_size += 9;
            }
            // double glide_slope_angle = 4 [json_name = "glideSlopeAngle"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_glide_slope_angle()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StrikeParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StrikeParameters*>(&to_msg);
  auto& from = static_cast<const StrikeParameters&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.StrikeParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_payloads_to_employ()->MergeFrom(
      from._internal_payloads_to_employ());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.desired_impact_time_ != nullptr);
    if (_this->_impl_.desired_impact_time_ == nullptr) {
      _this->_impl_.desired_impact_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.desired_impact_time_);
    } else {
      _this->_impl_.desired_impact_time_->MergeFrom(*from._impl_.desired_impact_time_);
    }
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_run_in_bearing()) != 0) {
    _this->_impl_.run_in_bearing_ = from._impl_.run_in_bearing_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_glide_slope_angle()) != 0) {
    _this->_impl_.glide_slope_angle_ = from._impl_.glide_slope_angle_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StrikeParameters::CopyFrom(const StrikeParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.StrikeParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StrikeParameters::InternalSwap(StrikeParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.payloads_to_employ_.InternalSwap(&other->_impl_.payloads_to_employ_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.glide_slope_angle_)
      + sizeof(StrikeParameters::_impl_.glide_slope_angle_)
      - PROTOBUF_FIELD_OFFSET(StrikeParameters, _impl_.desired_impact_time_)>(
          reinterpret_cast<char*>(&_impl_.desired_impact_time_),
          reinterpret_cast<char*>(&other->_impl_.desired_impact_time_));
}

::google::protobuf::Metadata StrikeParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PayloadConfiguration::_Internal {
 public:
};

PayloadConfiguration::PayloadConfiguration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.PayloadConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE PayloadConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::PayloadConfiguration& from_msg)
      : capability_id_(arena, from.capability_id_),
        _cached_size_{0} {}

PayloadConfiguration::PayloadConfiguration(
    ::google::protobuf::Arena* arena,
    const PayloadConfiguration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PayloadConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.PayloadConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE PayloadConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capability_id_(arena),
        _cached_size_{0} {}

inline void PayloadConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
PayloadConfiguration::~PayloadConfiguration() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.PayloadConfiguration)
  SharedDtor(*this);
}
inline void PayloadConfiguration::SharedDtor(MessageLite& self) {
  PayloadConfiguration& this_ = static_cast<PayloadConfiguration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.capability_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PayloadConfiguration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PayloadConfiguration(arena);
}
constexpr auto PayloadConfiguration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PayloadConfiguration),
                                            alignof(PayloadConfiguration));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PayloadConfiguration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PayloadConfiguration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PayloadConfiguration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PayloadConfiguration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PayloadConfiguration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PayloadConfiguration>(), &PayloadConfiguration::ByteSizeLong,
            &PayloadConfiguration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_._cached_size_),
        false,
    },
    &PayloadConfiguration::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PayloadConfiguration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> PayloadConfiguration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::PayloadConfiguration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 quantity = 2 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayloadConfiguration, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.quantity_)}},
    // string capability_id = 1 [json_name = "capabilityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.capability_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string capability_id = 1 [json_name = "capabilityId"];
    {PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.capability_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 quantity = 2 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(PayloadConfiguration, _impl_.quantity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\45\15\0\0\0\0\0\0"
    "anduril.tasks.v2.PayloadConfiguration"
    "capability_id"
  }},
};

PROTOBUF_NOINLINE void PayloadConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.PayloadConfiguration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capability_id_.ClearToEmpty();
  _impl_.quantity_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PayloadConfiguration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PayloadConfiguration& this_ = static_cast<const PayloadConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PayloadConfiguration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PayloadConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.PayloadConfiguration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string capability_id = 1 [json_name = "capabilityId"];
          if (!this_._internal_capability_id().empty()) {
            const std::string& _s = this_._internal_capability_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.tasks.v2.PayloadConfiguration.capability_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 quantity = 2 [json_name = "quantity"];
          if (this_._internal_quantity() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_quantity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.PayloadConfiguration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PayloadConfiguration::ByteSizeLong(const MessageLite& base) {
          const PayloadConfiguration& this_ = static_cast<const PayloadConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PayloadConfiguration::ByteSizeLong() const {
          const PayloadConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.PayloadConfiguration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string capability_id = 1 [json_name = "capabilityId"];
            if (!this_._internal_capability_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_capability_id());
            }
            // uint32 quantity = 2 [json_name = "quantity"];
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PayloadConfiguration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PayloadConfiguration*>(&to_msg);
  auto& from = static_cast<const PayloadConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.PayloadConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_capability_id().empty()) {
    _this->_internal_set_capability_id(from._internal_capability_id());
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayloadConfiguration::CopyFrom(const PayloadConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.PayloadConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PayloadConfiguration::InternalSwap(PayloadConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.capability_id_, &other->_impl_.capability_id_, arena);
        swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata PayloadConfiguration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReleasePayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ReleasePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::tasks::v2::ReleasePayload, _impl_._oneof_case_);
};

void ReleasePayload::clear_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ReleasePayload::set_allocated_precision_release(::google::protobuf::Empty* precision_release) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_release_method();
  if (precision_release) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(precision_release)->GetArena();
    if (message_arena != submessage_arena) {
      precision_release = ::google::protobuf::internal::GetOwnedMessage(message_arena, precision_release, submessage_arena);
    }
    set_has_precision_release();
    _impl_.release_method_.precision_release_ = precision_release;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.tasks.v2.ReleasePayload.precision_release)
}
void ReleasePayload::clear_precision_release() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (release_method_case() == kPrecisionRelease) {
    if (GetArena() == nullptr) {
      delete _impl_.release_method_.precision_release_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.release_method_.precision_release_);
    }
    clear_has_release_method();
  }
}
ReleasePayload::ReleasePayload(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.tasks.v2.ReleasePayload)
}
inline PROTOBUF_NDEBUG_INLINE ReleasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::tasks::v2::ReleasePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payloads_{visibility, arena, from.payloads_},
        release_method_{},
        _oneof_case_{from._oneof_case_[0]} {}

ReleasePayload::ReleasePayload(
    ::google::protobuf::Arena* arena,
    const ReleasePayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReleasePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.objective_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(
                              arena, *from._impl_.objective_)
                        : nullptr;
  switch (release_method_case()) {
    case RELEASE_METHOD_NOT_SET:
      break;
      case kPrecisionRelease:
        _impl_.release_method_.precision_release_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.release_method_.precision_release_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.tasks.v2.ReleasePayload)
}
inline PROTOBUF_NDEBUG_INLINE ReleasePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        payloads_{visibility, arena},
        release_method_{},
        _oneof_case_{} {}

inline void ReleasePayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objective_ = {};
}
ReleasePayload::~ReleasePayload() {
  // @@protoc_insertion_point(destructor:anduril.tasks.v2.ReleasePayload)
  SharedDtor(*this);
}
inline void ReleasePayload::SharedDtor(MessageLite& self) {
  ReleasePayload& this_ = static_cast<ReleasePayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.objective_;
  if (this_.has_release_method()) {
    this_.clear_release_method();
  }
  this_._impl_.~Impl_();
}

void ReleasePayload::clear_release_method() {
// @@protoc_insertion_point(one_of_clear_start:anduril.tasks.v2.ReleasePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (release_method_case()) {
    case kPrecisionRelease: {
      if (GetArena() == nullptr) {
        delete _impl_.release_method_.precision_release_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.release_method_.precision_release_);
      }
      break;
    }
    case RELEASE_METHOD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RELEASE_METHOD_NOT_SET;
}


inline void* ReleasePayload::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReleasePayload(arena);
}
constexpr auto ReleasePayload::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.payloads_) +
          decltype(ReleasePayload::_impl_.payloads_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ReleasePayload), alignof(ReleasePayload), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ReleasePayload::PlacementNew_,
                                 sizeof(ReleasePayload),
                                 alignof(ReleasePayload));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReleasePayload::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReleasePayload_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReleasePayload::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReleasePayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReleasePayload::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReleasePayload>(), &ReleasePayload::ByteSizeLong,
            &ReleasePayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_._cached_size_),
        false,
    },
    &ReleasePayload::kDescriptorMethods,
    &descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReleasePayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 3, 0, 2> ReleasePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::tasks::v2::ReleasePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.objective_)}},
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.payloads_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
    {PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.payloads_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.objective_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Empty precision_release = 3 [json_name = "precisionRelease"];
    {PROTOBUF_FIELD_OFFSET(ReleasePayload, _impl_.release_method_.precision_release_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::PayloadConfiguration>()},
    {::_pbi::TcParser::GetTable<::anduril::tasks::v2::Objective>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Empty>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ReleasePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.tasks.v2.ReleasePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payloads_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.objective_ != nullptr);
    _impl_.objective_->Clear();
  }
  clear_release_method();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReleasePayload::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReleasePayload& this_ = static_cast<const ReleasePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReleasePayload::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReleasePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.tasks.v2.ReleasePayload)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_payloads_size());
               i < n; i++) {
            const auto& repfield = this_._internal_payloads().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.objective_, this_._impl_.objective_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Empty precision_release = 3 [json_name = "precisionRelease"];
          if (this_.release_method_case() == kPrecisionRelease) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.release_method_.precision_release_, this_._impl_.release_method_.precision_release_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.tasks.v2.ReleasePayload)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReleasePayload::ByteSizeLong(const MessageLite& base) {
          const ReleasePayload& this_ = static_cast<const ReleasePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReleasePayload::ByteSizeLong() const {
          const ReleasePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.tasks.v2.ReleasePayload)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.tasks.v2.PayloadConfiguration payloads = 1 [json_name = "payloads"];
            {
              total_size += 1UL * this_._internal_payloads_size();
              for (const auto& msg : this_._internal_payloads()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .anduril.tasks.v2.Objective objective = 2 [json_name = "objective"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.objective_);
            }
          }
          switch (this_.release_method_case()) {
            // .google.protobuf.Empty precision_release = 3 [json_name = "precisionRelease"];
            case kPrecisionRelease: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.release_method_.precision_release_);
              break;
            }
            case RELEASE_METHOD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReleasePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleasePayload*>(&to_msg);
  auto& from = static_cast<const ReleasePayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.tasks.v2.ReleasePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_payloads()->MergeFrom(
      from._internal_payloads());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.objective_ != nullptr);
    if (_this->_impl_.objective_ == nullptr) {
      _this->_impl_.objective_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::tasks::v2::Objective>(arena, *from._impl_.objective_);
    } else {
      _this->_impl_.objective_->MergeFrom(*from._impl_.objective_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_release_method();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPrecisionRelease: {
        if (oneof_needs_init) {
          _this->_impl_.release_method_.precision_release_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.release_method_.precision_release_);
        } else {
          _this->_impl_.release_method_.precision_release_->MergeFrom(from._internal_precision_release());
        }
        break;
      }
      case RELEASE_METHOD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleasePayload::CopyFrom(const ReleasePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.tasks.v2.ReleasePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReleasePayload::InternalSwap(ReleasePayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.payloads_.InternalSwap(&other->_impl_.payloads_);
  swap(_impl_.objective_, other->_impl_.objective_);
  swap(_impl_.release_method_, other->_impl_.release_method_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ReleasePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2ftasks_2fv2_2fshared_2fstrike_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
