// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/tasks/ad/desertguardian/rf/v1/rf_tasks.pub.proto
// Protobuf C++ Version: 5.29.0

#ifndef anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto_2epb_2eh
#define anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto;
namespace anduril {
namespace tasks {
namespace ad {
namespace desertguardian {
namespace rf {
namespace v1 {
class SetEmissionControlState;
struct SetEmissionControlStateDefaultTypeInternal;
extern SetEmissionControlStateDefaultTypeInternal _SetEmissionControlState_default_instance_;
class SetSurveillanceState;
struct SetSurveillanceStateDefaultTypeInternal;
extern SetSurveillanceStateDefaultTypeInternal _SetSurveillanceState_default_instance_;
class SetTransmitState;
struct SetTransmitStateDefaultTypeInternal;
extern SetTransmitStateDefaultTypeInternal _SetTransmitState_default_instance_;
}  // namespace v1
}  // namespace rf
}  // namespace desertguardian
}  // namespace ad
}  // namespace tasks
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace tasks {
namespace ad {
namespace desertguardian {
namespace rf {
namespace v1 {
enum TransmitState : int {
  TRANSMIT_STATE_INVALID = 0,
  TRANSMIT_STATE_TRANSMITTING = 1,
  TRANSMIT_STATE_NOT_TRANSMITTING = 2,
  TransmitState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TransmitState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TransmitState_IsValid(int value);
extern const uint32_t TransmitState_internal_data_[];
constexpr TransmitState TransmitState_MIN = static_cast<TransmitState>(0);
constexpr TransmitState TransmitState_MAX = static_cast<TransmitState>(2);
constexpr int TransmitState_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
TransmitState_descriptor();
template <typename T>
const std::string& TransmitState_Name(T value) {
  static_assert(std::is_same<T, TransmitState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TransmitState_Name().");
  return TransmitState_Name(static_cast<TransmitState>(value));
}
template <>
inline const std::string& TransmitState_Name(TransmitState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TransmitState_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TransmitState_Parse(absl::string_view name, TransmitState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransmitState>(
      TransmitState_descriptor(), name, value);
}
enum SurveillanceState : int {
  SURVEILLANCE_STATE_INVALID = 0,
  SURVEILLANCE_STATE_SURVEILLING = 1,
  SURVEILLANCE_STATE_NOT_SURVEILLING = 2,
  SurveillanceState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SurveillanceState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SurveillanceState_IsValid(int value);
extern const uint32_t SurveillanceState_internal_data_[];
constexpr SurveillanceState SurveillanceState_MIN = static_cast<SurveillanceState>(0);
constexpr SurveillanceState SurveillanceState_MAX = static_cast<SurveillanceState>(2);
constexpr int SurveillanceState_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SurveillanceState_descriptor();
template <typename T>
const std::string& SurveillanceState_Name(T value) {
  static_assert(std::is_same<T, SurveillanceState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SurveillanceState_Name().");
  return SurveillanceState_Name(static_cast<SurveillanceState>(value));
}
template <>
inline const std::string& SurveillanceState_Name(SurveillanceState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SurveillanceState_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SurveillanceState_Parse(absl::string_view name, SurveillanceState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SurveillanceState>(
      SurveillanceState_descriptor(), name, value);
}
enum EmissionControlState : int {
  EMISSION_CONTROL_STATE_INVALID = 0,
  EMISSION_CONTROL_STATE_ALLOWED = 1,
  EMISSION_CONTROL_STATE_NOT_ALLOWED = 2,
  EmissionControlState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EmissionControlState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EmissionControlState_IsValid(int value);
extern const uint32_t EmissionControlState_internal_data_[];
constexpr EmissionControlState EmissionControlState_MIN = static_cast<EmissionControlState>(0);
constexpr EmissionControlState EmissionControlState_MAX = static_cast<EmissionControlState>(2);
constexpr int EmissionControlState_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EmissionControlState_descriptor();
template <typename T>
const std::string& EmissionControlState_Name(T value) {
  static_assert(std::is_same<T, EmissionControlState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EmissionControlState_Name().");
  return EmissionControlState_Name(static_cast<EmissionControlState>(value));
}
template <>
inline const std::string& EmissionControlState_Name(EmissionControlState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EmissionControlState_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EmissionControlState_Parse(absl::string_view name, EmissionControlState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EmissionControlState>(
      EmissionControlState_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetTransmitState final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState) */ {
 public:
  inline SetTransmitState() : SetTransmitState(nullptr) {}
  ~SetTransmitState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetTransmitState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetTransmitState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetTransmitState(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetTransmitState(const SetTransmitState& from) : SetTransmitState(nullptr, from) {}
  inline SetTransmitState(SetTransmitState&& from) noexcept
      : SetTransmitState(nullptr, std::move(from)) {}
  inline SetTransmitState& operator=(const SetTransmitState& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTransmitState& operator=(SetTransmitState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTransmitState& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTransmitState* internal_default_instance() {
    return reinterpret_cast<const SetTransmitState*>(
        &_SetTransmitState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SetTransmitState& a, SetTransmitState& b) { a.Swap(&b); }
  inline void Swap(SetTransmitState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTransmitState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTransmitState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetTransmitState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTransmitState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetTransmitState& from) { SetTransmitState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetTransmitState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState"; }

 protected:
  explicit SetTransmitState(::google::protobuf::Arena* arena);
  SetTransmitState(::google::protobuf::Arena* arena, const SetTransmitState& from);
  SetTransmitState(::google::protobuf::Arena* arena, SetTransmitState&& from) noexcept
      : SetTransmitState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransmitStateFieldNumber = 1,
  };
  // .anduril.tasks.ad.desertguardian.rf.v1.TransmitState transmit_state = 1 [json_name = "transmitState"];
  void clear_transmit_state() ;
  ::anduril::tasks::ad::desertguardian::rf::v1::TransmitState transmit_state() const;
  void set_transmit_state(::anduril::tasks::ad::desertguardian::rf::v1::TransmitState value);

  private:
  ::anduril::tasks::ad::desertguardian::rf::v1::TransmitState _internal_transmit_state() const;
  void _internal_set_transmit_state(::anduril::tasks::ad::desertguardian::rf::v1::TransmitState value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetTransmitState& from_msg);
    int transmit_state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto;
};
// -------------------------------------------------------------------

class SetSurveillanceState final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState) */ {
 public:
  inline SetSurveillanceState() : SetSurveillanceState(nullptr) {}
  ~SetSurveillanceState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetSurveillanceState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetSurveillanceState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetSurveillanceState(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetSurveillanceState(const SetSurveillanceState& from) : SetSurveillanceState(nullptr, from) {}
  inline SetSurveillanceState(SetSurveillanceState&& from) noexcept
      : SetSurveillanceState(nullptr, std::move(from)) {}
  inline SetSurveillanceState& operator=(const SetSurveillanceState& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSurveillanceState& operator=(SetSurveillanceState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSurveillanceState& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSurveillanceState* internal_default_instance() {
    return reinterpret_cast<const SetSurveillanceState*>(
        &_SetSurveillanceState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SetSurveillanceState& a, SetSurveillanceState& b) { a.Swap(&b); }
  inline void Swap(SetSurveillanceState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSurveillanceState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSurveillanceState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetSurveillanceState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSurveillanceState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetSurveillanceState& from) { SetSurveillanceState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetSurveillanceState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState"; }

 protected:
  explicit SetSurveillanceState(::google::protobuf::Arena* arena);
  SetSurveillanceState(::google::protobuf::Arena* arena, const SetSurveillanceState& from);
  SetSurveillanceState(::google::protobuf::Arena* arena, SetSurveillanceState&& from) noexcept
      : SetSurveillanceState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSurveillanceStateFieldNumber = 1,
  };
  // .anduril.tasks.ad.desertguardian.rf.v1.SurveillanceState surveillance_state = 1 [json_name = "surveillanceState"];
  void clear_surveillance_state() ;
  ::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState surveillance_state() const;
  void set_surveillance_state(::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState value);

  private:
  ::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState _internal_surveillance_state() const;
  void _internal_set_surveillance_state(::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetSurveillanceState& from_msg);
    int surveillance_state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto;
};
// -------------------------------------------------------------------

class SetEmissionControlState final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState) */ {
 public:
  inline SetEmissionControlState() : SetEmissionControlState(nullptr) {}
  ~SetEmissionControlState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetEmissionControlState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetEmissionControlState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetEmissionControlState(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetEmissionControlState(const SetEmissionControlState& from) : SetEmissionControlState(nullptr, from) {}
  inline SetEmissionControlState(SetEmissionControlState&& from) noexcept
      : SetEmissionControlState(nullptr, std::move(from)) {}
  inline SetEmissionControlState& operator=(const SetEmissionControlState& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetEmissionControlState& operator=(SetEmissionControlState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetEmissionControlState& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetEmissionControlState* internal_default_instance() {
    return reinterpret_cast<const SetEmissionControlState*>(
        &_SetEmissionControlState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SetEmissionControlState& a, SetEmissionControlState& b) { a.Swap(&b); }
  inline void Swap(SetEmissionControlState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetEmissionControlState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetEmissionControlState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetEmissionControlState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetEmissionControlState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetEmissionControlState& from) { SetEmissionControlState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetEmissionControlState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState"; }

 protected:
  explicit SetEmissionControlState(::google::protobuf::Arena* arena);
  SetEmissionControlState(::google::protobuf::Arena* arena, const SetEmissionControlState& from);
  SetEmissionControlState(::google::protobuf::Arena* arena, SetEmissionControlState&& from) noexcept
      : SetEmissionControlState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmconStateFieldNumber = 1,
  };
  // .anduril.tasks.ad.desertguardian.rf.v1.EmissionControlState emcon_state = 1 [json_name = "emconState"];
  void clear_emcon_state() ;
  ::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState emcon_state() const;
  void set_emcon_state(::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState value);

  private:
  ::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState _internal_emcon_state() const;
  void _internal_set_emcon_state(::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetEmissionControlState& from_msg);
    int emcon_state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetTransmitState

// .anduril.tasks.ad.desertguardian.rf.v1.TransmitState transmit_state = 1 [json_name = "transmitState"];
inline void SetTransmitState::clear_transmit_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transmit_state_ = 0;
}
inline ::anduril::tasks::ad::desertguardian::rf::v1::TransmitState SetTransmitState::transmit_state() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState.transmit_state)
  return _internal_transmit_state();
}
inline void SetTransmitState::set_transmit_state(::anduril::tasks::ad::desertguardian::rf::v1::TransmitState value) {
  _internal_set_transmit_state(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState.transmit_state)
}
inline ::anduril::tasks::ad::desertguardian::rf::v1::TransmitState SetTransmitState::_internal_transmit_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::tasks::ad::desertguardian::rf::v1::TransmitState>(_impl_.transmit_state_);
}
inline void SetTransmitState::_internal_set_transmit_state(::anduril::tasks::ad::desertguardian::rf::v1::TransmitState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transmit_state_ = value;
}

// -------------------------------------------------------------------

// SetSurveillanceState

// .anduril.tasks.ad.desertguardian.rf.v1.SurveillanceState surveillance_state = 1 [json_name = "surveillanceState"];
inline void SetSurveillanceState::clear_surveillance_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.surveillance_state_ = 0;
}
inline ::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState SetSurveillanceState::surveillance_state() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState.surveillance_state)
  return _internal_surveillance_state();
}
inline void SetSurveillanceState::set_surveillance_state(::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState value) {
  _internal_set_surveillance_state(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState.surveillance_state)
}
inline ::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState SetSurveillanceState::_internal_surveillance_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState>(_impl_.surveillance_state_);
}
inline void SetSurveillanceState::_internal_set_surveillance_state(::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.surveillance_state_ = value;
}

// -------------------------------------------------------------------

// SetEmissionControlState

// .anduril.tasks.ad.desertguardian.rf.v1.EmissionControlState emcon_state = 1 [json_name = "emconState"];
inline void SetEmissionControlState::clear_emcon_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emcon_state_ = 0;
}
inline ::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState SetEmissionControlState::emcon_state() const {
  // @@protoc_insertion_point(field_get:anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState.emcon_state)
  return _internal_emcon_state();
}
inline void SetEmissionControlState::set_emcon_state(::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState value) {
  _internal_set_emcon_state(value);
  // @@protoc_insertion_point(field_set:anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState.emcon_state)
}
inline ::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState SetEmissionControlState::_internal_emcon_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState>(_impl_.emcon_state_);
}
inline void SetEmissionControlState::_internal_set_emcon_state(::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.emcon_state_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace rf
}  // namespace desertguardian
}  // namespace ad
}  // namespace tasks
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::tasks::ad::desertguardian::rf::v1::TransmitState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::tasks::ad::desertguardian::rf::v1::TransmitState>() {
  return ::anduril::tasks::ad::desertguardian::rf::v1::TransmitState_descriptor();
}
template <>
struct is_proto_enum<::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState>() {
  return ::anduril::tasks::ad::desertguardian::rf::v1::SurveillanceState_descriptor();
}
template <>
struct is_proto_enum<::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState>() {
  return ::anduril::tasks::ad::desertguardian::rf::v1::EmissionControlState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // anduril_2ftasks_2fad_2fdesertguardian_2frf_2fv1_2frf_5ftasks_2epub_2eproto_2epb_2eh
