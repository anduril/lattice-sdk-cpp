// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entityhistory/v1/history.pub.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "anduril/entitymanager/v1/entity.pub.pb.h"
#include "anduril/entitymanager/v1/entity_manager_api.pub.pb.h"
#include "anduril/entitymanager/v1/location.pub.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
namespace anduril {
namespace entityhistory {
namespace v1 {
class CompositePage;
struct CompositePageDefaultTypeInternal;
extern CompositePageDefaultTypeInternal _CompositePage_default_instance_;
class EntityChangeEvent;
struct EntityChangeEventDefaultTypeInternal;
extern EntityChangeEventDefaultTypeInternal _EntityChangeEvent_default_instance_;
class HistoryPage;
struct HistoryPageDefaultTypeInternal;
extern HistoryPageDefaultTypeInternal _HistoryPage_default_instance_;
class HistoryPageToken;
struct HistoryPageTokenDefaultTypeInternal;
extern HistoryPageTokenDefaultTypeInternal _HistoryPageToken_default_instance_;
class Snapshot;
struct SnapshotDefaultTypeInternal;
extern SnapshotDefaultTypeInternal _Snapshot_default_instance_;
class SnapshotEvent;
struct SnapshotEventDefaultTypeInternal;
extern SnapshotEventDefaultTypeInternal _SnapshotEvent_default_instance_;
class SnapshotPage;
struct SnapshotPageDefaultTypeInternal;
extern SnapshotPageDefaultTypeInternal _SnapshotPage_default_instance_;
class Trail;
struct TrailDefaultTypeInternal;
extern TrailDefaultTypeInternal _Trail_default_instance_;
class TrailPage;
struct TrailPageDefaultTypeInternal;
extern TrailPageDefaultTypeInternal _TrailPage_default_instance_;
class TrailPoint;
struct TrailPointDefaultTypeInternal;
extern TrailPointDefaultTypeInternal _TrailPoint_default_instance_;
}  // namespace v1
}  // namespace entityhistory
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace entityhistory {
namespace v1 {
enum HistoryType : int {
  HISTORY_TYPE_INVALID = 0,
  HISTORY_TYPE_TRAIL = 1,
  HISTORY_TYPE_SNAPSHOT = 2,
  HISTORY_TYPE_COMPOSITE = 3,
  HistoryType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  HistoryType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool HistoryType_IsValid(int value);
extern const uint32_t HistoryType_internal_data_[];
constexpr HistoryType HistoryType_MIN = static_cast<HistoryType>(0);
constexpr HistoryType HistoryType_MAX = static_cast<HistoryType>(3);
constexpr int HistoryType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
HistoryType_descriptor();
template <typename T>
const std::string& HistoryType_Name(T value) {
  static_assert(std::is_same<T, HistoryType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to HistoryType_Name().");
  return HistoryType_Name(static_cast<HistoryType>(value));
}
template <>
inline const std::string& HistoryType_Name(HistoryType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<HistoryType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool HistoryType_Parse(absl::string_view name, HistoryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HistoryType>(
      HistoryType_descriptor(), name, value);
}
enum StorageSystem : int {
  STORAGE_SYSTEM_INVALID = 0,
  STORAGE_SYSTEM_PERSISTENT = 1,
  STORAGE_SYSTEM_EPHEMERAL = 2,
  StorageSystem_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StorageSystem_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StorageSystem_IsValid(int value);
extern const uint32_t StorageSystem_internal_data_[];
constexpr StorageSystem StorageSystem_MIN = static_cast<StorageSystem>(0);
constexpr StorageSystem StorageSystem_MAX = static_cast<StorageSystem>(2);
constexpr int StorageSystem_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
StorageSystem_descriptor();
template <typename T>
const std::string& StorageSystem_Name(T value) {
  static_assert(std::is_same<T, StorageSystem>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StorageSystem_Name().");
  return StorageSystem_Name(static_cast<StorageSystem>(value));
}
template <>
inline const std::string& StorageSystem_Name(StorageSystem value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StorageSystem_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool StorageSystem_Parse(absl::string_view name, StorageSystem* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StorageSystem>(
      StorageSystem_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class HistoryPageToken final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.HistoryPageToken) */ {
 public:
  inline HistoryPageToken() : HistoryPageToken(nullptr) {}
  ~HistoryPageToken() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HistoryPageToken(
      ::google::protobuf::internal::ConstantInitialized);

  inline HistoryPageToken(const HistoryPageToken& from) : HistoryPageToken(nullptr, from) {}
  inline HistoryPageToken(HistoryPageToken&& from) noexcept
      : HistoryPageToken(nullptr, std::move(from)) {}
  inline HistoryPageToken& operator=(const HistoryPageToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline HistoryPageToken& operator=(HistoryPageToken&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HistoryPageToken& default_instance() {
    return *internal_default_instance();
  }
  static inline const HistoryPageToken* internal_default_instance() {
    return reinterpret_cast<const HistoryPageToken*>(
        &_HistoryPageToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(HistoryPageToken& a, HistoryPageToken& b) { a.Swap(&b); }
  inline void Swap(HistoryPageToken* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HistoryPageToken* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HistoryPageToken* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HistoryPageToken>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HistoryPageToken& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HistoryPageToken& from) { HistoryPageToken::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HistoryPageToken* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.HistoryPageToken"; }

 protected:
  explicit HistoryPageToken(::google::protobuf::Arena* arena);
  HistoryPageToken(::google::protobuf::Arena* arena, const HistoryPageToken& from);
  HistoryPageToken(::google::protobuf::Arena* arena, HistoryPageToken&& from) noexcept
      : HistoryPageToken(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueryIdFieldNumber = 1,
    kEntityIdFieldNumber = 3,
    kStartTimeFieldNumber = 5,
    kPageNumFieldNumber = 2,
    kStorageSystemFieldNumber = 4,
    kIsCompleteFieldNumber = 6,
  };
  // string query_id = 1 [json_name = "queryId"];
  void clear_query_id() ;
  const std::string& query_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_query_id(Arg_&& arg, Args_... args);
  std::string* mutable_query_id();
  PROTOBUF_NODISCARD std::string* release_query_id();
  void set_allocated_query_id(std::string* value);

  private:
  const std::string& _internal_query_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_query_id(
      const std::string& value);
  std::string* _internal_mutable_query_id();

  public:
  // string entity_id = 3 [json_name = "entityId"];
  void clear_entity_id() ;
  const std::string& entity_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  std::string* mutable_entity_id();
  PROTOBUF_NODISCARD std::string* release_entity_id();
  void set_allocated_entity_id(std::string* value);

  private:
  const std::string& _internal_entity_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(
      const std::string& value);
  std::string* _internal_mutable_entity_id();

  public:
  // string start_time = 5 [json_name = "startTime"];
  void clear_start_time() ;
  const std::string& start_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start_time(Arg_&& arg, Args_... args);
  std::string* mutable_start_time();
  PROTOBUF_NODISCARD std::string* release_start_time();
  void set_allocated_start_time(std::string* value);

  private:
  const std::string& _internal_start_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_start_time(
      const std::string& value);
  std::string* _internal_mutable_start_time();

  public:
  // int32 page_num = 2 [json_name = "pageNum"];
  void clear_page_num() ;
  ::int32_t page_num() const;
  void set_page_num(::int32_t value);

  private:
  ::int32_t _internal_page_num() const;
  void _internal_set_page_num(::int32_t value);

  public:
  // .anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];
  void clear_storage_system() ;
  ::anduril::entityhistory::v1::StorageSystem storage_system() const;
  void set_storage_system(::anduril::entityhistory::v1::StorageSystem value);

  private:
  ::anduril::entityhistory::v1::StorageSystem _internal_storage_system() const;
  void _internal_set_storage_system(::anduril::entityhistory::v1::StorageSystem value);

  public:
  // bool is_complete = 6 [json_name = "isComplete"];
  void clear_is_complete() ;
  bool is_complete() const;
  void set_is_complete(bool value);

  private:
  bool _internal_is_complete() const;
  void _internal_set_is_complete(bool value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.HistoryPageToken)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      77, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HistoryPageToken_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HistoryPageToken& from_msg);
    ::google::protobuf::internal::ArenaStringPtr query_id_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr start_time_;
    ::int32_t page_num_;
    int storage_system_;
    bool is_complete_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class TrailPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.TrailPoint) */ {
 public:
  inline TrailPoint() : TrailPoint(nullptr) {}
  ~TrailPoint() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrailPoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrailPoint(const TrailPoint& from) : TrailPoint(nullptr, from) {}
  inline TrailPoint(TrailPoint&& from) noexcept
      : TrailPoint(nullptr, std::move(from)) {}
  inline TrailPoint& operator=(const TrailPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrailPoint& operator=(TrailPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrailPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrailPoint* internal_default_instance() {
    return reinterpret_cast<const TrailPoint*>(
        &_TrailPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TrailPoint& a, TrailPoint& b) { a.Swap(&b); }
  inline void Swap(TrailPoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrailPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrailPoint* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TrailPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrailPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrailPoint& from) { TrailPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrailPoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.TrailPoint"; }

 protected:
  explicit TrailPoint(::google::protobuf::Arena* arena);
  TrailPoint(::google::protobuf::Arena* arena, const TrailPoint& from);
  TrailPoint(::google::protobuf::Arena* arena, TrailPoint&& from) noexcept
      : TrailPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
    kLocationFieldNumber = 2,
    kLocationUncertaintyFieldNumber = 3,
  };
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // .anduril.entitymanager.v1.Location location = 2 [json_name = "location"];
  bool has_location() const;
  void clear_location() ;
  const ::anduril::entitymanager::v1::Location& location() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Location* release_location();
  ::anduril::entitymanager::v1::Location* mutable_location();
  void set_allocated_location(::anduril::entitymanager::v1::Location* value);
  void unsafe_arena_set_allocated_location(::anduril::entitymanager::v1::Location* value);
  ::anduril::entitymanager::v1::Location* unsafe_arena_release_location();

  private:
  const ::anduril::entitymanager::v1::Location& _internal_location() const;
  ::anduril::entitymanager::v1::Location* _internal_mutable_location();

  public:
  // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 3 [json_name = "locationUncertainty"];
  bool has_location_uncertainty() const;
  void clear_location_uncertainty() ;
  const ::anduril::entitymanager::v1::LocationUncertainty& location_uncertainty() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::LocationUncertainty* release_location_uncertainty();
  ::anduril::entitymanager::v1::LocationUncertainty* mutable_location_uncertainty();
  void set_allocated_location_uncertainty(::anduril::entitymanager::v1::LocationUncertainty* value);
  void unsafe_arena_set_allocated_location_uncertainty(::anduril::entitymanager::v1::LocationUncertainty* value);
  ::anduril::entitymanager::v1::LocationUncertainty* unsafe_arena_release_location_uncertainty();

  private:
  const ::anduril::entitymanager::v1::LocationUncertainty& _internal_location_uncertainty() const;
  ::anduril::entitymanager::v1::LocationUncertainty* _internal_mutable_location_uncertainty();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.TrailPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TrailPoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrailPoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* timestamp_;
    ::anduril::entitymanager::v1::Location* location_;
    ::anduril::entitymanager::v1::LocationUncertainty* location_uncertainty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class Trail final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.Trail) */ {
 public:
  inline Trail() : Trail(nullptr) {}
  ~Trail() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Trail(
      ::google::protobuf::internal::ConstantInitialized);

  inline Trail(const Trail& from) : Trail(nullptr, from) {}
  inline Trail(Trail&& from) noexcept
      : Trail(nullptr, std::move(from)) {}
  inline Trail& operator=(const Trail& from) {
    CopyFrom(from);
    return *this;
  }
  inline Trail& operator=(Trail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Trail& default_instance() {
    return *internal_default_instance();
  }
  static inline const Trail* internal_default_instance() {
    return reinterpret_cast<const Trail*>(
        &_Trail_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Trail& a, Trail& b) { a.Swap(&b); }
  inline void Swap(Trail* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Trail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Trail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Trail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Trail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Trail& from) { Trail::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Trail* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.Trail"; }

 protected:
  explicit Trail(::google::protobuf::Arena* arena);
  Trail(::google::protobuf::Arena* arena, const Trail& from);
  Trail(::google::protobuf::Arena* arena, Trail&& from) noexcept
      : Trail(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrailPointsFieldNumber = 2,
    kEntityIdFieldNumber = 1,
  };
  // repeated .anduril.entityhistory.v1.TrailPoint trail_points = 2 [json_name = "trailPoints"];
  int trail_points_size() const;
  private:
  int _internal_trail_points_size() const;

  public:
  void clear_trail_points() ;
  ::anduril::entityhistory::v1::TrailPoint* mutable_trail_points(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>* mutable_trail_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>& _internal_trail_points() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>* _internal_mutable_trail_points();
  public:
  const ::anduril::entityhistory::v1::TrailPoint& trail_points(int index) const;
  ::anduril::entityhistory::v1::TrailPoint* add_trail_points();
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>& trail_points() const;
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const std::string& entity_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  std::string* mutable_entity_id();
  PROTOBUF_NODISCARD std::string* release_entity_id();
  void set_allocated_entity_id(std::string* value);

  private:
  const std::string& _internal_entity_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(
      const std::string& value);
  std::string* _internal_mutable_entity_id();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.Trail)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Trail_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Trail& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entityhistory::v1::TrailPoint > trail_points_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class TrailPage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.TrailPage) */ {
 public:
  inline TrailPage() : TrailPage(nullptr) {}
  ~TrailPage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrailPage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrailPage(const TrailPage& from) : TrailPage(nullptr, from) {}
  inline TrailPage(TrailPage&& from) noexcept
      : TrailPage(nullptr, std::move(from)) {}
  inline TrailPage& operator=(const TrailPage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrailPage& operator=(TrailPage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrailPage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrailPage* internal_default_instance() {
    return reinterpret_cast<const TrailPage*>(
        &_TrailPage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TrailPage& a, TrailPage& b) { a.Swap(&b); }
  inline void Swap(TrailPage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrailPage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrailPage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TrailPage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrailPage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrailPage& from) { TrailPage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrailPage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.TrailPage"; }

 protected:
  explicit TrailPage(::google::protobuf::Arena* arena);
  TrailPage(::google::protobuf::Arena* arena, const TrailPage& from);
  TrailPage(::google::protobuf::Arena* arena, TrailPage&& from) noexcept
      : TrailPage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrailsFieldNumber = 1,
  };
  // repeated .anduril.entityhistory.v1.Trail trails = 1 [json_name = "trails"];
  int trails_size() const;
  private:
  int _internal_trails_size() const;

  public:
  void clear_trails() ;
  ::anduril::entityhistory::v1::Trail* mutable_trails(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>* mutable_trails();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>& _internal_trails() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>* _internal_mutable_trails();
  public:
  const ::anduril::entityhistory::v1::Trail& trails(int index) const;
  ::anduril::entityhistory::v1::Trail* add_trails();
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>& trails() const;
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.TrailPage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TrailPage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrailPage& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entityhistory::v1::Trail > trails_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class EntityChangeEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.EntityChangeEvent) */ {
 public:
  inline EntityChangeEvent() : EntityChangeEvent(nullptr) {}
  ~EntityChangeEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EntityChangeEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline EntityChangeEvent(const EntityChangeEvent& from) : EntityChangeEvent(nullptr, from) {}
  inline EntityChangeEvent(EntityChangeEvent&& from) noexcept
      : EntityChangeEvent(nullptr, std::move(from)) {}
  inline EntityChangeEvent& operator=(const EntityChangeEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityChangeEvent& operator=(EntityChangeEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityChangeEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityChangeEvent* internal_default_instance() {
    return reinterpret_cast<const EntityChangeEvent*>(
        &_EntityChangeEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(EntityChangeEvent& a, EntityChangeEvent& b) { a.Swap(&b); }
  inline void Swap(EntityChangeEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityChangeEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityChangeEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EntityChangeEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityChangeEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EntityChangeEvent& from) { EntityChangeEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EntityChangeEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.EntityChangeEvent"; }

 protected:
  explicit EntityChangeEvent(::google::protobuf::Arena* arena);
  EntityChangeEvent(::google::protobuf::Arena* arena, const EntityChangeEvent& from);
  EntityChangeEvent(::google::protobuf::Arena* arena, EntityChangeEvent&& from) noexcept
      : EntityChangeEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromFieldNumber = 1,
    kToFieldNumber = 2,
  };
  // .anduril.entitymanager.v1.Entity from = 1 [json_name = "from"];
  bool has_from() const;
  void clear_from() ;
  const ::anduril::entitymanager::v1::Entity& from() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_from();
  ::anduril::entitymanager::v1::Entity* mutable_from();
  void set_allocated_from(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_from(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_from();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_from() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_from();

  public:
  // .anduril.entitymanager.v1.Entity to = 2 [json_name = "to"];
  bool has_to() const;
  void clear_to() ;
  const ::anduril::entitymanager::v1::Entity& to() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_to();
  ::anduril::entitymanager::v1::Entity* mutable_to();
  void set_allocated_to(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_to(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_to();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_to() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_to();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.EntityChangeEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EntityChangeEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EntityChangeEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::anduril::entitymanager::v1::Entity* from_;
    ::anduril::entitymanager::v1::Entity* to_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class SnapshotEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.SnapshotEvent) */ {
 public:
  inline SnapshotEvent() : SnapshotEvent(nullptr) {}
  ~SnapshotEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline SnapshotEvent(const SnapshotEvent& from) : SnapshotEvent(nullptr, from) {}
  inline SnapshotEvent(SnapshotEvent&& from) noexcept
      : SnapshotEvent(nullptr, std::move(from)) {}
  inline SnapshotEvent& operator=(const SnapshotEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotEvent& operator=(SnapshotEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotEvent& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kEntityChangeEvent = 2,
    kEntityState = 3,
    TYPE_NOT_SET = 0,
  };
  static inline const SnapshotEvent* internal_default_instance() {
    return reinterpret_cast<const SnapshotEvent*>(
        &_SnapshotEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SnapshotEvent& a, SnapshotEvent& b) { a.Swap(&b); }
  inline void Swap(SnapshotEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SnapshotEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SnapshotEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SnapshotEvent& from) { SnapshotEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SnapshotEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.SnapshotEvent"; }

 protected:
  explicit SnapshotEvent(::google::protobuf::Arena* arena);
  SnapshotEvent(::google::protobuf::Arena* arena, const SnapshotEvent& from);
  SnapshotEvent(::google::protobuf::Arena* arena, SnapshotEvent&& from) noexcept
      : SnapshotEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
    kEntityChangeEventFieldNumber = 2,
    kEntityStateFieldNumber = 3,
  };
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // .anduril.entityhistory.v1.EntityChangeEvent entity_change_event = 2 [json_name = "entityChangeEvent"];
  bool has_entity_change_event() const;
  private:
  bool _internal_has_entity_change_event() const;

  public:
  void clear_entity_change_event() ;
  const ::anduril::entityhistory::v1::EntityChangeEvent& entity_change_event() const;
  PROTOBUF_NODISCARD ::anduril::entityhistory::v1::EntityChangeEvent* release_entity_change_event();
  ::anduril::entityhistory::v1::EntityChangeEvent* mutable_entity_change_event();
  void set_allocated_entity_change_event(::anduril::entityhistory::v1::EntityChangeEvent* value);
  void unsafe_arena_set_allocated_entity_change_event(::anduril::entityhistory::v1::EntityChangeEvent* value);
  ::anduril::entityhistory::v1::EntityChangeEvent* unsafe_arena_release_entity_change_event();

  private:
  const ::anduril::entityhistory::v1::EntityChangeEvent& _internal_entity_change_event() const;
  ::anduril::entityhistory::v1::EntityChangeEvent* _internal_mutable_entity_change_event();

  public:
  // .anduril.entitymanager.v1.EntityEvent entity_state = 3 [json_name = "entityState"];
  bool has_entity_state() const;
  private:
  bool _internal_has_entity_state() const;

  public:
  void clear_entity_state() ;
  const ::anduril::entitymanager::v1::EntityEvent& entity_state() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::EntityEvent* release_entity_state();
  ::anduril::entitymanager::v1::EntityEvent* mutable_entity_state();
  void set_allocated_entity_state(::anduril::entitymanager::v1::EntityEvent* value);
  void unsafe_arena_set_allocated_entity_state(::anduril::entitymanager::v1::EntityEvent* value);
  ::anduril::entitymanager::v1::EntityEvent* unsafe_arena_release_entity_state();

  private:
  const ::anduril::entitymanager::v1::EntityEvent& _internal_entity_state() const;
  ::anduril::entitymanager::v1::EntityEvent* _internal_mutable_entity_state();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.SnapshotEvent)
 private:
  class _Internal;
  void set_has_entity_change_event();
  void set_has_entity_state();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SnapshotEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SnapshotEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* timestamp_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::anduril::entityhistory::v1::EntityChangeEvent* entity_change_event_;
      ::anduril::entitymanager::v1::EntityEvent* entity_state_;
    } type_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class Snapshot final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.Snapshot) */ {
 public:
  inline Snapshot() : Snapshot(nullptr) {}
  ~Snapshot() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Snapshot(
      ::google::protobuf::internal::ConstantInitialized);

  inline Snapshot(const Snapshot& from) : Snapshot(nullptr, from) {}
  inline Snapshot(Snapshot&& from) noexcept
      : Snapshot(nullptr, std::move(from)) {}
  inline Snapshot& operator=(const Snapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline Snapshot& operator=(Snapshot&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Snapshot& default_instance() {
    return *internal_default_instance();
  }
  static inline const Snapshot* internal_default_instance() {
    return reinterpret_cast<const Snapshot*>(
        &_Snapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Snapshot& a, Snapshot& b) { a.Swap(&b); }
  inline void Swap(Snapshot* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Snapshot* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Snapshot* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Snapshot>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Snapshot& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Snapshot& from) { Snapshot::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Snapshot* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.Snapshot"; }

 protected:
  explicit Snapshot(::google::protobuf::Arena* arena);
  Snapshot(::google::protobuf::Arena* arena, const Snapshot& from);
  Snapshot(::google::protobuf::Arena* arena, Snapshot&& from) noexcept
      : Snapshot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnapshotEventsFieldNumber = 3,
    kLatestStateFieldNumber = 1,
    kOriginalStateFieldNumber = 2,
  };
  // repeated .anduril.entityhistory.v1.SnapshotEvent snapshot_events = 3 [json_name = "snapshotEvents"];
  int snapshot_events_size() const;
  private:
  int _internal_snapshot_events_size() const;

  public:
  void clear_snapshot_events() ;
  ::anduril::entityhistory::v1::SnapshotEvent* mutable_snapshot_events(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>* mutable_snapshot_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>& _internal_snapshot_events() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>* _internal_mutable_snapshot_events();
  public:
  const ::anduril::entityhistory::v1::SnapshotEvent& snapshot_events(int index) const;
  ::anduril::entityhistory::v1::SnapshotEvent* add_snapshot_events();
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>& snapshot_events() const;
  // .anduril.entitymanager.v1.Entity latest_state = 1 [json_name = "latestState"];
  bool has_latest_state() const;
  void clear_latest_state() ;
  const ::anduril::entitymanager::v1::Entity& latest_state() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_latest_state();
  ::anduril::entitymanager::v1::Entity* mutable_latest_state();
  void set_allocated_latest_state(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_latest_state(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_latest_state();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_latest_state() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_latest_state();

  public:
  // .anduril.entitymanager.v1.Entity original_state = 2 [json_name = "originalState"];
  bool has_original_state() const;
  void clear_original_state() ;
  const ::anduril::entitymanager::v1::Entity& original_state() const;
  PROTOBUF_NODISCARD ::anduril::entitymanager::v1::Entity* release_original_state();
  ::anduril::entitymanager::v1::Entity* mutable_original_state();
  void set_allocated_original_state(::anduril::entitymanager::v1::Entity* value);
  void unsafe_arena_set_allocated_original_state(::anduril::entitymanager::v1::Entity* value);
  ::anduril::entitymanager::v1::Entity* unsafe_arena_release_original_state();

  private:
  const ::anduril::entitymanager::v1::Entity& _internal_original_state() const;
  ::anduril::entitymanager::v1::Entity* _internal_mutable_original_state();

  public:
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.Snapshot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Snapshot_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Snapshot& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::anduril::entityhistory::v1::SnapshotEvent > snapshot_events_;
    ::anduril::entitymanager::v1::Entity* latest_state_;
    ::anduril::entitymanager::v1::Entity* original_state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class SnapshotPage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.SnapshotPage) */ {
 public:
  inline SnapshotPage() : SnapshotPage(nullptr) {}
  ~SnapshotPage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotPage(
      ::google::protobuf::internal::ConstantInitialized);

  inline SnapshotPage(const SnapshotPage& from) : SnapshotPage(nullptr, from) {}
  inline SnapshotPage(SnapshotPage&& from) noexcept
      : SnapshotPage(nullptr, std::move(from)) {}
  inline SnapshotPage& operator=(const SnapshotPage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotPage& operator=(SnapshotPage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotPage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SnapshotPage* internal_default_instance() {
    return reinterpret_cast<const SnapshotPage*>(
        &_SnapshotPage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SnapshotPage& a, SnapshotPage& b) { a.Swap(&b); }
  inline void Swap(SnapshotPage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotPage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotPage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SnapshotPage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SnapshotPage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SnapshotPage& from) { SnapshotPage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SnapshotPage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.SnapshotPage"; }

 protected:
  explicit SnapshotPage(::google::protobuf::Arena* arena);
  SnapshotPage(::google::protobuf::Arena* arena, const SnapshotPage& from);
  SnapshotPage(::google::protobuf::Arena* arena, SnapshotPage&& from) noexcept
      : SnapshotPage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnapshotsFieldNumber = 1,
  };
  // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
  int snapshots_size() const;
  private:
  int _internal_snapshots_size() const;

  public:
  void clear_snapshots() ;
  ::anduril::entityhistory::v1::Snapshot* mutable_snapshots(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>* mutable_snapshots();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>& _internal_snapshots() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>* _internal_mutable_snapshots();
  public:
  const ::anduril::entityhistory::v1::Snapshot& snapshots(int index) const;
  ::anduril::entityhistory::v1::Snapshot* add_snapshots();
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>& snapshots() const;
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.SnapshotPage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SnapshotPage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SnapshotPage& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entityhistory::v1::Snapshot > snapshots_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class CompositePage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.CompositePage) */ {
 public:
  inline CompositePage() : CompositePage(nullptr) {}
  ~CompositePage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompositePage(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompositePage(const CompositePage& from) : CompositePage(nullptr, from) {}
  inline CompositePage(CompositePage&& from) noexcept
      : CompositePage(nullptr, std::move(from)) {}
  inline CompositePage& operator=(const CompositePage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompositePage& operator=(CompositePage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompositePage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompositePage* internal_default_instance() {
    return reinterpret_cast<const CompositePage*>(
        &_CompositePage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CompositePage& a, CompositePage& b) { a.Swap(&b); }
  inline void Swap(CompositePage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompositePage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompositePage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CompositePage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompositePage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompositePage& from) { CompositePage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompositePage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.CompositePage"; }

 protected:
  explicit CompositePage(::google::protobuf::Arena* arena);
  CompositePage(::google::protobuf::Arena* arena, const CompositePage& from);
  CompositePage(::google::protobuf::Arena* arena, CompositePage&& from) noexcept
      : CompositePage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnapshotsFieldNumber = 1,
    kTrailsFieldNumber = 2,
  };
  // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
  int snapshots_size() const;
  private:
  int _internal_snapshots_size() const;

  public:
  void clear_snapshots() ;
  ::anduril::entityhistory::v1::Snapshot* mutable_snapshots(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>* mutable_snapshots();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>& _internal_snapshots() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>* _internal_mutable_snapshots();
  public:
  const ::anduril::entityhistory::v1::Snapshot& snapshots(int index) const;
  ::anduril::entityhistory::v1::Snapshot* add_snapshots();
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>& snapshots() const;
  // repeated .anduril.entityhistory.v1.Trail trails = 2 [json_name = "trails"];
  int trails_size() const;
  private:
  int _internal_trails_size() const;

  public:
  void clear_trails() ;
  ::anduril::entityhistory::v1::Trail* mutable_trails(int index);
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>* mutable_trails();

  private:
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>& _internal_trails() const;
  ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>* _internal_mutable_trails();
  public:
  const ::anduril::entityhistory::v1::Trail& trails(int index) const;
  ::anduril::entityhistory::v1::Trail* add_trails();
  const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>& trails() const;
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.CompositePage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CompositePage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompositePage& from_msg);
    ::google::protobuf::RepeatedPtrField< ::anduril::entityhistory::v1::Snapshot > snapshots_;
    ::google::protobuf::RepeatedPtrField< ::anduril::entityhistory::v1::Trail > trails_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};
// -------------------------------------------------------------------

class HistoryPage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.entityhistory.v1.HistoryPage) */ {
 public:
  inline HistoryPage() : HistoryPage(nullptr) {}
  ~HistoryPage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HistoryPage(
      ::google::protobuf::internal::ConstantInitialized);

  inline HistoryPage(const HistoryPage& from) : HistoryPage(nullptr, from) {}
  inline HistoryPage(HistoryPage&& from) noexcept
      : HistoryPage(nullptr, std::move(from)) {}
  inline HistoryPage& operator=(const HistoryPage& from) {
    CopyFrom(from);
    return *this;
  }
  inline HistoryPage& operator=(HistoryPage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HistoryPage& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kTrailPage = 1,
    kSnapshotPage = 2,
    kCompositePage = 3,
    TYPE_NOT_SET = 0,
  };
  static inline const HistoryPage* internal_default_instance() {
    return reinterpret_cast<const HistoryPage*>(
        &_HistoryPage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(HistoryPage& a, HistoryPage& b) { a.Swap(&b); }
  inline void Swap(HistoryPage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HistoryPage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HistoryPage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HistoryPage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HistoryPage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HistoryPage& from) { HistoryPage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HistoryPage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.entityhistory.v1.HistoryPage"; }

 protected:
  explicit HistoryPage(::google::protobuf::Arena* arena);
  HistoryPage(::google::protobuf::Arena* arena, const HistoryPage& from);
  HistoryPage(::google::protobuf::Arena* arena, HistoryPage&& from) noexcept
      : HistoryPage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrailPageFieldNumber = 1,
    kSnapshotPageFieldNumber = 2,
    kCompositePageFieldNumber = 3,
  };
  // .anduril.entityhistory.v1.TrailPage trail_page = 1 [json_name = "trailPage"];
  bool has_trail_page() const;
  private:
  bool _internal_has_trail_page() const;

  public:
  void clear_trail_page() ;
  const ::anduril::entityhistory::v1::TrailPage& trail_page() const;
  PROTOBUF_NODISCARD ::anduril::entityhistory::v1::TrailPage* release_trail_page();
  ::anduril::entityhistory::v1::TrailPage* mutable_trail_page();
  void set_allocated_trail_page(::anduril::entityhistory::v1::TrailPage* value);
  void unsafe_arena_set_allocated_trail_page(::anduril::entityhistory::v1::TrailPage* value);
  ::anduril::entityhistory::v1::TrailPage* unsafe_arena_release_trail_page();

  private:
  const ::anduril::entityhistory::v1::TrailPage& _internal_trail_page() const;
  ::anduril::entityhistory::v1::TrailPage* _internal_mutable_trail_page();

  public:
  // .anduril.entityhistory.v1.SnapshotPage snapshot_page = 2 [json_name = "snapshotPage"];
  bool has_snapshot_page() const;
  private:
  bool _internal_has_snapshot_page() const;

  public:
  void clear_snapshot_page() ;
  const ::anduril::entityhistory::v1::SnapshotPage& snapshot_page() const;
  PROTOBUF_NODISCARD ::anduril::entityhistory::v1::SnapshotPage* release_snapshot_page();
  ::anduril::entityhistory::v1::SnapshotPage* mutable_snapshot_page();
  void set_allocated_snapshot_page(::anduril::entityhistory::v1::SnapshotPage* value);
  void unsafe_arena_set_allocated_snapshot_page(::anduril::entityhistory::v1::SnapshotPage* value);
  ::anduril::entityhistory::v1::SnapshotPage* unsafe_arena_release_snapshot_page();

  private:
  const ::anduril::entityhistory::v1::SnapshotPage& _internal_snapshot_page() const;
  ::anduril::entityhistory::v1::SnapshotPage* _internal_mutable_snapshot_page();

  public:
  // .anduril.entityhistory.v1.CompositePage composite_page = 3 [json_name = "compositePage"];
  bool has_composite_page() const;
  private:
  bool _internal_has_composite_page() const;

  public:
  void clear_composite_page() ;
  const ::anduril::entityhistory::v1::CompositePage& composite_page() const;
  PROTOBUF_NODISCARD ::anduril::entityhistory::v1::CompositePage* release_composite_page();
  ::anduril::entityhistory::v1::CompositePage* mutable_composite_page();
  void set_allocated_composite_page(::anduril::entityhistory::v1::CompositePage* value);
  void unsafe_arena_set_allocated_composite_page(::anduril::entityhistory::v1::CompositePage* value);
  ::anduril::entityhistory::v1::CompositePage* unsafe_arena_release_composite_page();

  private:
  const ::anduril::entityhistory::v1::CompositePage& _internal_composite_page() const;
  ::anduril::entityhistory::v1::CompositePage* _internal_mutable_composite_page();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.HistoryPage)
 private:
  class _Internal;
  void set_has_trail_page();
  void set_has_snapshot_page();
  void set_has_composite_page();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HistoryPage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HistoryPage& from_msg);
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::anduril::entityhistory::v1::TrailPage* trail_page_;
      ::anduril::entityhistory::v1::SnapshotPage* snapshot_page_;
      ::anduril::entityhistory::v1::CompositePage* composite_page_;
    } type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// HistoryPage

// .anduril.entityhistory.v1.TrailPage trail_page = 1 [json_name = "trailPage"];
inline bool HistoryPage::has_trail_page() const {
  return type_case() == kTrailPage;
}
inline bool HistoryPage::_internal_has_trail_page() const {
  return type_case() == kTrailPage;
}
inline void HistoryPage::set_has_trail_page() {
  _impl_._oneof_case_[0] = kTrailPage;
}
inline void HistoryPage::clear_trail_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kTrailPage) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.trail_page_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.trail_page_);
    }
    clear_has_type();
  }
}
inline ::anduril::entityhistory::v1::TrailPage* HistoryPage::release_trail_page() {
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.HistoryPage.trail_page)
  if (type_case() == kTrailPage) {
    clear_has_type();
    auto* temp = _impl_.type_.trail_page_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.trail_page_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::anduril::entityhistory::v1::TrailPage& HistoryPage::_internal_trail_page() const {
  return type_case() == kTrailPage ? *_impl_.type_.trail_page_ : reinterpret_cast<::anduril::entityhistory::v1::TrailPage&>(::anduril::entityhistory::v1::_TrailPage_default_instance_);
}
inline const ::anduril::entityhistory::v1::TrailPage& HistoryPage::trail_page() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPage.trail_page)
  return _internal_trail_page();
}
inline ::anduril::entityhistory::v1::TrailPage* HistoryPage::unsafe_arena_release_trail_page() {
  // @@protoc_insertion_point(field_unsafe_arena_release:anduril.entityhistory.v1.HistoryPage.trail_page)
  if (type_case() == kTrailPage) {
    clear_has_type();
    auto* temp = _impl_.type_.trail_page_;
    _impl_.type_.trail_page_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HistoryPage::unsafe_arena_set_allocated_trail_page(::anduril::entityhistory::v1::TrailPage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_trail_page();
    _impl_.type_.trail_page_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.HistoryPage.trail_page)
}
inline ::anduril::entityhistory::v1::TrailPage* HistoryPage::_internal_mutable_trail_page() {
  if (type_case() != kTrailPage) {
    clear_type();
    set_has_trail_page();
    _impl_.type_.trail_page_ =
        ::google::protobuf::Message::DefaultConstruct<::anduril::entityhistory::v1::TrailPage>(GetArena());
  }
  return _impl_.type_.trail_page_;
}
inline ::anduril::entityhistory::v1::TrailPage* HistoryPage::mutable_trail_page() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::anduril::entityhistory::v1::TrailPage* _msg = _internal_mutable_trail_page();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.HistoryPage.trail_page)
  return _msg;
}

// .anduril.entityhistory.v1.SnapshotPage snapshot_page = 2 [json_name = "snapshotPage"];
inline bool HistoryPage::has_snapshot_page() const {
  return type_case() == kSnapshotPage;
}
inline bool HistoryPage::_internal_has_snapshot_page() const {
  return type_case() == kSnapshotPage;
}
inline void HistoryPage::set_has_snapshot_page() {
  _impl_._oneof_case_[0] = kSnapshotPage;
}
inline void HistoryPage::clear_snapshot_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kSnapshotPage) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.snapshot_page_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.snapshot_page_);
    }
    clear_has_type();
  }
}
inline ::anduril::entityhistory::v1::SnapshotPage* HistoryPage::release_snapshot_page() {
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.HistoryPage.snapshot_page)
  if (type_case() == kSnapshotPage) {
    clear_has_type();
    auto* temp = _impl_.type_.snapshot_page_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.snapshot_page_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::anduril::entityhistory::v1::SnapshotPage& HistoryPage::_internal_snapshot_page() const {
  return type_case() == kSnapshotPage ? *_impl_.type_.snapshot_page_ : reinterpret_cast<::anduril::entityhistory::v1::SnapshotPage&>(::anduril::entityhistory::v1::_SnapshotPage_default_instance_);
}
inline const ::anduril::entityhistory::v1::SnapshotPage& HistoryPage::snapshot_page() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPage.snapshot_page)
  return _internal_snapshot_page();
}
inline ::anduril::entityhistory::v1::SnapshotPage* HistoryPage::unsafe_arena_release_snapshot_page() {
  // @@protoc_insertion_point(field_unsafe_arena_release:anduril.entityhistory.v1.HistoryPage.snapshot_page)
  if (type_case() == kSnapshotPage) {
    clear_has_type();
    auto* temp = _impl_.type_.snapshot_page_;
    _impl_.type_.snapshot_page_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HistoryPage::unsafe_arena_set_allocated_snapshot_page(::anduril::entityhistory::v1::SnapshotPage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_snapshot_page();
    _impl_.type_.snapshot_page_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.HistoryPage.snapshot_page)
}
inline ::anduril::entityhistory::v1::SnapshotPage* HistoryPage::_internal_mutable_snapshot_page() {
  if (type_case() != kSnapshotPage) {
    clear_type();
    set_has_snapshot_page();
    _impl_.type_.snapshot_page_ =
        ::google::protobuf::Message::DefaultConstruct<::anduril::entityhistory::v1::SnapshotPage>(GetArena());
  }
  return _impl_.type_.snapshot_page_;
}
inline ::anduril::entityhistory::v1::SnapshotPage* HistoryPage::mutable_snapshot_page() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::anduril::entityhistory::v1::SnapshotPage* _msg = _internal_mutable_snapshot_page();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.HistoryPage.snapshot_page)
  return _msg;
}

// .anduril.entityhistory.v1.CompositePage composite_page = 3 [json_name = "compositePage"];
inline bool HistoryPage::has_composite_page() const {
  return type_case() == kCompositePage;
}
inline bool HistoryPage::_internal_has_composite_page() const {
  return type_case() == kCompositePage;
}
inline void HistoryPage::set_has_composite_page() {
  _impl_._oneof_case_[0] = kCompositePage;
}
inline void HistoryPage::clear_composite_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kCompositePage) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.composite_page_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.composite_page_);
    }
    clear_has_type();
  }
}
inline ::anduril::entityhistory::v1::CompositePage* HistoryPage::release_composite_page() {
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.HistoryPage.composite_page)
  if (type_case() == kCompositePage) {
    clear_has_type();
    auto* temp = _impl_.type_.composite_page_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.composite_page_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::anduril::entityhistory::v1::CompositePage& HistoryPage::_internal_composite_page() const {
  return type_case() == kCompositePage ? *_impl_.type_.composite_page_ : reinterpret_cast<::anduril::entityhistory::v1::CompositePage&>(::anduril::entityhistory::v1::_CompositePage_default_instance_);
}
inline const ::anduril::entityhistory::v1::CompositePage& HistoryPage::composite_page() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPage.composite_page)
  return _internal_composite_page();
}
inline ::anduril::entityhistory::v1::CompositePage* HistoryPage::unsafe_arena_release_composite_page() {
  // @@protoc_insertion_point(field_unsafe_arena_release:anduril.entityhistory.v1.HistoryPage.composite_page)
  if (type_case() == kCompositePage) {
    clear_has_type();
    auto* temp = _impl_.type_.composite_page_;
    _impl_.type_.composite_page_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HistoryPage::unsafe_arena_set_allocated_composite_page(::anduril::entityhistory::v1::CompositePage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_composite_page();
    _impl_.type_.composite_page_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.HistoryPage.composite_page)
}
inline ::anduril::entityhistory::v1::CompositePage* HistoryPage::_internal_mutable_composite_page() {
  if (type_case() != kCompositePage) {
    clear_type();
    set_has_composite_page();
    _impl_.type_.composite_page_ =
        ::google::protobuf::Message::DefaultConstruct<::anduril::entityhistory::v1::CompositePage>(GetArena());
  }
  return _impl_.type_.composite_page_;
}
inline ::anduril::entityhistory::v1::CompositePage* HistoryPage::mutable_composite_page() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::anduril::entityhistory::v1::CompositePage* _msg = _internal_mutable_composite_page();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.HistoryPage.composite_page)
  return _msg;
}

inline bool HistoryPage::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void HistoryPage::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline HistoryPage::TypeCase HistoryPage::type_case() const {
  return HistoryPage::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SnapshotPage

// repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
inline int SnapshotPage::_internal_snapshots_size() const {
  return _internal_snapshots().size();
}
inline int SnapshotPage::snapshots_size() const {
  return _internal_snapshots_size();
}
inline void SnapshotPage::clear_snapshots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshots_.Clear();
}
inline ::anduril::entityhistory::v1::Snapshot* SnapshotPage::mutable_snapshots(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.SnapshotPage.snapshots)
  return _internal_mutable_snapshots()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>* SnapshotPage::mutable_snapshots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entityhistory.v1.SnapshotPage.snapshots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_snapshots();
}
inline const ::anduril::entityhistory::v1::Snapshot& SnapshotPage::snapshots(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.SnapshotPage.snapshots)
  return _internal_snapshots().Get(index);
}
inline ::anduril::entityhistory::v1::Snapshot* SnapshotPage::add_snapshots() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entityhistory::v1::Snapshot* _add = _internal_mutable_snapshots()->Add();
  // @@protoc_insertion_point(field_add:anduril.entityhistory.v1.SnapshotPage.snapshots)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>& SnapshotPage::snapshots() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entityhistory.v1.SnapshotPage.snapshots)
  return _internal_snapshots();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>&
SnapshotPage::_internal_snapshots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshots_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>*
SnapshotPage::_internal_mutable_snapshots() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.snapshots_;
}

// -------------------------------------------------------------------

// TrailPage

// repeated .anduril.entityhistory.v1.Trail trails = 1 [json_name = "trails"];
inline int TrailPage::_internal_trails_size() const {
  return _internal_trails().size();
}
inline int TrailPage::trails_size() const {
  return _internal_trails_size();
}
inline void TrailPage::clear_trails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trails_.Clear();
}
inline ::anduril::entityhistory::v1::Trail* TrailPage::mutable_trails(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.TrailPage.trails)
  return _internal_mutable_trails()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>* TrailPage::mutable_trails()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entityhistory.v1.TrailPage.trails)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_trails();
}
inline const ::anduril::entityhistory::v1::Trail& TrailPage::trails(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.TrailPage.trails)
  return _internal_trails().Get(index);
}
inline ::anduril::entityhistory::v1::Trail* TrailPage::add_trails() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entityhistory::v1::Trail* _add = _internal_mutable_trails()->Add();
  // @@protoc_insertion_point(field_add:anduril.entityhistory.v1.TrailPage.trails)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>& TrailPage::trails() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entityhistory.v1.TrailPage.trails)
  return _internal_trails();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>&
TrailPage::_internal_trails() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trails_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>*
TrailPage::_internal_mutable_trails() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.trails_;
}

// -------------------------------------------------------------------

// CompositePage

// repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
inline int CompositePage::_internal_snapshots_size() const {
  return _internal_snapshots().size();
}
inline int CompositePage::snapshots_size() const {
  return _internal_snapshots_size();
}
inline void CompositePage::clear_snapshots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshots_.Clear();
}
inline ::anduril::entityhistory::v1::Snapshot* CompositePage::mutable_snapshots(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.CompositePage.snapshots)
  return _internal_mutable_snapshots()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>* CompositePage::mutable_snapshots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entityhistory.v1.CompositePage.snapshots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_snapshots();
}
inline const ::anduril::entityhistory::v1::Snapshot& CompositePage::snapshots(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.CompositePage.snapshots)
  return _internal_snapshots().Get(index);
}
inline ::anduril::entityhistory::v1::Snapshot* CompositePage::add_snapshots() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entityhistory::v1::Snapshot* _add = _internal_mutable_snapshots()->Add();
  // @@protoc_insertion_point(field_add:anduril.entityhistory.v1.CompositePage.snapshots)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>& CompositePage::snapshots() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entityhistory.v1.CompositePage.snapshots)
  return _internal_snapshots();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>&
CompositePage::_internal_snapshots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshots_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Snapshot>*
CompositePage::_internal_mutable_snapshots() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.snapshots_;
}

// repeated .anduril.entityhistory.v1.Trail trails = 2 [json_name = "trails"];
inline int CompositePage::_internal_trails_size() const {
  return _internal_trails().size();
}
inline int CompositePage::trails_size() const {
  return _internal_trails_size();
}
inline void CompositePage::clear_trails() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trails_.Clear();
}
inline ::anduril::entityhistory::v1::Trail* CompositePage::mutable_trails(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.CompositePage.trails)
  return _internal_mutable_trails()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>* CompositePage::mutable_trails()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entityhistory.v1.CompositePage.trails)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_trails();
}
inline const ::anduril::entityhistory::v1::Trail& CompositePage::trails(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.CompositePage.trails)
  return _internal_trails().Get(index);
}
inline ::anduril::entityhistory::v1::Trail* CompositePage::add_trails() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entityhistory::v1::Trail* _add = _internal_mutable_trails()->Add();
  // @@protoc_insertion_point(field_add:anduril.entityhistory.v1.CompositePage.trails)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>& CompositePage::trails() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entityhistory.v1.CompositePage.trails)
  return _internal_trails();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>&
CompositePage::_internal_trails() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trails_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::Trail>*
CompositePage::_internal_mutable_trails() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.trails_;
}

// -------------------------------------------------------------------

// Snapshot

// .anduril.entitymanager.v1.Entity latest_state = 1 [json_name = "latestState"];
inline bool Snapshot::has_latest_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latest_state_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& Snapshot::_internal_latest_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.latest_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& Snapshot::latest_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.Snapshot.latest_state)
  return _internal_latest_state();
}
inline void Snapshot::unsafe_arena_set_allocated_latest_state(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latest_state_);
  }
  _impl_.latest_state_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.Snapshot.latest_state)
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::release_latest_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.latest_state_;
  _impl_.latest_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::unsafe_arena_release_latest_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.Snapshot.latest_state)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.latest_state_;
  _impl_.latest_state_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::_internal_mutable_latest_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latest_state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.latest_state_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.latest_state_;
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::mutable_latest_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_latest_state();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.Snapshot.latest_state)
  return _msg;
}
inline void Snapshot::set_allocated_latest_state(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latest_state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.latest_state_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.Snapshot.latest_state)
}

// .anduril.entitymanager.v1.Entity original_state = 2 [json_name = "originalState"];
inline bool Snapshot::has_original_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.original_state_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& Snapshot::_internal_original_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.original_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& Snapshot::original_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.Snapshot.original_state)
  return _internal_original_state();
}
inline void Snapshot::unsafe_arena_set_allocated_original_state(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.original_state_);
  }
  _impl_.original_state_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.Snapshot.original_state)
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::release_original_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.original_state_;
  _impl_.original_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::unsafe_arena_release_original_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.Snapshot.original_state)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.original_state_;
  _impl_.original_state_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::_internal_mutable_original_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.original_state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.original_state_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.original_state_;
}
inline ::anduril::entitymanager::v1::Entity* Snapshot::mutable_original_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_original_state();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.Snapshot.original_state)
  return _msg;
}
inline void Snapshot::set_allocated_original_state(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.original_state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.original_state_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.Snapshot.original_state)
}

// repeated .anduril.entityhistory.v1.SnapshotEvent snapshot_events = 3 [json_name = "snapshotEvents"];
inline int Snapshot::_internal_snapshot_events_size() const {
  return _internal_snapshot_events().size();
}
inline int Snapshot::snapshot_events_size() const {
  return _internal_snapshot_events_size();
}
inline void Snapshot::clear_snapshot_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_events_.Clear();
}
inline ::anduril::entityhistory::v1::SnapshotEvent* Snapshot::mutable_snapshot_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.Snapshot.snapshot_events)
  return _internal_mutable_snapshot_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>* Snapshot::mutable_snapshot_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entityhistory.v1.Snapshot.snapshot_events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_snapshot_events();
}
inline const ::anduril::entityhistory::v1::SnapshotEvent& Snapshot::snapshot_events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.Snapshot.snapshot_events)
  return _internal_snapshot_events().Get(index);
}
inline ::anduril::entityhistory::v1::SnapshotEvent* Snapshot::add_snapshot_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entityhistory::v1::SnapshotEvent* _add = _internal_mutable_snapshot_events()->Add();
  // @@protoc_insertion_point(field_add:anduril.entityhistory.v1.Snapshot.snapshot_events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>& Snapshot::snapshot_events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entityhistory.v1.Snapshot.snapshot_events)
  return _internal_snapshot_events();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>&
Snapshot::_internal_snapshot_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshot_events_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::SnapshotEvent>*
Snapshot::_internal_mutable_snapshot_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.snapshot_events_;
}

// -------------------------------------------------------------------

// SnapshotEvent

// .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
inline bool SnapshotEvent::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SnapshotEvent::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SnapshotEvent::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.SnapshotEvent.timestamp)
  return _internal_timestamp();
}
inline void SnapshotEvent::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.SnapshotEvent.timestamp)
}
inline ::google::protobuf::Timestamp* SnapshotEvent::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* SnapshotEvent::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.SnapshotEvent.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SnapshotEvent::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* SnapshotEvent::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.SnapshotEvent.timestamp)
  return _msg;
}
inline void SnapshotEvent::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.SnapshotEvent.timestamp)
}

// .anduril.entityhistory.v1.EntityChangeEvent entity_change_event = 2 [json_name = "entityChangeEvent"];
inline bool SnapshotEvent::has_entity_change_event() const {
  return type_case() == kEntityChangeEvent;
}
inline bool SnapshotEvent::_internal_has_entity_change_event() const {
  return type_case() == kEntityChangeEvent;
}
inline void SnapshotEvent::set_has_entity_change_event() {
  _impl_._oneof_case_[0] = kEntityChangeEvent;
}
inline void SnapshotEvent::clear_entity_change_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kEntityChangeEvent) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.entity_change_event_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.entity_change_event_);
    }
    clear_has_type();
  }
}
inline ::anduril::entityhistory::v1::EntityChangeEvent* SnapshotEvent::release_entity_change_event() {
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.SnapshotEvent.entity_change_event)
  if (type_case() == kEntityChangeEvent) {
    clear_has_type();
    auto* temp = _impl_.type_.entity_change_event_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.entity_change_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::anduril::entityhistory::v1::EntityChangeEvent& SnapshotEvent::_internal_entity_change_event() const {
  return type_case() == kEntityChangeEvent ? *_impl_.type_.entity_change_event_ : reinterpret_cast<::anduril::entityhistory::v1::EntityChangeEvent&>(::anduril::entityhistory::v1::_EntityChangeEvent_default_instance_);
}
inline const ::anduril::entityhistory::v1::EntityChangeEvent& SnapshotEvent::entity_change_event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.SnapshotEvent.entity_change_event)
  return _internal_entity_change_event();
}
inline ::anduril::entityhistory::v1::EntityChangeEvent* SnapshotEvent::unsafe_arena_release_entity_change_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:anduril.entityhistory.v1.SnapshotEvent.entity_change_event)
  if (type_case() == kEntityChangeEvent) {
    clear_has_type();
    auto* temp = _impl_.type_.entity_change_event_;
    _impl_.type_.entity_change_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SnapshotEvent::unsafe_arena_set_allocated_entity_change_event(::anduril::entityhistory::v1::EntityChangeEvent* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_entity_change_event();
    _impl_.type_.entity_change_event_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.SnapshotEvent.entity_change_event)
}
inline ::anduril::entityhistory::v1::EntityChangeEvent* SnapshotEvent::_internal_mutable_entity_change_event() {
  if (type_case() != kEntityChangeEvent) {
    clear_type();
    set_has_entity_change_event();
    _impl_.type_.entity_change_event_ =
        ::google::protobuf::Message::DefaultConstruct<::anduril::entityhistory::v1::EntityChangeEvent>(GetArena());
  }
  return _impl_.type_.entity_change_event_;
}
inline ::anduril::entityhistory::v1::EntityChangeEvent* SnapshotEvent::mutable_entity_change_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::anduril::entityhistory::v1::EntityChangeEvent* _msg = _internal_mutable_entity_change_event();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.SnapshotEvent.entity_change_event)
  return _msg;
}

// .anduril.entitymanager.v1.EntityEvent entity_state = 3 [json_name = "entityState"];
inline bool SnapshotEvent::has_entity_state() const {
  return type_case() == kEntityState;
}
inline bool SnapshotEvent::_internal_has_entity_state() const {
  return type_case() == kEntityState;
}
inline void SnapshotEvent::set_has_entity_state() {
  _impl_._oneof_case_[0] = kEntityState;
}
inline ::anduril::entitymanager::v1::EntityEvent* SnapshotEvent::release_entity_state() {
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.SnapshotEvent.entity_state)
  if (type_case() == kEntityState) {
    clear_has_type();
    auto* temp = _impl_.type_.entity_state_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.entity_state_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::anduril::entitymanager::v1::EntityEvent& SnapshotEvent::_internal_entity_state() const {
  return type_case() == kEntityState ? *_impl_.type_.entity_state_ : reinterpret_cast<::anduril::entitymanager::v1::EntityEvent&>(::anduril::entitymanager::v1::_EntityEvent_default_instance_);
}
inline const ::anduril::entitymanager::v1::EntityEvent& SnapshotEvent::entity_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.SnapshotEvent.entity_state)
  return _internal_entity_state();
}
inline ::anduril::entitymanager::v1::EntityEvent* SnapshotEvent::unsafe_arena_release_entity_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:anduril.entityhistory.v1.SnapshotEvent.entity_state)
  if (type_case() == kEntityState) {
    clear_has_type();
    auto* temp = _impl_.type_.entity_state_;
    _impl_.type_.entity_state_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SnapshotEvent::unsafe_arena_set_allocated_entity_state(::anduril::entitymanager::v1::EntityEvent* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_entity_state();
    _impl_.type_.entity_state_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.SnapshotEvent.entity_state)
}
inline ::anduril::entitymanager::v1::EntityEvent* SnapshotEvent::_internal_mutable_entity_state() {
  if (type_case() != kEntityState) {
    clear_type();
    set_has_entity_state();
    _impl_.type_.entity_state_ =
        ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::EntityEvent>(GetArena());
  }
  return _impl_.type_.entity_state_;
}
inline ::anduril::entitymanager::v1::EntityEvent* SnapshotEvent::mutable_entity_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::anduril::entitymanager::v1::EntityEvent* _msg = _internal_mutable_entity_state();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.SnapshotEvent.entity_state)
  return _msg;
}

inline bool SnapshotEvent::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void SnapshotEvent::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline SnapshotEvent::TypeCase SnapshotEvent::type_case() const {
  return SnapshotEvent::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// EntityChangeEvent

// .anduril.entitymanager.v1.Entity from = 1 [json_name = "from"];
inline bool EntityChangeEvent::has_from() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& EntityChangeEvent::_internal_from() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.from_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& EntityChangeEvent::from() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.EntityChangeEvent.from)
  return _internal_from();
}
inline void EntityChangeEvent::unsafe_arena_set_allocated_from(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_);
  }
  _impl_.from_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.EntityChangeEvent.from)
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::release_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.from_;
  _impl_.from_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::unsafe_arena_release_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.EntityChangeEvent.from)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.from_;
  _impl_.from_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::_internal_mutable_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.from_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.from_;
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::mutable_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.EntityChangeEvent.from)
  return _msg;
}
inline void EntityChangeEvent::set_allocated_from(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.from_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.EntityChangeEvent.from)
}

// .anduril.entitymanager.v1.Entity to = 2 [json_name = "to"];
inline bool EntityChangeEvent::has_to() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Entity& EntityChangeEvent::_internal_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Entity* p = _impl_.to_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Entity&>(::anduril::entitymanager::v1::_Entity_default_instance_);
}
inline const ::anduril::entitymanager::v1::Entity& EntityChangeEvent::to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.EntityChangeEvent.to)
  return _internal_to();
}
inline void EntityChangeEvent::unsafe_arena_set_allocated_to(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_);
  }
  _impl_.to_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.EntityChangeEvent.to)
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::release_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Entity* released = _impl_.to_;
  _impl_.to_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::unsafe_arena_release_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.EntityChangeEvent.to)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Entity* temp = _impl_.to_;
  _impl_.to_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::_internal_mutable_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Entity>(GetArena());
    _impl_.to_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(p);
  }
  return _impl_.to_;
}
inline ::anduril::entitymanager::v1::Entity* EntityChangeEvent::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Entity* _msg = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.EntityChangeEvent.to)
  return _msg;
}
inline void EntityChangeEvent::set_allocated_to(::anduril::entitymanager::v1::Entity* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.to_ = reinterpret_cast<::anduril::entitymanager::v1::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.EntityChangeEvent.to)
}

// -------------------------------------------------------------------

// Trail

// string entity_id = 1 [json_name = "entityId"];
inline void Trail::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
}
inline const std::string& Trail::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.Trail.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Trail::set_entity_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entityhistory.v1.Trail.entity_id)
}
inline std::string* Trail::mutable_entity_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.Trail.entity_id)
  return _s;
}
inline const std::string& Trail::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void Trail::_internal_set_entity_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(value, GetArena());
}
inline std::string* Trail::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_id_.Mutable( GetArena());
}
inline std::string* Trail::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.Trail.entity_id)
  return _impl_.entity_id_.Release();
}
inline void Trail::set_allocated_entity_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entity_id_.IsDefault()) {
          _impl_.entity_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.Trail.entity_id)
}

// repeated .anduril.entityhistory.v1.TrailPoint trail_points = 2 [json_name = "trailPoints"];
inline int Trail::_internal_trail_points_size() const {
  return _internal_trail_points().size();
}
inline int Trail::trail_points_size() const {
  return _internal_trail_points_size();
}
inline void Trail::clear_trail_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trail_points_.Clear();
}
inline ::anduril::entityhistory::v1::TrailPoint* Trail::mutable_trail_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.Trail.trail_points)
  return _internal_mutable_trail_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>* Trail::mutable_trail_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:anduril.entityhistory.v1.Trail.trail_points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_trail_points();
}
inline const ::anduril::entityhistory::v1::TrailPoint& Trail::trail_points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.Trail.trail_points)
  return _internal_trail_points().Get(index);
}
inline ::anduril::entityhistory::v1::TrailPoint* Trail::add_trail_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::anduril::entityhistory::v1::TrailPoint* _add = _internal_mutable_trail_points()->Add();
  // @@protoc_insertion_point(field_add:anduril.entityhistory.v1.Trail.trail_points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>& Trail::trail_points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:anduril.entityhistory.v1.Trail.trail_points)
  return _internal_trail_points();
}
inline const ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>&
Trail::_internal_trail_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trail_points_;
}
inline ::google::protobuf::RepeatedPtrField<::anduril::entityhistory::v1::TrailPoint>*
Trail::_internal_mutable_trail_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.trail_points_;
}

// -------------------------------------------------------------------

// TrailPoint

// .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
inline bool TrailPoint::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TrailPoint::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TrailPoint::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.TrailPoint.timestamp)
  return _internal_timestamp();
}
inline void TrailPoint::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.TrailPoint.timestamp)
}
inline ::google::protobuf::Timestamp* TrailPoint::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* TrailPoint::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.TrailPoint.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TrailPoint::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* TrailPoint::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.TrailPoint.timestamp)
  return _msg;
}
inline void TrailPoint::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.TrailPoint.timestamp)
}

// .anduril.entitymanager.v1.Location location = 2 [json_name = "location"];
inline bool TrailPoint::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::Location& TrailPoint::_internal_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::Location* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::Location&>(::anduril::entitymanager::v1::_Location_default_instance_);
}
inline const ::anduril::entitymanager::v1::Location& TrailPoint::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.TrailPoint.location)
  return _internal_location();
}
inline void TrailPoint::unsafe_arena_set_allocated_location(::anduril::entitymanager::v1::Location* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::anduril::entitymanager::v1::Location*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.TrailPoint.location)
}
inline ::anduril::entitymanager::v1::Location* TrailPoint::release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Location* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::entitymanager::v1::Location* TrailPoint::unsafe_arena_release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.TrailPoint.location)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::anduril::entitymanager::v1::Location* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::Location* TrailPoint::_internal_mutable_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::Location>(GetArena());
    _impl_.location_ = reinterpret_cast<::anduril::entitymanager::v1::Location*>(p);
  }
  return _impl_.location_;
}
inline ::anduril::entitymanager::v1::Location* TrailPoint::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::anduril::entitymanager::v1::Location* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.TrailPoint.location)
  return _msg;
}
inline void TrailPoint::set_allocated_location(::anduril::entitymanager::v1::Location* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.location_ = reinterpret_cast<::anduril::entitymanager::v1::Location*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.TrailPoint.location)
}

// .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 3 [json_name = "locationUncertainty"];
inline bool TrailPoint::has_location_uncertainty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_uncertainty_ != nullptr);
  return value;
}
inline const ::anduril::entitymanager::v1::LocationUncertainty& TrailPoint::_internal_location_uncertainty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::entitymanager::v1::LocationUncertainty* p = _impl_.location_uncertainty_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::entitymanager::v1::LocationUncertainty&>(::anduril::entitymanager::v1::_LocationUncertainty_default_instance_);
}
inline const ::anduril::entitymanager::v1::LocationUncertainty& TrailPoint::location_uncertainty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.TrailPoint.location_uncertainty)
  return _internal_location_uncertainty();
}
inline void TrailPoint::unsafe_arena_set_allocated_location_uncertainty(::anduril::entitymanager::v1::LocationUncertainty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_uncertainty_);
  }
  _impl_.location_uncertainty_ = reinterpret_cast<::anduril::entitymanager::v1::LocationUncertainty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.entityhistory.v1.TrailPoint.location_uncertainty)
}
inline ::anduril::entitymanager::v1::LocationUncertainty* TrailPoint::release_location_uncertainty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::entitymanager::v1::LocationUncertainty* released = _impl_.location_uncertainty_;
  _impl_.location_uncertainty_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::entitymanager::v1::LocationUncertainty* TrailPoint::unsafe_arena_release_location_uncertainty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.TrailPoint.location_uncertainty)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::entitymanager::v1::LocationUncertainty* temp = _impl_.location_uncertainty_;
  _impl_.location_uncertainty_ = nullptr;
  return temp;
}
inline ::anduril::entitymanager::v1::LocationUncertainty* TrailPoint::_internal_mutable_location_uncertainty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_uncertainty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::entitymanager::v1::LocationUncertainty>(GetArena());
    _impl_.location_uncertainty_ = reinterpret_cast<::anduril::entitymanager::v1::LocationUncertainty*>(p);
  }
  return _impl_.location_uncertainty_;
}
inline ::anduril::entitymanager::v1::LocationUncertainty* TrailPoint::mutable_location_uncertainty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::anduril::entitymanager::v1::LocationUncertainty* _msg = _internal_mutable_location_uncertainty();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.TrailPoint.location_uncertainty)
  return _msg;
}
inline void TrailPoint::set_allocated_location_uncertainty(::anduril::entitymanager::v1::LocationUncertainty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_uncertainty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.location_uncertainty_ = reinterpret_cast<::anduril::entitymanager::v1::LocationUncertainty*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.TrailPoint.location_uncertainty)
}

// -------------------------------------------------------------------

// HistoryPageToken

// string query_id = 1 [json_name = "queryId"];
inline void HistoryPageToken::clear_query_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_id_.ClearToEmpty();
}
inline const std::string& HistoryPageToken::query_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPageToken.query_id)
  return _internal_query_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistoryPageToken::set_query_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entityhistory.v1.HistoryPageToken.query_id)
}
inline std::string* HistoryPageToken::mutable_query_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_query_id();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.HistoryPageToken.query_id)
  return _s;
}
inline const std::string& HistoryPageToken::_internal_query_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.query_id_.Get();
}
inline void HistoryPageToken::_internal_set_query_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_id_.Set(value, GetArena());
}
inline std::string* HistoryPageToken::_internal_mutable_query_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.query_id_.Mutable( GetArena());
}
inline std::string* HistoryPageToken::release_query_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.HistoryPageToken.query_id)
  return _impl_.query_id_.Release();
}
inline void HistoryPageToken::set_allocated_query_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.query_id_.IsDefault()) {
          _impl_.query_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.HistoryPageToken.query_id)
}

// int32 page_num = 2 [json_name = "pageNum"];
inline void HistoryPageToken::clear_page_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_num_ = 0;
}
inline ::int32_t HistoryPageToken::page_num() const {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPageToken.page_num)
  return _internal_page_num();
}
inline void HistoryPageToken::set_page_num(::int32_t value) {
  _internal_set_page_num(value);
  // @@protoc_insertion_point(field_set:anduril.entityhistory.v1.HistoryPageToken.page_num)
}
inline ::int32_t HistoryPageToken::_internal_page_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_num_;
}
inline void HistoryPageToken::_internal_set_page_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_num_ = value;
}

// string entity_id = 3 [json_name = "entityId"];
inline void HistoryPageToken::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
}
inline const std::string& HistoryPageToken::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPageToken.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistoryPageToken::set_entity_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entityhistory.v1.HistoryPageToken.entity_id)
}
inline std::string* HistoryPageToken::mutable_entity_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.HistoryPageToken.entity_id)
  return _s;
}
inline const std::string& HistoryPageToken::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void HistoryPageToken::_internal_set_entity_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.Set(value, GetArena());
}
inline std::string* HistoryPageToken::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_id_.Mutable( GetArena());
}
inline std::string* HistoryPageToken::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.HistoryPageToken.entity_id)
  return _impl_.entity_id_.Release();
}
inline void HistoryPageToken::set_allocated_entity_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entity_id_.IsDefault()) {
          _impl_.entity_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.HistoryPageToken.entity_id)
}

// .anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];
inline void HistoryPageToken::clear_storage_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_system_ = 0;
}
inline ::anduril::entityhistory::v1::StorageSystem HistoryPageToken::storage_system() const {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPageToken.storage_system)
  return _internal_storage_system();
}
inline void HistoryPageToken::set_storage_system(::anduril::entityhistory::v1::StorageSystem value) {
  _internal_set_storage_system(value);
  // @@protoc_insertion_point(field_set:anduril.entityhistory.v1.HistoryPageToken.storage_system)
}
inline ::anduril::entityhistory::v1::StorageSystem HistoryPageToken::_internal_storage_system() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::anduril::entityhistory::v1::StorageSystem>(_impl_.storage_system_);
}
inline void HistoryPageToken::_internal_set_storage_system(::anduril::entityhistory::v1::StorageSystem value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_system_ = value;
}

// string start_time = 5 [json_name = "startTime"];
inline void HistoryPageToken::clear_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_.ClearToEmpty();
}
inline const std::string& HistoryPageToken::start_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPageToken.start_time)
  return _internal_start_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistoryPageToken::set_start_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.entityhistory.v1.HistoryPageToken.start_time)
}
inline std::string* HistoryPageToken::mutable_start_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:anduril.entityhistory.v1.HistoryPageToken.start_time)
  return _s;
}
inline const std::string& HistoryPageToken::_internal_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_time_.Get();
}
inline void HistoryPageToken::_internal_set_start_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_.Set(value, GetArena());
}
inline std::string* HistoryPageToken::_internal_mutable_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.start_time_.Mutable( GetArena());
}
inline std::string* HistoryPageToken::release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.entityhistory.v1.HistoryPageToken.start_time)
  return _impl_.start_time_.Release();
}
inline void HistoryPageToken::set_allocated_start_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.start_time_.IsDefault()) {
          _impl_.start_time_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.HistoryPageToken.start_time)
}

// bool is_complete = 6 [json_name = "isComplete"];
inline void HistoryPageToken::clear_is_complete() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_complete_ = false;
}
inline bool HistoryPageToken::is_complete() const {
  // @@protoc_insertion_point(field_get:anduril.entityhistory.v1.HistoryPageToken.is_complete)
  return _internal_is_complete();
}
inline void HistoryPageToken::set_is_complete(bool value) {
  _internal_set_is_complete(value);
  // @@protoc_insertion_point(field_set:anduril.entityhistory.v1.HistoryPageToken.is_complete)
}
inline bool HistoryPageToken::_internal_is_complete() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_complete_;
}
inline void HistoryPageToken::_internal_set_is_complete(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_complete_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entityhistory
}  // namespace anduril


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::anduril::entityhistory::v1::HistoryType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entityhistory::v1::HistoryType>() {
  return ::anduril::entityhistory::v1::HistoryType_descriptor();
}
template <>
struct is_proto_enum<::anduril::entityhistory::v1::StorageSystem> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::anduril::entityhistory::v1::StorageSystem>() {
  return ::anduril::entityhistory::v1::StorageSystem_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_2epb_2eh
