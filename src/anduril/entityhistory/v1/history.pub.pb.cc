// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entityhistory/v1/history.pub.proto

#include "anduril/entityhistory/v1/history.pub.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entityhistory {
namespace v1 {

inline constexpr HistoryPageToken::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : query_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_num_{0},
        storage_system_{static_cast< ::anduril::entityhistory::v1::StorageSystem >(0)},
        is_complete_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryPageToken::HistoryPageToken(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistoryPageTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryPageTokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryPageTokenDefaultTypeInternal() {}
  union {
    HistoryPageToken _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryPageTokenDefaultTypeInternal _HistoryPageToken_default_instance_;

inline constexpr TrailPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr},
        location_{nullptr},
        location_uncertainty_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrailPoint::TrailPoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrailPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrailPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrailPointDefaultTypeInternal() {}
  union {
    TrailPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrailPointDefaultTypeInternal _TrailPoint_default_instance_;

inline constexpr Trail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trail_points_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Trail::Trail(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrailDefaultTypeInternal() {}
  union {
    Trail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrailDefaultTypeInternal _Trail_default_instance_;

inline constexpr TrailPage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trails_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrailPage::TrailPage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrailPageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrailPageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrailPageDefaultTypeInternal() {}
  union {
    TrailPage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrailPageDefaultTypeInternal _TrailPage_default_instance_;

inline constexpr EntityChangeEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        from_{nullptr},
        to_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EntityChangeEvent::EntityChangeEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EntityChangeEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityChangeEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityChangeEventDefaultTypeInternal() {}
  union {
    EntityChangeEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityChangeEventDefaultTypeInternal _EntityChangeEvent_default_instance_;

inline constexpr SnapshotEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SnapshotEvent::SnapshotEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SnapshotEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotEventDefaultTypeInternal() {}
  union {
    SnapshotEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotEventDefaultTypeInternal _SnapshotEvent_default_instance_;

inline constexpr Snapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        snapshot_events_{},
        latest_state_{nullptr},
        original_state_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Snapshot::Snapshot(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotDefaultTypeInternal() {}
  union {
    Snapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotDefaultTypeInternal _Snapshot_default_instance_;

inline constexpr SnapshotPage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshots_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SnapshotPage::SnapshotPage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SnapshotPageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotPageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotPageDefaultTypeInternal() {}
  union {
    SnapshotPage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotPageDefaultTypeInternal _SnapshotPage_default_instance_;

inline constexpr CompositePage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshots_{},
        trails_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CompositePage::CompositePage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CompositePageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompositePageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompositePageDefaultTypeInternal() {}
  union {
    CompositePage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompositePageDefaultTypeInternal _CompositePage_default_instance_;

inline constexpr HistoryPage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryPage::HistoryPage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistoryPageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryPageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryPageDefaultTypeInternal() {}
  union {
    HistoryPage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryPageDefaultTypeInternal _HistoryPage_default_instance_;
}  // namespace v1
}  // namespace entityhistory
}  // namespace anduril
static ::_pb::Metadata file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[10];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto = nullptr;
const ::uint32_t TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPage, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPage, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPage, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotPage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotPage, _impl_.snapshots_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TrailPage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TrailPage, _impl_.trails_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::CompositePage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::CompositePage, _impl_.snapshots_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::CompositePage, _impl_.trails_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Snapshot, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Snapshot, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Snapshot, _impl_.latest_state_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Snapshot, _impl_.original_state_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Snapshot, _impl_.snapshot_events_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotEvent, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotEvent, _impl_.timestamp_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotEvent, _impl_.type_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::EntityChangeEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::EntityChangeEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::EntityChangeEvent, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::EntityChangeEvent, _impl_.to_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Trail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Trail, _impl_.entity_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Trail, _impl_.trail_points_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TrailPoint, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TrailPoint, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TrailPoint, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TrailPoint, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TrailPoint, _impl_.location_uncertainty_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPageToken, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPageToken, _impl_.query_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPageToken, _impl_.page_num_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPageToken, _impl_.entity_id_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPageToken, _impl_.storage_system_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPageToken, _impl_.start_time_),
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPageToken, _impl_.is_complete_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::anduril::entityhistory::v1::HistoryPage)},
        {12, -1, -1, sizeof(::anduril::entityhistory::v1::SnapshotPage)},
        {21, -1, -1, sizeof(::anduril::entityhistory::v1::TrailPage)},
        {30, -1, -1, sizeof(::anduril::entityhistory::v1::CompositePage)},
        {40, 51, -1, sizeof(::anduril::entityhistory::v1::Snapshot)},
        {54, 66, -1, sizeof(::anduril::entityhistory::v1::SnapshotEvent)},
        {69, 79, -1, sizeof(::anduril::entityhistory::v1::EntityChangeEvent)},
        {81, -1, -1, sizeof(::anduril::entityhistory::v1::Trail)},
        {91, 102, -1, sizeof(::anduril::entityhistory::v1::TrailPoint)},
        {105, -1, -1, sizeof(::anduril::entityhistory::v1::HistoryPageToken)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entityhistory::v1::_HistoryPage_default_instance_._instance,
    &::anduril::entityhistory::v1::_SnapshotPage_default_instance_._instance,
    &::anduril::entityhistory::v1::_TrailPage_default_instance_._instance,
    &::anduril::entityhistory::v1::_CompositePage_default_instance_._instance,
    &::anduril::entityhistory::v1::_Snapshot_default_instance_._instance,
    &::anduril::entityhistory::v1::_SnapshotEvent_default_instance_._instance,
    &::anduril::entityhistory::v1::_EntityChangeEvent_default_instance_._instance,
    &::anduril::entityhistory::v1::_Trail_default_instance_._instance,
    &::anduril::entityhistory::v1::_TrailPoint_default_instance_._instance,
    &::anduril::entityhistory::v1::_HistoryPageToken_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n*anduril/entityhistory/v1/history.pub.p"
    "roto\022\030anduril.entityhistory.v1\032)anduril/"
    "entitymanager/v1/entity.pub.proto\0325andur"
    "il/entitymanager/v1/entity_manager_api.p"
    "ub.proto\032+anduril/entitymanager/v1/locat"
    "ion.pub.proto\032\037google/protobuf/timestamp"
    ".proto\"\374\001\n\013HistoryPage\022D\n\ntrail_page\030\001 \001"
    "(\0132#.anduril.entityhistory.v1.TrailPageH"
    "\000R\ttrailPage\022M\n\rsnapshot_page\030\002 \001(\0132&.an"
    "duril.entityhistory.v1.SnapshotPageH\000R\014s"
    "napshotPage\022P\n\016composite_page\030\003 \001(\0132\'.an"
    "duril.entityhistory.v1.CompositePageH\000R\r"
    "compositePageB\006\n\004type\"P\n\014SnapshotPage\022@\n"
    "\tsnapshots\030\001 \003(\0132\".anduril.entityhistory"
    ".v1.SnapshotR\tsnapshots\"D\n\tTrailPage\0227\n\006"
    "trails\030\001 \003(\0132\037.anduril.entityhistory.v1."
    "TrailR\006trails\"\212\001\n\rCompositePage\022@\n\tsnaps"
    "hots\030\001 \003(\0132\".anduril.entityhistory.v1.Sn"
    "apshotR\tsnapshots\0227\n\006trails\030\002 \003(\0132\037.andu"
    "ril.entityhistory.v1.TrailR\006trails\"\352\001\n\010S"
    "napshot\022C\n\014latest_state\030\001 \001(\0132 .anduril."
    "entitymanager.v1.EntityR\013latestState\022G\n\016"
    "original_state\030\002 \001(\0132 .anduril.entityman"
    "ager.v1.EntityR\roriginalState\022P\n\017snapsho"
    "t_events\030\003 \003(\0132\'.anduril.entityhistory.v"
    "1.SnapshotEventR\016snapshotEvents\"\374\001\n\rSnap"
    "shotEvent\0228\n\ttimestamp\030\001 \001(\0132\032.google.pr"
    "otobuf.TimestampR\ttimestamp\022]\n\023entity_ch"
    "ange_event\030\002 \001(\0132+.anduril.entityhistory"
    ".v1.EntityChangeEventH\000R\021entityChangeEve"
    "nt\022J\n\014entity_state\030\003 \001(\0132%.anduril.entit"
    "ymanager.v1.EntityEventH\000R\013entityStateB\006"
    "\n\004type\"{\n\021EntityChangeEvent\0224\n\004from\030\001 \001("
    "\0132 .anduril.entitymanager.v1.EntityR\004fro"
    "m\0220\n\002to\030\002 \001(\0132 .anduril.entitymanager.v1"
    ".EntityR\002to\"m\n\005Trail\022\033\n\tentity_id\030\001 \001(\tR"
    "\010entityId\022G\n\014trail_points\030\002 \003(\0132$.anduri"
    "l.entityhistory.v1.TrailPointR\013trailPoin"
    "ts\"\350\001\n\nTrailPoint\0228\n\ttimestamp\030\001 \001(\0132\032.g"
    "oogle.protobuf.TimestampR\ttimestamp\022>\n\010l"
    "ocation\030\002 \001(\0132\".anduril.entitymanager.v1"
    ".LocationR\010location\022`\n\024location_uncertai"
    "nty\030\003 \001(\0132-.anduril.entitymanager.v1.Loc"
    "ationUncertaintyR\023locationUncertainty\"\365\001"
    "\n\020HistoryPageToken\022\031\n\010query_id\030\001 \001(\tR\007qu"
    "eryId\022\031\n\010page_num\030\002 \001(\005R\007pageNum\022\033\n\tenti"
    "ty_id\030\003 \001(\tR\010entityId\022N\n\016storage_system\030"
    "\004 \001(\0162\'.anduril.entityhistory.v1.Storage"
    "SystemR\rstorageSystem\022\035\n\nstart_time\030\005 \001("
    "\tR\tstartTime\022\037\n\013is_complete\030\006 \001(\010R\nisCom"
    "plete*v\n\013HistoryType\022\030\n\024HISTORY_TYPE_INV"
    "ALID\020\000\022\026\n\022HISTORY_TYPE_TRAIL\020\001\022\031\n\025HISTOR"
    "Y_TYPE_SNAPSHOT\020\002\022\032\n\026HISTORY_TYPE_COMPOS"
    "ITE\020\003*h\n\rStorageSystem\022\032\n\026STORAGE_SYSTEM"
    "_INVALID\020\000\022\035\n\031STORAGE_SYSTEM_PERSISTENT\020"
    "\001\022\034\n\030STORAGE_SYSTEM_EPHEMERAL\020\002B\362\001\n\034com."
    "anduril.entityhistory.v1B\017HistoryPubProt"
    "oP\001Z\?ghe.anduril.dev/anduril/andurilapis"
    "-go/anduril/entityhistory/v1\242\002\003AEX\252\002\030And"
    "uril.Entityhistory.V1\312\002\030Anduril\\Entityhi"
    "story\\V1\342\002$Anduril\\Entityhistory\\V1\\GPBM"
    "etadata\352\002\032Anduril::Entityhistory::V1b\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_deps[4] =
    {
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fentity_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2fentity_5fmanager_5fapi_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2flocation_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto = {
    false,
    false,
    2484,
    descriptor_table_protodef_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto,
    "anduril/entityhistory/v1/history.pub.proto",
    &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
    descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_deps,
    4,
    10,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto::offsets,
    file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto,
    file_level_enum_descriptors_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter() {
  return &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto(&descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto);
namespace anduril {
namespace entityhistory {
namespace v1 {
const ::google::protobuf::EnumDescriptor* HistoryType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t HistoryType_internal_data_[] = {
    262144u, 0u, };
bool HistoryType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* StorageSystem_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto);
  return file_level_enum_descriptors_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t StorageSystem_internal_data_[] = {
    196608u, 0u, };
bool StorageSystem_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class HistoryPage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryPage, _impl_._oneof_case_);
  static const ::anduril::entityhistory::v1::TrailPage& trail_page(const HistoryPage* msg);
  static const ::anduril::entityhistory::v1::SnapshotPage& snapshot_page(const HistoryPage* msg);
  static const ::anduril::entityhistory::v1::CompositePage& composite_page(const HistoryPage* msg);
};

const ::anduril::entityhistory::v1::TrailPage& HistoryPage::_Internal::trail_page(const HistoryPage* msg) {
  return *msg->_impl_.type_.trail_page_;
}
const ::anduril::entityhistory::v1::SnapshotPage& HistoryPage::_Internal::snapshot_page(const HistoryPage* msg) {
  return *msg->_impl_.type_.snapshot_page_;
}
const ::anduril::entityhistory::v1::CompositePage& HistoryPage::_Internal::composite_page(const HistoryPage* msg) {
  return *msg->_impl_.type_.composite_page_;
}
void HistoryPage::set_allocated_trail_page(::anduril::entityhistory::v1::TrailPage* trail_page) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (trail_page) {
    ::google::protobuf::Arena* submessage_arena = trail_page->GetArena();
    if (message_arena != submessage_arena) {
      trail_page = ::google::protobuf::internal::GetOwnedMessage(message_arena, trail_page, submessage_arena);
    }
    set_has_trail_page();
    _impl_.type_.trail_page_ = trail_page;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.HistoryPage.trail_page)
}
void HistoryPage::set_allocated_snapshot_page(::anduril::entityhistory::v1::SnapshotPage* snapshot_page) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (snapshot_page) {
    ::google::protobuf::Arena* submessage_arena = snapshot_page->GetArena();
    if (message_arena != submessage_arena) {
      snapshot_page = ::google::protobuf::internal::GetOwnedMessage(message_arena, snapshot_page, submessage_arena);
    }
    set_has_snapshot_page();
    _impl_.type_.snapshot_page_ = snapshot_page;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.HistoryPage.snapshot_page)
}
void HistoryPage::set_allocated_composite_page(::anduril::entityhistory::v1::CompositePage* composite_page) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (composite_page) {
    ::google::protobuf::Arena* submessage_arena = composite_page->GetArena();
    if (message_arena != submessage_arena) {
      composite_page = ::google::protobuf::internal::GetOwnedMessage(message_arena, composite_page, submessage_arena);
    }
    set_has_composite_page();
    _impl_.type_.composite_page_ = composite_page;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.HistoryPage.composite_page)
}
HistoryPage::HistoryPage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.HistoryPage)
}
inline PROTOBUF_NDEBUG_INLINE HistoryPage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

HistoryPage::HistoryPage(
    ::google::protobuf::Arena* arena,
    const HistoryPage& from)
    : ::google::protobuf::Message(arena) {
  HistoryPage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kTrailPage:
        _impl_.type_.trail_page_ = CreateMaybeMessage<::anduril::entityhistory::v1::TrailPage>(arena, *from._impl_.type_.trail_page_);
        break;
      case kSnapshotPage:
        _impl_.type_.snapshot_page_ = CreateMaybeMessage<::anduril::entityhistory::v1::SnapshotPage>(arena, *from._impl_.type_.snapshot_page_);
        break;
      case kCompositePage:
        _impl_.type_.composite_page_ = CreateMaybeMessage<::anduril::entityhistory::v1::CompositePage>(arena, *from._impl_.type_.composite_page_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.HistoryPage)
}
inline PROTOBUF_NDEBUG_INLINE HistoryPage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void HistoryPage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HistoryPage::~HistoryPage() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.HistoryPage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistoryPage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void HistoryPage::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entityhistory.v1.HistoryPage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kTrailPage: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.trail_page_;
      }
      break;
    }
    case kSnapshotPage: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.snapshot_page_;
      }
      break;
    }
    case kCompositePage: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.composite_page_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void HistoryPage::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.HistoryPage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HistoryPage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> HistoryPage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HistoryPage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entityhistory.v1.TrailPage trail_page = 1 [json_name = "trailPage"];
    {PROTOBUF_FIELD_OFFSET(HistoryPage, _impl_.type_.trail_page_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entityhistory.v1.SnapshotPage snapshot_page = 2 [json_name = "snapshotPage"];
    {PROTOBUF_FIELD_OFFSET(HistoryPage, _impl_.type_.snapshot_page_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entityhistory.v1.CompositePage composite_page = 3 [json_name = "compositePage"];
    {PROTOBUF_FIELD_OFFSET(HistoryPage, _impl_.type_.composite_page_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::TrailPage>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::SnapshotPage>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::CompositePage>()},
  }}, {{
  }},
};

::uint8_t* HistoryPage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.HistoryPage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (type_case()) {
    case kTrailPage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::trail_page(this),
          _Internal::trail_page(this).GetCachedSize(), target, stream);
      break;
    }
    case kSnapshotPage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::snapshot_page(this),
          _Internal::snapshot_page(this).GetCachedSize(), target, stream);
      break;
    }
    case kCompositePage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::composite_page(this),
          _Internal::composite_page(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.HistoryPage)
  return target;
}

::size_t HistoryPage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.HistoryPage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .anduril.entityhistory.v1.TrailPage trail_page = 1 [json_name = "trailPage"];
    case kTrailPage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.trail_page_);
      break;
    }
    // .anduril.entityhistory.v1.SnapshotPage snapshot_page = 2 [json_name = "snapshotPage"];
    case kSnapshotPage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.snapshot_page_);
      break;
    }
    // .anduril.entityhistory.v1.CompositePage composite_page = 3 [json_name = "compositePage"];
    case kCompositePage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.composite_page_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HistoryPage::_class_data_ = {
    HistoryPage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HistoryPage::GetClassData() const {
  return &_class_data_;
}

void HistoryPage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HistoryPage*>(&to_msg);
  auto& from = static_cast<const HistoryPage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.HistoryPage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kTrailPage: {
      _this->_internal_mutable_trail_page()->::anduril::entityhistory::v1::TrailPage::MergeFrom(
          from._internal_trail_page());
      break;
    }
    case kSnapshotPage: {
      _this->_internal_mutable_snapshot_page()->::anduril::entityhistory::v1::SnapshotPage::MergeFrom(
          from._internal_snapshot_page());
      break;
    }
    case kCompositePage: {
      _this->_internal_mutable_composite_page()->::anduril::entityhistory::v1::CompositePage::MergeFrom(
          from._internal_composite_page());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryPage::CopyFrom(const HistoryPage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.HistoryPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HistoryPage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HistoryPage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HistoryPage::InternalSwap(HistoryPage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata HistoryPage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[0]);
}
// ===================================================================

class SnapshotPage::_Internal {
 public:
};

SnapshotPage::SnapshotPage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.SnapshotPage)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotPage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : snapshots_{visibility, arena, from.snapshots_},
        _cached_size_{0} {}

SnapshotPage::SnapshotPage(
    ::google::protobuf::Arena* arena,
    const SnapshotPage& from)
    : ::google::protobuf::Message(arena) {
  SnapshotPage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.SnapshotPage)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotPage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : snapshots_{visibility, arena},
        _cached_size_{0} {}

inline void SnapshotPage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SnapshotPage::~SnapshotPage() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.SnapshotPage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SnapshotPage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SnapshotPage::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.SnapshotPage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshots_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SnapshotPage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SnapshotPage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SnapshotPage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotPage, _impl_.snapshots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
    {PROTOBUF_FIELD_OFFSET(SnapshotPage, _impl_.snapshots_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::Snapshot>()},
  }}, {{
  }},
};

::uint8_t* SnapshotPage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.SnapshotPage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_snapshots_size()); i < n; i++) {
    const auto& repfield = this->_internal_snapshots().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.SnapshotPage)
  return target;
}

::size_t SnapshotPage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.SnapshotPage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
  total_size += 1UL * this->_internal_snapshots_size();
  for (const auto& msg : this->_internal_snapshots()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SnapshotPage::_class_data_ = {
    SnapshotPage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SnapshotPage::GetClassData() const {
  return &_class_data_;
}

void SnapshotPage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SnapshotPage*>(&to_msg);
  auto& from = static_cast<const SnapshotPage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.SnapshotPage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshots()->MergeFrom(
      from._internal_snapshots());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SnapshotPage::CopyFrom(const SnapshotPage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.SnapshotPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SnapshotPage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SnapshotPage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SnapshotPage::InternalSwap(SnapshotPage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.snapshots_.InternalSwap(&other->_impl_.snapshots_);
}

::google::protobuf::Metadata SnapshotPage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[1]);
}
// ===================================================================

class TrailPage::_Internal {
 public:
};

TrailPage::TrailPage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.TrailPage)
}
inline PROTOBUF_NDEBUG_INLINE TrailPage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : trails_{visibility, arena, from.trails_},
        _cached_size_{0} {}

TrailPage::TrailPage(
    ::google::protobuf::Arena* arena,
    const TrailPage& from)
    : ::google::protobuf::Message(arena) {
  TrailPage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.TrailPage)
}
inline PROTOBUF_NDEBUG_INLINE TrailPage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trails_{visibility, arena},
        _cached_size_{0} {}

inline void TrailPage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TrailPage::~TrailPage() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.TrailPage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrailPage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrailPage::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.TrailPage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trails_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrailPage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TrailPage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TrailPage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entityhistory.v1.Trail trails = 1 [json_name = "trails"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TrailPage, _impl_.trails_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entityhistory.v1.Trail trails = 1 [json_name = "trails"];
    {PROTOBUF_FIELD_OFFSET(TrailPage, _impl_.trails_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::Trail>()},
  }}, {{
  }},
};

::uint8_t* TrailPage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.TrailPage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entityhistory.v1.Trail trails = 1 [json_name = "trails"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trails_size()); i < n; i++) {
    const auto& repfield = this->_internal_trails().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.TrailPage)
  return target;
}

::size_t TrailPage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.TrailPage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entityhistory.v1.Trail trails = 1 [json_name = "trails"];
  total_size += 1UL * this->_internal_trails_size();
  for (const auto& msg : this->_internal_trails()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrailPage::_class_data_ = {
    TrailPage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrailPage::GetClassData() const {
  return &_class_data_;
}

void TrailPage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrailPage*>(&to_msg);
  auto& from = static_cast<const TrailPage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.TrailPage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trails()->MergeFrom(
      from._internal_trails());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrailPage::CopyFrom(const TrailPage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.TrailPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrailPage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrailPage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrailPage::InternalSwap(TrailPage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trails_.InternalSwap(&other->_impl_.trails_);
}

::google::protobuf::Metadata TrailPage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[2]);
}
// ===================================================================

class CompositePage::_Internal {
 public:
};

CompositePage::CompositePage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.CompositePage)
}
inline PROTOBUF_NDEBUG_INLINE CompositePage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : snapshots_{visibility, arena, from.snapshots_},
        trails_{visibility, arena, from.trails_},
        _cached_size_{0} {}

CompositePage::CompositePage(
    ::google::protobuf::Arena* arena,
    const CompositePage& from)
    : ::google::protobuf::Message(arena) {
  CompositePage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.CompositePage)
}
inline PROTOBUF_NDEBUG_INLINE CompositePage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : snapshots_{visibility, arena},
        trails_{visibility, arena},
        _cached_size_{0} {}

inline void CompositePage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CompositePage::~CompositePage() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.CompositePage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CompositePage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CompositePage::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.CompositePage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshots_.Clear();
  _impl_.trails_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CompositePage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CompositePage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CompositePage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entityhistory.v1.Trail trails = 2 [json_name = "trails"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(CompositePage, _impl_.trails_)}},
    // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CompositePage, _impl_.snapshots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
    {PROTOBUF_FIELD_OFFSET(CompositePage, _impl_.snapshots_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entityhistory.v1.Trail trails = 2 [json_name = "trails"];
    {PROTOBUF_FIELD_OFFSET(CompositePage, _impl_.trails_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::Snapshot>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::Trail>()},
  }}, {{
  }},
};

::uint8_t* CompositePage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.CompositePage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_snapshots_size()); i < n; i++) {
    const auto& repfield = this->_internal_snapshots().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .anduril.entityhistory.v1.Trail trails = 2 [json_name = "trails"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trails_size()); i < n; i++) {
    const auto& repfield = this->_internal_trails().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.CompositePage)
  return target;
}

::size_t CompositePage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.CompositePage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entityhistory.v1.Snapshot snapshots = 1 [json_name = "snapshots"];
  total_size += 1UL * this->_internal_snapshots_size();
  for (const auto& msg : this->_internal_snapshots()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .anduril.entityhistory.v1.Trail trails = 2 [json_name = "trails"];
  total_size += 1UL * this->_internal_trails_size();
  for (const auto& msg : this->_internal_trails()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CompositePage::_class_data_ = {
    CompositePage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CompositePage::GetClassData() const {
  return &_class_data_;
}

void CompositePage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CompositePage*>(&to_msg);
  auto& from = static_cast<const CompositePage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.CompositePage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshots()->MergeFrom(
      from._internal_snapshots());
  _this->_internal_mutable_trails()->MergeFrom(
      from._internal_trails());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompositePage::CopyFrom(const CompositePage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.CompositePage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CompositePage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CompositePage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CompositePage::InternalSwap(CompositePage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.snapshots_.InternalSwap(&other->_impl_.snapshots_);
  _impl_.trails_.InternalSwap(&other->_impl_.trails_);
}

::google::protobuf::Metadata CompositePage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[3]);
}
// ===================================================================

class Snapshot::_Internal {
 public:
  using HasBits = decltype(std::declval<Snapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Entity& latest_state(const Snapshot* msg);
  static void set_has_latest_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Entity& original_state(const Snapshot* msg);
  static void set_has_original_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::entitymanager::v1::Entity& Snapshot::_Internal::latest_state(const Snapshot* msg) {
  return *msg->_impl_.latest_state_;
}
const ::anduril::entitymanager::v1::Entity& Snapshot::_Internal::original_state(const Snapshot* msg) {
  return *msg->_impl_.original_state_;
}
void Snapshot::clear_latest_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.latest_state_ != nullptr) _impl_.latest_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Snapshot::clear_original_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.original_state_ != nullptr) _impl_.original_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Snapshot::Snapshot(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        snapshot_events_{visibility, arena, from.snapshot_events_} {}

Snapshot::Snapshot(
    ::google::protobuf::Arena* arena,
    const Snapshot& from)
    : ::google::protobuf::Message(arena) {
  Snapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.latest_state_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Entity>(arena, *from._impl_.latest_state_)
                : nullptr;
  _impl_.original_state_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Entity>(arena, *from._impl_.original_state_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        snapshot_events_{visibility, arena} {}

inline void Snapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latest_state_),
           0,
           offsetof(Impl_, original_state_) -
               offsetof(Impl_, latest_state_) +
               sizeof(Impl_::original_state_));
}
Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.Snapshot)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Snapshot::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.latest_state_;
  delete _impl_.original_state_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.Snapshot)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshot_events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.latest_state_ != nullptr);
      _impl_.latest_state_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.original_state_ != nullptr);
      _impl_.original_state_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Snapshot::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Snapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Snapshot_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entitymanager.v1.Entity latest_state = 1 [json_name = "latestState"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.latest_state_)}},
    // .anduril.entitymanager.v1.Entity original_state = 2 [json_name = "originalState"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.original_state_)}},
    // repeated .anduril.entityhistory.v1.SnapshotEvent snapshot_events = 3 [json_name = "snapshotEvents"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.snapshot_events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Entity latest_state = 1 [json_name = "latestState"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.latest_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Entity original_state = 2 [json_name = "originalState"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.original_state_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.entityhistory.v1.SnapshotEvent snapshot_events = 3 [json_name = "snapshotEvents"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.snapshot_events_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Entity>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Entity>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::SnapshotEvent>()},
  }}, {{
  }},
};

::uint8_t* Snapshot::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.Snapshot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Entity latest_state = 1 [json_name = "latestState"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::latest_state(this),
        _Internal::latest_state(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Entity original_state = 2 [json_name = "originalState"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::original_state(this),
        _Internal::original_state(this).GetCachedSize(), target, stream);
  }

  // repeated .anduril.entityhistory.v1.SnapshotEvent snapshot_events = 3 [json_name = "snapshotEvents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_snapshot_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_snapshot_events().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.Snapshot)
  return target;
}

::size_t Snapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.Snapshot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entityhistory.v1.SnapshotEvent snapshot_events = 3 [json_name = "snapshotEvents"];
  total_size += 1UL * this->_internal_snapshot_events_size();
  for (const auto& msg : this->_internal_snapshot_events()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.entitymanager.v1.Entity latest_state = 1 [json_name = "latestState"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.latest_state_);
    }

    // .anduril.entitymanager.v1.Entity original_state = 2 [json_name = "originalState"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.original_state_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Snapshot::_class_data_ = {
    Snapshot::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Snapshot::GetClassData() const {
  return &_class_data_;
}

void Snapshot::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Snapshot*>(&to_msg);
  auto& from = static_cast<const Snapshot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.Snapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshot_events()->MergeFrom(
      from._internal_snapshot_events());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_latest_state()->::anduril::entitymanager::v1::Entity::MergeFrom(
          from._internal_latest_state());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_original_state()->::anduril::entitymanager::v1::Entity::MergeFrom(
          from._internal_original_state());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Snapshot::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Snapshot::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Snapshot::InternalSwap(Snapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.snapshot_events_.InternalSwap(&other->_impl_.snapshot_events_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.original_state_)
      + sizeof(Snapshot::_impl_.original_state_)
      - PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.latest_state_)>(
          reinterpret_cast<char*>(&_impl_.latest_state_),
          reinterpret_cast<char*>(&other->_impl_.latest_state_));
}

::google::protobuf::Metadata Snapshot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[4]);
}
// ===================================================================

class SnapshotEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<SnapshotEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SnapshotEvent, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::SnapshotEvent, _impl_._oneof_case_);
  static const ::google::protobuf::Timestamp& timestamp(const SnapshotEvent* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entityhistory::v1::EntityChangeEvent& entity_change_event(const SnapshotEvent* msg);
  static const ::anduril::entitymanager::v1::EntityEvent& entity_state(const SnapshotEvent* msg);
};

const ::google::protobuf::Timestamp& SnapshotEvent::_Internal::timestamp(const SnapshotEvent* msg) {
  return *msg->_impl_.timestamp_;
}
const ::anduril::entityhistory::v1::EntityChangeEvent& SnapshotEvent::_Internal::entity_change_event(const SnapshotEvent* msg) {
  return *msg->_impl_.type_.entity_change_event_;
}
const ::anduril::entitymanager::v1::EntityEvent& SnapshotEvent::_Internal::entity_state(const SnapshotEvent* msg) {
  return *msg->_impl_.type_.entity_state_;
}
void SnapshotEvent::clear_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SnapshotEvent::set_allocated_entity_change_event(::anduril::entityhistory::v1::EntityChangeEvent* entity_change_event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (entity_change_event) {
    ::google::protobuf::Arena* submessage_arena = entity_change_event->GetArena();
    if (message_arena != submessage_arena) {
      entity_change_event = ::google::protobuf::internal::GetOwnedMessage(message_arena, entity_change_event, submessage_arena);
    }
    set_has_entity_change_event();
    _impl_.type_.entity_change_event_ = entity_change_event;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.SnapshotEvent.entity_change_event)
}
void SnapshotEvent::set_allocated_entity_state(::anduril::entitymanager::v1::EntityEvent* entity_state) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (entity_state) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(entity_state)->GetArena();
    if (message_arena != submessage_arena) {
      entity_state = ::google::protobuf::internal::GetOwnedMessage(message_arena, entity_state, submessage_arena);
    }
    set_has_entity_state();
    _impl_.type_.entity_state_ = entity_state;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.SnapshotEvent.entity_state)
}
void SnapshotEvent::clear_entity_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kEntityState) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.entity_state_;
    }
    clear_has_type();
  }
}
SnapshotEvent::SnapshotEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.SnapshotEvent)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

SnapshotEvent::SnapshotEvent(
    ::google::protobuf::Arena* arena,
    const SnapshotEvent& from)
    : ::google::protobuf::Message(arena) {
  SnapshotEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_)
                : nullptr;
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kEntityChangeEvent:
        _impl_.type_.entity_change_event_ = CreateMaybeMessage<::anduril::entityhistory::v1::EntityChangeEvent>(arena, *from._impl_.type_.entity_change_event_);
        break;
      case kEntityState:
        _impl_.type_.entity_state_ = CreateMaybeMessage<::anduril::entitymanager::v1::EntityEvent>(arena, *from._impl_.type_.entity_state_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.SnapshotEvent)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{},
        _oneof_case_{} {}

inline void SnapshotEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
SnapshotEvent::~SnapshotEvent() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.SnapshotEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SnapshotEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.timestamp_;
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void SnapshotEvent::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entityhistory.v1.SnapshotEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (type_case()) {
    case kEntityChangeEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.entity_change_event_;
      }
      break;
    }
    case kEntityState: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.entity_state_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void SnapshotEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.SnapshotEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SnapshotEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> SnapshotEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SnapshotEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SnapshotEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SnapshotEvent, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(SnapshotEvent, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entityhistory.v1.EntityChangeEvent entity_change_event = 2 [json_name = "entityChangeEvent"];
    {PROTOBUF_FIELD_OFFSET(SnapshotEvent, _impl_.type_.entity_change_event_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.EntityEvent entity_state = 3 [json_name = "entityState"];
    {PROTOBUF_FIELD_OFFSET(SnapshotEvent, _impl_.type_.entity_state_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::EntityChangeEvent>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::EntityEvent>()},
  }}, {{
  }},
};

::uint8_t* SnapshotEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.SnapshotEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  switch (type_case()) {
    case kEntityChangeEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::entity_change_event(this),
          _Internal::entity_change_event(this).GetCachedSize(), target, stream);
      break;
    }
    case kEntityState: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::entity_state(this),
          _Internal::entity_state(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.SnapshotEvent)
  return target;
}

::size_t SnapshotEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.SnapshotEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.timestamp_);
  }

  switch (type_case()) {
    // .anduril.entityhistory.v1.EntityChangeEvent entity_change_event = 2 [json_name = "entityChangeEvent"];
    case kEntityChangeEvent: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.entity_change_event_);
      break;
    }
    // .anduril.entitymanager.v1.EntityEvent entity_state = 3 [json_name = "entityState"];
    case kEntityState: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.entity_state_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SnapshotEvent::_class_data_ = {
    SnapshotEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SnapshotEvent::GetClassData() const {
  return &_class_data_;
}

void SnapshotEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SnapshotEvent*>(&to_msg);
  auto& from = static_cast<const SnapshotEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.SnapshotEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_timestamp());
  }
  switch (from.type_case()) {
    case kEntityChangeEvent: {
      _this->_internal_mutable_entity_change_event()->::anduril::entityhistory::v1::EntityChangeEvent::MergeFrom(
          from._internal_entity_change_event());
      break;
    }
    case kEntityState: {
      _this->_internal_mutable_entity_state()->::anduril::entitymanager::v1::EntityEvent::MergeFrom(
          from._internal_entity_state());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SnapshotEvent::CopyFrom(const SnapshotEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.SnapshotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SnapshotEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SnapshotEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SnapshotEvent::InternalSwap(SnapshotEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SnapshotEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[5]);
}
// ===================================================================

class EntityChangeEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<EntityChangeEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_._has_bits_);
  static const ::anduril::entitymanager::v1::Entity& from(const EntityChangeEvent* msg);
  static void set_has_from(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Entity& to(const EntityChangeEvent* msg);
  static void set_has_to(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::anduril::entitymanager::v1::Entity& EntityChangeEvent::_Internal::from(const EntityChangeEvent* msg) {
  return *msg->_impl_.from_;
}
const ::anduril::entitymanager::v1::Entity& EntityChangeEvent::_Internal::to(const EntityChangeEvent* msg) {
  return *msg->_impl_.to_;
}
void EntityChangeEvent::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void EntityChangeEvent::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
EntityChangeEvent::EntityChangeEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.EntityChangeEvent)
}
inline PROTOBUF_NDEBUG_INLINE EntityChangeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EntityChangeEvent::EntityChangeEvent(
    ::google::protobuf::Arena* arena,
    const EntityChangeEvent& from)
    : ::google::protobuf::Message(arena) {
  EntityChangeEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Entity>(arena, *from._impl_.from_)
                : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Entity>(arena, *from._impl_.to_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.EntityChangeEvent)
}
inline PROTOBUF_NDEBUG_INLINE EntityChangeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EntityChangeEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, to_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::to_));
}
EntityChangeEvent::~EntityChangeEvent() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.EntityChangeEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EntityChangeEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.from_;
  delete _impl_.to_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EntityChangeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.EntityChangeEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EntityChangeEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> EntityChangeEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EntityChangeEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .anduril.entitymanager.v1.Entity to = 2 [json_name = "to"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_.to_)}},
    // .anduril.entitymanager.v1.Entity from = 1 [json_name = "from"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_.from_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entitymanager.v1.Entity from = 1 [json_name = "from"];
    {PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Entity to = 2 [json_name = "to"];
    {PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Entity>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Entity>()},
  }}, {{
  }},
};

::uint8_t* EntityChangeEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.EntityChangeEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entitymanager.v1.Entity from = 1 [json_name = "from"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Entity to = 2 [json_name = "to"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.EntityChangeEvent)
  return target;
}

::size_t EntityChangeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.EntityChangeEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.entitymanager.v1.Entity from = 1 [json_name = "from"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.from_);
    }

    // .anduril.entitymanager.v1.Entity to = 2 [json_name = "to"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.to_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EntityChangeEvent::_class_data_ = {
    EntityChangeEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EntityChangeEvent::GetClassData() const {
  return &_class_data_;
}

void EntityChangeEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EntityChangeEvent*>(&to_msg);
  auto& from = static_cast<const EntityChangeEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.EntityChangeEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_from()->::anduril::entitymanager::v1::Entity::MergeFrom(
          from._internal_from());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_to()->::anduril::entitymanager::v1::Entity::MergeFrom(
          from._internal_to());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityChangeEvent::CopyFrom(const EntityChangeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.EntityChangeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EntityChangeEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EntityChangeEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EntityChangeEvent::InternalSwap(EntityChangeEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_.to_)
      + sizeof(EntityChangeEvent::_impl_.to_)
      - PROTOBUF_FIELD_OFFSET(EntityChangeEvent, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata EntityChangeEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[6]);
}
// ===================================================================

class Trail::_Internal {
 public:
};

Trail::Trail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.Trail)
}
inline PROTOBUF_NDEBUG_INLINE Trail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : trail_points_{visibility, arena, from.trail_points_},
        entity_id_(arena, from.entity_id_),
        _cached_size_{0} {}

Trail::Trail(
    ::google::protobuf::Arena* arena,
    const Trail& from)
    : ::google::protobuf::Message(arena) {
  Trail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.Trail)
}
inline PROTOBUF_NDEBUG_INLINE Trail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trail_points_{visibility, arena},
        entity_id_(arena),
        _cached_size_{0} {}

inline void Trail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Trail::~Trail() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.Trail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Trail::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.entity_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Trail::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.Trail)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trail_points_.Clear();
  _impl_.entity_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Trail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 48, 2> Trail::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Trail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .anduril.entityhistory.v1.TrailPoint trail_points = 2 [json_name = "trailPoints"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Trail, _impl_.trail_points_)}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Trail, _impl_.entity_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(Trail, _impl_.entity_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .anduril.entityhistory.v1.TrailPoint trail_points = 2 [json_name = "trailPoints"];
    {PROTOBUF_FIELD_OFFSET(Trail, _impl_.trail_points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::TrailPoint>()},
  }}, {{
    "\36\11\0\0\0\0\0\0"
    "anduril.entityhistory.v1.Trail"
    "entity_id"
  }},
};

::uint8_t* Trail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.Trail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    const std::string& _s = this->_internal_entity_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.Trail.entity_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .anduril.entityhistory.v1.TrailPoint trail_points = 2 [json_name = "trailPoints"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trail_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_trail_points().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.Trail)
  return target;
}

::size_t Trail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.Trail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .anduril.entityhistory.v1.TrailPoint trail_points = 2 [json_name = "trailPoints"];
  total_size += 1UL * this->_internal_trail_points_size();
  for (const auto& msg : this->_internal_trail_points()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string entity_id = 1 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_entity_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Trail::_class_data_ = {
    Trail::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Trail::GetClassData() const {
  return &_class_data_;
}

void Trail::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Trail*>(&to_msg);
  auto& from = static_cast<const Trail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.Trail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trail_points()->MergeFrom(
      from._internal_trail_points());
  if (!from._internal_entity_id().empty()) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Trail::CopyFrom(const Trail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.Trail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Trail::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Trail::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Trail::InternalSwap(Trail* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trail_points_.InternalSwap(&other->_impl_.trail_points_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
}

::google::protobuf::Metadata Trail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[7]);
}
// ===================================================================

class TrailPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<TrailPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& timestamp(const TrailPoint* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::anduril::entitymanager::v1::Location& location(const TrailPoint* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::anduril::entitymanager::v1::LocationUncertainty& location_uncertainty(const TrailPoint* msg);
  static void set_has_location_uncertainty(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::google::protobuf::Timestamp& TrailPoint::_Internal::timestamp(const TrailPoint* msg) {
  return *msg->_impl_.timestamp_;
}
const ::anduril::entitymanager::v1::Location& TrailPoint::_Internal::location(const TrailPoint* msg) {
  return *msg->_impl_.location_;
}
const ::anduril::entitymanager::v1::LocationUncertainty& TrailPoint::_Internal::location_uncertainty(const TrailPoint* msg) {
  return *msg->_impl_.location_uncertainty_;
}
void TrailPoint::clear_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TrailPoint::clear_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TrailPoint::clear_location_uncertainty() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_uncertainty_ != nullptr) _impl_.location_uncertainty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TrailPoint::TrailPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.TrailPoint)
}
inline PROTOBUF_NDEBUG_INLINE TrailPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TrailPoint::TrailPoint(
    ::google::protobuf::Arena* arena,
    const TrailPoint& from)
    : ::google::protobuf::Message(arena) {
  TrailPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.location_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::Location>(arena, *from._impl_.location_)
                : nullptr;
  _impl_.location_uncertainty_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::anduril::entitymanager::v1::LocationUncertainty>(arena, *from._impl_.location_uncertainty_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.TrailPoint)
}
inline PROTOBUF_NDEBUG_INLINE TrailPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrailPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, location_uncertainty_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::location_uncertainty_));
}
TrailPoint::~TrailPoint() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.TrailPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrailPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.timestamp_;
  delete _impl_.location_;
  delete _impl_.location_uncertainty_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrailPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.TrailPoint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.location_uncertainty_ != nullptr);
      _impl_.location_uncertainty_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrailPoint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> TrailPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TrailPoint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.timestamp_)}},
    // .anduril.entitymanager.v1.Location location = 2 [json_name = "location"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.location_)}},
    // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 3 [json_name = "locationUncertainty"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.location_uncertainty_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Location location = 2 [json_name = "location"];
    {PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.location_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 3 [json_name = "locationUncertainty"];
    {PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.location_uncertainty_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Location>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::LocationUncertainty>()},
  }}, {{
  }},
};

::uint8_t* TrailPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.TrailPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Location location = 2 [json_name = "location"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 3 [json_name = "locationUncertainty"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::location_uncertainty(this),
        _Internal::location_uncertainty(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.TrailPoint)
  return target;
}

::size_t TrailPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.TrailPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.timestamp_);
    }

    // .anduril.entitymanager.v1.Location location = 2 [json_name = "location"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_);
    }

    // .anduril.entitymanager.v1.LocationUncertainty location_uncertainty = 3 [json_name = "locationUncertainty"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_uncertainty_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrailPoint::_class_data_ = {
    TrailPoint::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrailPoint::GetClassData() const {
  return &_class_data_;
}

void TrailPoint::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrailPoint*>(&to_msg);
  auto& from = static_cast<const TrailPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.TrailPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_timestamp());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_location()->::anduril::entitymanager::v1::Location::MergeFrom(
          from._internal_location());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_location_uncertainty()->::anduril::entitymanager::v1::LocationUncertainty::MergeFrom(
          from._internal_location_uncertainty());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrailPoint::CopyFrom(const TrailPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.TrailPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrailPoint::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrailPoint::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrailPoint::InternalSwap(TrailPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.location_uncertainty_)
      + sizeof(TrailPoint::_impl_.location_uncertainty_)
      - PROTOBUF_FIELD_OFFSET(TrailPoint, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata TrailPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[8]);
}
// ===================================================================

class HistoryPageToken::_Internal {
 public:
};

HistoryPageToken::HistoryPageToken(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.HistoryPageToken)
}
inline PROTOBUF_NDEBUG_INLINE HistoryPageToken::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : query_id_(arena, from.query_id_),
        entity_id_(arena, from.entity_id_),
        start_time_(arena, from.start_time_),
        _cached_size_{0} {}

HistoryPageToken::HistoryPageToken(
    ::google::protobuf::Arena* arena,
    const HistoryPageToken& from)
    : ::google::protobuf::Message(arena) {
  HistoryPageToken* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, page_num_),
           offsetof(Impl_, is_complete_) -
               offsetof(Impl_, page_num_) +
               sizeof(Impl_::is_complete_));

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.HistoryPageToken)
}
inline PROTOBUF_NDEBUG_INLINE HistoryPageToken::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : query_id_(arena),
        entity_id_(arena),
        start_time_(arena),
        _cached_size_{0} {}

inline void HistoryPageToken::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_num_),
           0,
           offsetof(Impl_, is_complete_) -
               offsetof(Impl_, page_num_) +
               sizeof(Impl_::is_complete_));
}
HistoryPageToken::~HistoryPageToken() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.HistoryPageToken)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistoryPageToken::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.query_id_.Destroy();
  _impl_.entity_id_.Destroy();
  _impl_.start_time_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HistoryPageToken::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.HistoryPageToken)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.query_id_.ClearToEmpty();
  _impl_.entity_id_.ClearToEmpty();
  _impl_.start_time_.ClearToEmpty();
  ::memset(&_impl_.page_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_complete_) -
      reinterpret_cast<char*>(&_impl_.page_num_)) + sizeof(_impl_.is_complete_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HistoryPageToken::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 77, 2> HistoryPageToken::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HistoryPageToken_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string query_id = 1 [json_name = "queryId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.query_id_)}},
    // int32 page_num = 2 [json_name = "pageNum"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoryPageToken, _impl_.page_num_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.page_num_)}},
    // string entity_id = 3 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.entity_id_)}},
    // .anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoryPageToken, _impl_.storage_system_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.storage_system_)}},
    // string start_time = 5 [json_name = "startTime"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.start_time_)}},
    // bool is_complete = 6 [json_name = "isComplete"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HistoryPageToken, _impl_.is_complete_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.is_complete_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string query_id = 1 [json_name = "queryId"];
    {PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.query_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page_num = 2 [json_name = "pageNum"];
    {PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.page_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string entity_id = 3 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.entity_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];
    {PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.storage_system_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string start_time = 5 [json_name = "startTime"];
    {PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.start_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_complete = 6 [json_name = "isComplete"];
    {PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.is_complete_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\51\10\0\11\0\12\0\0"
    "anduril.entityhistory.v1.HistoryPageToken"
    "query_id"
    "entity_id"
    "start_time"
  }},
};

::uint8_t* HistoryPageToken::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.HistoryPageToken)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string query_id = 1 [json_name = "queryId"];
  if (!this->_internal_query_id().empty()) {
    const std::string& _s = this->_internal_query_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.HistoryPageToken.query_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 page_num = 2 [json_name = "pageNum"];
  if (this->_internal_page_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_page_num(), target);
  }

  // string entity_id = 3 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    const std::string& _s = this->_internal_entity_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.HistoryPageToken.entity_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];
  if (this->_internal_storage_system() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_storage_system(), target);
  }

  // string start_time = 5 [json_name = "startTime"];
  if (!this->_internal_start_time().empty()) {
    const std::string& _s = this->_internal_start_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.HistoryPageToken.start_time");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // bool is_complete = 6 [json_name = "isComplete"];
  if (this->_internal_is_complete() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_complete(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.HistoryPageToken)
  return target;
}

::size_t HistoryPageToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.HistoryPageToken)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string query_id = 1 [json_name = "queryId"];
  if (!this->_internal_query_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_query_id());
  }

  // string entity_id = 3 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_entity_id());
  }

  // string start_time = 5 [json_name = "startTime"];
  if (!this->_internal_start_time().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_start_time());
  }

  // int32 page_num = 2 [json_name = "pageNum"];
  if (this->_internal_page_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page_num());
  }

  // .anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];
  if (this->_internal_storage_system() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_system());
  }

  // bool is_complete = 6 [json_name = "isComplete"];
  if (this->_internal_is_complete() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HistoryPageToken::_class_data_ = {
    HistoryPageToken::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HistoryPageToken::GetClassData() const {
  return &_class_data_;
}

void HistoryPageToken::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HistoryPageToken*>(&to_msg);
  auto& from = static_cast<const HistoryPageToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.HistoryPageToken)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_query_id().empty()) {
    _this->_internal_set_query_id(from._internal_query_id());
  }
  if (!from._internal_entity_id().empty()) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  if (!from._internal_start_time().empty()) {
    _this->_internal_set_start_time(from._internal_start_time());
  }
  if (from._internal_page_num() != 0) {
    _this->_internal_set_page_num(from._internal_page_num());
  }
  if (from._internal_storage_system() != 0) {
    _this->_internal_set_storage_system(from._internal_storage_system());
  }
  if (from._internal_is_complete() != 0) {
    _this->_internal_set_is_complete(from._internal_is_complete());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryPageToken::CopyFrom(const HistoryPageToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.HistoryPageToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HistoryPageToken::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HistoryPageToken::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HistoryPageToken::InternalSwap(HistoryPageToken* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.query_id_, &other->_impl_.query_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_time_, &other->_impl_.start_time_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.is_complete_)
      + sizeof(HistoryPageToken::_impl_.is_complete_)
      - PROTOBUF_FIELD_OFFSET(HistoryPageToken, _impl_.page_num_)>(
          reinterpret_cast<char*>(&_impl_.page_num_),
          reinterpret_cast<char*>(&other->_impl_.page_num_));
}

::google::protobuf::Metadata HistoryPageToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_getter, &descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto_once,
      file_level_metadata_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entityhistory
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
