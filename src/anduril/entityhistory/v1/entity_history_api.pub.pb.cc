// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entityhistory/v1/entity_history_api.pub.proto
// Protobuf C++ Version: 5.27.3

#include "anduril/entityhistory/v1/entity_history_api.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace entityhistory {
namespace v1 {
      template <typename>
PROTOBUF_CONSTEXPR StreamBackfillUpdatesRequest::StreamBackfillUpdatesRequest(::_pbi::ConstantInitialized) {}
struct StreamBackfillUpdatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamBackfillUpdatesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamBackfillUpdatesRequestDefaultTypeInternal() {}
  union {
    StreamBackfillUpdatesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamBackfillUpdatesRequestDefaultTypeInternal _StreamBackfillUpdatesRequest_default_instance_;

inline constexpr DownsampleDuration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : duration_ms_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DownsampleDuration::DownsampleDuration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DownsampleDurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownsampleDurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownsampleDurationDefaultTypeInternal() {}
  union {
    DownsampleDuration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownsampleDurationDefaultTypeInternal _DownsampleDuration_default_instance_;

inline constexpr TimeRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lower_bound_inc_{nullptr},
        upper_bound_exc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TimeRange::TimeRange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeRangeDefaultTypeInternal() {}
  union {
    TimeRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeRangeDefaultTypeInternal _TimeRange_default_instance_;

inline constexpr Downsample::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Downsample::Downsample(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DownsampleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownsampleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownsampleDefaultTypeInternal() {}
  union {
    Downsample _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownsampleDefaultTypeInternal _Downsample_default_instance_;

inline constexpr BackfillUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_range_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BackfillUpdate::BackfillUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BackfillUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackfillUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackfillUpdateDefaultTypeInternal() {}
  union {
    BackfillUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackfillUpdateDefaultTypeInternal _BackfillUpdate_default_instance_;

inline constexpr StreamBackfillUpdatesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : backfill_updates_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamBackfillUpdatesResponse::StreamBackfillUpdatesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StreamBackfillUpdatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamBackfillUpdatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamBackfillUpdatesResponseDefaultTypeInternal() {}
  union {
    StreamBackfillUpdatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamBackfillUpdatesResponseDefaultTypeInternal _StreamBackfillUpdatesResponse_default_instance_;

inline constexpr HistoryQuery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_ids_{},
        time_range_{nullptr},
        downsample_{nullptr},
        statement_{nullptr},
        history_type_{static_cast< ::anduril::entityhistory::v1::HistoryType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryQuery::HistoryQuery(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistoryQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryQueryDefaultTypeInternal() {}
  union {
    HistoryQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryQueryDefaultTypeInternal _HistoryQuery_default_instance_;

inline constexpr ListHistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        history_query_{nullptr},
        history_page_token_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListHistoryRequest::ListHistoryRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListHistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListHistoryRequestDefaultTypeInternal() {}
  union {
    ListHistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListHistoryRequestDefaultTypeInternal _ListHistoryRequest_default_instance_;

inline constexpr ListHistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        history_page_{nullptr},
        next_history_page_token_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListHistoryResponse::ListHistoryResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListHistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListHistoryResponseDefaultTypeInternal() {}
  union {
    ListHistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListHistoryResponseDefaultTypeInternal _ListHistoryResponse_default_instance_;
}  // namespace v1
}  // namespace entityhistory
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryRequest, _impl_.history_query_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryRequest, _impl_.page_token_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryRequest, _impl_.history_page_token_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryResponse, _impl_.history_page_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryResponse, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::ListHistoryResponse, _impl_.next_history_page_token_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryQuery, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryQuery, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryQuery, _impl_.history_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryQuery, _impl_.time_range_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryQuery, _impl_.downsample_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryQuery, _impl_.statement_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::HistoryQuery, _impl_.entity_ids_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TimeRange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TimeRange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TimeRange, _impl_.lower_bound_inc_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::TimeRange, _impl_.upper_bound_exc_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Downsample, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Downsample, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Downsample, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::DownsampleDuration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::DownsampleDuration, _impl_.duration_ms_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::StreamBackfillUpdatesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::StreamBackfillUpdatesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::StreamBackfillUpdatesResponse, _impl_.backfill_updates_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::BackfillUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::BackfillUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::BackfillUpdate, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::BackfillUpdate, _impl_.time_range_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::anduril::entityhistory::v1::ListHistoryRequest)},
        {14, 25, -1, sizeof(::anduril::entityhistory::v1::ListHistoryResponse)},
        {28, 41, -1, sizeof(::anduril::entityhistory::v1::HistoryQuery)},
        {46, 56, -1, sizeof(::anduril::entityhistory::v1::TimeRange)},
        {58, -1, -1, sizeof(::anduril::entityhistory::v1::Downsample)},
        {68, -1, -1, sizeof(::anduril::entityhistory::v1::DownsampleDuration)},
        {77, -1, -1, sizeof(::anduril::entityhistory::v1::StreamBackfillUpdatesRequest)},
        {85, -1, -1, sizeof(::anduril::entityhistory::v1::StreamBackfillUpdatesResponse)},
        {94, 104, -1, sizeof(::anduril::entityhistory::v1::BackfillUpdate)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::entityhistory::v1::_ListHistoryRequest_default_instance_._instance,
    &::anduril::entityhistory::v1::_ListHistoryResponse_default_instance_._instance,
    &::anduril::entityhistory::v1::_HistoryQuery_default_instance_._instance,
    &::anduril::entityhistory::v1::_TimeRange_default_instance_._instance,
    &::anduril::entityhistory::v1::_Downsample_default_instance_._instance,
    &::anduril::entityhistory::v1::_DownsampleDuration_default_instance_._instance,
    &::anduril::entityhistory::v1::_StreamBackfillUpdatesRequest_default_instance_._instance,
    &::anduril::entityhistory::v1::_StreamBackfillUpdatesResponse_default_instance_._instance,
    &::anduril::entityhistory::v1::_BackfillUpdate_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n5anduril/entityhistory/v1/entity_histor"
    "y_api.pub.proto\022\030anduril.entityhistory.v"
    "1\032*anduril/entityhistory/v1/history.pub."
    "proto\032)anduril/entitymanager/v1/filter.p"
    "ub.proto\032\037google/protobuf/timestamp.prot"
    "o\"\332\001\n\022ListHistoryRequest\022K\n\rhistory_quer"
    "y\030\001 \001(\0132&.anduril.entityhistory.v1.Histo"
    "ryQueryR\014historyQuery\022\035\n\npage_token\030\002 \001("
    "\tR\tpageToken\022X\n\022history_page_token\030\003 \001(\013"
    "2*.anduril.entityhistory.v1.HistoryPageT"
    "okenR\020historyPageToken\"\352\001\n\023ListHistoryRe"
    "sponse\022H\n\014history_page\030\001 \001(\0132%.anduril.e"
    "ntityhistory.v1.HistoryPageR\013historyPage"
    "\022&\n\017next_page_token\030\002 \001(\tR\rnextPageToken"
    "\022a\n\027next_history_page_token\030\003 \001(\0132*.andu"
    "ril.entityhistory.v1.HistoryPageTokenR\024n"
    "extHistoryPageToken\"\304\002\n\014HistoryQuery\022H\n\014"
    "history_type\030\001 \001(\0162%.anduril.entityhisto"
    "ry.v1.HistoryTypeR\013historyType\022B\n\ntime_r"
    "ange\030\002 \001(\0132#.anduril.entityhistory.v1.Ti"
    "meRangeR\ttimeRange\022D\n\ndownsample\030\003 \001(\0132$"
    ".anduril.entityhistory.v1.DownsampleR\ndo"
    "wnsample\022A\n\tstatement\030\004 \001(\0132#.anduril.en"
    "titymanager.v1.StatementR\tstatement\022\035\n\ne"
    "ntity_ids\030\005 \003(\tR\tentityIds\"\223\001\n\tTimeRange"
    "\022B\n\017lower_bound_inc\030\001 \001(\0132\032.google.proto"
    "buf.TimestampR\rlowerBoundInc\022B\n\017upper_bo"
    "und_exc\030\002 \001(\0132\032.google.protobuf.Timestam"
    "pR\rupperBoundExc\"u\n\nDownsample\022_\n\023downsa"
    "mple_duration\030\001 \001(\0132,.anduril.entityhist"
    "ory.v1.DownsampleDurationH\000R\022downsampleD"
    "urationB\006\n\004type\"5\n\022DownsampleDuration\022\037\n"
    "\013duration_ms\030\001 \001(\rR\ndurationMs\"\036\n\034Stream"
    "BackfillUpdatesRequest\"t\n\035StreamBackfill"
    "UpdatesResponse\022S\n\020backfill_updates\030\001 \003("
    "\0132(.anduril.entityhistory.v1.BackfillUpd"
    "ateR\017backfillUpdates\"q\n\016BackfillUpdate\022\033"
    "\n\tentity_id\030\001 \001(\tR\010entityId\022B\n\ntime_rang"
    "e\030\002 \001(\0132#.anduril.entityhistory.v1.TimeR"
    "angeR\ttimeRange2~\n\020EntityHistoryAPI\022j\n\013L"
    "istHistory\022,.anduril.entityhistory.v1.Li"
    "stHistoryRequest\032-.anduril.entityhistory"
    ".v1.ListHistoryResponseB\373\001\n\034com.anduril."
    "entityhistory.v1B\030EntityHistoryApiPubPro"
    "toP\001Z\?ghe.anduril.dev/anduril/andurilapi"
    "s-go/anduril/entityhistory/v1\242\002\003AEX\252\002\030An"
    "duril.Entityhistory.V1\312\002\030Anduril\\Entityh"
    "istory\\V1\342\002$Anduril\\Entityhistory\\V1\\GPB"
    "Metadata\352\002\032Anduril::Entityhistory::V1b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto_deps[3] =
    {
        &::descriptor_table_anduril_2fentityhistory_2fv1_2fhistory_2epub_2eproto,
        &::descriptor_table_anduril_2fentitymanager_2fv1_2ffilter_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto = {
    false,
    false,
    1965,
    descriptor_table_protodef_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
    "anduril/entityhistory/v1/entity_history_api.pub.proto",
    &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto_once,
    descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto_deps,
    3,
    9,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
    file_level_service_descriptors_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
};
namespace anduril {
namespace entityhistory {
namespace v1 {
// ===================================================================

class ListHistoryRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ListHistoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_._has_bits_);
};

void ListHistoryRequest::clear_history_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.history_page_token_ != nullptr) _impl_.history_page_token_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ListHistoryRequest::ListHistoryRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.ListHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entityhistory::v1::ListHistoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_) {}

ListHistoryRequest::ListHistoryRequest(
    ::google::protobuf::Arena* arena,
    const ListHistoryRequest& from)
    : ::google::protobuf::Message(arena) {
  ListHistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.history_query_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryQuery>(
                              arena, *from._impl_.history_query_)
                        : nullptr;
  _impl_.history_page_token_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryPageToken>(
                              arena, *from._impl_.history_page_token_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.ListHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        page_token_(arena) {}

inline void ListHistoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, history_query_),
           0,
           offsetof(Impl_, history_page_token_) -
               offsetof(Impl_, history_query_) +
               sizeof(Impl_::history_page_token_));
}
ListHistoryRequest::~ListHistoryRequest() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.ListHistoryRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListHistoryRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.page_token_.Destroy();
  delete _impl_.history_query_;
  delete _impl_.history_page_token_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ListHistoryRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_._cached_size_),
              false,
          },
          &ListHistoryRequest::MergeImpl,
          &ListHistoryRequest::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 62, 2> ListHistoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListHistoryRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::ListHistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entityhistory.v1.HistoryQuery history_query = 1 [json_name = "historyQuery"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.history_query_)}},
    // string page_token = 2 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.page_token_)}},
    // .anduril.entityhistory.v1.HistoryPageToken history_page_token = 3 [json_name = "historyPageToken"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.history_page_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entityhistory.v1.HistoryQuery history_query = 1 [json_name = "historyQuery"];
    {PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.history_query_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string page_token = 2 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.page_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entityhistory.v1.HistoryPageToken history_page_token = 3 [json_name = "historyPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.history_page_token_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::HistoryQuery>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::HistoryPageToken>()},
  }}, {{
    "\53\0\12\0\0\0\0\0"
    "anduril.entityhistory.v1.ListHistoryRequest"
    "page_token"
  }},
};

PROTOBUF_NOINLINE void ListHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.ListHistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.page_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.history_query_ != nullptr);
      _impl_.history_query_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.history_page_token_ != nullptr);
      _impl_.history_page_token_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ListHistoryRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.ListHistoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entityhistory.v1.HistoryQuery history_query = 1 [json_name = "historyQuery"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.history_query_, _impl_.history_query_->GetCachedSize(), target, stream);
  }

  // string page_token = 2 [json_name = "pageToken"];
  if (!this->_internal_page_token().empty()) {
    const std::string& _s = this->_internal_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.ListHistoryRequest.page_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .anduril.entityhistory.v1.HistoryPageToken history_page_token = 3 [json_name = "historyPageToken"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.history_page_token_, _impl_.history_page_token_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.ListHistoryRequest)
  return target;
}

::size_t ListHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.ListHistoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string page_token = 2 [json_name = "pageToken"];
  if (!this->_internal_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page_token());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.entityhistory.v1.HistoryQuery history_query = 1 [json_name = "historyQuery"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.history_query_);
    }

    // .anduril.entityhistory.v1.HistoryPageToken history_page_token = 3 [json_name = "historyPageToken"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.history_page_token_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ListHistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListHistoryRequest*>(&to_msg);
  auto& from = static_cast<const ListHistoryRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.ListHistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.history_query_ != nullptr);
      if (_this->_impl_.history_query_ == nullptr) {
        _this->_impl_.history_query_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryQuery>(arena, *from._impl_.history_query_);
      } else {
        _this->_impl_.history_query_->MergeFrom(*from._impl_.history_query_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.history_page_token_ != nullptr);
      if (_this->_impl_.history_page_token_ == nullptr) {
        _this->_impl_.history_page_token_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryPageToken>(arena, *from._impl_.history_page_token_);
      } else {
        _this->_impl_.history_page_token_->MergeFrom(*from._impl_.history_page_token_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListHistoryRequest::CopyFrom(const ListHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.ListHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListHistoryRequest::InternalSwap(ListHistoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.history_page_token_)
      + sizeof(ListHistoryRequest::_impl_.history_page_token_)
      - PROTOBUF_FIELD_OFFSET(ListHistoryRequest, _impl_.history_query_)>(
          reinterpret_cast<char*>(&_impl_.history_query_),
          reinterpret_cast<char*>(&other->_impl_.history_query_));
}

::google::protobuf::Metadata ListHistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListHistoryResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ListHistoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_._has_bits_);
};

void ListHistoryResponse::clear_history_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.history_page_ != nullptr) _impl_.history_page_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ListHistoryResponse::clear_next_history_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.next_history_page_token_ != nullptr) _impl_.next_history_page_token_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ListHistoryResponse::ListHistoryResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.ListHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entityhistory::v1::ListHistoryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        next_page_token_(arena, from.next_page_token_) {}

ListHistoryResponse::ListHistoryResponse(
    ::google::protobuf::Arena* arena,
    const ListHistoryResponse& from)
    : ::google::protobuf::Message(arena) {
  ListHistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.history_page_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryPage>(
                              arena, *from._impl_.history_page_)
                        : nullptr;
  _impl_.next_history_page_token_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryPageToken>(
                              arena, *from._impl_.next_history_page_token_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.ListHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        next_page_token_(arena) {}

inline void ListHistoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, history_page_),
           0,
           offsetof(Impl_, next_history_page_token_) -
               offsetof(Impl_, history_page_) +
               sizeof(Impl_::next_history_page_token_));
}
ListHistoryResponse::~ListHistoryResponse() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.ListHistoryResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListHistoryResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_page_token_.Destroy();
  delete _impl_.history_page_;
  delete _impl_.next_history_page_token_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ListHistoryResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_._cached_size_),
              false,
          },
          &ListHistoryResponse::MergeImpl,
          &ListHistoryResponse::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 68, 2> ListHistoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListHistoryResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::ListHistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entityhistory.v1.HistoryPage history_page = 1 [json_name = "historyPage"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.history_page_)}},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.next_page_token_)}},
    // .anduril.entityhistory.v1.HistoryPageToken next_history_page_token = 3 [json_name = "nextHistoryPageToken"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.next_history_page_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entityhistory.v1.HistoryPage history_page = 1 [json_name = "historyPage"];
    {PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.history_page_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.next_page_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entityhistory.v1.HistoryPageToken next_history_page_token = 3 [json_name = "nextHistoryPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.next_history_page_token_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::HistoryPage>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::HistoryPageToken>()},
  }}, {{
    "\54\0\17\0\0\0\0\0"
    "anduril.entityhistory.v1.ListHistoryResponse"
    "next_page_token"
  }},
};

PROTOBUF_NOINLINE void ListHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.ListHistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.next_page_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.history_page_ != nullptr);
      _impl_.history_page_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.next_history_page_token_ != nullptr);
      _impl_.next_history_page_token_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ListHistoryResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.ListHistoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entityhistory.v1.HistoryPage history_page = 1 [json_name = "historyPage"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.history_page_, _impl_.history_page_->GetCachedSize(), target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    const std::string& _s = this->_internal_next_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.ListHistoryResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .anduril.entityhistory.v1.HistoryPageToken next_history_page_token = 3 [json_name = "nextHistoryPageToken"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.next_history_page_token_, _impl_.next_history_page_token_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.ListHistoryResponse)
  return target;
}

::size_t ListHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.ListHistoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_page_token());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .anduril.entityhistory.v1.HistoryPage history_page = 1 [json_name = "historyPage"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.history_page_);
    }

    // .anduril.entityhistory.v1.HistoryPageToken next_history_page_token = 3 [json_name = "nextHistoryPageToken"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.next_history_page_token_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ListHistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListHistoryResponse*>(&to_msg);
  auto& from = static_cast<const ListHistoryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.ListHistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.history_page_ != nullptr);
      if (_this->_impl_.history_page_ == nullptr) {
        _this->_impl_.history_page_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryPage>(arena, *from._impl_.history_page_);
      } else {
        _this->_impl_.history_page_->MergeFrom(*from._impl_.history_page_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.next_history_page_token_ != nullptr);
      if (_this->_impl_.next_history_page_token_ == nullptr) {
        _this->_impl_.next_history_page_token_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::HistoryPageToken>(arena, *from._impl_.next_history_page_token_);
      } else {
        _this->_impl_.next_history_page_token_->MergeFrom(*from._impl_.next_history_page_token_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListHistoryResponse::CopyFrom(const ListHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.ListHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListHistoryResponse::InternalSwap(ListHistoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.next_history_page_token_)
      + sizeof(ListHistoryResponse::_impl_.next_history_page_token_)
      - PROTOBUF_FIELD_OFFSET(ListHistoryResponse, _impl_.history_page_)>(
          reinterpret_cast<char*>(&_impl_.history_page_),
          reinterpret_cast<char*>(&other->_impl_.history_page_));
}

::google::protobuf::Metadata ListHistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryQuery::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HistoryQuery>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_._has_bits_);
};

void HistoryQuery::clear_statement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statement_ != nullptr) _impl_.statement_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
HistoryQuery::HistoryQuery(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.HistoryQuery)
}
inline PROTOBUF_NDEBUG_INLINE HistoryQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entityhistory::v1::HistoryQuery& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_ids_{visibility, arena, from.entity_ids_} {}

HistoryQuery::HistoryQuery(
    ::google::protobuf::Arena* arena,
    const HistoryQuery& from)
    : ::google::protobuf::Message(arena) {
  HistoryQuery* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_range_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::TimeRange>(
                              arena, *from._impl_.time_range_)
                        : nullptr;
  _impl_.downsample_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::Downsample>(
                              arena, *from._impl_.downsample_)
                        : nullptr;
  _impl_.statement_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Statement>(
                              arena, *from._impl_.statement_)
                        : nullptr;
  _impl_.history_type_ = from._impl_.history_type_;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.HistoryQuery)
}
inline PROTOBUF_NDEBUG_INLINE HistoryQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_ids_{visibility, arena} {}

inline void HistoryQuery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_range_),
           0,
           offsetof(Impl_, history_type_) -
               offsetof(Impl_, time_range_) +
               sizeof(Impl_::history_type_));
}
HistoryQuery::~HistoryQuery() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.HistoryQuery)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistoryQuery::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.time_range_;
  delete _impl_.downsample_;
  delete _impl_.statement_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HistoryQuery::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_._cached_size_),
              false,
          },
          &HistoryQuery::MergeImpl,
          &HistoryQuery::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 56, 2> HistoryQuery::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HistoryQuery_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::HistoryQuery>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoryQuery, _impl_.history_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.history_type_)}},
    // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.time_range_)}},
    // .anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.downsample_)}},
    // .anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.statement_)}},
    // repeated string entity_ids = 5 [json_name = "entityIds"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.entity_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];
    {PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.history_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
    {PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.time_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];
    {PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.downsample_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];
    {PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.statement_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string entity_ids = 5 [json_name = "entityIds"];
    {PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.entity_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::TimeRange>()},
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::Downsample>()},
    {::_pbi::TcParser::GetTable<::anduril::entitymanager::v1::Statement>()},
  }}, {{
    "\45\0\0\0\0\12\0\0"
    "anduril.entityhistory.v1.HistoryQuery"
    "entity_ids"
  }},
};

PROTOBUF_NOINLINE void HistoryQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.HistoryQuery)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_range_ != nullptr);
      _impl_.time_range_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.downsample_ != nullptr);
      _impl_.downsample_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.statement_ != nullptr);
      _impl_.statement_->Clear();
    }
  }
  _impl_.history_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HistoryQuery::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.HistoryQuery)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];
  if (this->_internal_history_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_history_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.time_range_, _impl_.time_range_->GetCachedSize(), target, stream);
  }

  // .anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.downsample_, _impl_.downsample_->GetCachedSize(), target, stream);
  }

  // .anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.statement_, _impl_.statement_->GetCachedSize(), target, stream);
  }

  // repeated string entity_ids = 5 [json_name = "entityIds"];
  for (int i = 0, n = this->_internal_entity_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_entity_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.HistoryQuery.entity_ids");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.HistoryQuery)
  return target;
}

::size_t HistoryQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.HistoryQuery)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string entity_ids = 5 [json_name = "entityIds"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_entity_ids().size());
  for (int i = 0, n = _internal_entity_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_entity_ids().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.time_range_);
    }

    // .anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.downsample_);
    }

    // .anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.statement_);
    }

  }
  // .anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];
  if (this->_internal_history_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_history_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HistoryQuery::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryQuery*>(&to_msg);
  auto& from = static_cast<const HistoryQuery&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.HistoryQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity_ids()->MergeFrom(from._internal_entity_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.time_range_ != nullptr);
      if (_this->_impl_.time_range_ == nullptr) {
        _this->_impl_.time_range_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::TimeRange>(arena, *from._impl_.time_range_);
      } else {
        _this->_impl_.time_range_->MergeFrom(*from._impl_.time_range_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.downsample_ != nullptr);
      if (_this->_impl_.downsample_ == nullptr) {
        _this->_impl_.downsample_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::Downsample>(arena, *from._impl_.downsample_);
      } else {
        _this->_impl_.downsample_->MergeFrom(*from._impl_.downsample_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.statement_ != nullptr);
      if (_this->_impl_.statement_ == nullptr) {
        _this->_impl_.statement_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::entitymanager::v1::Statement>(arena, *from._impl_.statement_);
      } else {
        _this->_impl_.statement_->MergeFrom(*from._impl_.statement_);
      }
    }
  }
  if (from._internal_history_type() != 0) {
    _this->_impl_.history_type_ = from._impl_.history_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryQuery::CopyFrom(const HistoryQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.HistoryQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryQuery::InternalSwap(HistoryQuery* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entity_ids_.InternalSwap(&other->_impl_.entity_ids_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.history_type_)
      + sizeof(HistoryQuery::_impl_.history_type_)
      - PROTOBUF_FIELD_OFFSET(HistoryQuery, _impl_.time_range_)>(
          reinterpret_cast<char*>(&_impl_.time_range_),
          reinterpret_cast<char*>(&other->_impl_.time_range_));
}

::google::protobuf::Metadata HistoryQuery::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimeRange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TimeRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._has_bits_);
};

void TimeRange::clear_lower_bound_inc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_bound_inc_ != nullptr) _impl_.lower_bound_inc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TimeRange::clear_upper_bound_exc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_bound_exc_ != nullptr) _impl_.upper_bound_exc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TimeRange::TimeRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.TimeRange)
}
inline PROTOBUF_NDEBUG_INLINE TimeRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entityhistory::v1::TimeRange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TimeRange::TimeRange(
    ::google::protobuf::Arena* arena,
    const TimeRange& from)
    : ::google::protobuf::Message(arena) {
  TimeRange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lower_bound_inc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.lower_bound_inc_)
                        : nullptr;
  _impl_.upper_bound_exc_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.upper_bound_exc_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.TimeRange)
}
inline PROTOBUF_NDEBUG_INLINE TimeRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TimeRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lower_bound_inc_),
           0,
           offsetof(Impl_, upper_bound_exc_) -
               offsetof(Impl_, lower_bound_inc_) +
               sizeof(Impl_::upper_bound_exc_));
}
TimeRange::~TimeRange() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.TimeRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimeRange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.lower_bound_inc_;
  delete _impl_.upper_bound_exc_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TimeRange::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._cached_size_),
              false,
          },
          &TimeRange::MergeImpl,
          &TimeRange::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> TimeRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TimeRange_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::TimeRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp upper_bound_exc = 2 [json_name = "upperBoundExc"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.upper_bound_exc_)}},
    // .google.protobuf.Timestamp lower_bound_inc = 1 [json_name = "lowerBoundInc"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.lower_bound_inc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp lower_bound_inc = 1 [json_name = "lowerBoundInc"];
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.lower_bound_inc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp upper_bound_exc = 2 [json_name = "upperBoundExc"];
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.upper_bound_exc_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.TimeRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.lower_bound_inc_ != nullptr);
      _impl_.lower_bound_inc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.upper_bound_exc_ != nullptr);
      _impl_.upper_bound_exc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TimeRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.TimeRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp lower_bound_inc = 1 [json_name = "lowerBoundInc"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.lower_bound_inc_, _impl_.lower_bound_inc_->GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp upper_bound_exc = 2 [json_name = "upperBoundExc"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.upper_bound_exc_, _impl_.upper_bound_exc_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.TimeRange)
  return target;
}

::size_t TimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.TimeRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp lower_bound_inc = 1 [json_name = "lowerBoundInc"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lower_bound_inc_);
    }

    // .google.protobuf.Timestamp upper_bound_exc = 2 [json_name = "upperBoundExc"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upper_bound_exc_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TimeRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimeRange*>(&to_msg);
  auto& from = static_cast<const TimeRange&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.TimeRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.lower_bound_inc_ != nullptr);
      if (_this->_impl_.lower_bound_inc_ == nullptr) {
        _this->_impl_.lower_bound_inc_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.lower_bound_inc_);
      } else {
        _this->_impl_.lower_bound_inc_->MergeFrom(*from._impl_.lower_bound_inc_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.upper_bound_exc_ != nullptr);
      if (_this->_impl_.upper_bound_exc_ == nullptr) {
        _this->_impl_.upper_bound_exc_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.upper_bound_exc_);
      } else {
        _this->_impl_.upper_bound_exc_->MergeFrom(*from._impl_.upper_bound_exc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeRange::CopyFrom(const TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimeRange::InternalSwap(TimeRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.upper_bound_exc_)
      + sizeof(TimeRange::_impl_.upper_bound_exc_)
      - PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.lower_bound_inc_)>(
          reinterpret_cast<char*>(&_impl_.lower_bound_inc_),
          reinterpret_cast<char*>(&other->_impl_.lower_bound_inc_));
}

::google::protobuf::Metadata TimeRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Downsample::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::anduril::entityhistory::v1::Downsample, _impl_._oneof_case_);
};

void Downsample::set_allocated_downsample_duration(::anduril::entityhistory::v1::DownsampleDuration* downsample_duration) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (downsample_duration) {
    ::google::protobuf::Arena* submessage_arena = downsample_duration->GetArena();
    if (message_arena != submessage_arena) {
      downsample_duration = ::google::protobuf::internal::GetOwnedMessage(message_arena, downsample_duration, submessage_arena);
    }
    set_has_downsample_duration();
    _impl_.type_.downsample_duration_ = downsample_duration;
  }
  // @@protoc_insertion_point(field_set_allocated:anduril.entityhistory.v1.Downsample.downsample_duration)
}
Downsample::Downsample(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.Downsample)
}
inline PROTOBUF_NDEBUG_INLINE Downsample::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entityhistory::v1::Downsample& from_msg)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Downsample::Downsample(
    ::google::protobuf::Arena* arena,
    const Downsample& from)
    : ::google::protobuf::Message(arena) {
  Downsample* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kDownsampleDuration:
        _impl_.type_.downsample_duration_ = ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::DownsampleDuration>(arena, *from._impl_.type_.downsample_duration_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.Downsample)
}
inline PROTOBUF_NDEBUG_INLINE Downsample::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Downsample::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Downsample::~Downsample() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.Downsample)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Downsample::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
  _impl_.~Impl_();
}

void Downsample::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:anduril.entityhistory.v1.Downsample)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kDownsampleDuration: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.downsample_duration_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.downsample_duration_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Downsample::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Downsample, _impl_._cached_size_),
              false,
          },
          &Downsample::MergeImpl,
          &Downsample::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Downsample::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Downsample_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::Downsample>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.entityhistory.v1.DownsampleDuration downsample_duration = 1 [json_name = "downsampleDuration"];
    {PROTOBUF_FIELD_OFFSET(Downsample, _impl_.type_.downsample_duration_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::DownsampleDuration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Downsample::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.Downsample)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Downsample::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.Downsample)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .anduril.entityhistory.v1.DownsampleDuration downsample_duration = 1 [json_name = "downsampleDuration"];
  if (type_case() == kDownsampleDuration) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.type_.downsample_duration_, _impl_.type_.downsample_duration_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.Downsample)
  return target;
}

::size_t Downsample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.Downsample)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .anduril.entityhistory.v1.DownsampleDuration downsample_duration = 1 [json_name = "downsampleDuration"];
    case kDownsampleDuration: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_.downsample_duration_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Downsample::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Downsample*>(&to_msg);
  auto& from = static_cast<const Downsample&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.Downsample)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDownsampleDuration: {
        if (oneof_needs_init) {
          _this->_impl_.type_.downsample_duration_ =
              ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::DownsampleDuration>(arena, *from._impl_.type_.downsample_duration_);
        } else {
          _this->_impl_.type_.downsample_duration_->MergeFrom(from._internal_downsample_duration());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Downsample::CopyFrom(const Downsample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.Downsample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Downsample::InternalSwap(Downsample* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Downsample::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DownsampleDuration::_Internal {
 public:
};

DownsampleDuration::DownsampleDuration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.DownsampleDuration)
}
DownsampleDuration::DownsampleDuration(
    ::google::protobuf::Arena* arena, const DownsampleDuration& from)
    : DownsampleDuration(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DownsampleDuration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DownsampleDuration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.duration_ms_ = {};
}
DownsampleDuration::~DownsampleDuration() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.DownsampleDuration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownsampleDuration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DownsampleDuration::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DownsampleDuration, _impl_._cached_size_),
              false,
          },
          &DownsampleDuration::MergeImpl,
          &DownsampleDuration::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DownsampleDuration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DownsampleDuration_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::DownsampleDuration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 duration_ms = 1 [json_name = "durationMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DownsampleDuration, _impl_.duration_ms_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DownsampleDuration, _impl_.duration_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 duration_ms = 1 [json_name = "durationMs"];
    {PROTOBUF_FIELD_OFFSET(DownsampleDuration, _impl_.duration_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DownsampleDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.DownsampleDuration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.duration_ms_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DownsampleDuration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.DownsampleDuration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 duration_ms = 1 [json_name = "durationMs"];
  if (this->_internal_duration_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_duration_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.DownsampleDuration)
  return target;
}

::size_t DownsampleDuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.DownsampleDuration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 duration_ms = 1 [json_name = "durationMs"];
  if (this->_internal_duration_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_duration_ms());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DownsampleDuration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DownsampleDuration*>(&to_msg);
  auto& from = static_cast<const DownsampleDuration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.DownsampleDuration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_duration_ms() != 0) {
    _this->_impl_.duration_ms_ = from._impl_.duration_ms_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownsampleDuration::CopyFrom(const DownsampleDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.DownsampleDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DownsampleDuration::InternalSwap(DownsampleDuration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.duration_ms_, other->_impl_.duration_ms_);
}

::google::protobuf::Metadata DownsampleDuration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamBackfillUpdatesRequest::_Internal {
 public:
};

StreamBackfillUpdatesRequest::StreamBackfillUpdatesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.StreamBackfillUpdatesRequest)
}
StreamBackfillUpdatesRequest::StreamBackfillUpdatesRequest(
    ::google::protobuf::Arena* arena,
    const StreamBackfillUpdatesRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StreamBackfillUpdatesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.StreamBackfillUpdatesRequest)
}

const ::google::protobuf::MessageLite::ClassData*
StreamBackfillUpdatesRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StreamBackfillUpdatesRequest, _impl_._cached_size_),
              false,
          },
          &StreamBackfillUpdatesRequest::MergeImpl,
          &StreamBackfillUpdatesRequest::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> StreamBackfillUpdatesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StreamBackfillUpdatesRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::StreamBackfillUpdatesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata StreamBackfillUpdatesRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamBackfillUpdatesResponse::_Internal {
 public:
};

StreamBackfillUpdatesResponse::StreamBackfillUpdatesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamBackfillUpdatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entityhistory::v1::StreamBackfillUpdatesResponse& from_msg)
      : backfill_updates_{visibility, arena, from.backfill_updates_},
        _cached_size_{0} {}

StreamBackfillUpdatesResponse::StreamBackfillUpdatesResponse(
    ::google::protobuf::Arena* arena,
    const StreamBackfillUpdatesResponse& from)
    : ::google::protobuf::Message(arena) {
  StreamBackfillUpdatesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamBackfillUpdatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : backfill_updates_{visibility, arena},
        _cached_size_{0} {}

inline void StreamBackfillUpdatesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StreamBackfillUpdatesResponse::~StreamBackfillUpdatesResponse() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamBackfillUpdatesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StreamBackfillUpdatesResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StreamBackfillUpdatesResponse, _impl_._cached_size_),
              false,
          },
          &StreamBackfillUpdatesResponse::MergeImpl,
          &StreamBackfillUpdatesResponse::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StreamBackfillUpdatesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StreamBackfillUpdatesResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::StreamBackfillUpdatesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.entityhistory.v1.BackfillUpdate backfill_updates = 1 [json_name = "backfillUpdates"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StreamBackfillUpdatesResponse, _impl_.backfill_updates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.entityhistory.v1.BackfillUpdate backfill_updates = 1 [json_name = "backfillUpdates"];
    {PROTOBUF_FIELD_OFFSET(StreamBackfillUpdatesResponse, _impl_.backfill_updates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::BackfillUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StreamBackfillUpdatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.backfill_updates_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StreamBackfillUpdatesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .anduril.entityhistory.v1.BackfillUpdate backfill_updates = 1 [json_name = "backfillUpdates"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_backfill_updates_size());
       i < n; i++) {
    const auto& repfield = this->_internal_backfill_updates().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
  return target;
}

::size_t StreamBackfillUpdatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .anduril.entityhistory.v1.BackfillUpdate backfill_updates = 1 [json_name = "backfillUpdates"];
  total_size += 1UL * this->_internal_backfill_updates_size();
  for (const auto& msg : this->_internal_backfill_updates()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StreamBackfillUpdatesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamBackfillUpdatesResponse*>(&to_msg);
  auto& from = static_cast<const StreamBackfillUpdatesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_backfill_updates()->MergeFrom(
      from._internal_backfill_updates());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamBackfillUpdatesResponse::CopyFrom(const StreamBackfillUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.StreamBackfillUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamBackfillUpdatesResponse::InternalSwap(StreamBackfillUpdatesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.backfill_updates_.InternalSwap(&other->_impl_.backfill_updates_);
}

::google::protobuf::Metadata StreamBackfillUpdatesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BackfillUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BackfillUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BackfillUpdate, _impl_._has_bits_);
};

BackfillUpdate::BackfillUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.entityhistory.v1.BackfillUpdate)
}
inline PROTOBUF_NDEBUG_INLINE BackfillUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::entityhistory::v1::BackfillUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_id_(arena, from.entity_id_) {}

BackfillUpdate::BackfillUpdate(
    ::google::protobuf::Arena* arena,
    const BackfillUpdate& from)
    : ::google::protobuf::Message(arena) {
  BackfillUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_range_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::TimeRange>(
                              arena, *from._impl_.time_range_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.entityhistory.v1.BackfillUpdate)
}
inline PROTOBUF_NDEBUG_INLINE BackfillUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_id_(arena) {}

inline void BackfillUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_range_ = {};
}
BackfillUpdate::~BackfillUpdate() {
  // @@protoc_insertion_point(destructor:anduril.entityhistory.v1.BackfillUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BackfillUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.entity_id_.Destroy();
  delete _impl_.time_range_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BackfillUpdate::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(BackfillUpdate, _impl_._cached_size_),
              false,
          },
          &BackfillUpdate::MergeImpl,
          &BackfillUpdate::kDescriptorMethods,
          &descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> BackfillUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BackfillUpdate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BackfillUpdate_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::BackfillUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BackfillUpdate, _impl_.time_range_)}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BackfillUpdate, _impl_.entity_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(BackfillUpdate, _impl_.entity_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
    {PROTOBUF_FIELD_OFFSET(BackfillUpdate, _impl_.time_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::entityhistory::v1::TimeRange>()},
  }}, {{
    "\47\11\0\0\0\0\0\0"
    "anduril.entityhistory.v1.BackfillUpdate"
    "entity_id"
  }},
};

PROTOBUF_NOINLINE void BackfillUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.entityhistory.v1.BackfillUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_range_ != nullptr);
    _impl_.time_range_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* BackfillUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.entityhistory.v1.BackfillUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    const std::string& _s = this->_internal_entity_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.entityhistory.v1.BackfillUpdate.entity_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.time_range_, _impl_.time_range_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.entityhistory.v1.BackfillUpdate)
  return target;
}

::size_t BackfillUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.entityhistory.v1.BackfillUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string entity_id = 1 [json_name = "entityId"];
  if (!this->_internal_entity_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_entity_id());
  }

  // .anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.time_range_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BackfillUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BackfillUpdate*>(&to_msg);
  auto& from = static_cast<const BackfillUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.entityhistory.v1.BackfillUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_entity_id().empty()) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.time_range_ != nullptr);
    if (_this->_impl_.time_range_ == nullptr) {
      _this->_impl_.time_range_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::entityhistory::v1::TimeRange>(arena, *from._impl_.time_range_);
    } else {
      _this->_impl_.time_range_->MergeFrom(*from._impl_.time_range_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BackfillUpdate::CopyFrom(const BackfillUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.entityhistory.v1.BackfillUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BackfillUpdate::InternalSwap(BackfillUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  swap(_impl_.time_range_, other->_impl_.time_range_);
}

::google::protobuf::Metadata BackfillUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace entityhistory
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fentityhistory_2fv1_2fentity_5fhistory_5fapi_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
