// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/blobs/v1/common.pub.proto
// Protobuf C++ Version: 5.27.3

#include "anduril/blobs/v1/common.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace blobs {
namespace v1 {

inline constexpr BlobProvenance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : integration_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlobProvenance::BlobProvenance(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobProvenanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobProvenanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobProvenanceDefaultTypeInternal() {}
  union {
    BlobProvenance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobProvenanceDefaultTypeInternal _BlobProvenance_default_instance_;

inline constexpr BlobMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        md5_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_time_{nullptr},
        retention_time_{nullptr},
        provenance_{nullptr},
        size_bytes_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR BlobMetadata::BlobMetadata(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobMetadataDefaultTypeInternal() {}
  union {
    BlobMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobMetadataDefaultTypeInternal _BlobMetadata_default_instance_;
}  // namespace v1
}  // namespace blobs
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _impl_.created_time_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _impl_.retention_time_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _impl_.size_bytes_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _impl_.md5_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _impl_.content_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobMetadata, _impl_.provenance_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobProvenance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobProvenance, _impl_.integration_name_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobProvenance, _impl_.data_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::anduril::blobs::v1::BlobMetadata)},
        {20, -1, -1, sizeof(::anduril::blobs::v1::BlobProvenance)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::blobs::v1::_BlobMetadata_default_instance_._instance,
    &::anduril::blobs::v1::_BlobProvenance_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!anduril/blobs/v1/common.pub.proto\022\020and"
    "uril.blobs.v1\032\037google/protobuf/timestamp"
    ".proto\"\246\002\n\014BlobMetadata\022=\n\014created_time\030"
    "\001 \001(\0132\032.google.protobuf.TimestampR\013creat"
    "edTime\022A\n\016retention_time\030\002 \001(\0132\032.google."
    "protobuf.TimestampR\rretentionTime\022\035\n\nsiz"
    "e_bytes\030\003 \001(\004R\tsizeBytes\022\020\n\003md5\030\004 \001(\014R\003m"
    "d5\022!\n\014content_type\030\005 \001(\tR\013contentType\022@\n"
    "\nprovenance\030\006 \001(\0132 .anduril.blobs.v1.Blo"
    "bProvenanceR\nprovenance\"X\n\016BlobProvenanc"
    "e\022)\n\020integration_name\030\001 \001(\tR\017integration"
    "Name\022\033\n\tdata_type\030\002 \001(\tR\010dataTypeB\311\001\n\024co"
    "m.anduril.blobs.v1B\016CommonPubProtoP\001Z\?gh"
    "e.anduril.dev/anduril/andurilapis-go/and"
    "uril/blobs/v1;blobsv1\242\002\003ABX\252\002\020Anduril.Bl"
    "obs.V1\312\002\020Anduril\\Blobs\\V1\342\002\034Anduril\\Blob"
    "s\\V1\\GPBMetadata\352\002\022Anduril::Blobs::V1b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto = {
    false,
    false,
    685,
    descriptor_table_protodef_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto,
    "anduril/blobs/v1/common.pub.proto",
    &descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto_once,
    descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto,
    file_level_service_descriptors_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto,
};
namespace anduril {
namespace blobs {
namespace v1 {
// ===================================================================

class BlobMetadata::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlobMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_._has_bits_);
};

void BlobMetadata::clear_created_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_time_ != nullptr) _impl_.created_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BlobMetadata::clear_retention_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.retention_time_ != nullptr) _impl_.retention_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
BlobMetadata::BlobMetadata(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.BlobMetadata)
}
inline PROTOBUF_NDEBUG_INLINE BlobMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::BlobMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        md5_(arena, from.md5_),
        content_type_(arena, from.content_type_) {}

BlobMetadata::BlobMetadata(
    ::google::protobuf::Arena* arena,
    const BlobMetadata& from)
    : ::google::protobuf::Message(arena) {
  BlobMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.created_time_)
                        : nullptr;
  _impl_.retention_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.retention_time_)
                        : nullptr;
  _impl_.provenance_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobProvenance>(
                              arena, *from._impl_.provenance_)
                        : nullptr;
  _impl_.size_bytes_ = from._impl_.size_bytes_;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.BlobMetadata)
}
inline PROTOBUF_NDEBUG_INLINE BlobMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        md5_(arena),
        content_type_(arena) {}

inline void BlobMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_time_),
           0,
           offsetof(Impl_, size_bytes_) -
               offsetof(Impl_, created_time_) +
               sizeof(Impl_::size_bytes_));
}
BlobMetadata::~BlobMetadata() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.BlobMetadata)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlobMetadata::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.md5_.Destroy();
  _impl_.content_type_.Destroy();
  delete _impl_.created_time_;
  delete _impl_.retention_time_;
  delete _impl_.provenance_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BlobMetadata::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_._cached_size_),
              false,
          },
          &BlobMetadata::MergeImpl,
          &BlobMetadata::kDescriptorMethods,
          &descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 50, 2> BlobMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BlobMetadata_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp created_time = 1 [json_name = "createdTime"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.created_time_)}},
    // .google.protobuf.Timestamp retention_time = 2 [json_name = "retentionTime"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.retention_time_)}},
    // uint64 size_bytes = 3 [json_name = "sizeBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlobMetadata, _impl_.size_bytes_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.size_bytes_)}},
    // bytes md5 = 4 [json_name = "md5"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.md5_)}},
    // string content_type = 5 [json_name = "contentType"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.content_type_)}},
    // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.provenance_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp created_time = 1 [json_name = "createdTime"];
    {PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.created_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp retention_time = 2 [json_name = "retentionTime"];
    {PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.retention_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 size_bytes = 3 [json_name = "sizeBytes"];
    {PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.size_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes md5 = 4 [json_name = "md5"];
    {PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.md5_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string content_type = 5 [json_name = "contentType"];
    {PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.content_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
    {PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.provenance_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobProvenance>()},
  }}, {{
    "\35\0\0\0\0\14\0\0"
    "anduril.blobs.v1.BlobMetadata"
    "content_type"
  }},
};

PROTOBUF_NOINLINE void BlobMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.BlobMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.md5_.ClearToEmpty();
  _impl_.content_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.created_time_ != nullptr);
      _impl_.created_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.retention_time_ != nullptr);
      _impl_.retention_time_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.provenance_ != nullptr);
      _impl_.provenance_->Clear();
    }
  }
  _impl_.size_bytes_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* BlobMetadata::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.BlobMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp created_time = 1 [json_name = "createdTime"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.created_time_, _impl_.created_time_->GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp retention_time = 2 [json_name = "retentionTime"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.retention_time_, _impl_.retention_time_->GetCachedSize(), target, stream);
  }

  // uint64 size_bytes = 3 [json_name = "sizeBytes"];
  if (this->_internal_size_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_size_bytes(), target);
  }

  // bytes md5 = 4 [json_name = "md5"];
  if (!this->_internal_md5().empty()) {
    const std::string& _s = this->_internal_md5();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // string content_type = 5 [json_name = "contentType"];
  if (!this->_internal_content_type().empty()) {
    const std::string& _s = this->_internal_content_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.BlobMetadata.content_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.provenance_, _impl_.provenance_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.BlobMetadata)
  return target;
}

::size_t BlobMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.BlobMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes md5 = 4 [json_name = "md5"];
  if (!this->_internal_md5().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_md5());
  }

  // string content_type = 5 [json_name = "contentType"];
  if (!this->_internal_content_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content_type());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.Timestamp created_time = 1 [json_name = "createdTime"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.created_time_);
    }

    // .google.protobuf.Timestamp retention_time = 2 [json_name = "retentionTime"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.retention_time_);
    }

    // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.provenance_);
    }

  }
  // uint64 size_bytes = 3 [json_name = "sizeBytes"];
  if (this->_internal_size_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_size_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BlobMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlobMetadata*>(&to_msg);
  auto& from = static_cast<const BlobMetadata&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.BlobMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_md5().empty()) {
    _this->_internal_set_md5(from._internal_md5());
  }
  if (!from._internal_content_type().empty()) {
    _this->_internal_set_content_type(from._internal_content_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.created_time_ != nullptr);
      if (_this->_impl_.created_time_ == nullptr) {
        _this->_impl_.created_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.created_time_);
      } else {
        _this->_impl_.created_time_->MergeFrom(*from._impl_.created_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.retention_time_ != nullptr);
      if (_this->_impl_.retention_time_ == nullptr) {
        _this->_impl_.retention_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.retention_time_);
      } else {
        _this->_impl_.retention_time_->MergeFrom(*from._impl_.retention_time_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.provenance_ != nullptr);
      if (_this->_impl_.provenance_ == nullptr) {
        _this->_impl_.provenance_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobProvenance>(arena, *from._impl_.provenance_);
      } else {
        _this->_impl_.provenance_->MergeFrom(*from._impl_.provenance_);
      }
    }
  }
  if (from._internal_size_bytes() != 0) {
    _this->_impl_.size_bytes_ = from._impl_.size_bytes_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlobMetadata::CopyFrom(const BlobMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.BlobMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlobMetadata::InternalSwap(BlobMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.md5_, &other->_impl_.md5_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_type_, &other->_impl_.content_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.size_bytes_)
      + sizeof(BlobMetadata::_impl_.size_bytes_)
      - PROTOBUF_FIELD_OFFSET(BlobMetadata, _impl_.created_time_)>(
          reinterpret_cast<char*>(&_impl_.created_time_),
          reinterpret_cast<char*>(&other->_impl_.created_time_));
}

::google::protobuf::Metadata BlobMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlobProvenance::_Internal {
 public:
};

BlobProvenance::BlobProvenance(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.BlobProvenance)
}
inline PROTOBUF_NDEBUG_INLINE BlobProvenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::BlobProvenance& from_msg)
      : integration_name_(arena, from.integration_name_),
        data_type_(arena, from.data_type_),
        _cached_size_{0} {}

BlobProvenance::BlobProvenance(
    ::google::protobuf::Arena* arena,
    const BlobProvenance& from)
    : ::google::protobuf::Message(arena) {
  BlobProvenance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.BlobProvenance)
}
inline PROTOBUF_NDEBUG_INLINE BlobProvenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : integration_name_(arena),
        data_type_(arena),
        _cached_size_{0} {}

inline void BlobProvenance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlobProvenance::~BlobProvenance() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.BlobProvenance)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlobProvenance::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.integration_name_.Destroy();
  _impl_.data_type_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BlobProvenance::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(BlobProvenance, _impl_._cached_size_),
              false,
          },
          &BlobProvenance::MergeImpl,
          &BlobProvenance::kDescriptorMethods,
          &descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> BlobProvenance::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlobProvenance_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobProvenance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string data_type = 2 [json_name = "dataType"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlobProvenance, _impl_.data_type_)}},
    // string integration_name = 1 [json_name = "integrationName"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlobProvenance, _impl_.integration_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string integration_name = 1 [json_name = "integrationName"];
    {PROTOBUF_FIELD_OFFSET(BlobProvenance, _impl_.integration_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string data_type = 2 [json_name = "dataType"];
    {PROTOBUF_FIELD_OFFSET(BlobProvenance, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\20\11\0\0\0\0\0"
    "anduril.blobs.v1.BlobProvenance"
    "integration_name"
    "data_type"
  }},
};

PROTOBUF_NOINLINE void BlobProvenance::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.BlobProvenance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.integration_name_.ClearToEmpty();
  _impl_.data_type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* BlobProvenance::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.BlobProvenance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string integration_name = 1 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    const std::string& _s = this->_internal_integration_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.BlobProvenance.integration_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string data_type = 2 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    const std::string& _s = this->_internal_data_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.BlobProvenance.data_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.BlobProvenance)
  return target;
}

::size_t BlobProvenance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.BlobProvenance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string integration_name = 1 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_integration_name());
  }

  // string data_type = 2 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BlobProvenance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlobProvenance*>(&to_msg);
  auto& from = static_cast<const BlobProvenance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.BlobProvenance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_integration_name().empty()) {
    _this->_internal_set_integration_name(from._internal_integration_name());
  }
  if (!from._internal_data_type().empty()) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlobProvenance::CopyFrom(const BlobProvenance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.BlobProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlobProvenance::InternalSwap(BlobProvenance* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.integration_name_, &other->_impl_.integration_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_type_, &other->_impl_.data_type_, arena);
}

::google::protobuf::Metadata BlobProvenance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace blobs
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
