// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/blobs/v1/common.pub.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto;
namespace anduril {
namespace blobs {
namespace v1 {
class BlobMetadata;
struct BlobMetadataDefaultTypeInternal;
extern BlobMetadataDefaultTypeInternal _BlobMetadata_default_instance_;
class BlobProvenance;
struct BlobProvenanceDefaultTypeInternal;
extern BlobProvenanceDefaultTypeInternal _BlobProvenance_default_instance_;
}  // namespace v1
}  // namespace blobs
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace anduril {
namespace blobs {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class BlobProvenance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.blobs.v1.BlobProvenance) */ {
 public:
  inline BlobProvenance() : BlobProvenance(nullptr) {}
  ~BlobProvenance() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlobProvenance(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlobProvenance(const BlobProvenance& from) : BlobProvenance(nullptr, from) {}
  inline BlobProvenance(BlobProvenance&& from) noexcept
      : BlobProvenance(nullptr, std::move(from)) {}
  inline BlobProvenance& operator=(const BlobProvenance& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobProvenance& operator=(BlobProvenance&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlobProvenance& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlobProvenance* internal_default_instance() {
    return reinterpret_cast<const BlobProvenance*>(
        &_BlobProvenance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BlobProvenance& a, BlobProvenance& b) { a.Swap(&b); }
  inline void Swap(BlobProvenance* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlobProvenance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlobProvenance* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BlobProvenance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlobProvenance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlobProvenance& from) { BlobProvenance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlobProvenance* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.blobs.v1.BlobProvenance"; }

 protected:
  explicit BlobProvenance(::google::protobuf::Arena* arena);
  BlobProvenance(::google::protobuf::Arena* arena, const BlobProvenance& from);
  BlobProvenance(::google::protobuf::Arena* arena, BlobProvenance&& from) noexcept
      : BlobProvenance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIntegrationNameFieldNumber = 1,
    kDataTypeFieldNumber = 2,
  };
  // string integration_name = 1 [json_name = "integrationName"];
  void clear_integration_name() ;
  const std::string& integration_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_integration_name(Arg_&& arg, Args_... args);
  std::string* mutable_integration_name();
  PROTOBUF_NODISCARD std::string* release_integration_name();
  void set_allocated_integration_name(std::string* value);

  private:
  const std::string& _internal_integration_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_integration_name(
      const std::string& value);
  std::string* _internal_mutable_integration_name();

  public:
  // string data_type = 2 [json_name = "dataType"];
  void clear_data_type() ;
  const std::string& data_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_type(Arg_&& arg, Args_... args);
  std::string* mutable_data_type();
  PROTOBUF_NODISCARD std::string* release_data_type();
  void set_allocated_data_type(std::string* value);

  private:
  const std::string& _internal_data_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_type(
      const std::string& value);
  std::string* _internal_mutable_data_type();

  public:
  // @@protoc_insertion_point(class_scope:anduril.blobs.v1.BlobProvenance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlobProvenance_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlobProvenance& from_msg);
    ::google::protobuf::internal::ArenaStringPtr integration_name_;
    ::google::protobuf::internal::ArenaStringPtr data_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto;
};
// -------------------------------------------------------------------

class BlobMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:anduril.blobs.v1.BlobMetadata) */ {
 public:
  inline BlobMetadata() : BlobMetadata(nullptr) {}
  ~BlobMetadata() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlobMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlobMetadata(const BlobMetadata& from) : BlobMetadata(nullptr, from) {}
  inline BlobMetadata(BlobMetadata&& from) noexcept
      : BlobMetadata(nullptr, std::move(from)) {}
  inline BlobMetadata& operator=(const BlobMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobMetadata& operator=(BlobMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlobMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlobMetadata* internal_default_instance() {
    return reinterpret_cast<const BlobMetadata*>(
        &_BlobMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BlobMetadata& a, BlobMetadata& b) { a.Swap(&b); }
  inline void Swap(BlobMetadata* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlobMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlobMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BlobMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlobMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlobMetadata& from) { BlobMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlobMetadata* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "anduril.blobs.v1.BlobMetadata"; }

 protected:
  explicit BlobMetadata(::google::protobuf::Arena* arena);
  BlobMetadata(::google::protobuf::Arena* arena, const BlobMetadata& from);
  BlobMetadata(::google::protobuf::Arena* arena, BlobMetadata&& from) noexcept
      : BlobMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMd5FieldNumber = 4,
    kContentTypeFieldNumber = 5,
    kCreatedTimeFieldNumber = 1,
    kRetentionTimeFieldNumber = 2,
    kProvenanceFieldNumber = 6,
    kSizeBytesFieldNumber = 3,
  };
  // bytes md5 = 4 [json_name = "md5"];
  void clear_md5() ;
  const std::string& md5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_md5(Arg_&& arg, Args_... args);
  std::string* mutable_md5();
  PROTOBUF_NODISCARD std::string* release_md5();
  void set_allocated_md5(std::string* value);

  private:
  const std::string& _internal_md5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_md5(
      const std::string& value);
  std::string* _internal_mutable_md5();

  public:
  // string content_type = 5 [json_name = "contentType"];
  void clear_content_type() ;
  const std::string& content_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content_type(Arg_&& arg, Args_... args);
  std::string* mutable_content_type();
  PROTOBUF_NODISCARD std::string* release_content_type();
  void set_allocated_content_type(std::string* value);

  private:
  const std::string& _internal_content_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content_type(
      const std::string& value);
  std::string* _internal_mutable_content_type();

  public:
  // .google.protobuf.Timestamp created_time = 1 [json_name = "createdTime"];
  bool has_created_time() const;
  void clear_created_time() ;
  const ::google::protobuf::Timestamp& created_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_time();
  ::google::protobuf::Timestamp* mutable_created_time();
  void set_allocated_created_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_time();

  private:
  const ::google::protobuf::Timestamp& _internal_created_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_time();

  public:
  // .google.protobuf.Timestamp retention_time = 2 [json_name = "retentionTime"];
  bool has_retention_time() const;
  void clear_retention_time() ;
  const ::google::protobuf::Timestamp& retention_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_retention_time();
  ::google::protobuf::Timestamp* mutable_retention_time();
  void set_allocated_retention_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_retention_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_retention_time();

  private:
  const ::google::protobuf::Timestamp& _internal_retention_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_retention_time();

  public:
  // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
  bool has_provenance() const;
  void clear_provenance() ;
  const ::anduril::blobs::v1::BlobProvenance& provenance() const;
  PROTOBUF_NODISCARD ::anduril::blobs::v1::BlobProvenance* release_provenance();
  ::anduril::blobs::v1::BlobProvenance* mutable_provenance();
  void set_allocated_provenance(::anduril::blobs::v1::BlobProvenance* value);
  void unsafe_arena_set_allocated_provenance(::anduril::blobs::v1::BlobProvenance* value);
  ::anduril::blobs::v1::BlobProvenance* unsafe_arena_release_provenance();

  private:
  const ::anduril::blobs::v1::BlobProvenance& _internal_provenance() const;
  ::anduril::blobs::v1::BlobProvenance* _internal_mutable_provenance();

  public:
  // uint64 size_bytes = 3 [json_name = "sizeBytes"];
  void clear_size_bytes() ;
  ::uint64_t size_bytes() const;
  void set_size_bytes(::uint64_t value);

  private:
  ::uint64_t _internal_size_bytes() const;
  void _internal_set_size_bytes(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:anduril.blobs.v1.BlobMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlobMetadata_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlobMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr md5_;
    ::google::protobuf::internal::ArenaStringPtr content_type_;
    ::google::protobuf::Timestamp* created_time_;
    ::google::protobuf::Timestamp* retention_time_;
    ::anduril::blobs::v1::BlobProvenance* provenance_;
    ::uint64_t size_bytes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BlobMetadata

// .google.protobuf.Timestamp created_time = 1 [json_name = "createdTime"];
inline bool BlobMetadata::has_created_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& BlobMetadata::_internal_created_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& BlobMetadata::created_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobMetadata.created_time)
  return _internal_created_time();
}
inline void BlobMetadata::unsafe_arena_set_allocated_created_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_time_);
  }
  _impl_.created_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.blobs.v1.BlobMetadata.created_time)
}
inline ::google::protobuf::Timestamp* BlobMetadata::release_created_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_time_;
  _impl_.created_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* BlobMetadata::unsafe_arena_release_created_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.blobs.v1.BlobMetadata.created_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_time_;
  _impl_.created_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* BlobMetadata::_internal_mutable_created_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_time_;
}
inline ::google::protobuf::Timestamp* BlobMetadata::mutable_created_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_time();
  // @@protoc_insertion_point(field_mutable:anduril.blobs.v1.BlobMetadata.created_time)
  return _msg;
}
inline void BlobMetadata::set_allocated_created_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.blobs.v1.BlobMetadata.created_time)
}

// .google.protobuf.Timestamp retention_time = 2 [json_name = "retentionTime"];
inline bool BlobMetadata::has_retention_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.retention_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& BlobMetadata::_internal_retention_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.retention_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& BlobMetadata::retention_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobMetadata.retention_time)
  return _internal_retention_time();
}
inline void BlobMetadata::unsafe_arena_set_allocated_retention_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.retention_time_);
  }
  _impl_.retention_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.blobs.v1.BlobMetadata.retention_time)
}
inline ::google::protobuf::Timestamp* BlobMetadata::release_retention_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.retention_time_;
  _impl_.retention_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* BlobMetadata::unsafe_arena_release_retention_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.blobs.v1.BlobMetadata.retention_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.retention_time_;
  _impl_.retention_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* BlobMetadata::_internal_mutable_retention_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.retention_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.retention_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.retention_time_;
}
inline ::google::protobuf::Timestamp* BlobMetadata::mutable_retention_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_retention_time();
  // @@protoc_insertion_point(field_mutable:anduril.blobs.v1.BlobMetadata.retention_time)
  return _msg;
}
inline void BlobMetadata::set_allocated_retention_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.retention_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.retention_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.blobs.v1.BlobMetadata.retention_time)
}

// uint64 size_bytes = 3 [json_name = "sizeBytes"];
inline void BlobMetadata::clear_size_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_bytes_ = ::uint64_t{0u};
}
inline ::uint64_t BlobMetadata::size_bytes() const {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobMetadata.size_bytes)
  return _internal_size_bytes();
}
inline void BlobMetadata::set_size_bytes(::uint64_t value) {
  _internal_set_size_bytes(value);
  // @@protoc_insertion_point(field_set:anduril.blobs.v1.BlobMetadata.size_bytes)
}
inline ::uint64_t BlobMetadata::_internal_size_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_bytes_;
}
inline void BlobMetadata::_internal_set_size_bytes(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_bytes_ = value;
}

// bytes md5 = 4 [json_name = "md5"];
inline void BlobMetadata::clear_md5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.md5_.ClearToEmpty();
}
inline const std::string& BlobMetadata::md5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobMetadata.md5)
  return _internal_md5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlobMetadata::set_md5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.md5_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.blobs.v1.BlobMetadata.md5)
}
inline std::string* BlobMetadata::mutable_md5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_md5();
  // @@protoc_insertion_point(field_mutable:anduril.blobs.v1.BlobMetadata.md5)
  return _s;
}
inline const std::string& BlobMetadata::_internal_md5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.md5_.Get();
}
inline void BlobMetadata::_internal_set_md5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.md5_.Set(value, GetArena());
}
inline std::string* BlobMetadata::_internal_mutable_md5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.md5_.Mutable( GetArena());
}
inline std::string* BlobMetadata::release_md5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.blobs.v1.BlobMetadata.md5)
  return _impl_.md5_.Release();
}
inline void BlobMetadata::set_allocated_md5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.md5_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.md5_.IsDefault()) {
          _impl_.md5_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.blobs.v1.BlobMetadata.md5)
}

// string content_type = 5 [json_name = "contentType"];
inline void BlobMetadata::clear_content_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.ClearToEmpty();
}
inline const std::string& BlobMetadata::content_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobMetadata.content_type)
  return _internal_content_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlobMetadata::set_content_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.blobs.v1.BlobMetadata.content_type)
}
inline std::string* BlobMetadata::mutable_content_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content_type();
  // @@protoc_insertion_point(field_mutable:anduril.blobs.v1.BlobMetadata.content_type)
  return _s;
}
inline const std::string& BlobMetadata::_internal_content_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_type_.Get();
}
inline void BlobMetadata::_internal_set_content_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.Set(value, GetArena());
}
inline std::string* BlobMetadata::_internal_mutable_content_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_type_.Mutable( GetArena());
}
inline std::string* BlobMetadata::release_content_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.blobs.v1.BlobMetadata.content_type)
  return _impl_.content_type_.Release();
}
inline void BlobMetadata::set_allocated_content_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_type_.IsDefault()) {
          _impl_.content_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.blobs.v1.BlobMetadata.content_type)
}

// .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
inline bool BlobMetadata::has_provenance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.provenance_ != nullptr);
  return value;
}
inline void BlobMetadata::clear_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.provenance_ != nullptr) _impl_.provenance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::anduril::blobs::v1::BlobProvenance& BlobMetadata::_internal_provenance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::anduril::blobs::v1::BlobProvenance* p = _impl_.provenance_;
  return p != nullptr ? *p : reinterpret_cast<const ::anduril::blobs::v1::BlobProvenance&>(::anduril::blobs::v1::_BlobProvenance_default_instance_);
}
inline const ::anduril::blobs::v1::BlobProvenance& BlobMetadata::provenance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobMetadata.provenance)
  return _internal_provenance();
}
inline void BlobMetadata::unsafe_arena_set_allocated_provenance(::anduril::blobs::v1::BlobProvenance* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.provenance_);
  }
  _impl_.provenance_ = reinterpret_cast<::anduril::blobs::v1::BlobProvenance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:anduril.blobs.v1.BlobMetadata.provenance)
}
inline ::anduril::blobs::v1::BlobProvenance* BlobMetadata::release_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::blobs::v1::BlobProvenance* released = _impl_.provenance_;
  _impl_.provenance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::anduril::blobs::v1::BlobProvenance* BlobMetadata::unsafe_arena_release_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.blobs.v1.BlobMetadata.provenance)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::anduril::blobs::v1::BlobProvenance* temp = _impl_.provenance_;
  _impl_.provenance_ = nullptr;
  return temp;
}
inline ::anduril::blobs::v1::BlobProvenance* BlobMetadata::_internal_mutable_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.provenance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::anduril::blobs::v1::BlobProvenance>(GetArena());
    _impl_.provenance_ = reinterpret_cast<::anduril::blobs::v1::BlobProvenance*>(p);
  }
  return _impl_.provenance_;
}
inline ::anduril::blobs::v1::BlobProvenance* BlobMetadata::mutable_provenance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::anduril::blobs::v1::BlobProvenance* _msg = _internal_mutable_provenance();
  // @@protoc_insertion_point(field_mutable:anduril.blobs.v1.BlobMetadata.provenance)
  return _msg;
}
inline void BlobMetadata::set_allocated_provenance(::anduril::blobs::v1::BlobProvenance* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.provenance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.provenance_ = reinterpret_cast<::anduril::blobs::v1::BlobProvenance*>(value);
  // @@protoc_insertion_point(field_set_allocated:anduril.blobs.v1.BlobMetadata.provenance)
}

// -------------------------------------------------------------------

// BlobProvenance

// string integration_name = 1 [json_name = "integrationName"];
inline void BlobProvenance::clear_integration_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integration_name_.ClearToEmpty();
}
inline const std::string& BlobProvenance::integration_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobProvenance.integration_name)
  return _internal_integration_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlobProvenance::set_integration_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integration_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.blobs.v1.BlobProvenance.integration_name)
}
inline std::string* BlobProvenance::mutable_integration_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_integration_name();
  // @@protoc_insertion_point(field_mutable:anduril.blobs.v1.BlobProvenance.integration_name)
  return _s;
}
inline const std::string& BlobProvenance::_internal_integration_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integration_name_.Get();
}
inline void BlobProvenance::_internal_set_integration_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integration_name_.Set(value, GetArena());
}
inline std::string* BlobProvenance::_internal_mutable_integration_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.integration_name_.Mutable( GetArena());
}
inline std::string* BlobProvenance::release_integration_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.blobs.v1.BlobProvenance.integration_name)
  return _impl_.integration_name_.Release();
}
inline void BlobProvenance::set_allocated_integration_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integration_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.integration_name_.IsDefault()) {
          _impl_.integration_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.blobs.v1.BlobProvenance.integration_name)
}

// string data_type = 2 [json_name = "dataType"];
inline void BlobProvenance::clear_data_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.ClearToEmpty();
}
inline const std::string& BlobProvenance::data_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:anduril.blobs.v1.BlobProvenance.data_type)
  return _internal_data_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlobProvenance::set_data_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:anduril.blobs.v1.BlobProvenance.data_type)
}
inline std::string* BlobProvenance::mutable_data_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_type();
  // @@protoc_insertion_point(field_mutable:anduril.blobs.v1.BlobProvenance.data_type)
  return _s;
}
inline const std::string& BlobProvenance::_internal_data_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_type_.Get();
}
inline void BlobProvenance::_internal_set_data_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.Set(value, GetArena());
}
inline std::string* BlobProvenance::_internal_mutable_data_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_type_.Mutable( GetArena());
}
inline std::string* BlobProvenance::release_data_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:anduril.blobs.v1.BlobProvenance.data_type)
  return _impl_.data_type_.Release();
}
inline void BlobProvenance::set_allocated_data_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_type_.IsDefault()) {
          _impl_.data_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:anduril.blobs.v1.BlobProvenance.data_type)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace blobs
}  // namespace anduril


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto_2epb_2eh
