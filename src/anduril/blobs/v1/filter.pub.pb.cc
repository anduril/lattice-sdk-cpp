// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/blobs/v1/filter.pub.proto
// Protobuf C++ Version: 5.27.3

#include "anduril/blobs/v1/filter.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace blobs {
namespace v1 {

inline constexpr FieldMatcher::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : integration_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mime_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FieldMatcher::FieldMatcher(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FieldMatcherDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldMatcherDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldMatcherDefaultTypeInternal() {}
  union {
    FieldMatcher _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldMatcherDefaultTypeInternal _FieldMatcher_default_instance_;

inline constexpr Statement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        not_match_{},
        match_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Statement::Statement(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatementDefaultTypeInternal() {}
  union {
    Statement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatementDefaultTypeInternal _Statement_default_instance_;
}  // namespace v1
}  // namespace blobs
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::Statement, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::Statement, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::Statement, _impl_.match_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::Statement, _impl_.not_match_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::FieldMatcher, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::FieldMatcher, _impl_.integration_name_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::FieldMatcher, _impl_.mime_type_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::FieldMatcher, _impl_.data_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::anduril::blobs::v1::Statement)},
        {12, -1, -1, sizeof(::anduril::blobs::v1::FieldMatcher)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::blobs::v1::_Statement_default_instance_._instance,
    &::anduril::blobs::v1::_FieldMatcher_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!anduril/blobs/v1/filter.pub.proto\022\020and"
    "uril.blobs.v1\"~\n\tStatement\0224\n\005match\030\001 \001("
    "\0132\036.anduril.blobs.v1.FieldMatcherR\005match"
    "\022;\n\tnot_match\030\002 \003(\0132\036.anduril.blobs.v1.F"
    "ieldMatcherR\010notMatch\"s\n\014FieldMatcher\022)\n"
    "\020integration_name\030\001 \001(\tR\017integrationName"
    "\022\033\n\tmime_type\030\002 \001(\tR\010mimeType\022\033\n\tdata_ty"
    "pe\030\003 \001(\tR\010dataTypeB\311\001\n\024com.anduril.blobs"
    ".v1B\016FilterPubProtoP\001Z\?ghe.anduril.dev/a"
    "nduril/andurilapis-go/anduril/blobs/v1;b"
    "lobsv1\242\002\003ABX\252\002\020Anduril.Blobs.V1\312\002\020Anduri"
    "l\\Blobs\\V1\342\002\034Anduril\\Blobs\\V1\\GPBMetadat"
    "a\352\002\022Anduril::Blobs::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto = {
    false,
    false,
    510,
    descriptor_table_protodef_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto,
    "anduril/blobs/v1/filter.pub.proto",
    &descriptor_table_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto,
    file_level_service_descriptors_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto,
};
namespace anduril {
namespace blobs {
namespace v1 {
// ===================================================================

class Statement::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Statement>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Statement, _impl_._has_bits_);
};

Statement::Statement(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.Statement)
}
inline PROTOBUF_NDEBUG_INLINE Statement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::Statement& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        not_match_{visibility, arena, from.not_match_} {}

Statement::Statement(
    ::google::protobuf::Arena* arena,
    const Statement& from)
    : ::google::protobuf::Message(arena) {
  Statement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.match_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::FieldMatcher>(
                              arena, *from._impl_.match_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.Statement)
}
inline PROTOBUF_NDEBUG_INLINE Statement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        not_match_{visibility, arena} {}

inline void Statement::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.match_ = {};
}
Statement::~Statement() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.Statement)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Statement::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.match_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Statement::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Statement, _impl_._cached_size_),
              false,
          },
          &Statement::MergeImpl,
          &Statement::kDescriptorMethods,
          &descriptor_table_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Statement::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Statement, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Statement_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::Statement>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.blobs.v1.FieldMatcher not_match = 2 [json_name = "notMatch"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Statement, _impl_.not_match_)}},
    // .anduril.blobs.v1.FieldMatcher match = 1 [json_name = "match"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Statement, _impl_.match_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.blobs.v1.FieldMatcher match = 1 [json_name = "match"];
    {PROTOBUF_FIELD_OFFSET(Statement, _impl_.match_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .anduril.blobs.v1.FieldMatcher not_match = 2 [json_name = "notMatch"];
    {PROTOBUF_FIELD_OFFSET(Statement, _impl_.not_match_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::FieldMatcher>()},
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::FieldMatcher>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Statement::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.Statement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.not_match_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.match_ != nullptr);
    _impl_.match_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Statement::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.Statement)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .anduril.blobs.v1.FieldMatcher match = 1 [json_name = "match"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.match_, _impl_.match_->GetCachedSize(), target, stream);
  }

  // repeated .anduril.blobs.v1.FieldMatcher not_match = 2 [json_name = "notMatch"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_not_match_size());
       i < n; i++) {
    const auto& repfield = this->_internal_not_match().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.Statement)
  return target;
}

::size_t Statement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.Statement)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .anduril.blobs.v1.FieldMatcher not_match = 2 [json_name = "notMatch"];
  total_size += 1UL * this->_internal_not_match_size();
  for (const auto& msg : this->_internal_not_match()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .anduril.blobs.v1.FieldMatcher match = 1 [json_name = "match"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.match_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Statement::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Statement*>(&to_msg);
  auto& from = static_cast<const Statement&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.Statement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_not_match()->MergeFrom(
      from._internal_not_match());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.match_ != nullptr);
    if (_this->_impl_.match_ == nullptr) {
      _this->_impl_.match_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::FieldMatcher>(arena, *from._impl_.match_);
    } else {
      _this->_impl_.match_->MergeFrom(*from._impl_.match_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Statement::CopyFrom(const Statement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.Statement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Statement::InternalSwap(Statement* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.not_match_.InternalSwap(&other->_impl_.not_match_);
  swap(_impl_.match_, other->_impl_.match_);
}

::google::protobuf::Metadata Statement::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FieldMatcher::_Internal {
 public:
};

FieldMatcher::FieldMatcher(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.FieldMatcher)
}
inline PROTOBUF_NDEBUG_INLINE FieldMatcher::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::FieldMatcher& from_msg)
      : integration_name_(arena, from.integration_name_),
        mime_type_(arena, from.mime_type_),
        data_type_(arena, from.data_type_),
        _cached_size_{0} {}

FieldMatcher::FieldMatcher(
    ::google::protobuf::Arena* arena,
    const FieldMatcher& from)
    : ::google::protobuf::Message(arena) {
  FieldMatcher* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.FieldMatcher)
}
inline PROTOBUF_NDEBUG_INLINE FieldMatcher::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : integration_name_(arena),
        mime_type_(arena),
        data_type_(arena),
        _cached_size_{0} {}

inline void FieldMatcher::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FieldMatcher::~FieldMatcher() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.FieldMatcher)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FieldMatcher::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.integration_name_.Destroy();
  _impl_.mime_type_.Destroy();
  _impl_.data_type_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FieldMatcher::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(FieldMatcher, _impl_._cached_size_),
              false,
          },
          &FieldMatcher::MergeImpl,
          &FieldMatcher::kDescriptorMethods,
          &descriptor_table_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 72, 2> FieldMatcher::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FieldMatcher_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::FieldMatcher>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string integration_name = 1 [json_name = "integrationName"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FieldMatcher, _impl_.integration_name_)}},
    // string mime_type = 2 [json_name = "mimeType"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FieldMatcher, _impl_.mime_type_)}},
    // string data_type = 3 [json_name = "dataType"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FieldMatcher, _impl_.data_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string integration_name = 1 [json_name = "integrationName"];
    {PROTOBUF_FIELD_OFFSET(FieldMatcher, _impl_.integration_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mime_type = 2 [json_name = "mimeType"];
    {PROTOBUF_FIELD_OFFSET(FieldMatcher, _impl_.mime_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string data_type = 3 [json_name = "dataType"];
    {PROTOBUF_FIELD_OFFSET(FieldMatcher, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\20\11\11\0\0\0\0"
    "anduril.blobs.v1.FieldMatcher"
    "integration_name"
    "mime_type"
    "data_type"
  }},
};

PROTOBUF_NOINLINE void FieldMatcher::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.FieldMatcher)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.integration_name_.ClearToEmpty();
  _impl_.mime_type_.ClearToEmpty();
  _impl_.data_type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* FieldMatcher::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.FieldMatcher)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string integration_name = 1 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    const std::string& _s = this->_internal_integration_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.FieldMatcher.integration_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string mime_type = 2 [json_name = "mimeType"];
  if (!this->_internal_mime_type().empty()) {
    const std::string& _s = this->_internal_mime_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.FieldMatcher.mime_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string data_type = 3 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    const std::string& _s = this->_internal_data_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.FieldMatcher.data_type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.FieldMatcher)
  return target;
}

::size_t FieldMatcher::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.FieldMatcher)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string integration_name = 1 [json_name = "integrationName"];
  if (!this->_internal_integration_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_integration_name());
  }

  // string mime_type = 2 [json_name = "mimeType"];
  if (!this->_internal_mime_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mime_type());
  }

  // string data_type = 3 [json_name = "dataType"];
  if (!this->_internal_data_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FieldMatcher::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FieldMatcher*>(&to_msg);
  auto& from = static_cast<const FieldMatcher&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.FieldMatcher)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_integration_name().empty()) {
    _this->_internal_set_integration_name(from._internal_integration_name());
  }
  if (!from._internal_mime_type().empty()) {
    _this->_internal_set_mime_type(from._internal_mime_type());
  }
  if (!from._internal_data_type().empty()) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FieldMatcher::CopyFrom(const FieldMatcher& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.FieldMatcher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FieldMatcher::InternalSwap(FieldMatcher* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.integration_name_, &other->_impl_.integration_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mime_type_, &other->_impl_.mime_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_type_, &other->_impl_.data_type_, arena);
}

::google::protobuf::Metadata FieldMatcher::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace blobs
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fblobs_2fv1_2ffilter_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
