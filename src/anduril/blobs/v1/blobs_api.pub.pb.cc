// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/blobs/v1/blobs_api.pub.proto
// Protobuf C++ Version: 5.28.2

#include "anduril/blobs/v1/blobs_api.pub.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace anduril {
namespace blobs {
namespace v1 {

inline constexpr StreamBlobMetadataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamBlobMetadataRequest::StreamBlobMetadataRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamBlobMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamBlobMetadataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamBlobMetadataRequestDefaultTypeInternal() {}
  union {
    StreamBlobMetadataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamBlobMetadataRequestDefaultTypeInternal _StreamBlobMetadataRequest_default_instance_;

inline constexpr HeadBlobRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HeadBlobRequest::HeadBlobRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeadBlobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeadBlobRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeadBlobRequestDefaultTypeInternal() {}
  union {
    HeadBlobRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeadBlobRequestDefaultTypeInternal _HeadBlobRequest_default_instance_;

inline constexpr GetBlobRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetBlobRequest::GetBlobRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBlobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlobRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlobRequestDefaultTypeInternal() {}
  union {
    GetBlobRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlobRequestDefaultTypeInternal _GetBlobRequest_default_instance_;

inline constexpr CreateBlobRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        md5_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contents_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        retention_time_{nullptr},
        provenance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateBlobRequest::CreateBlobRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateBlobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateBlobRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateBlobRequestDefaultTypeInternal() {}
  union {
    CreateBlobRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateBlobRequestDefaultTypeInternal _CreateBlobRequest_default_instance_;

inline constexpr CreateBlobChunkedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        md5_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chunk_contents_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        retention_time_{nullptr},
        provenance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateBlobChunkedRequest::CreateBlobChunkedRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateBlobChunkedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateBlobChunkedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateBlobChunkedRequestDefaultTypeInternal() {}
  union {
    CreateBlobChunkedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateBlobChunkedRequestDefaultTypeInternal _CreateBlobChunkedRequest_default_instance_;

inline constexpr HeadBlobResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HeadBlobResponse::HeadBlobResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeadBlobResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeadBlobResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeadBlobResponseDefaultTypeInternal() {}
  union {
    HeadBlobResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeadBlobResponseDefaultTypeInternal _HeadBlobResponse_default_instance_;

inline constexpr GetBlobResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contents_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetBlobResponse::GetBlobResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBlobResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlobResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlobResponseDefaultTypeInternal() {}
  union {
    GetBlobResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlobResponseDefaultTypeInternal _GetBlobResponse_default_instance_;

inline constexpr CreateBlobResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateBlobResponse::CreateBlobResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateBlobResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateBlobResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateBlobResponseDefaultTypeInternal() {}
  union {
    CreateBlobResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateBlobResponseDefaultTypeInternal _CreateBlobResponse_default_instance_;

inline constexpr CreateBlobChunkedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateBlobChunkedResponse::CreateBlobChunkedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateBlobChunkedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateBlobChunkedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateBlobChunkedResponseDefaultTypeInternal() {}
  union {
    CreateBlobChunkedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateBlobChunkedResponseDefaultTypeInternal _CreateBlobChunkedResponse_default_instance_;

inline constexpr BlobAnnouncement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlobAnnouncement::BlobAnnouncement(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlobAnnouncementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobAnnouncementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobAnnouncementDefaultTypeInternal() {}
  union {
    BlobAnnouncement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobAnnouncementDefaultTypeInternal _BlobAnnouncement_default_instance_;

inline constexpr StreamBlobMetadataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : announcements_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamBlobMetadataResponse::StreamBlobMetadataResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamBlobMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamBlobMetadataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamBlobMetadataResponseDefaultTypeInternal() {}
  union {
    StreamBlobMetadataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamBlobMetadataResponseDefaultTypeInternal _StreamBlobMetadataResponse_default_instance_;
}  // namespace v1
}  // namespace blobs
}  // namespace anduril
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto = nullptr;
const ::uint32_t
    TableStruct_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _impl_.retention_time_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _impl_.md5_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _impl_.contents_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobRequest, _impl_.provenance_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobResponse, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobResponse, _impl_.url_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _impl_.retention_time_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _impl_.md5_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _impl_.chunk_contents_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedRequest, _impl_.provenance_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedResponse, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::CreateBlobChunkedResponse, _impl_.url_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::GetBlobRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::GetBlobRequest, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::GetBlobRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::GetBlobResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::GetBlobResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::GetBlobResponse, _impl_.contents_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::GetBlobResponse, _impl_.metadata_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::HeadBlobRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::HeadBlobRequest, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::HeadBlobRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::HeadBlobResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::HeadBlobResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::HeadBlobResponse, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::HeadBlobResponse, _impl_.url_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::StreamBlobMetadataRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::StreamBlobMetadataRequest, _impl_.client_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::StreamBlobMetadataResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::StreamBlobMetadataResponse, _impl_.announcements_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobAnnouncement, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobAnnouncement, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobAnnouncement, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobAnnouncement, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::anduril::blobs::v1::BlobAnnouncement, _impl_.metadata_),
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::anduril::blobs::v1::CreateBlobRequest)},
        {20, 30, -1, sizeof(::anduril::blobs::v1::CreateBlobResponse)},
        {32, 46, -1, sizeof(::anduril::blobs::v1::CreateBlobChunkedRequest)},
        {52, 62, -1, sizeof(::anduril::blobs::v1::CreateBlobChunkedResponse)},
        {64, -1, -1, sizeof(::anduril::blobs::v1::GetBlobRequest)},
        {74, 84, -1, sizeof(::anduril::blobs::v1::GetBlobResponse)},
        {86, -1, -1, sizeof(::anduril::blobs::v1::HeadBlobRequest)},
        {96, 106, -1, sizeof(::anduril::blobs::v1::HeadBlobResponse)},
        {108, -1, -1, sizeof(::anduril::blobs::v1::StreamBlobMetadataRequest)},
        {117, -1, -1, sizeof(::anduril::blobs::v1::StreamBlobMetadataResponse)},
        {126, 137, -1, sizeof(::anduril::blobs::v1::BlobAnnouncement)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::anduril::blobs::v1::_CreateBlobRequest_default_instance_._instance,
    &::anduril::blobs::v1::_CreateBlobResponse_default_instance_._instance,
    &::anduril::blobs::v1::_CreateBlobChunkedRequest_default_instance_._instance,
    &::anduril::blobs::v1::_CreateBlobChunkedResponse_default_instance_._instance,
    &::anduril::blobs::v1::_GetBlobRequest_default_instance_._instance,
    &::anduril::blobs::v1::_GetBlobResponse_default_instance_._instance,
    &::anduril::blobs::v1::_HeadBlobRequest_default_instance_._instance,
    &::anduril::blobs::v1::_HeadBlobResponse_default_instance_._instance,
    &::anduril::blobs::v1::_StreamBlobMetadataRequest_default_instance_._instance,
    &::anduril::blobs::v1::_StreamBlobMetadataResponse_default_instance_._instance,
    &::anduril::blobs::v1::_BlobAnnouncement_default_instance_._instance,
};
const char descriptor_table_protodef_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$anduril/blobs/v1/blobs_api.pub.proto\022\020"
    "anduril.blobs.v1\032!anduril/blobs/v1/commo"
    "n.pub.proto\032\037google/protobuf/timestamp.p"
    "roto\"\365\001\n\021CreateBlobRequest\022\033\n\tclient_id\030"
    "\001 \001(\tR\010clientId\022\020\n\003key\030\002 \001(\tR\003key\022A\n\016ret"
    "ention_time\030\003 \001(\0132\032.google.protobuf.Time"
    "stampR\rretentionTime\022\020\n\003md5\030\004 \001(\014R\003md5\022\032"
    "\n\010contents\030\005 \001(\014R\010contents\022@\n\nprovenance"
    "\030\006 \001(\0132 .anduril.blobs.v1.BlobProvenance"
    "R\nprovenance\"b\n\022CreateBlobResponse\022:\n\010me"
    "tadata\030\001 \001(\0132\036.anduril.blobs.v1.BlobMeta"
    "dataR\010metadata\022\020\n\003url\030\002 \001(\tR\003url\"\207\002\n\030Cre"
    "ateBlobChunkedRequest\022\033\n\tclient_id\030\001 \001(\t"
    "R\010clientId\022\020\n\003key\030\002 \001(\tR\003key\022A\n\016retentio"
    "n_time\030\003 \001(\0132\032.google.protobuf.Timestamp"
    "R\rretentionTime\022\020\n\003md5\030\004 \001(\014R\003md5\022%\n\016chu"
    "nk_contents\030\005 \001(\014R\rchunkContents\022@\n\nprov"
    "enance\030\006 \001(\0132 .anduril.blobs.v1.BlobProv"
    "enanceR\nprovenance\"i\n\031CreateBlobChunkedR"
    "esponse\022:\n\010metadata\030\001 \001(\0132\036.anduril.blob"
    "s.v1.BlobMetadataR\010metadata\022\020\n\003url\030\002 \001(\t"
    "R\003url\"\?\n\016GetBlobRequest\022\033\n\tclient_id\030\001 \001"
    "(\tR\010clientId\022\020\n\003key\030\002 \001(\tR\003key\"i\n\017GetBlo"
    "bResponse\022\032\n\010contents\030\001 \001(\014R\010contents\022:\n"
    "\010metadata\030\002 \001(\0132\036.anduril.blobs.v1.BlobM"
    "etadataR\010metadata\"@\n\017HeadBlobRequest\022\033\n\t"
    "client_id\030\001 \001(\tR\010clientId\022\020\n\003key\030\002 \001(\tR\003"
    "key\"`\n\020HeadBlobResponse\022:\n\010metadata\030\001 \001("
    "\0132\036.anduril.blobs.v1.BlobMetadataR\010metad"
    "ata\022\020\n\003url\030\002 \001(\tR\003url\"8\n\031StreamBlobMetad"
    "ataRequest\022\033\n\tclient_id\030\001 \001(\tR\010clientId\""
    "f\n\032StreamBlobMetadataResponse\022H\n\rannounc"
    "ements\030\001 \003(\0132\".anduril.blobs.v1.BlobAnno"
    "uncementR\rannouncements\"}\n\020BlobAnnouncem"
    "ent\022\033\n\tclient_id\030\001 \001(\tR\010clientId\022\020\n\003key\030"
    "\002 \001(\tR\003key\022:\n\010metadata\030\003 \001(\0132\036.anduril.b"
    "lobs.v1.BlobMetadataR\010metadata2\353\003\n\010Blobs"
    "API\022W\n\nCreateBlob\022#.anduril.blobs.v1.Cre"
    "ateBlobRequest\032$.anduril.blobs.v1.Create"
    "BlobResponse\022n\n\021CreateBlobChunked\022*.andu"
    "ril.blobs.v1.CreateBlobChunkedRequest\032+."
    "anduril.blobs.v1.CreateBlobChunkedRespon"
    "se(\001\022P\n\007GetBlob\022 .anduril.blobs.v1.GetBl"
    "obRequest\032!.anduril.blobs.v1.GetBlobResp"
    "onse0\001\022Q\n\010HeadBlob\022!.anduril.blobs.v1.He"
    "adBlobRequest\032\".anduril.blobs.v1.HeadBlo"
    "bResponse\022q\n\022StreamBlobMetadata\022+.anduri"
    "l.blobs.v1.StreamBlobMetadataRequest\032,.a"
    "nduril.blobs.v1.StreamBlobMetadataRespon"
    "se0\001B\313\001\n\024com.anduril.blobs.v1B\020BlobsApiP"
    "ubProtoP\001Z\?ghe.anduril.dev/anduril/andur"
    "ilapis-go/anduril/blobs/v1;blobsv1\242\002\003ABX"
    "\252\002\020Anduril.Blobs.V1\312\002\020Anduril\\Blobs\\V1\342\002"
    "\034Anduril\\Blobs\\V1\\GPBMetadata\352\002\022Anduril:"
    ":Blobs::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto_deps[2] =
    {
        &::descriptor_table_anduril_2fblobs_2fv1_2fcommon_2epub_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto = {
    false,
    false,
    2178,
    descriptor_table_protodef_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
    "anduril/blobs/v1/blobs_api.pub.proto",
    &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto_once,
    descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto_deps,
    2,
    11,
    schemas,
    file_default_instances,
    TableStruct_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto::offsets,
    file_level_enum_descriptors_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
    file_level_service_descriptors_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
};
namespace anduril {
namespace blobs {
namespace v1 {
// ===================================================================

class CreateBlobRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateBlobRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_._has_bits_);
};

void CreateBlobRequest::clear_retention_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.retention_time_ != nullptr) _impl_.retention_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CreateBlobRequest::clear_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.provenance_ != nullptr) _impl_.provenance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CreateBlobRequest::CreateBlobRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.CreateBlobRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::CreateBlobRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        client_id_(arena, from.client_id_),
        key_(arena, from.key_),
        md5_(arena, from.md5_),
        contents_(arena, from.contents_) {}

CreateBlobRequest::CreateBlobRequest(
    ::google::protobuf::Arena* arena,
    const CreateBlobRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateBlobRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.retention_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.retention_time_)
                        : nullptr;
  _impl_.provenance_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobProvenance>(
                              arena, *from._impl_.provenance_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.CreateBlobRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        client_id_(arena),
        key_(arena),
        md5_(arena),
        contents_(arena) {}

inline void CreateBlobRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, retention_time_),
           0,
           offsetof(Impl_, provenance_) -
               offsetof(Impl_, retention_time_) +
               sizeof(Impl_::provenance_));
}
CreateBlobRequest::~CreateBlobRequest() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.CreateBlobRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateBlobRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.key_.Destroy();
  _impl_.md5_.Destroy();
  _impl_.contents_.Destroy();
  delete _impl_.retention_time_;
  delete _impl_.provenance_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateBlobRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CreateBlobRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateBlobRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CreateBlobRequest>(),
            ::google::protobuf::Message::GetNewImpl<CreateBlobRequest>(),
            ::google::protobuf::Message::GetClearImpl<CreateBlobRequest>(), &CreateBlobRequest::ByteSizeLong,
                &CreateBlobRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_._cached_size_),
            false,
        },
        &CreateBlobRequest::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CreateBlobRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 55, 2> CreateBlobRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::CreateBlobRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string client_id = 1 [json_name = "clientId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.client_id_)}},
    // string key = 2 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.key_)}},
    // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.retention_time_)}},
    // bytes md5 = 4 [json_name = "md5"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.md5_)}},
    // bytes contents = 5 [json_name = "contents"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.contents_)}},
    // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.provenance_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1 [json_name = "clientId"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.client_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key = 2 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.retention_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes md5 = 4 [json_name = "md5"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.md5_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes contents = 5 [json_name = "contents"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.contents_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.provenance_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobProvenance>()},
  }}, {{
    "\42\11\3\0\0\0\0\0"
    "anduril.blobs.v1.CreateBlobRequest"
    "client_id"
    "key"
  }},
};

PROTOBUF_NOINLINE void CreateBlobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.CreateBlobRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.md5_.ClearToEmpty();
  _impl_.contents_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.retention_time_ != nullptr);
      _impl_.retention_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.provenance_ != nullptr);
      _impl_.provenance_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateBlobRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateBlobRequest& this_ = static_cast<const CreateBlobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateBlobRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateBlobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.CreateBlobRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1 [json_name = "clientId"];
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.CreateBlobRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string key = 2 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.CreateBlobRequest.key");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.retention_time_, this_._impl_.retention_time_->GetCachedSize(), target,
                stream);
          }

          // bytes md5 = 4 [json_name = "md5"];
          if (!this_._internal_md5().empty()) {
            const std::string& _s = this_._internal_md5();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bytes contents = 5 [json_name = "contents"];
          if (!this_._internal_contents().empty()) {
            const std::string& _s = this_._internal_contents();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.provenance_, this_._impl_.provenance_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.CreateBlobRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateBlobRequest::ByteSizeLong(const MessageLite& base) {
          const CreateBlobRequest& this_ = static_cast<const CreateBlobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateBlobRequest::ByteSizeLong() const {
          const CreateBlobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.CreateBlobRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1 [json_name = "clientId"];
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // string key = 2 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // bytes md5 = 4 [json_name = "md5"];
            if (!this_._internal_md5().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_md5());
            }
            // bytes contents = 5 [json_name = "contents"];
            if (!this_._internal_contents().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_contents());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.retention_time_);
            }
            // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.provenance_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateBlobRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateBlobRequest*>(&to_msg);
  auto& from = static_cast<const CreateBlobRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.CreateBlobRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_md5().empty()) {
    _this->_internal_set_md5(from._internal_md5());
  }
  if (!from._internal_contents().empty()) {
    _this->_internal_set_contents(from._internal_contents());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.retention_time_ != nullptr);
      if (_this->_impl_.retention_time_ == nullptr) {
        _this->_impl_.retention_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.retention_time_);
      } else {
        _this->_impl_.retention_time_->MergeFrom(*from._impl_.retention_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.provenance_ != nullptr);
      if (_this->_impl_.provenance_ == nullptr) {
        _this->_impl_.provenance_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobProvenance>(arena, *from._impl_.provenance_);
      } else {
        _this->_impl_.provenance_->MergeFrom(*from._impl_.provenance_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBlobRequest::CopyFrom(const CreateBlobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.CreateBlobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateBlobRequest::InternalSwap(CreateBlobRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.md5_, &other->_impl_.md5_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contents_, &other->_impl_.contents_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.provenance_)
      + sizeof(CreateBlobRequest::_impl_.provenance_)
      - PROTOBUF_FIELD_OFFSET(CreateBlobRequest, _impl_.retention_time_)>(
          reinterpret_cast<char*>(&_impl_.retention_time_),
          reinterpret_cast<char*>(&other->_impl_.retention_time_));
}

::google::protobuf::Metadata CreateBlobRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateBlobResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateBlobResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateBlobResponse, _impl_._has_bits_);
};

void CreateBlobResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CreateBlobResponse::CreateBlobResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.CreateBlobResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::CreateBlobResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        url_(arena, from.url_) {}

CreateBlobResponse::CreateBlobResponse(
    ::google::protobuf::Arena* arena,
    const CreateBlobResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateBlobResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.CreateBlobResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        url_(arena) {}

inline void CreateBlobResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.metadata_ = {};
}
CreateBlobResponse::~CreateBlobResponse() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.CreateBlobResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateBlobResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  delete _impl_.metadata_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateBlobResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CreateBlobResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateBlobResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CreateBlobResponse>(),
            ::google::protobuf::Message::GetNewImpl<CreateBlobResponse>(),
            ::google::protobuf::Message::GetClearImpl<CreateBlobResponse>(), &CreateBlobResponse::ByteSizeLong,
                &CreateBlobResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateBlobResponse, _impl_._cached_size_),
            false,
        },
        &CreateBlobResponse::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CreateBlobResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 47, 2> CreateBlobResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateBlobResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::CreateBlobResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string url = 2 [json_name = "url"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobResponse, _impl_.url_)}},
    // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateBlobResponse, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobResponse, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string url = 2 [json_name = "url"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobResponse, _impl_.url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobMetadata>()},
  }}, {{
    "\43\0\3\0\0\0\0\0"
    "anduril.blobs.v1.CreateBlobResponse"
    "url"
  }},
};

PROTOBUF_NOINLINE void CreateBlobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.CreateBlobResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateBlobResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateBlobResponse& this_ = static_cast<const CreateBlobResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateBlobResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateBlobResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.CreateBlobResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          // string url = 2 [json_name = "url"];
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.CreateBlobResponse.url");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.CreateBlobResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateBlobResponse::ByteSizeLong(const MessageLite& base) {
          const CreateBlobResponse& this_ = static_cast<const CreateBlobResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateBlobResponse::ByteSizeLong() const {
          const CreateBlobResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.CreateBlobResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string url = 2 [json_name = "url"];
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
          }
           {
            // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateBlobResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateBlobResponse*>(&to_msg);
  auto& from = static_cast<const CreateBlobResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.CreateBlobResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.metadata_ != nullptr);
    if (_this->_impl_.metadata_ == nullptr) {
      _this->_impl_.metadata_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(arena, *from._impl_.metadata_);
    } else {
      _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBlobResponse::CopyFrom(const CreateBlobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.CreateBlobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateBlobResponse::InternalSwap(CreateBlobResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::google::protobuf::Metadata CreateBlobResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateBlobChunkedRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateBlobChunkedRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_._has_bits_);
};

void CreateBlobChunkedRequest::clear_retention_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.retention_time_ != nullptr) _impl_.retention_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CreateBlobChunkedRequest::clear_provenance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.provenance_ != nullptr) _impl_.provenance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CreateBlobChunkedRequest::CreateBlobChunkedRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.CreateBlobChunkedRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobChunkedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::CreateBlobChunkedRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        client_id_(arena, from.client_id_),
        key_(arena, from.key_),
        md5_(arena, from.md5_),
        chunk_contents_(arena, from.chunk_contents_) {}

CreateBlobChunkedRequest::CreateBlobChunkedRequest(
    ::google::protobuf::Arena* arena,
    const CreateBlobChunkedRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateBlobChunkedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.retention_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.retention_time_)
                        : nullptr;
  _impl_.provenance_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobProvenance>(
                              arena, *from._impl_.provenance_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.CreateBlobChunkedRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobChunkedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        client_id_(arena),
        key_(arena),
        md5_(arena),
        chunk_contents_(arena) {}

inline void CreateBlobChunkedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, retention_time_),
           0,
           offsetof(Impl_, provenance_) -
               offsetof(Impl_, retention_time_) +
               sizeof(Impl_::provenance_));
}
CreateBlobChunkedRequest::~CreateBlobChunkedRequest() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.CreateBlobChunkedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateBlobChunkedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.key_.Destroy();
  _impl_.md5_.Destroy();
  _impl_.chunk_contents_.Destroy();
  delete _impl_.retention_time_;
  delete _impl_.provenance_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateBlobChunkedRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CreateBlobChunkedRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateBlobChunkedRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CreateBlobChunkedRequest>(),
            ::google::protobuf::Message::GetNewImpl<CreateBlobChunkedRequest>(),
            ::google::protobuf::Message::GetClearImpl<CreateBlobChunkedRequest>(), &CreateBlobChunkedRequest::ByteSizeLong,
                &CreateBlobChunkedRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_._cached_size_),
            false,
        },
        &CreateBlobChunkedRequest::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CreateBlobChunkedRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 62, 2> CreateBlobChunkedRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::CreateBlobChunkedRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string client_id = 1 [json_name = "clientId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.client_id_)}},
    // string key = 2 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.key_)}},
    // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.retention_time_)}},
    // bytes md5 = 4 [json_name = "md5"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.md5_)}},
    // bytes chunk_contents = 5 [json_name = "chunkContents"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.chunk_contents_)}},
    // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.provenance_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1 [json_name = "clientId"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.client_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key = 2 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.retention_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes md5 = 4 [json_name = "md5"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.md5_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes chunk_contents = 5 [json_name = "chunkContents"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.chunk_contents_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.provenance_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobProvenance>()},
  }}, {{
    "\51\11\3\0\0\0\0\0"
    "anduril.blobs.v1.CreateBlobChunkedRequest"
    "client_id"
    "key"
  }},
};

PROTOBUF_NOINLINE void CreateBlobChunkedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.CreateBlobChunkedRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.md5_.ClearToEmpty();
  _impl_.chunk_contents_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.retention_time_ != nullptr);
      _impl_.retention_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.provenance_ != nullptr);
      _impl_.provenance_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateBlobChunkedRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateBlobChunkedRequest& this_ = static_cast<const CreateBlobChunkedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateBlobChunkedRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateBlobChunkedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.CreateBlobChunkedRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1 [json_name = "clientId"];
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.CreateBlobChunkedRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string key = 2 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.CreateBlobChunkedRequest.key");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.retention_time_, this_._impl_.retention_time_->GetCachedSize(), target,
                stream);
          }

          // bytes md5 = 4 [json_name = "md5"];
          if (!this_._internal_md5().empty()) {
            const std::string& _s = this_._internal_md5();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bytes chunk_contents = 5 [json_name = "chunkContents"];
          if (!this_._internal_chunk_contents().empty()) {
            const std::string& _s = this_._internal_chunk_contents();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.provenance_, this_._impl_.provenance_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.CreateBlobChunkedRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateBlobChunkedRequest::ByteSizeLong(const MessageLite& base) {
          const CreateBlobChunkedRequest& this_ = static_cast<const CreateBlobChunkedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateBlobChunkedRequest::ByteSizeLong() const {
          const CreateBlobChunkedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.CreateBlobChunkedRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1 [json_name = "clientId"];
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // string key = 2 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // bytes md5 = 4 [json_name = "md5"];
            if (!this_._internal_md5().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_md5());
            }
            // bytes chunk_contents = 5 [json_name = "chunkContents"];
            if (!this_._internal_chunk_contents().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_chunk_contents());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.retention_time_);
            }
            // .anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.provenance_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateBlobChunkedRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateBlobChunkedRequest*>(&to_msg);
  auto& from = static_cast<const CreateBlobChunkedRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.CreateBlobChunkedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_md5().empty()) {
    _this->_internal_set_md5(from._internal_md5());
  }
  if (!from._internal_chunk_contents().empty()) {
    _this->_internal_set_chunk_contents(from._internal_chunk_contents());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.retention_time_ != nullptr);
      if (_this->_impl_.retention_time_ == nullptr) {
        _this->_impl_.retention_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.retention_time_);
      } else {
        _this->_impl_.retention_time_->MergeFrom(*from._impl_.retention_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.provenance_ != nullptr);
      if (_this->_impl_.provenance_ == nullptr) {
        _this->_impl_.provenance_ =
            ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobProvenance>(arena, *from._impl_.provenance_);
      } else {
        _this->_impl_.provenance_->MergeFrom(*from._impl_.provenance_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBlobChunkedRequest::CopyFrom(const CreateBlobChunkedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.CreateBlobChunkedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateBlobChunkedRequest::InternalSwap(CreateBlobChunkedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.md5_, &other->_impl_.md5_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chunk_contents_, &other->_impl_.chunk_contents_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.provenance_)
      + sizeof(CreateBlobChunkedRequest::_impl_.provenance_)
      - PROTOBUF_FIELD_OFFSET(CreateBlobChunkedRequest, _impl_.retention_time_)>(
          reinterpret_cast<char*>(&_impl_.retention_time_),
          reinterpret_cast<char*>(&other->_impl_.retention_time_));
}

::google::protobuf::Metadata CreateBlobChunkedRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateBlobChunkedResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateBlobChunkedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateBlobChunkedResponse, _impl_._has_bits_);
};

void CreateBlobChunkedResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CreateBlobChunkedResponse::CreateBlobChunkedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.CreateBlobChunkedResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobChunkedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::CreateBlobChunkedResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        url_(arena, from.url_) {}

CreateBlobChunkedResponse::CreateBlobChunkedResponse(
    ::google::protobuf::Arena* arena,
    const CreateBlobChunkedResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateBlobChunkedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.CreateBlobChunkedResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateBlobChunkedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        url_(arena) {}

inline void CreateBlobChunkedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.metadata_ = {};
}
CreateBlobChunkedResponse::~CreateBlobChunkedResponse() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.CreateBlobChunkedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateBlobChunkedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  delete _impl_.metadata_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateBlobChunkedResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CreateBlobChunkedResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateBlobChunkedResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CreateBlobChunkedResponse>(),
            ::google::protobuf::Message::GetNewImpl<CreateBlobChunkedResponse>(),
            ::google::protobuf::Message::GetClearImpl<CreateBlobChunkedResponse>(), &CreateBlobChunkedResponse::ByteSizeLong,
                &CreateBlobChunkedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateBlobChunkedResponse, _impl_._cached_size_),
            false,
        },
        &CreateBlobChunkedResponse::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CreateBlobChunkedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 54, 2> CreateBlobChunkedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateBlobChunkedResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::CreateBlobChunkedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string url = 2 [json_name = "url"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedResponse, _impl_.url_)}},
    // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateBlobChunkedResponse, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedResponse, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string url = 2 [json_name = "url"];
    {PROTOBUF_FIELD_OFFSET(CreateBlobChunkedResponse, _impl_.url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobMetadata>()},
  }}, {{
    "\52\0\3\0\0\0\0\0"
    "anduril.blobs.v1.CreateBlobChunkedResponse"
    "url"
  }},
};

PROTOBUF_NOINLINE void CreateBlobChunkedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.CreateBlobChunkedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateBlobChunkedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateBlobChunkedResponse& this_ = static_cast<const CreateBlobChunkedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateBlobChunkedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateBlobChunkedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.CreateBlobChunkedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          // string url = 2 [json_name = "url"];
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.CreateBlobChunkedResponse.url");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.CreateBlobChunkedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateBlobChunkedResponse::ByteSizeLong(const MessageLite& base) {
          const CreateBlobChunkedResponse& this_ = static_cast<const CreateBlobChunkedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateBlobChunkedResponse::ByteSizeLong() const {
          const CreateBlobChunkedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.CreateBlobChunkedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string url = 2 [json_name = "url"];
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
          }
           {
            // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateBlobChunkedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateBlobChunkedResponse*>(&to_msg);
  auto& from = static_cast<const CreateBlobChunkedResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.CreateBlobChunkedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.metadata_ != nullptr);
    if (_this->_impl_.metadata_ == nullptr) {
      _this->_impl_.metadata_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(arena, *from._impl_.metadata_);
    } else {
      _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBlobChunkedResponse::CopyFrom(const CreateBlobChunkedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.CreateBlobChunkedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateBlobChunkedResponse::InternalSwap(CreateBlobChunkedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::google::protobuf::Metadata CreateBlobChunkedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBlobRequest::_Internal {
 public:
};

GetBlobRequest::GetBlobRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.GetBlobRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBlobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::GetBlobRequest& from_msg)
      : client_id_(arena, from.client_id_),
        key_(arena, from.key_),
        _cached_size_{0} {}

GetBlobRequest::GetBlobRequest(
    ::google::protobuf::Arena* arena,
    const GetBlobRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBlobRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.GetBlobRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBlobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        key_(arena),
        _cached_size_{0} {}

inline void GetBlobRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetBlobRequest::~GetBlobRequest() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.GetBlobRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetBlobRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GetBlobRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GetBlobRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GetBlobRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GetBlobRequest>(),
            ::google::protobuf::Message::GetNewImpl<GetBlobRequest>(),
            ::google::protobuf::Message::GetClearImpl<GetBlobRequest>(), &GetBlobRequest::ByteSizeLong,
                &GetBlobRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GetBlobRequest, _impl_._cached_size_),
            false,
        },
        &GetBlobRequest::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GetBlobRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2> GetBlobRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::GetBlobRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string key = 2 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetBlobRequest, _impl_.key_)}},
    // string client_id = 1 [json_name = "clientId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetBlobRequest, _impl_.client_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1 [json_name = "clientId"];
    {PROTOBUF_FIELD_OFFSET(GetBlobRequest, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key = 2 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GetBlobRequest, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\11\3\0\0\0\0\0"
    "anduril.blobs.v1.GetBlobRequest"
    "client_id"
    "key"
  }},
};

PROTOBUF_NOINLINE void GetBlobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.GetBlobRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetBlobRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetBlobRequest& this_ = static_cast<const GetBlobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetBlobRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetBlobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.GetBlobRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1 [json_name = "clientId"];
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.GetBlobRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string key = 2 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.GetBlobRequest.key");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.GetBlobRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetBlobRequest::ByteSizeLong(const MessageLite& base) {
          const GetBlobRequest& this_ = static_cast<const GetBlobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetBlobRequest::ByteSizeLong() const {
          const GetBlobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.GetBlobRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1 [json_name = "clientId"];
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // string key = 2 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetBlobRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBlobRequest*>(&to_msg);
  auto& from = static_cast<const GetBlobRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.GetBlobRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlobRequest::CopyFrom(const GetBlobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.GetBlobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBlobRequest::InternalSwap(GetBlobRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
}

::google::protobuf::Metadata GetBlobRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBlobResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetBlobResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBlobResponse, _impl_._has_bits_);
};

void GetBlobResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetBlobResponse::GetBlobResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.GetBlobResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBlobResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::GetBlobResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contents_(arena, from.contents_) {}

GetBlobResponse::GetBlobResponse(
    ::google::protobuf::Arena* arena,
    const GetBlobResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBlobResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.GetBlobResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBlobResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contents_(arena) {}

inline void GetBlobResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.metadata_ = {};
}
GetBlobResponse::~GetBlobResponse() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.GetBlobResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetBlobResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.contents_.Destroy();
  delete _impl_.metadata_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GetBlobResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GetBlobResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GetBlobResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GetBlobResponse>(),
            ::google::protobuf::Message::GetNewImpl<GetBlobResponse>(),
            ::google::protobuf::Message::GetClearImpl<GetBlobResponse>(), &GetBlobResponse::ByteSizeLong,
                &GetBlobResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GetBlobResponse, _impl_._cached_size_),
            false,
        },
        &GetBlobResponse::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GetBlobResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GetBlobResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBlobResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::GetBlobResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .anduril.blobs.v1.BlobMetadata metadata = 2 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetBlobResponse, _impl_.metadata_)}},
    // bytes contents = 1 [json_name = "contents"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetBlobResponse, _impl_.contents_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes contents = 1 [json_name = "contents"];
    {PROTOBUF_FIELD_OFFSET(GetBlobResponse, _impl_.contents_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .anduril.blobs.v1.BlobMetadata metadata = 2 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(GetBlobResponse, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobMetadata>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetBlobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.GetBlobResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contents_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetBlobResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetBlobResponse& this_ = static_cast<const GetBlobResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetBlobResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetBlobResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.GetBlobResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes contents = 1 [json_name = "contents"];
          if (!this_._internal_contents().empty()) {
            const std::string& _s = this_._internal_contents();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.blobs.v1.BlobMetadata metadata = 2 [json_name = "metadata"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.GetBlobResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetBlobResponse::ByteSizeLong(const MessageLite& base) {
          const GetBlobResponse& this_ = static_cast<const GetBlobResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetBlobResponse::ByteSizeLong() const {
          const GetBlobResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.GetBlobResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes contents = 1 [json_name = "contents"];
            if (!this_._internal_contents().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_contents());
            }
          }
           {
            // .anduril.blobs.v1.BlobMetadata metadata = 2 [json_name = "metadata"];
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetBlobResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBlobResponse*>(&to_msg);
  auto& from = static_cast<const GetBlobResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.GetBlobResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contents().empty()) {
    _this->_internal_set_contents(from._internal_contents());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.metadata_ != nullptr);
    if (_this->_impl_.metadata_ == nullptr) {
      _this->_impl_.metadata_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(arena, *from._impl_.metadata_);
    } else {
      _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlobResponse::CopyFrom(const GetBlobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.GetBlobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBlobResponse::InternalSwap(GetBlobResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contents_, &other->_impl_.contents_, arena);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::google::protobuf::Metadata GetBlobResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeadBlobRequest::_Internal {
 public:
};

HeadBlobRequest::HeadBlobRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.HeadBlobRequest)
}
inline PROTOBUF_NDEBUG_INLINE HeadBlobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::HeadBlobRequest& from_msg)
      : client_id_(arena, from.client_id_),
        key_(arena, from.key_),
        _cached_size_{0} {}

HeadBlobRequest::HeadBlobRequest(
    ::google::protobuf::Arena* arena,
    const HeadBlobRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeadBlobRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.HeadBlobRequest)
}
inline PROTOBUF_NDEBUG_INLINE HeadBlobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        key_(arena),
        _cached_size_{0} {}

inline void HeadBlobRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HeadBlobRequest::~HeadBlobRequest() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.HeadBlobRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HeadBlobRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    HeadBlobRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_HeadBlobRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &HeadBlobRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<HeadBlobRequest>(),
            ::google::protobuf::Message::GetNewImpl<HeadBlobRequest>(),
            ::google::protobuf::Message::GetClearImpl<HeadBlobRequest>(), &HeadBlobRequest::ByteSizeLong,
                &HeadBlobRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(HeadBlobRequest, _impl_._cached_size_),
            false,
        },
        &HeadBlobRequest::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* HeadBlobRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> HeadBlobRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::HeadBlobRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string key = 2 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HeadBlobRequest, _impl_.key_)}},
    // string client_id = 1 [json_name = "clientId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HeadBlobRequest, _impl_.client_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1 [json_name = "clientId"];
    {PROTOBUF_FIELD_OFFSET(HeadBlobRequest, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key = 2 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(HeadBlobRequest, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\11\3\0\0\0\0\0"
    "anduril.blobs.v1.HeadBlobRequest"
    "client_id"
    "key"
  }},
};

PROTOBUF_NOINLINE void HeadBlobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.HeadBlobRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeadBlobRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeadBlobRequest& this_ = static_cast<const HeadBlobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeadBlobRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeadBlobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.HeadBlobRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1 [json_name = "clientId"];
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.HeadBlobRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string key = 2 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.HeadBlobRequest.key");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.HeadBlobRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeadBlobRequest::ByteSizeLong(const MessageLite& base) {
          const HeadBlobRequest& this_ = static_cast<const HeadBlobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeadBlobRequest::ByteSizeLong() const {
          const HeadBlobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.HeadBlobRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1 [json_name = "clientId"];
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // string key = 2 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeadBlobRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeadBlobRequest*>(&to_msg);
  auto& from = static_cast<const HeadBlobRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.HeadBlobRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeadBlobRequest::CopyFrom(const HeadBlobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.HeadBlobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeadBlobRequest::InternalSwap(HeadBlobRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
}

::google::protobuf::Metadata HeadBlobRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeadBlobResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HeadBlobResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeadBlobResponse, _impl_._has_bits_);
};

void HeadBlobResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HeadBlobResponse::HeadBlobResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.HeadBlobResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeadBlobResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::HeadBlobResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        url_(arena, from.url_) {}

HeadBlobResponse::HeadBlobResponse(
    ::google::protobuf::Arena* arena,
    const HeadBlobResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeadBlobResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.HeadBlobResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeadBlobResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        url_(arena) {}

inline void HeadBlobResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.metadata_ = {};
}
HeadBlobResponse::~HeadBlobResponse() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.HeadBlobResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HeadBlobResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  delete _impl_.metadata_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    HeadBlobResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_HeadBlobResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &HeadBlobResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<HeadBlobResponse>(),
            ::google::protobuf::Message::GetNewImpl<HeadBlobResponse>(),
            ::google::protobuf::Message::GetClearImpl<HeadBlobResponse>(), &HeadBlobResponse::ByteSizeLong,
                &HeadBlobResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(HeadBlobResponse, _impl_._cached_size_),
            false,
        },
        &HeadBlobResponse::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* HeadBlobResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 45, 2> HeadBlobResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeadBlobResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::HeadBlobResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string url = 2 [json_name = "url"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HeadBlobResponse, _impl_.url_)}},
    // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeadBlobResponse, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(HeadBlobResponse, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string url = 2 [json_name = "url"];
    {PROTOBUF_FIELD_OFFSET(HeadBlobResponse, _impl_.url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobMetadata>()},
  }}, {{
    "\41\0\3\0\0\0\0\0"
    "anduril.blobs.v1.HeadBlobResponse"
    "url"
  }},
};

PROTOBUF_NOINLINE void HeadBlobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.HeadBlobResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeadBlobResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeadBlobResponse& this_ = static_cast<const HeadBlobResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeadBlobResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeadBlobResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.HeadBlobResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          // string url = 2 [json_name = "url"];
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.HeadBlobResponse.url");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.HeadBlobResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeadBlobResponse::ByteSizeLong(const MessageLite& base) {
          const HeadBlobResponse& this_ = static_cast<const HeadBlobResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeadBlobResponse::ByteSizeLong() const {
          const HeadBlobResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.HeadBlobResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string url = 2 [json_name = "url"];
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
          }
           {
            // .anduril.blobs.v1.BlobMetadata metadata = 1 [json_name = "metadata"];
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeadBlobResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeadBlobResponse*>(&to_msg);
  auto& from = static_cast<const HeadBlobResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.HeadBlobResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.metadata_ != nullptr);
    if (_this->_impl_.metadata_ == nullptr) {
      _this->_impl_.metadata_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(arena, *from._impl_.metadata_);
    } else {
      _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeadBlobResponse::CopyFrom(const HeadBlobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.HeadBlobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeadBlobResponse::InternalSwap(HeadBlobResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::google::protobuf::Metadata HeadBlobResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamBlobMetadataRequest::_Internal {
 public:
};

StreamBlobMetadataRequest::StreamBlobMetadataRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.StreamBlobMetadataRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamBlobMetadataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::StreamBlobMetadataRequest& from_msg)
      : client_id_(arena, from.client_id_),
        _cached_size_{0} {}

StreamBlobMetadataRequest::StreamBlobMetadataRequest(
    ::google::protobuf::Arena* arena,
    const StreamBlobMetadataRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamBlobMetadataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.StreamBlobMetadataRequest)
}
inline PROTOBUF_NDEBUG_INLINE StreamBlobMetadataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_id_(arena),
        _cached_size_{0} {}

inline void StreamBlobMetadataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StreamBlobMetadataRequest::~StreamBlobMetadataRequest() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.StreamBlobMetadataRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamBlobMetadataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StreamBlobMetadataRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StreamBlobMetadataRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StreamBlobMetadataRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StreamBlobMetadataRequest>(),
            ::google::protobuf::Message::GetNewImpl<StreamBlobMetadataRequest>(),
            ::google::protobuf::Message::GetClearImpl<StreamBlobMetadataRequest>(), &StreamBlobMetadataRequest::ByteSizeLong,
                &StreamBlobMetadataRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StreamBlobMetadataRequest, _impl_._cached_size_),
            false,
        },
        &StreamBlobMetadataRequest::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StreamBlobMetadataRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2> StreamBlobMetadataRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::StreamBlobMetadataRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string client_id = 1 [json_name = "clientId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StreamBlobMetadataRequest, _impl_.client_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1 [json_name = "clientId"];
    {PROTOBUF_FIELD_OFFSET(StreamBlobMetadataRequest, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\11\0\0\0\0\0\0"
    "anduril.blobs.v1.StreamBlobMetadataRequest"
    "client_id"
  }},
};

PROTOBUF_NOINLINE void StreamBlobMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.StreamBlobMetadataRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamBlobMetadataRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamBlobMetadataRequest& this_ = static_cast<const StreamBlobMetadataRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamBlobMetadataRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamBlobMetadataRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.StreamBlobMetadataRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1 [json_name = "clientId"];
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.StreamBlobMetadataRequest.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.StreamBlobMetadataRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamBlobMetadataRequest::ByteSizeLong(const MessageLite& base) {
          const StreamBlobMetadataRequest& this_ = static_cast<const StreamBlobMetadataRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamBlobMetadataRequest::ByteSizeLong() const {
          const StreamBlobMetadataRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.StreamBlobMetadataRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string client_id = 1 [json_name = "clientId"];
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamBlobMetadataRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamBlobMetadataRequest*>(&to_msg);
  auto& from = static_cast<const StreamBlobMetadataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.StreamBlobMetadataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamBlobMetadataRequest::CopyFrom(const StreamBlobMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.StreamBlobMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamBlobMetadataRequest::InternalSwap(StreamBlobMetadataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
}

::google::protobuf::Metadata StreamBlobMetadataRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamBlobMetadataResponse::_Internal {
 public:
};

StreamBlobMetadataResponse::StreamBlobMetadataResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.StreamBlobMetadataResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamBlobMetadataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::StreamBlobMetadataResponse& from_msg)
      : announcements_{visibility, arena, from.announcements_},
        _cached_size_{0} {}

StreamBlobMetadataResponse::StreamBlobMetadataResponse(
    ::google::protobuf::Arena* arena,
    const StreamBlobMetadataResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamBlobMetadataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.StreamBlobMetadataResponse)
}
inline PROTOBUF_NDEBUG_INLINE StreamBlobMetadataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : announcements_{visibility, arena},
        _cached_size_{0} {}

inline void StreamBlobMetadataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StreamBlobMetadataResponse::~StreamBlobMetadataResponse() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.StreamBlobMetadataResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamBlobMetadataResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StreamBlobMetadataResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StreamBlobMetadataResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StreamBlobMetadataResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StreamBlobMetadataResponse>(),
            ::google::protobuf::Message::GetNewImpl<StreamBlobMetadataResponse>(),
            ::google::protobuf::Message::GetClearImpl<StreamBlobMetadataResponse>(), &StreamBlobMetadataResponse::ByteSizeLong,
                &StreamBlobMetadataResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StreamBlobMetadataResponse, _impl_._cached_size_),
            false,
        },
        &StreamBlobMetadataResponse::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StreamBlobMetadataResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StreamBlobMetadataResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::StreamBlobMetadataResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .anduril.blobs.v1.BlobAnnouncement announcements = 1 [json_name = "announcements"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StreamBlobMetadataResponse, _impl_.announcements_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .anduril.blobs.v1.BlobAnnouncement announcements = 1 [json_name = "announcements"];
    {PROTOBUF_FIELD_OFFSET(StreamBlobMetadataResponse, _impl_.announcements_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobAnnouncement>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StreamBlobMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.StreamBlobMetadataResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.announcements_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StreamBlobMetadataResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StreamBlobMetadataResponse& this_ = static_cast<const StreamBlobMetadataResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StreamBlobMetadataResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StreamBlobMetadataResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.StreamBlobMetadataResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .anduril.blobs.v1.BlobAnnouncement announcements = 1 [json_name = "announcements"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_announcements_size());
               i < n; i++) {
            const auto& repfield = this_._internal_announcements().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.StreamBlobMetadataResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StreamBlobMetadataResponse::ByteSizeLong(const MessageLite& base) {
          const StreamBlobMetadataResponse& this_ = static_cast<const StreamBlobMetadataResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StreamBlobMetadataResponse::ByteSizeLong() const {
          const StreamBlobMetadataResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.StreamBlobMetadataResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .anduril.blobs.v1.BlobAnnouncement announcements = 1 [json_name = "announcements"];
             {
              total_size += 1UL * this_._internal_announcements_size();
              for (const auto& msg : this_._internal_announcements()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StreamBlobMetadataResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamBlobMetadataResponse*>(&to_msg);
  auto& from = static_cast<const StreamBlobMetadataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.StreamBlobMetadataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_announcements()->MergeFrom(
      from._internal_announcements());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamBlobMetadataResponse::CopyFrom(const StreamBlobMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.StreamBlobMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamBlobMetadataResponse::InternalSwap(StreamBlobMetadataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.announcements_.InternalSwap(&other->_impl_.announcements_);
}

::google::protobuf::Metadata StreamBlobMetadataResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlobAnnouncement::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlobAnnouncement>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_._has_bits_);
};

void BlobAnnouncement::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BlobAnnouncement::BlobAnnouncement(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anduril.blobs.v1.BlobAnnouncement)
}
inline PROTOBUF_NDEBUG_INLINE BlobAnnouncement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::anduril::blobs::v1::BlobAnnouncement& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        client_id_(arena, from.client_id_),
        key_(arena, from.key_) {}

BlobAnnouncement::BlobAnnouncement(
    ::google::protobuf::Arena* arena,
    const BlobAnnouncement& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlobAnnouncement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:anduril.blobs.v1.BlobAnnouncement)
}
inline PROTOBUF_NDEBUG_INLINE BlobAnnouncement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        client_id_(arena),
        key_(arena) {}

inline void BlobAnnouncement::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.metadata_ = {};
}
BlobAnnouncement::~BlobAnnouncement() {
  // @@protoc_insertion_point(destructor:anduril.blobs.v1.BlobAnnouncement)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlobAnnouncement::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_id_.Destroy();
  _impl_.key_.Destroy();
  delete _impl_.metadata_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    BlobAnnouncement::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_BlobAnnouncement_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &BlobAnnouncement::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<BlobAnnouncement>(),
            ::google::protobuf::Message::GetNewImpl<BlobAnnouncement>(),
            ::google::protobuf::Message::GetClearImpl<BlobAnnouncement>(), &BlobAnnouncement::ByteSizeLong,
                &BlobAnnouncement::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_._cached_size_),
            false,
        },
        &BlobAnnouncement::kDescriptorMethods,
        &descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* BlobAnnouncement::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 54, 2> BlobAnnouncement::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobAnnouncement>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string client_id = 1 [json_name = "clientId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_.client_id_)}},
    // string key = 2 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_.key_)}},
    // .anduril.blobs.v1.BlobMetadata metadata = 3 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1 [json_name = "clientId"];
    {PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_.client_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key = 2 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .anduril.blobs.v1.BlobMetadata metadata = 3 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(BlobAnnouncement, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::anduril::blobs::v1::BlobMetadata>()},
  }}, {{
    "\41\11\3\0\0\0\0\0"
    "anduril.blobs.v1.BlobAnnouncement"
    "client_id"
    "key"
  }},
};

PROTOBUF_NOINLINE void BlobAnnouncement::Clear() {
// @@protoc_insertion_point(message_clear_start:anduril.blobs.v1.BlobAnnouncement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlobAnnouncement::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlobAnnouncement& this_ = static_cast<const BlobAnnouncement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlobAnnouncement::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlobAnnouncement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:anduril.blobs.v1.BlobAnnouncement)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1 [json_name = "clientId"];
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.BlobAnnouncement.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string key = 2 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "anduril.blobs.v1.BlobAnnouncement.key");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .anduril.blobs.v1.BlobMetadata metadata = 3 [json_name = "metadata"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:anduril.blobs.v1.BlobAnnouncement)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlobAnnouncement::ByteSizeLong(const MessageLite& base) {
          const BlobAnnouncement& this_ = static_cast<const BlobAnnouncement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlobAnnouncement::ByteSizeLong() const {
          const BlobAnnouncement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:anduril.blobs.v1.BlobAnnouncement)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1 [json_name = "clientId"];
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // string key = 2 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
          }
           {
            // .anduril.blobs.v1.BlobMetadata metadata = 3 [json_name = "metadata"];
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlobAnnouncement::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlobAnnouncement*>(&to_msg);
  auto& from = static_cast<const BlobAnnouncement&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:anduril.blobs.v1.BlobAnnouncement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.metadata_ != nullptr);
    if (_this->_impl_.metadata_ == nullptr) {
      _this->_impl_.metadata_ =
          ::google::protobuf::Message::CopyConstruct<::anduril::blobs::v1::BlobMetadata>(arena, *from._impl_.metadata_);
    } else {
      _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlobAnnouncement::CopyFrom(const BlobAnnouncement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anduril.blobs.v1.BlobAnnouncement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlobAnnouncement::InternalSwap(BlobAnnouncement* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::google::protobuf::Metadata BlobAnnouncement::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace blobs
}  // namespace anduril
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_anduril_2fblobs_2fv1_2fblobs_5fapi_2epub_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
